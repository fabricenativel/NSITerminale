%!PS-Adobe-2.0
%%Creator: dvips(k) 5.999 Copyright 2019 Radical Eye Software
%%Title: /home/fenarius/Travail/Cours/NSITerminale/docs/Annales/Corriges/Sources/22-NSIM1J1.dvi
%%CreationDate: Fri May 13 06:36:58 2022
%%Pages: 3
%%PageOrder: Ascend
%%BoundingBox: 0 0 363 273
%%DocumentFonts: LMSans10-Bold LMSans12-Regular LMSans10-Regular
%%+ LMMono10-Regular LMSans8-Regular LMRomanCaps10-Regular
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o
%+ /home/fenarius/Travail/Cours/NSITerminale/docs/Annales/Corriges/Sources/22-NSIM1J1.ps
%+ /home/fenarius/Travail/Cours/NSITerminale/docs/Annales/Corriges/Sources/22-NSIM1J1.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2022.05.13:1036
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 872 2018-12-21 20:39:31Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.30, 2018/12/17
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/Power { %  a^b   latest ghostscript don't allow -4^-3.1
  2 dict begin	% hold all local
  /b ED
  /a ED
  a 0 lt % prevent something like (-4)^(-3.1)=> 1/(-4)^3
    { b 0 lt 
      { a b cvi exp }
      { a b exp } ifelse 
    }
    { a 0 eq { 0 }{ a b exp } ifelse
    } ifelse
  end
} def
%
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup xGridOffset add y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup yGridOffset add x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 395 2017-03-21 09:24:38Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2018/12/16 $
% Version         : 0.65 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% $Id: pst-text.pro 891 2018-12-29 19:42:20Z herbert $
%
% PostScript header file pst-text.pro
% Version 1.02, 2018-12-28 (hv)
% For distribution, see pstricks.tex.
%
/tx@TextPathDict 45 dict def
tx@TextPathDict begin
%
% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def
%
/movetoproc { continue { @movetoproc } { pop pop } ifelse } def
%
/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def
%
/linetoproc { continue { @linetoproc } { pop pop } ifelse } def
%
/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def
%
/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def
%
% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def
%
/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def
%
/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def
%
%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint
    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
/warp {
    1 index
    1.4 mul
    cos 2 add
    mul
} def
/warpmove{
    2 index {
        newpath
    } if
    warp moveto
    pop false
} def
/warpline { warp lineto } def
/warpcurve {
    6 2 roll warp
    6 2 roll warp
    6 2 roll warp
    curveto
} def
/warpit {
    true
    { warpmove } { warpline } { warpcurve } { closepath } pathforall
    pop
} def
%
/circle {
    exch neg
    % .5 mul
    90 add
    dup cos 2 index mul
    3 1 roll
    sin mul
} bind def

/circmove{
    2 index { newpath } if
    circle moveto
    pop false
} bind def

/circline { circle lineto } bind def

/circcurve {
    6 2 roll circle
    6 2 roll circle
    6 2 roll circle
    curveto
} bind def

/circit { true { circmove } { circline } { circcurve } { closepath } pathforall pop } bind def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.03 2020/01/09
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 }
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% calculate the line coefficents Ax+By+C=0
%% x1 y1 x2 y2 -> A B C
/LineCoefABC {
  0 index 3 index sub % A=y2-y1
  4 index 3 index sub % B=x1-x2
  3 index 5 index mul 6 index 4 index mul sub % C=x2y1-x1y2
  7 3 roll pop pop pop pop
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% calculate the 2-order determinant
%% |a11 a12|
%% |a21 a22|
%% a11 a12, a21 a22 -> X
/DeterminantTwo {
  4 1 roll mul 3 1 roll mul exch sub
} def
%% calculate the 3-order determinant
%% |a11 a12 a13|
%% |a21 a22 a23|
%% |a31 a32 a33|
%%   8   7   6    5   4   3    2   1   0
%% a11 a12 a13, a21 a22 a23, a31 a32 a33 -> X
/DeterminantThree {
  % |a22 a23, a32 a33| * (-1)^(1+1)a11
  8 index abs 1E-5 lt { %a11=0
    0
  } {
    4 index 4 index 3 index 3 index DeterminantTwo
    9 index mul
  } ifelse
  % |a12 a13, a32 a33| * (-1)^(1+2)a21
  6 index abs 1E-5 lt { %a12=0
    0 sub
  } {
    8 index 8 index 4 index 4 index DeterminantTwo
    7 index mul sub
  } ifelse
  % |a12 a13, a22 a23| * (-1)^(1+3)a31
  3 index abs 1E-5 lt { %a13=0
    0 add
  } {
    8 index 8 index 7 index 7 index DeterminantTwo
    4 index mul add
  } ifelse
  10 1 roll pop pop pop pop pop pop pop pop pop
} def
%% calculate the 4-order determinant
%% |a11 a12 a13 a14|
%% |a21 a22 a23 a24|
%% |a31 a32 a33 a34|
%% |a41 a42 a43 a44|
%%  15  14  13  12   11  10   9   8    7   6   5   4    3   2   1   0
%% a11 a12 a13 a14, a21 a22 a23 a24, a31 a32 a33 a34, a41 a42 a43 a44 -> X
/DeterminantFour {
  % |a22 a23 a24, a32 a33 a34, a42 a43 a44| * (-1)^(1+1)a11
  15 index abs 1E-5 lt { %a11=0
    0
  } {
    10 index 10 index 10 index 9 index 9 index 9 index 8 index 8 index 8 index DeterminantThree
    16 index mul
  } ifelse
  % |a12 a13 a14, a32 a33 a34, a42 a43 a44| * (-1)^(1+2)a21
  12 index abs 1E-5 lt { %a21=0
    0 sub
  } {
    15 index 15 index 15 index 10 index 10 index 10 index 9 index 9 index 9 index DeterminantThree
    13 index mul sub
  } ifelse
  % |a12 a13 a14, a22 a23 a24, a42 a43 a44| * (-1)^(1+3)a31
  8 index abs 1E-5 lt { %a31=0
    0 add
  } {
    15 index 15 index 15 index 14 index 14 index 14 index 9 index 9 index 9 index DeterminantThree
    9 index mul add
  } ifelse
  % |a12 a13 a14, a22 a23 a24, a32 a33 a34| * (-1)^(1+4)a41
  4 index abs 1E-5 lt { %a41=0
    0 sub
  } {
    15 index 15 index 15 index 14 index 14 index 14 index 13 index 13 index 13 index DeterminantThree
    5 index mul sub
  } ifelse
  17 1 roll pop pop pop pop pop pop pop pop
  pop pop pop pop pop pop pop pop
} def
%% calculate the 5-order determinant
%% |a11 a12 a13 a14 a15|
%% |a21 a22 a23 a24 a25|
%% |a31 a32 a33 a34 a35|
%% |a41 a42 a43 a44 a45|
%% |a51 a52 a53 a54 a55|
%%  24  23  22  21  20   19  18  17  16  15   14  13  12  11  10    9   8   7   6   5    4   3   2   1   0
%% a11 a12 a13 a14 a15, a21 a22 a23 a24 a25, a31 a32 a33 a34 a35, a41 a42 a43 a44 a45, a51 a52 a53 a54 a55-> X
/DeterminantFive {
  % |a22 a23 a24 a25, a32 a33 a34 a35, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+1)a11
  24 index abs 1E-5 lt { %a11=0
    0
  } {
    18 index 18 index 18 index 18 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index 15 index 15 index 15 index 15 index DeterminantFour
    25 index mul
  } ifelse
  % |a12 a13 a14 a15, a32 a33 a34 a35, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+2)a21
  20 index abs 1E-5 lt { %a21=0
    0 sub
  } {
    24 index 24 index 24 index 24 index 18 index 18 index 18 index 18 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index DeterminantFour
    21 index mul sub
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+3)a31
  15 index abs 1E-5 lt { %a31=0
    0 add
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index DeterminantFour
    16 index mul add
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a32 a33 a34 a35, a52 a53 a54 a55| * (-1)^(1+4)a41
  10 index abs 1E-5 lt { %a41=0
    0 sub
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 22 index 22 index 22 index 22 index 16 index 16 index 16 index 16 index DeterminantFour
    11 index mul sub
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a32 a33 a34 a35, a42 a43 a44 a45| * (-1)^(1+5)a51
  5 index abs 1E-5 lt { %a51=0
    0 add
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 22 index 22 index 22 index 22 index 21 index 21 index 21 index 21 index DeterminantFour
    6 index mul add
  } ifelse
  26 1 roll pop pop pop pop pop pop pop pop pop pop
  pop pop pop pop pop pop pop pop pop pop
  pop pop pop pop pop
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 1990-2020 The LaTeX3 Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
true setglobal
/pdf.globaldict 4 dict def
false setglobal

/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict~
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfHrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def}
bind def

 /pgfVrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto }
bind def} bind def

 /pgfArgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1
add def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff
div 2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index
14 index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke
4 -1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1rgb{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRrgb} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2rgb{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfRrgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1
add def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def
/pgfcircy pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
8 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index
6 index sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff {
3 index 3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360
arc closepath stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll 4 index add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add
def /pgfcircy pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark
exch pop }bind def

 /pgfHcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 moveto dup 6 index lineto } bind def}
bind def

 /pgfVcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 exch moveto dup 6 index exch lineto
} bind def} bind def

 /pgfAcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 2 mul
1 add def 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff
div 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div
pgfheight 12 index 12 index 12 index 12 index 18 index pgfdiff { 4
index 4 index 4 index 4 index setcmykcolor pgfdir stroke 5 -1 roll
9 index add 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6
index add 5 -1 roll .5 sub } repeat mark 19 1 roll cleartomark exch
pop }bind def

 /pgfR1cmyk{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRcmyk} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2cmyk{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setcmykcolor
fill pop}bind def

 /pgfRcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 11 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 11 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 10 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
10 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 3 index
8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 11 index 11
index 11 index 11 index 17 index pgfdiff { 4 index 4 index 4 index
4 index setcmykcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6 index
add 5 -1 roll 5 index add 5 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep
add def /pgfcircy pgfcircy pgfystep add def } repeat mark 18 1 roll
cleartomark exch pop }bind def

 /pgfHgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 moveto dup 3 index lineto } bind def}
bind def

 /pgfVgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 exch moveto dup 3 index exch lineto
} bind def} bind def

 /pgfAgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 2 mul
1 add def dup 2 index sub pgfdiff div pgfheight 3 index 6 index pgfdiff
{ 1 index setgray pgfdir stroke exch 3 index add exch .5 sub } repeat
mark 7 1 roll cleartomark exch pop }bind def

 /pgfR1gray{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRgray} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2gray{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setgray
fill pop}bind def

 /pgfRgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 5 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 5 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 4 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
4 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
dup 2 index sub pgfdiff div 2 index 5 index pgfdiff { 1 index setgray
pgfcircx pgfcircy 2 index 0 360 arc closepath stroke exch 2 index add
exch .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy pgfcircy
pgfystep add def } repeat mark 6 1 roll cleartomark exch pop }bind
def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def product (Ghostscript)
search {pop pop pop revision 927 gt}{pop false} ifelse{/BorderArrayPatch{}
def}{/BorderArrayPatch{[exch{dup dup type/integertype eq exch type/realtype
eq or{BPToDvips}if}forall]}def} ifelse /HyperBorder {1 PDFToDvips}
def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx pdf@lly pdf@urx
pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly exch def dup
DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx exch
def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto pgffill 16.0002 0.49998 moveto 18.00021 2.00002 lineto
16.0002 3.50003 lineto pgffill  grestore} bind def

 /pgf2{gsave exec 2.39105 3.38733 8.26909 0.79701 pgfe pgfstr  grestore}
bind def

 /pgf3{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill  grestore} bind def

 /pgf4{gsave exec 2.39105 3.38733 6.97394 0.0 pgfe 7.80008 2.40001
moveto 7.80008 3.20003 lineto 11.20012 3.20003 lineto 11.20012 0.8
lineto 10.4001 0.8 lineto 8.6001 3.20003 moveto 8.6001 4.00005 lineto
12.00015 4.00005 lineto 12.00015 1.60002 lineto 11.20012 1.60002 lineto
pgfstr  grestore} bind def

 /pgf5{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill 0.59776 pgfw 8.00009 4.00005 moveto 11.00012
4.00005 lineto 9.00009 2.00002 moveto 12.00015 2.00002 lineto 8.00009
1.0 moveto 11.00012 1.0 lineto 9.00009 0.0 moveto 12.00015 0.0 lineto
pgfstr  grestore} bind def

 /pgf6{gsave exec 0.59776 pgfw 9.00009 3.00003 moveto 12.00015 3.00003
lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill 0.59776 pgfw 8.00009 1.0 moveto 11.00012 1.0
lineto 9.00009 0.0 moveto 12.00015 0.0 lineto pgfstr  grestore} bind
def

 /pgf8{gsave exec 0.59776 pgfw 8.00009 4.00005 moveto 11.00012 4.00005
lineto 9.00009 3.00003 moveto 12.00015 3.00003 lineto 9.00009 2.00002
moveto 12.00015 2.00002 lineto pgfstr  grestore} bind def

 /pgf9{gsave exec 10.0001 -0.49998 moveto 10.0001 4.50003 lineto pgfstr
 grestore} bind def

 /pgf10{gsave exec 0.59776 pgfw 4.00005 4.00005 moveto 7.00008 4.00005
lineto 5.00005 3.00003 moveto 8.00009 3.00003 lineto 5.00005 2.00002
moveto 8.00009 2.00002 lineto 3.00003 1.0 moveto 7.00008 1.0 lineto
5.00005 0.0 moveto 8.00009 0.0 lineto 12.00015 3.00003 moveto 15.00018
3.00003 lineto 13.00015 2.00002 moveto 16.0002 2.00002 lineto 13.00015
1.0 moveto 16.0002 1.0 lineto pgfstr  grestore} bind def

 /pgf11{gsave exec 0.59776 pgfw 8.00009 4.00005 moveto 11.00012 4.00005
lineto 9.00009 3.00003 moveto 12.00015 3.00003 lineto 9.00009 2.00002
moveto 12.00015 2.00002 lineto 8.00009 1.0 moveto 11.00012 1.0 lineto
9.00009 0.0 moveto 12.00015 0.0 lineto pgfstr  grestore} bind def

 /pgf12{gsave exec 0.59776 pgfw 10.4001 1.60002 moveto 12.00015 0.0
lineto pgfstr 0.3985 pgfw 10.66016 2.49069 moveto 10.66016 3.15096
10.1249 3.68622 9.46463 3.68622 curveto 8.80435 3.68622 8.26909 3.15096
8.26909 2.49069 curveto 8.26909 1.83041 8.80435 1.29515 9.46463 1.29515
curveto 10.1249 1.29515 10.66016 1.83041 10.66016 2.49069 curveto closepath
9.46463 2.49069 moveto pgfstr 1 setlinecap 4.00005 0.0 moveto 5.08101
0.0 6.00006 0.9 6.00006 2.00002 curveto 6.00006 3.10002 5.10005 4.00005
4.00005 4.00005 curveto 2.90001 4.00005 2.00002 3.10002 2.00002 2.00002
curveto 3.20003 2.60002 moveto 2.00002 1.60002 lineto 0.8 2.60002 lineto
16.0002 0.0 moveto 14.90016 0.0 14.00017 0.9 14.00017 2.00002 curveto
14.00017 3.10002 14.90016 4.00005 16.0002 4.00005 curveto 17.1002 4.00005
18.00021 3.10002 18.00021 2.00002 curveto 19.20023 2.60002 moveto 18.00021
1.60002 lineto 16.8002 2.60002 lineto pgfstr  grestore} bind def

 /pgf13{gsave exec 1.5 0.49998 moveto 3.50003 2.00002 lineto 1.5 3.50003
lineto pgffill  grestore} bind def

 /pgf14{gsave exec 1.5 0.49998 moveto 3.50003 2.00002 lineto 1.5 3.50003
lineto 3.50003 0.49998 moveto 5.50005 2.00002 lineto 3.50003 3.50003
lineto pgffill  grestore} bind def

 /pgf15{gsave exec 3.50003 0.49998 moveto 1.5 2.00002 lineto 3.50003
3.50003 lineto pgffill  grestore} bind def

 /pgf16{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf17{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf18{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf19{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf20{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf21{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf22{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash
3.00003 0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto
-1.65689 3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689
-1.65689 -3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689
3.00003 0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc
pgfstr grestore newpath  grestore} bind def

 /pgf23{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMSans10-Bold
%!PS-AdobeFont-1.0: LMSans10-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans10-Bold known{/LMSans10-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans10-Bold)readonly def
/FamilyName(LMSans10)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 83 def
end readonly def
/FontName /LMSans10-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-460 -297 1761 1134}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFA25B3D2E21970B61BEF6BD441C0
853BA8F00600E933C80C0916170925A5E999AE3F4523441CBE8209ED95298D28
7897FD39E60633B3341F7B1EE39A74B7CFCA379A6C2390E7C26A4B9C8C556F25
96A90868B428CDFF58080D414AFBA9B90E752A5C7F4EEF6EAED9684DCA7DB0CC
268AB1DF914EEFDF740F44F538F1E841659F02898565FE3B1F13BC87C5713FE4
FB373864385E506D1C0BB65A3CB8E10A78C20E5BE320989BC3E8C8E8E399FC24
E0BD4271E70E8D7A8F7683A4756AA988C5E78DEE26995F197F2360620656FEEA
739826F54E14481B446F1D7F68111FFA8C859137AB1F8E90583B98BFAF5C6329
59CCC441D095D44570B010FEFDC0DAA465ADDF3CBAB31B8A5E7672C9EEAEA7B7
A345AFB8889D3C53E0F9619B8F0C11FCFA80839B0574D91CE6AD50613E12BAA0
115864303556F3EBF5B786035121016A72100BD90BB46818BE2E8AA15252FA00
9F20B1F01EC0EC35CBF7D6C9684AF91F00880B4F0721698DD568E1B3D09641C0
58E5856E324DB2E378120A56ED141762775C5AB88AE8BB5B6B18158A7A9202E8
651774A479D4308E7F29052733CD2724314AF8C61999D544071407B7774A5610
C7A8F6EFB5792C23498F7D5347CABBA2DA469A957BF2BF33E8E3045016270416
4B71642412D880A7601B66C002B4EEA76041F2746847EC01F5EB5744F1EA82F4
163BE681F7F568158C214BBB58CF2BED8BA9B4030D081D755D41B0F8DE4AD0E1
F33A1CE6E38EBEE8CEC6203C2474727309D75E85A83DD36CA1A05A37C9D1FAF7
E1AD48F23A222889F92F15AE9C33A8B3E343774FA496C5BFD6D9C1328E16F748
4D6390CDDA8EA19D086DC2E49DAFC1535299AF0F42A16E89B2D395B183098334
286F4678662DDD87FE71DAC85B1BEA9546CDC788FE623C0EC28B6F1208F01B4C
5956B9402DCD2BA235EA01291DE436B80388FE6B31D225383E1054FDC6AF7600
608EF8DD116B8443675F86A09522E784197B8AF0E94FB9D58D6EFB2331717D4A
8E8F6FF1BF9579B1F34F5531F8268729CF0433C0043389EAFCFDD83DB8587A4A
5E4093F98C7CF2C497B2DAF5748CC962423593E08EF566B55D4BDA83DA713D53
3BC5A90CCE79572DC40AB078E228F38861F2C51F5CF5629CC41AFF7700001FC8
38E8843F5B2D5D6FBC1E930909D9A6A38BB39CA02AB2598B2EBB03A60FDB795A
3BFDCC677895D8CDFC66887FF3C563185662EEE213EC8671211F7317D00BE0D3
0EB7BD4463F7A542C9A7373C3A40BE476AFB688358F195BDCDEBAB71622D0A07
E8894B416C8D24FC15F45E5961D4C11AD4C569CB28F6C6D112762B8527CBE338
1953B0908617A28D2D6EAA59BD102BAAFEAF854C1B48B036052A3D727C050806
2BAC23C2866945E46981F9406B6E4F61160966AA3922C4B0B6ECD515EC314C74
93E8924708EFB767FCBCB0F795CC6D377F09A17FB2C3F45B2E98C37EC1F64848
F36CF72B5D3FD84E73F22023C63FEF39B8BA4CBB8D50429B985F23EBA0C907B6
CCB4A57AC0CEA9F70D952224811BCECEB52C86E3666430E4FEC39C474463806C
E627529201F1A70ED484FE92F0C684F4A045E61AD94FCD6D373246804BA5F217
1C5C56B6562A13A43B92A806EB2F90AB0BE445530439E0E8AE43B439654E6175
E9B3AF676603DD8C5F5B037022B38CB7DEAAB749F802FECA58D6E39A107ECE8A
3EBE7E645FC1DA735CF09EBF4678CFABD1A6D3FBBF8357D4DC0527C2DF2E6C38
2CF8541FF7E243AA7F16F534CB8E4EEC56359CF1068CEE7B5E2928E43D4A764E
F76A128CDB6111E1096709BDB6D8C9510DBF277B31B8BF2B86755746BDF7C38D
8480A71A9FCF98F4F9501DCF69FCD870565A7154A43D5879042740352282BB0D
FB808522CB0CB8C0D4B64A6799C8449E97E13CA0AAAB196E8A40446C77F005D8
97D944251600E7A6B304DD76E08FB03B942847FDE355DB3C39956F9F914DBE11
2C8394C82D57D654286D5C2C2D8E6A24B34217D101BAA3037C63ACE221E3BBF2
A45CE39B80FB268D543A28FD409DB32F938FC52C0AEA6475261702FAA0ED37FE
D6546463AD649C32D00F99B504DD1602FBCC202CC8046BB4EF5E5E1F85305297
0408E1B96714C7B1D4F806F88EFB99AF0D7FA4DA1316C3C5279767142D132F62
EB21701C915003C885E577E9097CE4186BE217A2F3DD498FD152C0CFD0662D31
8787C108CF6922C96AD6D8D0C2052FF4A76D691AAD97701382DAF90A28C0896A
C2934C35E1576099082701FCE199811DD294CC46CF1F0662D1D1E9C9DF1DA786
6A772E358CDEA9FBA4EA2EC4425B0A4947CE3C4A3EE986616449FE094A5F910C
93A5B74FF64283F15EAA51DF4C74CBB662283EA4ACAC860B567466240E3A598E
0D31B4BBA740CAD470D8BAD77608136DE5C61CE6B1953A900D0847C53F2A87B3
226F5E1F4560A4C061DD345142D8F2F4A85CD7DB687B5D2BFCE80CD03235A95E
DDB64BE30EECBFC6618D90A399CBD792FE3855F316DC33187662B519FC5AB1FF
FE0A6A33736CA5A0A7A75023BD9BFDD0C94753098D5FD28E46480B0DD99F4679
772820B94DC7F8D4C2B5A8BD9D9858193BC1069471D0CA4DC7AA32B72C9C5816
34E789A5C10BC1E93488DCC273143E753907B15EE37DC5F4533724D785C22C64
5809C6B3B4B8C983004995898EFFC985D007AE44672530620E26E88BC793DA7E
638388619EBAB9C62CB51FA723C5F22F5BE5873D64C726C983B33756ACF3FE3A
D85C6A571F2C32DB6208081585CD9A312B09793B1C1FA056374433EA2FE095D4
A9761F4DCF1E7FD3ED380701745BE983D2F572BB56C524FEC5C3D513E8B9306C
B9F10D1D8371169DD47A3437A02EF556D9F32B061E78C54C768A72D9586113BB
DECEDB4192AE9991497A922907E2AA79A60717C38B23D7CA54BD43619A46D5FE
FDD4D548F4A1B5C4BF78895E49CC6FF69C287D243D182304EA766957C4B309FA
76BC36084200592A259BC950CFC7BBCE0055AF1446D3C9A163230C5D3A4A9445
5AE704A09A3F3D68C52B226196F0E466DB8BE5C0AEEC0B983770CFA038C3DB87
BE396947FBE8692B77E9A6F66A56FB00A1B25F2BC121CF9F4F5687CE3FBE7299
22F42CD1C5811F86578F44E5BEB7F997758232B7EFE394F5265392E03264AE22
D81E75A04AE68344A9F151D5B3EC66EF1D37916398FB8CE955E12D8A89ADEB15
FE0B39F2C388F118806FAEF0361E5A30DA786E599B3930697B0E81958D7D8343
C840CD6FD8CD9CF8AEEB9B406B7A6D96510D772EB2BED726D5F12B4487AF4052
AC962A19C387672A4D101E1BFB07CFF9F577580D64EAB72407B03DB1D677859B
E22829180DC4FEE2F0957F061B9FA20CF2EFB32200703EF58C425B9A7D211E88
884D5B37EDC8DEF2EACD9C3985BA9ACAC69EE37073ED2DFE552E96EAE73E7AD8
0E3341EF23D94DC5831D1F7D822A57E0BA52FD6822344E2682F728CC93F7D006
4EBFC23908C4EE8655E12DCA4E6B66BCB8909CF259E0895B44F511485B30A847
09054F39D5251DD662980C233DFE8180D5919A15A56721FD7F5958D74150BAEE
AB1893860BC643B4EEC02BF0E32A9F6594912546C8A4CE88818DBDE72D030D8E
884D315F565E0C09604AB40535E4200380CBDCA96015D3822CF62D8638273210
E607B04566B99B40DA40C25FA70652FEEFF9EB42A6F3428012077754BA3854A6
0A3676CE51E886412ABE0FE0C8BA6B1417DDA84325C4BD172D16BCEB6A40A8C0
A605330138712B946D2A52A16E65275E26F19746CB31965773A102E9423004FE
6A5544339A0C5C756092C70A1C3A48E4A23B93E45BC33ED9222E79875D7A08A4
98309BD9EF4877CF69B16E9D9F6142DDCADF3958184CF236F1E35390ED1F91BF
9908E7115EA205C0447774637A4A3F44330E3C9A22160C60A2B686FBEC34A6F9
E693C7A9397156839E10B3B329E90F3DF32DC7AD923C6E4AA1E6632B22D51073
25266CE303564392765BE37EDFA40EF09A72B1959517A0630A94699E2A1BD96A
B64FE43B3A1E4F7D4A024217CDB9933A718F0E6D9E7DCD58675E2578A9CD6E1C
ECC57FEACEC6454D27E0FE63F142BF6DC075F7F924B26DD852D73CF5EEA5657B
96F3EF4BD87036A247571D2628CD9A1A562F1481E1435F2F21563212B299C296
401C85FCEFCB9B92D2B2638EFF07363874F62F6E7E4DB1647D020CC7B913E10F
3A33C7C2E9AAB40061A6764E557CEC87DB572A42B4F49CD70579F606DA8804A0
A299086D15E11748BC458ECB2A8A6483CEEE28EA85B42F24249A929520F0BFC0
D0DDE1A8895B47C469D8E4B8BDFDD6BED166CE490D7AAE604B54082DFEA68295
A90FEA34059F842002D97A1D853751017290AE341ECD71D05287741F6A99089C
9BA6489E9D21269619BA020984777DC32533D1B154381BA3ACDDBDB97F501F3F
B432D886A12EF6332152F0E30D38E2B0F1C76E63C1587C09CFB052316D4D96E5
7440D0CC6DB88CCFEBD9E78621ABDDF6149ECBC35E7209149B2F24EDE5733BD6
A719EBB7B5AAF66866359A3E7724F400933CEF36B44DAF0BFD6BD22B450926B6
9A090620505014FF9326D0E208B70A82F3812CB70902CCC8A0CED4EF40A73AF7
256835375E0B9E13B07B4D38BF176C17735367063118982C18AFD70D490F20A4
305479A29C6F7C694517216619CFB985BD9A4913F440E3EBB41BC6D5E3D30275
42F594EB24AF2D8FEFC29FE8E07690F6E10C90F2B95396B659553C019F9BF0E9
B31093AF70DB81A133E6B4D9F90CFCC2425C26A60178B8E8F81C48D8EC11E458
D64A6E3EDB572C623DA41AFB80699B22545368AF6CEFD61640BA246160532B48
948C4B25D81FF6A99A3BBAD79D0B44AB3079572D2DB7F7BD8C20562D791FC031
98CA758ECA0D7080C8C172A8C59173B67341A4BD0E85DD55560F0D12C1D9E24D
4245ACC125867ADCC571C1F70FA8326B820A3E6F854CC29B338A5E1BC14C9468
B5528F5B5DC8BCCF148C1D859D45F35E20C5554B0D72C262A23CCB48B116252B
EAD105A169AC099700E454C9B0FAAF6F2A73D7422067D27812497EF6A45BADB3
74BD1C3CC6D8482BA97894BC35B012882ABEE02433DF7CF95A00E8E775BB3625
AEA1AC5DC311A762B8B785369B724520AC4D6A008FBF581DF64E73CF532923E2
09E8F48A84A163CFEC2CE2766F86CF6D9DCF7F3A34E6AA3CCB13CCC61FCEE7C7
70686593DFF6C5C708439E4EEAE16EED2627A072AAF769FEB18D82092FEB5294
4FF26D0ED232EF08F10D3367C65665DA5312AE94EF917D9DB15696E17035899F
DB03EE0708619FCA686B5792D720974ED9249ECE9FE8FCC56F5967EDB55DDBEF
F4B5B4EC83A35F1581E47CD7DB9BE4808BBC3CF3A9129FDD04F9A09482ABEE62
4C540143A1A2A534AB912E238315325F66DDE461BC6B773D779AD17B9E4098C4
AA0F3D0894AC4BA9F2B4B8E959E8877C94C263D7FD59BA1F9102D5A13492C763
050D8E3ED64E592A2C1206FAE8F5F752A36C01D95CB3DB66B016182943194976
0E98EAF5063E373A084CD6829DC18D063618B73201D364410722F6D160A04EBC
C9B06A2E3F4E207AA41067B14596130968AFB5284AA776CDC3942819204B34B4
5765E61C972A38E423874D699CA4A0EF3803FDBD23CF510F6F6F786A20316B99
2F547DE9372FEEA0BE4053B7D62117091EA58204F935EB454FC0099D03A9B6B8
CB5F25039ADA8A80553F052F97988D4B276110BCA39FC492103050A47EBE4DD5
C1A4A740CE1CF340BF08021FC70C6DB203E65CC1462B7C3E811E4FBF589BFD5C
15D966FF1512D5221003750163EC9229A0C3D37CAB4DB8AF54A2F83DDA4D4BD0
C51B54B5C793B72598DB29E22F72F6CF343A68A6510AD6BD87E9BD0F7E93A671
59F5E7576382814D6E1B63D9A188961A3A75B1638F4C12EE82A604A8974CA4DB
6E0CC76939E99373CEBD7DF217D01146B9A84D2AD930F7F724A305C4DB7BBE9E
3E9D166FE9AF6208569A64768B17FECFA7C2E70A4086F25183DAA9D886185455
3E8660DF4FC881B1B290AB76EBD11A36DF260B0EF9C13A9C437607321D3E4C10
059C1091823B03DC65F3950F20D821F125DD9B4396F2684BF4963FC18B014187
6E2A041FD896A90E8613DFA8EC49288F55CC3673EB6EE66957927B29F06CA32B
3C4F6D28AECD410B347F3EE67E25358DB0794BE8A1719A90CEC4BA5A6E2F7097
EE53E96A1C22FB5658F5B83080977E1B85F1730452A8FA40B1F28CA7C0D267AC
0814AA776A2F731C046E7B34292C52C95173C09068553725ABA9423F4B268C58
07224348E846346EC80B6171119377D458D193B1F81EA3BB75B7A529E6A06F7E
9383DDE95F51E448FF6C91B34553F2C30EC36ADD31D495CB4679DE11F5856534
B80E1124AE6B1E0EB705E12A9EAA132BF1BDA87D16BAAE317BE5739B7EA7F323
F1A17FFB4DA0E728C6AD8DFF966E4EEBA22B54B976239E485942A55CE487E0A6
0594F529E8FF55D79953D88C3FF60A8C9D26CE00F152DEC98F89AF22A1116074
6525FF88AA2E75E37D8697F6FCF66C28E1A266676B33238AC886D639207031A9
A1CFA77B04FBE0579549531D242C1D066E165BF330F4D3A0A807DA8C72ECC339
EAE3CF25BB0C4EE70CAB7C5DA7C9BCDCFB67F1B6699605A2D0B0D46E0A05899D
4D1DA41A4FE88655F94A96EF1001E06D4E3A5D9B158C2850D3804A3FD46D6C80
AB8BA3DA14E2A8D7197B0F7D204DE6A601E8C160B04369A71AD9A60A2373F997
362DDA160B1AA2EC7973EB5B301300FE37C74CE40970EFC6A1129C3EB567F2E9
25679EDC84BA5D15205B44F6B705CA7C0B29FD6D450F37FE1E029E64293585DC
63A38338C9F65DCC886C5B03E455C4EF5739C88024100D3B3B10E1DCF7DBB4EB
6DC13F61C0A90C6BD0FE37708367C1BA6CCA1752015D12C8EF9631E7302185E4
751990DA4BB1847473B650C674E740A1D13FE57614EFCABF8DFF42AD68DBD9D6
D373C2F08F04A25C5ADBF51F3DFACC49E7A04965F292B0C09FAA9B9B21285CF0
544EE7E72E55F4BC0293BD16FACB5C78714AE6F776AD12743DCDFDC0A24DA5F0
10E6D580C3BA5308F9180171E06B8DD8D15181FA6EDB08674679A39EC0A7F739
BC533CF7684D70A4678AA23BD725DB1FAA0FBC7511E663F2C7D77B4512D9DB54
C397BD138748D0F9056DCFB98DC8888051E52443004A8F13DB333E91412BCBEA
8587A63FB77C9BC9DED7D430391216C1F404E0895BD79589861F3B824FAD1E44
CC6BFED98F0D54D93AB3AE38D3F24C63EFD772D358FCD70B303E2D6010F849FE
4E17A69F02E7B4C69CAE3C8BE46A66C1D73A8143C8A24C4A470432BD989259DD
7BB4D40010E62BF91E5F195DC0623C166172A1F73B7D37FF6109D35395BA3AF8
EBDC1AB68631E2F7D960BF5DE3D38AB23412E7634D9B961E4D5E2928FCD08612
B8EB17A17C03278F02394F4611CEA11A59B78B90C463CFD0194FDBD260753B64
030759472D938C84A71C114A5620EEBB15341E42E6366E02817082BE6FE0B042
49A48409F69CCB9256C0CD4CCE3F8060B700822EB157C4BE8DE0D95073BAE987
57D532FCD5AD3BC6C90DAFDF8EF8BBECF2F3AAEBB939DE320592ADCBD738746D
3E9F1CCFFB3E234B24C0AAF32BA00DCE31316E0BB0F62E4DA76D734583290D6F
22E851DFDF1315C0679C0906D77AB2144E823792412C5B56702C9EAED6CEE200
8002147BC79B4536323064C750657C91BF3116EE78291C85FADE184AF8C02A0F
597E6E21FA55672F22685C7005A0855DC98E4C886E696E6B1C423F65E6034F7A
BA3CCADE6B18DDBF8A83D72F50C48125777489D17D3FD368CFBCF08208F87957
A6A15F77E1E234889B0FE75B3CDCFE212A6711889B9BDAC517D8BC6677CC095B
22141AF09CA98B01E6571FC2537538A4DA5C46EEC25AFF260423A0944601CEE9
D157445312EE9EB81873DD63A1BF330CBDD57891E7F42C3CF6E78046CA0B3AAE
98A934A369B838AD79429321A8F96E2E1F02AD70E2FDBEEE625BB437C103CF56
0A545A7BA4701A203715E313E311E51AB78A0D5109246873CE6AF00228DD0F73
FCD8126A2D82B840AFFABE7529167111B5E309EBADB7CEE9BCCA216C1826B3EB
9820A92F8C86B98A36AB956ECE9F5C56207130659F7A62DF68C3DE2065A77201
9C474B0514299334543AE339E8366E469CA5691562A9024DA5CF1F78C470351D
BB7E5424BFF39434E3F7580B36099A5F4F1D22D2DD45C7B47AE6446BE3AF3FCB
DE28D0DC17365CDB51FA52705FDD8A491E0A306ABA070C2A4483530CDF6B37AE
435B885E561FC8B7FEAB73C6F9FFA2CA867C2CB50BCF32D9F95CB29441C616AE
2B54E4294A8D87F5B5C3DC10D2ABB172190C1ED6C4E152F6AA936B59112A2A09
5370B490B0C225ECCEA316CDE8A62D377AF3CE7952B654A51BC3EFF60CE85E98
8114B4AC5E6D3AD079E6EF8FD3B88B82EC0088E780FA9587DABB694E30F20A16
2DAFE55AD781864E71885F0C57F26BDFE2E421CCCFAEFD3D73E41DC08FFBA891
9951ACA57CABE07A94FDD4A2BDC7A86B8749E594EF1A332D55D8641B0B3C1187
527FF8D8EE2BE0E49852FA777714B45B9B2E8BF75D0592719E6CEB1E2B2930DA
1463937707D0661275B66BBBF9BE0DBD3998E1FAF95B38C37DF0CB58C972E3A3
DDED341E4EC47E7F27B2F662CBA3E7DF323942B77D12836428098543AED1CFB4
DD19EE28A72ED3A6048A34859269A8F2AC2679EC035DDBA628E6C4EEA8E4B391
FE883E5FC995A53326E328A8F446C41510A842D5DFFA8223B034B458E6F80F28
9533E1BFAAD2838E66D1D870CF36728D7FCB1A91A9ECE26A7A50DEE4ACA130DD
76A67920DBB6D52D7D4D3FFD95F32C14424A2B5AFE307C7807A80189F8BA9B11
F2C8622792554F2C5389FE22C5569B2DB12942B8092B0CBD2223900A5A4D8EA5
A1169936522382A3DB2D510331888F63D113F9572C0413F8C790BD5DE8AA9B9B
C4CE1AF752E3A7B6DDE7BDFFD0954AD15D9D2087258A797F629FA6B66BFC686A
71E401C3D7EFA3F6906A02BCD68D4FC3E80AFDD7EEED74F66BE8E8A733E43947
9F98DD4F132248742876953526D119551A8B29CCFE9CD51C5F7FD494711BDB12
C2B9B8923DB092390E4AA06ED4D4738C4058BC14A458F48494769116E197A253
5592A7FBCDA03C46B2C8DDD315850235962879E04DC0D62ED8D0C12142503BB1
C0C446947A081D2D7F96372E53EB42D7E031AB34225D92A83374078E036FCFF0
98B6D2583869FA1560B468313DDD88F2C455E920E05E6AD03A0977F49682F687
343EF61149DC3BF556A632D10F0E0709A8CB5EE45742EAA85F1CDF8D9A1B9073
35F9DE0709F655B8802DF919324682903ECFE0A0E8E3E94B4607DEBAADA1F709
03410B4C7EE09941F9ED40BDCDAFC20C8BE69FB4C34F0B14225AF2D9D93E25BB
EA3F95D00B096DC5A5DE97BDBE2D63497A1A710191D750A11AF32C0D836EA36C
6BF5E7FD4AD8D5F07BD93BF7D3B878829E0C4DD9D289F77651C95BD71456BA08
7709827B05A80FF787451D4F36FE13D6FFE686B1CFD0EE0B6B7F873F7E4A94CE
F5D4A302C9F1CBB3722F9B09573D76BF6A92474A4611F732F8132E8C92B729F0
F68C6EE117A1C4940A7282F8A3B5FBAE554A620FFF220994304DFA1BA796741E
FB74304E31765CE08C1F7C77D61A9DE10664F4BF13E2B8059A2B232CE65A88DE
5D265331409E9C3FBB2C0883CB5D0077363A5E89F1F6C668696A2F1286122C63
913DE4A197659790106065F2F956E07BB110F1D7FF4A5199B53C90B6279511CC
1700DA348283522B5AEC490A066D109930A37FB0E5E81D3AC401C2546E53D9D3
DF896FB2B71CA321E50AECFCE6876E4E770CD78BF0179451C84FE2CD00F2A58C
50ABAFAA52EC5F286AE67CB50907176F2DF5284C760F1916817FF8ED4A4D2A8A
6162B4DFC3D2A17A3CC2D2F93158A6728EB552FA09202865142FE8D1300D6900
75301CDA60558F65241DEE49409C10DB07153311C2CF320DB89681A5A80819BA
929CCAC4B35B07FCF17CEABFAEE932D20D9A5B4779DFFAD7B3E5D447023D6430
C11EAA848811AAF0B2D2BFFB94A610FC31D10C0815C457875B47C469D8E4B8BD
FDD6BED166CE490D7AAE6048C16DA74761441DAD725DDBDF6824B0A4F0D6954F
57EF1473EA13910335910CA61F5B4984C9A127C4BFEF9A3D4C6217F2270C0F1D
1D5A0C48774E2E3E1308F919F591221FB094A39F0AC8535F07BA31C71CA5D158
A149F932D918B377F65FBBED4C3200AD75E44E4CC080AED9633EDAB8591EB967
8EBB5A676561BF61FABAB8309AE123A7F553F230448C09073A73F51F7E4AE792
46673B0800022B9488D25AE8CAA031125B61B6BE8E2F73A223165538BB9D9A58
179D70A070BF56E95F620E2C0A49C06ADBF1C3606090245BE7A3DC5CB4A60C72
B62704A385C8736549DC11322DEC39D0DD73AE3F26702733A44EB5B31E92104A
B33E7D4B7DC3718367C52B836F30FECA7420BC087BAFD8CC7B68BEEAAF901320
FDADD38034D8F34EBA99B96637B1FF0A69D770C6CA0EB548FA1E4795007691A8
DFAE3B92A806EB2F90AB0BE445530439E0E8AE43B438B610D51A2A9D64B50B48
8945EE7D39347EAA6B23D4408712F8BE77E0273ADEF50054AA5F2E994BAA7B0F
E163D81E103C2633B700490B0A80D4017D254DA63E3238A0A7DFC8448B7BFBBB
FB11196DE106B14216283297E4F3927DD03B6C92B608C178B9CF687F6870B3A7
96EDAB74BCEAB17DEA84B0633460821B88857BC62232D411483F557173EBAD6A
FB646F54CEC76AC98678B54E6E3A103F69ED1FF01067BE3ABF9CDFA6EBDEFBCA
00A47E7C02D5F2427B81405F96413EFABC51DCCE51FDE3A2543F97946023DC06
ED4D34A5E4A2F4C5A85BBDE0A289CFE590879C056E992C7DACD8026D7F4C5AC1
E5D796C0E5A79C60845E56160359E166BF88694D92194916965CA4B0D9F917A8
80476A0E2F3CA21869CC19CF9CD0F897F0E26E29F14B05318C251DDC89D151D7
6CE55800D3D730F0AA15A42D656A3FF51D2DC26313FA7D4D05D8E9A9F4E75605
9ABD9EF1ABABB5EA4F9031F861445EB8E445EFDE8E04DBE971E08B1B5D45156D
9582CA59F8A49846E440FBEBC52942876A4760DA16D3D24B402F62BC6975B782
18F32C18949417C2953CC1A3A31530662D2196FE85284B33D0B787F3261124DC
587C5DEF6FF091ED97A96DA52D9DF3D13909AFB312986143729B7AF7AC485D5B
24E1053C44187EDF3193DAF1B8120F0F2A432A086DFF8B3E14441F35D903B894
8753E873822FF2E1C8DE9834854FF293E16D1EE42A0F23CC1762CCA69777B422
E28AFA3499B3BA4BE881C0B9D6E14B783F529E7D71EDCB645D75EBE7D21D12A5
9FD8BC7A0FFCD765CDC64A4922496D357B60A0640689E964FAFD82E425B65D3F
8D5CE7C2A9F04C4C25240A8866EA71B296616734020B514C8B677ACF46CA0D9E
2609160715F06663CCA773B05D32160590FD4813147601BC195E409C760F6182
96AFBFEE1989A09F9F9D99D5E751BDAFFEF696F87CC193C807E4D0D17C59E650
B0BB7CBD0AD5633645F38705A9B01BC869FDBC4831EB36DF70F22F8738FE52A7
252C221F88F1846293F4F56F47F0F9B6FE6C044F76265BC8875392B5354BD38D
DC156C80E4540394D11AC283E226D766CC4CA81187599C2AF35EBF03950EAF78
2A3DD97E9D6FA3B9C1B8BBCE25C70C020B7A66D628BDEC035CFF6BDC20E5809F
5CAF01982ECE47288EAC8F6969F858754E72C9ACF7E71468888DAF2A7A1D0176
1D3A68F34DBFBCC2D016EF4B68FE6C549FFD52BC02589DFAE6B659C45B4B8309
93FB73790CF101C3BB9BFDF16CE4981F1595F3E8DB557C4E8C34903DA01C0392
D34BF377544D71E9D9E5015CBD6DC0AEB49862AB0712464EEA52BAC2E13FDD95
A554E64ABF5421FD338F17B562E955B4EB29DC9534CF3AFD65DA452D7B64C01A
2E0FCC48AEB365AB917F528604FAE8139078F1738FDB78BE9E806E91506EE72D
4644F4BA8AECF2933CFAD5F041561B6E99B217757DCF8AA5CA60411CC615B977
8A9B58A168969D018428804348289F0108D3846FE48A7BFBFBE287EFA751EAAD
E6BD9979FD51C8355EB4EB3DAF35E795A2D32193DC2E11E51EAAEC0F6DFE2C1A
13489580229DFEA4CF551103450057E27BFA25D69A1AC6FB29FE4D5CC6EE8458
FEA2FE94385B2AF841D9A6ABBC4205C9F5DD453B1D3838591BD4A0179BDDE652
4F7C0899E413617E745B66E31908E90AC92E1B0CC8FA70ACF5E51D8D14CFF9D6
0B39A6E2E1AC5F4EEEF91E7F413241DB017FE6C5895D6B38283878928E69D0B4
B7D9F6DE58E252843CA29B55BB99CDE952E807631756B1FB6AD04A0250FE6BE6
5992D875CFDE24AFC8ED8094BE2CD758D6D6E9C3BC741BDEF11A8D2A1DAF0601
16E3379AA9280CB206DD0229A2B37F520136C4E3D2C9EADBE885A925D4C6D808
7016FCB998B95F194BC9B6E95BA14850E0FED4433B35637CF0AB9DFC59F00E55
8297BCD6CD33D6DE059ECA3DAD6839B597386E852EECBE1E315834B812324AE1
6471530773CDB0D43E2671CBB107D16C3B6E80ACECAE969B7ABA98EB37CB2C2A
8EA5326178611E141DA0EE7F77E7D5423DBE0776FA1387D7DF0DCCFBDA67F4C9
C2B30566D330813BE00F185D8EC22BF69C7F3C7B32325104D7FC78F584294508
A53A987160E858F76C4FCC93590C327D4EC83FAAA2369E9E6EF7FB99402124F1
A385F25A63CA278DCC38682E1BC6D134930242730DFD156D36E2C180BA49BBA5
9E918E4FA36BA2D047B3E52E6E8585FB844F62D48618611F1FAE737BD2925C54
BCD4ADA0DB38F8639201D8955E11C53CA69AFD141242589D0670B8A1098CD1D4
4BAE1D0D3F47FC383F86C8D8E7AA4EE7A2213B871E4D537100C4D81842BDF8F4
324B6D4F83E456CF608CD94CE466C1FC3EDAEA3ED25C96FE89A7CD4C2DD12DCD
08C323F8920A6BC3812322B8BF3B64173F6CF56326D2D0D44CCAC8ED86576612
A466C00A9A045B9B6E5DE161B8DECC065CAE2939F99BDF7D2DAEB9186E2C59B2
A6C55E7B267FE3EE82086FE6CF8F2C6937B09BE756DCC240976600A90CEEC68D
8D1040036F2E0E500F114E592A9F5FB13EACEB54AA027C1B87380F9EEF9D52E1
3FDA790FF3BF23A13C2B1B69EEB75950F9106F2BA34814AA379A62EDFB1378A8
2FA82511BF1887387A29320729C6CF9935D1EAFD4894A600072ACC70C91B876A
4C59FBFD741603D1E0E18571D3DA62557A0376C2E71626452A176FDC196FA983
4045C8D38B430615796DED6C71AEF5DBCB2D43BE46A6C48C36FA0865423AB9F2
CFB10FE77BFE4A63F8243ADF0C07C6C16AD3E33C17669D89FDF4914E5FFD9EE2
D4FB9C9A5B75AD3C4177D0BDB06C9ACD77FFD98D851C9629B978FA10CE2AC042
5C7839991CD366BE8B596E67963AF1AE578BD3400269549C2DC29F2D37601AF5
B44B016B77A11893EF2C8B92C906A725065BA2BA5B1957B2AC35ABF77E1625C5
0C8D4D86AE19E2496ABA54E11929F21078AB158F3D371257512495CD79D2B296
CE0731E2045B788212270B5786AD55546EA51EE7D7D91FD3F5BC32979FF087E9
104E689591F1B5267077ED116F2067AD2F9B62E5EDD6FFDABAF6A0834A8A345B
12AB28B54FF006CF8C1037743225A3542A42078E4C285F219F5E55187DF09674
F324FAB81E61751AE621398D7BAF0A9F966EB9261170ED04F7433A928756FC9B
E53185D1C295FFF3DA9644FF0D2941614936BCF433D4FF7D6276BD5C9CC6EC08
DB9DEC5670442C353BFF3858929D638CBE626B87CF0AF0211035F415C5B593CA
786F57CC261D7A715104DFF4CC0E3010F6D683EAA9F7ED484F7F2CE101828808
7B11D6868962C69B69AF30E4FE9E44CB992CE4DA12D854BF28B4CE8E7EFB5B7E
3DB938C4ECF1207C9814C9F50119CE994EB691FA38948F3C1F7E3CFAAC3833A6
12643316CB420AF3DB29F008BA36A2EF07B9BCFAD5AC9FBF383B3364B50D5860
E9A1646A92A94DFCAC9149FFF9ECC814325EE561E11685F37D1CB4C43575943E
C236A4D9E44AE3E5B44B2AE9041C1553FBBD55713DB4C26255E4C48B23738C38
C522905337A70F25F4ECEDE7808CFC7D343A7FDA08068966D47877D7DE7C0A53
2D7268652BBD3CF858E539037C18E9052A1A75C73AE17858CD969A7D3CB2390A
AEAD3C15E072DE0A84250FF10B380D6719079991D4BFFD5CFF4016400DC83E5B
C1E033154E51F564C464428ED2D7308D3329788FAF24F3F4BAE3D0DC4C2312EC
701C2A55C23A71E12403A443509DE0BBC21EE24B40DE0C0645C6C35E92178941
EE9B1FB76F7F2D4D2F5D53ACA68C542E7D45A579C9B5EAA32BDFB8056A497B17
D31A9343E483712AAEC2F0EB03E3E913DA3D91F1056A41B007AF081136D50948
561FF5E7C593E1FC4BE55ECC5BA2A7A3C5BB32EEF0CABB86087F2A59091D8533
69B8ADE0B18E8DFDE785893B5EFD6019A0A8D2727E406FC07C39CE6E1DC83F09
27DD241E10AD24B56BA66D60F7565B29F58249DAE03DDA74A59A2E8C0DF5E745
D3B0D70C6EA483FF99290E13574EB802422BDD515A570A966383AA9F7CE59375
525369CA6A559BEF0FCCD0F127D66CD2A2164C291567D081D4F769B5CD39ECB2
380D84A41699E520700C5E54DFFC63F44C24F7644665ED7935058ED16528D28E
50E37BBEB1D1554503645C1499871F0D3AF01E55645C56BFB97243ADC4813F84
2C3BA2061C6F4B994301864942F3C18428C06EF16DAA312AED17A9C1AC42B75B
FC767EECE17C65560A0EE4086B056C08C65A376E555E91177C25C29D6E749326
DE674CC92EEEB4DBB360CA7518709F74BCB9FEE4077CC0C49C47746F159B035A
561C376465F9331E5C7BDD1DA502ED7EAB1C331966C80787F35EAB3A94CCB98C
F5733C7DB1A1FFE3A811F2D67B799250CAF11120873098B513844524B2EB85B6
39AECCCEE6D0DBD06968463643456412018EA6DC3F8F945E8803662299C3FE98
3D7D85435A62233DF93B8D0272E1BD78909C7D352D00C27F99EC32C1BDAF06E3
446580262393B6EFDE32C4FE7F1B0A607197A5A14F5B62954F2E65342FDE5387
63E4DDD7B9015E4C8C2F8B49DB25D939C03B73F2C64250E5EC798A612BE00718
9EB0FE8BCE3B9F209F7A66893548276143369CBF8F4868AA2577DBBD57648E39
8F5A052751A5B22688404C3750788C301A5AE9486B8433FA0A2D3B7D87188FE3
54E20C56F78D26B63043DA04979255F46F985FB09548A2044590C81C890D0E98
FD06C7AA912A719A5C01D1DB7E7ACFF73B641A68A0EF3B9E26314B306649FD15
D7B5965FAB55FC4DE699B0C84C35A5F80594811FDCAFB9194D8CF08878C811EC
38A21692F9B866C0A59D9D736D429B03483C3EC44F38665C27D52670DF05EBE2
63002D3982685EC4E875136FFD709A15AB5222CF808EEF614A4178075A419A48
87B537733C6365FAEA22EA8B85E07DE33E17B9EEC8611F427FB16BFFBBEB7385
0E2199B8D101C85AC3FE898EB349CDBE1919CC375D1D12A1B06B72A0647DA155
2B64F115B8DC84694B1EA840D345986D96B7A03DBDEDA43DD2ECA72702A4357D
241AA942314ED22A7F22341A942C82E3E05B19390A1775D2A5F9EE021B22207C
8ECAA03E1E72C0D37CA7DC832D75FDFAD81AA210A773B2E0D15FB3BF5074DECB
DAEC80A55548097F65C8B0C842BA82F0C7CD4AB7CCE0E107126203896A111B89
C23627097B59ECB9ED4D16EFFBCCFF0CF648981BB0F88D3295996477A763C317
8F38BB3685144A0D49172E098F66C229CDCA512B82877CB013CF131D789B2B17
B64D3778C7B4A8F1A4C4D94DB447EA927D72F34A64763FDFB9AD7670096F2168
B6852B84A789872053E9930701583DD9CBB3075EDD207C35BC17DA8E255C9216
E000486D0A30F997FBF9633F89417C286FB98AB2D2D3A6081AB50045EA30CF3C
66C21426637245657B86A2BEDBEA23EDE161F77D86EC7B300C76911E7223DEB9
80B829E667D379F95AFF375FCB3A86BFE57FB33BFF89C94364C54F4583A65B81
E58CE7F78DDB940917756A2D719AE12C53BB38B66D2EC4CE43B13C27519FD676
99D69DB12CA97F431559AE1311DE9106E91B8D869C9EBCDFF01DC1A3FE08856D
8BFDD753AECD1B53196B31F29C5AF625B78AAAFB55C3B6C1C0F575F4A979FF04
F1B3C17864FBC8B92B77DAE57AE3F21E030748189C553B9F62C83765B0149330
CCF152258DEBEFA61BA82047BD2C432A5BA403904CA67A255B31AC92BB7183E5
8236D47999A1066D8D27A2581F50443F35946C6E3002646FCD01738AACB9AD52
BCD0D6C67D111D0E8131F155B106D862F0920651AB446DE4B526A15E98C99D2E
5C078B5199A8AA5AC678091C4C8B2E02763939586556DC214770C61A6384B763
90DD9AA797E5D4D133019C4ADC916AA6F4F5FE8A642DA2E54F4223343D274E7F
9DDC8E3DFFF7511A3261532247A8570D83EB156940364CF8BC46839A43CC4AAC
1CD632FCE69B491F7B7F8AABAED6EEBA8BA073EE6DC6406131859F59796E37D8
2FF26906D52456D8D43114ECF0B4E3D6D9170AC4B32F284C0C2FED3BCD185C36
E8686D2398C6351B1344A95F4DA7743A09AFECA6DC807448B48C85E4612103D8
5D4FFDD23B55D05BBAE7F649385C4CDDA9A3826347488FC8552BAE2FD8278598
8D02E3FFC53FBD9B984B003670E3F21E030748189C553B9F62C83765B0149330
CDA8134D1C493BCFAD6209703B06B52BD4EBB66F78E2C7BEA28E045FAB03CDAA
01086862BCEF11AF66D26B9A0D13CF7EBE0CEEADB782FFA929E83E3A8E4FF196
4DD14E642E8C4A133F7EE497B6EACE17516DCADD90525F5041CC5875F19B8F6A
C9B8097F47863AC853E1ECE7258752DBE7DCF166E1670F2EE9B93192C92AB036
7DA074BDB91C62988ADF59B5F7BFD55E90340B4244BADD57DA59050F93F555DF
C8C27356F012F469039685D8BE9CEABA28C1E75FD141D570451BADF0EBA854D9
D2B0A27A20D804A8DBB28ABA82980EAAC6131940026E3C2297E197FB8BD63B97
08CCF674025C8D120FE3ECB4BCAA7CAF9CEF0F836E0652325462F52902A5B684
377AA75026B2BA6980B44479190726592F5D4BCE6738CC357F0EB6F73D82D735
492B367FF14E72129ACE0590E1B613AAB89F20B39D1C9CAD1F056CEC4952227A
4ED3148AA8F2010F195C22771B7287179B66F93DBC8E9CA5E8ECA39AFA03DC23
B0F9C8AFDDF827CEDEEBEBC508F5FF5C050D20152B24DA2A54B2E3A12A47723F
2A4EB1C6F4924E657E2F1584670BC7A3886EAD635DD946C21B5CBDB660027EBB
57337EC9CC58069CE06C75B4DF91D94F10B3FB74F3041AE36E8DB9EF50C75730
ACEE7BF74E2A5CDFF3B4225577EEA8DBF54D9DB7DC689022B99E4297887C5802
0F33BE96D1665413A63220594184DB8C9926563815AEA9780B21B128A09426AA
A6C52A9A9A1A5425D476EA7A7CA6119B856B4D98234F59B3C0A4FE9CB8F1124B
C58976117B76B0C7FC26E2D3A7F8B934740CAE886FDBD2A281F54AE92E2DDC7A
6D06AB7A5DE1E3015C34EBCC736CC63031A697A6C0A45C4F1B559478FAFC60F8
6A71FC004B4E2414CBF5AFFFC4479A40C6496BB818FD6D53A1B0A444003FEECE
162484F4C4BD3DCDCF8160007DBDBCA3412A894AEA8F6E3144DDF03290437B7A
1A31096F34163355DBE87FA2B9FD5C78839321E3B2DA5B6697FC6F0FBDC06640
4597950BAC0D203EB92A675FA67E1BB58F9F5B2B7FCA8C9AC9557F97784FBE00
50F215500F281FDB911338EDE6E39A4C0D6B71E487A15D05A3DB86C40D60D6AC
53EC8B4757ECB619D467FE210B577BA62D5BA75AF4038151E9CB7A7E27383B37
34CE0404EF08D8FAD8463550E70C52F3464BED90F8D1F513FC177B94996C5336
50AFC9B9DB9CF7099F211311416CCF359257DE67216CD00FFE8C4D36917D37F6
46F86082018DE39F515736F710A249A9344457083CF4BEF521E4129F477B0CA2
8C937A52B3D1546A00FBA1CCC13DF9EDB3667682F641A47FDA675076CA553818
89B8E3082A7FA861500A83FACBBFD693D3F9DCC7C93619C2140EA4CC6C101B23
DA603FD7E8D4BC82BDF400820CA5F2851712CF92F8E7C813F608065EA36E58EC
93040B33DDB1D42303C334DF79DD1186F27917A1B317A7BF60268372D71C891B
4DDD70ED143961F1D2AA78258E524E5E8CABCB52837B4F9B8FCEF5B47B8FF336
8F4D95DD3EF5EE133C7B24DE9E0D2CF3E014DCD9B9B39BB86768261CAEAA4C41
5DBD5C1CFCCC5B77474D1A175C64DFF17B69FA7477C7B06C5679A64DB5E636DE
965C1E7FE952C244D78BCB7A908AACA1EECAE6A2DD362BE2E7EA49AABA75AEEE
C5DDE1D8BF68483C3D22E7A6224D8CA16AD3B4194DCBD2FB66C44CCFE98859CF
DE3CC8EC9D3FFB2658CFA615819B889A7655CA63B825338B938CA3849EEB62CE
49814E7833AA1E9B8ED51EA9EFAB9818EA9DF794371055BF064C172ADA0D306B
B9EF9F38822DF741724E8D187C522D898821B44C90F1159674A5B9310742DC47
A084620AFE85289172711778FD9E7A82A7D65C10357563DFE6085FAD3790BCC9
5E85894EDE026F2041CB837A1F9DA29079555C100265D82C9C1C4D4915C0BBFE
D0EAFDFAE2C502881246F7254CB4F3A7B66A1FA87B9A81A3249FCD0540EDBD94
96769CD6DF36874146D4AF3FE8E4A61F72B56377153D0B890971A8205F34B7AF
AD9FBEDC388D8DDEEF29E5BA5830B9E88A440E90802A0425C1A4F2AD6C62F7B9
3336ADD7402F11076FDFFE24BBE088A6DF3EE50851FEEA89C68E3509FF9838B7
D65293A63A397B46FBB2368A315BBEACC8CF72DF52381E3EB92D3CF24F6243BC
42E7B1F1F575D4877A1553D5B28BEE5E71772C8921D69D11ACDDE095D43077D2
871251D31C8390960420D8FC056B04E77002CEFCCA00B0FB8D16C3588BBD6EFB
E783A69AEC785315E5B7C88EFC0F70E977953666FD9E6ED5A705B1433D9B178E
DCEDA32220FE0AF6DB142F9D944983B19A5C42053282E1F93429E682C4F6C7A5
5DD17959CA190630ACFFCDE63ABA3F19D9AE936E7040E6A013118493EB1952C5
DFAE1862B2EBBF39BB13508B8C71E5FEDDA1459A0910FCE5A12E77D2A050E2B2
B6717AA08BF22A74099FDFE725B6024472E364E5A5C045F6586D93178489F333
C32AAF1C273589BAD1935B7F745BF9973D59E070667C94023B54B18B7D052CCE
376679C990138AA7A9BE8E9EA76D1DED1866D5010782042331A44391CC91AC0A
BAE5608930E599D101B7ECAFC15DE106BDA85F2BF3190FFF5B3236F14977546B
1D3C5FCA9A77302C030D29FEF6FD6AEFC263C2A95E45CFD44842640B960055A8
8EB090534CD23A881E6D86F82C0A23B9CBBD028B70E194489B1FD064E515CD8E
ABBCD4488E8829128AC0357BCA2054BA19904BE3D91A86226A3B6AC21FC19E77
CB6A755035B1B05F1C86833EEC02FC813145A51BF11E2EDC39FF4DBC037FDEEC
19CFB7C2081551658B542F835F9D0AC73865D83810A3A6B72B91DCC5B8AA3363
1D8007A8F05175C4C7856349A8B2410135D41EDF6E5AE4DB9B97895147395237
52C2FD12854A3FBE0BC5F9A757FB978D77FB7D4FB232E613B95366285B0EC9CD
AA752965C50B1B64BA4FB89C3A571BC97BD1E7A1DB725CC5BC1D0FCF0D86DC79
A3272ADCB6D69528BA18B89693FAD7CF902A58B9DC7093B658A5786096F80BE6
D98C513C841EFC7DB7F854D0D637D0B7FA4464BF5C7E00EE6AD1EDE12E829E4E
FAE3C6BAD0D6AF3AA517202447C343BAB5CF6D6F7B82AE7FA98BF3649DC72744
4311964F88706BD4BF54A5A216F2EED84DCBE17CA1B6498F5EDF6E0C13AA6839
8A6E28FEB3B0BAFA64C810C384F130769D75D61902FFCB34DA76DED556A6E9C3
09D36EB492483C51D4107640761123387E2B920595AFF8C17DBA3DBF722BDE14
3F6811A67B66C233B8C33F8C88812F92980E70690D8021F4E3F8FF7517382090
AF8E9C548C3490400FF055D088D742AF9A7FA456A47496058A016E39110FE2CE
604AA8F6242ED34BC23CDD9473854002F8961479B4262609EFE26FAC8DD97594
8DBF39EBE38E2A8B7106DD67593CC09B3350E40689A5BA6F5AABF3E7053EA7C0
D52E80C827321977F7865D10CE97CA2774F277300D1B4EA7452F2FF1F6287420
403A0A31CE4A66F3EC223B889978622CDD235325B07090D8770796F7E1B46653
CAF0D563051AE1826675A5F7CCFE82AB82F8D45B4DAF58D29342D3EB352D3967
2CE82966191C58324824CE9BD3A2553C637351DBC3D0CFB058E6745A6AAC3603
68921628A63E70F45D8C6525D356BB27B23422F118CF0C019ADB0A81CD4FF3EA
2B0E8D47E0252F4A29181312C29069BEA6501105C9AB89E142758EF9A5CB96F5
55DFC8C27356F012F469039685D8BE9CEABA28C6D4118C8C0DB701D2AC177534
FE19FC87E7E26F3A5628FFDC20C8D6E6B127A3809FF2D5693C2E7A4517FE0DBE
D5578C34519695EAD030B18D2B1B928D2CB8CAF6B39D5CC1D8591F56261EFEBF
59658F09FB1C506F5A1C0EC91D257CE4B002E8B036374D5C37D66FD69C26DD0B
3DBD7557B2253F632FE978DDAF5E0A70C2137B983B1A5826825F4B74E77A542E
CC85D27B1E7B2892E94414ABBC304F8E10D3A5157E4115CE3B6A3BB452417F1D
87BCF363E0A9E7FB346A9DF4B7B0F0004359C8ADA7FC13B7882A64C8C52A46D8
4014B8887F576E9D5C9F615EC830A0E9BB2838BC4C0021571B3CC54019500DDC
798B57B6D0D1362FA1254A1FE3C44528AFF1B6638CAF87F553DF195EE1188EFE
AE13FA319E5F388B89BF950C292C152AE883081745D631D13A802CB7B6D960A8
6183FAAAA649966E1BE654020F34D2E4564D557FF2F59C5E6A27F6FA07DE5858
9A52D66CD401D3BE7B698CB264399D901F1DF4D1A2058EA55E58F59C374DC6AD
4AA8B125F401148819C951EC562808CB0D98FC87B893D2B604D77A609B503C4B
62A746E0DB51CED4388D550AC45A5A7762FE227868CD1F0B1AEBBBCE6AA12178
CA0641C19AB6FB7E261BB4F02E06C917030391A98B0AB95050D0A9A469DE86BD
059C625D1239A7FD2CC98708E04A5AB714B111D8A8FE808F8D221E3FCA04C2E4
31EE3F6186F857B2FB2F403BECF478C877BAF5C7A30679179E92036B9FCEC9F2
DE7426A38BC2FA9A72C364D0FC44D1556A57DDA0E73A6DE96D937F026355FDD1
C3C40F2D73104612FA58833A4EFA2C2C771442B0EBF2A9084634736A21128843
DF49C84B14BDB9BCCCC899EBA81175526D2DD96D712E62BFCEC1848929D48E65
B14D45C8693A68A33372152FA5495B5693379E76F7380164DA5B720C391E6220
7236EF4E330A476FED2DFCF259BA2F0B434D377793AF4D6581ABC17B5780F1B9
F8DFB3169A1B4D13C7E6B8715BC988314E24CAFC48497AC6EA8DFEEDD25CE349
6C1106FB840B9089E9CABAF3E342A6841B3D5204423010005E66A31AAAAFCAE6
A03034E2281BEC8D06F7B36CC09269C95AC4738876F604768A8BDE0AE37AE6B1
BA7F5B01AAFB04FBDC7B4B8770D3E62C7EEA9759D337AF29BDD40780F65DF703
5403CA0F72E4CBC21733BDE36662B3193A12D4FDAEB0748EE2F49AC021F4F38B
EE8DF634CE4E05B36DD4226A16A7822E6D523A4B3970F587F38948F3F97B88A0
725F5C6CC30590CB02D6600DB29CCD36B606F90142AE5891F32651524B36A063
30A30AFEA7D2DF499EEDC5920F37985232D8C861F0FC7C25DD5ACAFA0DC6870D
E33E16D59F60B06D878318DED61094AD909E6A93D8B4F4DB97E7F233D43DD550
02A0D7F7F63FB2F9F4CE6578E220A97A59C9DF7FFAF3CB8EDBFAC2CC4B24387C
671A8631A197AD148FDBE7DE7BF7617F7DB9BE47440630465946027925AD9111
BC334B0CACF690A113BD4E73CA2EC78B865E41B645C56CC06DBA6BB6612F24E9
8D9417A2C35F54956A3031A1685C3BBAB26556D33C7B9996385889FDE3997BE1
D8718B4B32FE38CA5901CDD50B275589987A74036ADEA54F1D1B22718DFDFC59
EAEA4A33B0EECF502AD161707292E5C5A6EA04FCECBBE13660D5360139F7DF82
406F7F4BAF61516F52BCA6767BD06B21212750EEA548AD21BDB5FD900A5C7E66
942BE868212F8ECDF6B56EFEEB2C994C0DB80E2A3617825070AAADF3FC71121F
557ECA2C9D8B35176F3154E8757A1C21857556EE4128FFA785AE4898298C8470
6D59C727C55EB86C8253596D25CDE8B2EC957EA523BD60F37EE2857AFEC47E25
004DAAD71F47078FEBC262C5E48B2E6766322DBC0244B0797AC07A163DE6523F
9E660D2CC6B59F7AA87B0624F57D5B60AA27FB7279FA09966098754F32657FB3
C5AB5CA2938797FD2C67038ABB237E8BB6667602CF8AAFA7F6080F50C4E87513
6FFD709A15AB5222CF808EEF614A417AFDC23849DED78CFE4ADB26070E46F7E4
52BECBA1FCE6D8D1DE675800A6994ED3977A871A87083397D4302A1CD13B4982
E0F489D72EF60183D8F2A79A3AA765C18E03B381FE65AA30EF505F246F21D3AD
1E663AF5FA6F4C6AAF5B9670ED2A2073826941E9AAD904A05CDB5B692AF3E905
38D2664856D62E28396E84AD58C190F60FB936D5034256E7A1F53FF5ED7B2E61
7D6273562E2837A23DA93C947E2D9B04F87CF8EB48C7478C15610EB43EEFC0E9
3DBBC1946AE90F8F22F5353BBA2FB1EB1795111596A3FB8C08279AD9208BDCF8
59CA4F3A080EA998A8B3D640AEC62D816A955259A1419C8C25F4F8378BAA0E75
64DE92634B8553CD9E2B63F945504D950C13B31CB7B479C389E9CE6E3396AB32
9CFA81A3FD438C5C31BCF78C0D63E756CBD9790B301E9CE62B783B68773C3A36
73AF8F52509E739F65118904A06FD3AD3A9205A17BD54BE0908138BAD7E14B89
EC68F4328916B0033E155AAF48909C36207FE1C67BDE0D385104C7C0730BEF94
DF3D9BB2161C70CF58E99BB4116CCAB159DE672A00C4F3C9E03B565B0C083296
C0C24906443389166F7F9B34EFBCC86A8825777CED120FBC0D19B0B8A9EB179D
36E67B902309CAEA6031787088260621587FC16F7612E260680490FEA4A633C7
ECC62720B27A31F79DE69649CA9EC65AC5DDBDFE150A9A74A213CF090BC879F9
374DFF4E327DA2F814033D068CE0F1E7226536AA7589E6118B332B7B3B42882A
A897481D0A4C44FF6732B5B95AEE21C3854B5BA5D95B423272CF349621C15C5D
FB5D2B5D8826119C171F1F9774C1C04491BA07D45AD37BBD8F218917F8102202
3B083A73BD879FBDFD72C4D5B371CA54AD62FF2C66804BCAB7DBCB8A5A21CFE1
7E2DA671A7FA88213B596074FE4D777E0183D78ABF58438D5EAFA88FAED56846
812277FC08AFA85A8017DC87B4B835C7DE472E783CF2984139C440B18C5D46F4
00F29BDC40B3CE28A9BF771401030D3F3E3AF1665BC4BD4F107627CEC39EA97D
5ACE0AAE89AF3ED5E5B09404AAD2BFE175098490FC5CDADEABA061632FDB1848
DF10E4A808717F34DF5BD6232B0B7478FE79909FC7385149C47AF9325DEC3C47
CC8270B6B6B91EF50C7BFA2F130478C2A03674870F9FAFD22BD2AAA67D679D42
66E65DE1A3A418E02A8BE169C5D0B12065431D9558A8C4151CB0BAAA224DE582
594D9086BFA19F8BBA3640745A0B2E51B1B7800EB1B22A54B24B3485E3EAC9F1
2F4EC5F788E46EFB2EBF78FF44364DAE6371A209DDD3DF632A9B2B3308C641EF
C16613B8AD5D886B7AF3723265BA56EB6767CDC2297CFBD29A13F5F3598125A3
0FD42892ED6171B0E25FC7EA594E01E0E7CEE1D3F3B53399264CE02983116E19
A103C3E9A071256151DA63F59FFB366D2E02D65D54DEE623100F6E46490A01F5
67FE846FAC4DF0DCBA0EF81E7AA860B96CA41C168548C7F8E7EA334FFA338611
3D55CCC4A16670BD5D8649B0C817A07D970C972401523CAD4247F6CDE9652903
41D034595C794A4DC92BF186068C71B851A7F85B6333C19C96D00273E43408A8
83CB2046E81CE317A0B867554FC41DAE65AB191731457361624E0EDDB5859905
93F20A35C9255840C61989DC798351E5887C989E252F50035966E55AEE3841A7
7B4F636BC2CCC320100FDBDC187A480D24C9F10D725EB5F1A1B135B5E5097E60
AFDF729A535E0513AD55F9DEE2688F464727BE1C63784F0E51BF537D4FF5099A
9A463A6ED42EF370FEEAC9D99490423413D971F7E0B2E4194193845150C912CE
63BA4E15F58BEB13B68B91B9057A7FC329DACF326AD2F36FD2EB62CF4C2B7079
6A23BE19403F06DEFCD3D6459B5D9116FA780FFE181A696FB51772CD8FE3C67A
713A0C022A6D1B02B0DFA54233B5A7EE22EFC108E617BCED4F9205008079F09B
B2FB82B1D1E2E571119AD375BCEAF3987102F0C9D83420D26447974D5A485CD2
C01BF90632E54F8CCA663DC9371195182CE5FB11F82734176C76AEF08137B09D
2178755F2E94FEB892680A0862AE32F8E1661ECC8FF4001A6D7B3E9BF7F847D3
9053135640FC64951732CF296B055401F24F7AFAA25660245149588571DC74CD
EFD3E5D7C8FE54C9A6EC3722200E422953CC3AC0982AA51F2D946ECEC0CEE911
62DA66C9C1C9B63D2E41A3701DE89F53C20F1D823F2EF64DB77DDFB68E22D20C
EAD4A5479C77743044EC0600CAE66913D3A89218D255D54CF0086FDEE6B7CB2E
ADC49766F44593DF8972B0BD806A94BE6EFB28733CE39CF390D8ABDE4AB151FC
70D4FEEB470DCB239EF9D2771EDD2A4BDD22F82EC95D38FA62F8BBA320A942ED
BB45A07A97A220217A25720BDC342489D3D1F1EB2FBA7391581255CA9B40078F
A288BACDE19E8B67B5DC829278B1120A3A5D37A68E599E78546CB04C7CABC1D3
7D26ECC85EC180EB8EED1A6E81D3EF079853BC21C88A8E8AD88833808160A84F
3F9F29345B3BA3C7DD774A20164C48032204CEF2949742FA58022C96FBFA1E5C
6668641E4C15421F6D812255D98D298AA142BE0A650D81D9F7079793D6FDBFDD
DC1EA9AE93DB702C541ED21AE022E86DDFA56C98BD025F353124DEB283E73099
943D762D20ABC42DFCCF4ED0E151DCDC682B370361D03B248E7E7501BC64297D
3C8BAF3BC9C0D0ACB7AC6ED2CEDE02799D369A01933B7A77D83569453204437E
36F75B06C555D966E73FA7A1164CF197CECA72483B00553818527039AC74088A
194CB25BA1A334F4E39050258DEBEFA61BA82047BD2C432A5BA403904CA6797E
A006130512BAE13A13A9573AEB262077411083C2EB456807EF11091F0DD6C57D
331F979974A64029BBB645304BD33DD26C0950531D1AFFC9D5EFEEAEFE0EB4C5
9B573462CDEC06C51C9FE8D0A4678D524F3E4787F677E81BF46E2F73407614E1
7BEF9ECC22B5D7B4E8E9A11D95EFC71B5A6C6EF7F502E4C1897FDACE081033C2
648F76C255145D67DF638C91D236D81A1AC4E0F6826F908BF9F0F7D986B1D435
233E8BFB6BF169D424EFB12A1ED6ED2383C65FF6ECDF6093700748F9387D8A5E
83CC8AD922B2A8BDECF188505070B68F0A55F5942ABBB33A3F5422CE37CB58B8
7ECB413C953520D145BE35C8758391594AFF7153A7B5D4448C64E063591E7978
4A80175E3E4BB0392370980FE8C497285398FCAADF807C859CD6AE76596420C8
7D291D12CFDB80B62D5A9E7CDE0A4687DF29504DED589783E9086B33E3475851
AFE225349BD9936E274ED7A5CFCC0057D9F73F0334C3F081F0E15D5D26A72F48
979F8C3C01E7D0A6989E43B6A83BC488F512F8067175476917012FBF0061C80F
EFFEE1167C08592B4FCCE767F408BF166659860A3EBD0E0093BE719B29629D9A
B34F24117C71EC058D5B15E323C2C363E3D499F3DC7411DCE3D20E2E9F670678
B1F643BFDF588DF93B6925100D074E11C6D288042512A36B195EB2A498E60E61
81AA4FF088601E0BCC65DD5EEA60285C1F860C6CFDEBC07D3F1415F381236D58
7302FF1AD6925321D4DD76E461E79B1CC4A0564E9D7A43BC2C12D625B22C7264
C26191867553D12CA559E3D62166D986FE951954F01AC80A442A6A85E1184C28
37691CAEEBF76E1393D8DFC48E82757F8839294CC2D5D305ACF60B9770B74A38
A1A188C9A10BBC722499E3AFEDB6430F6EF0B26CC18EB9EB6087BED37768C58A
BDA5664D3E4EB2B519345E70A4DBD6C5BC6C8348E4C62B2ECAE693F327D25D98
C9AD193F94381CC4DA948B0E5D725D21F531072180C1D863F24617C2FD03C488
156AE4BE6B40950D60CCC8143CCD4A35302FACC2C88BBEBE055FA591A3CCBBE9
7BF2094CC40B83F425DDBD409F8423BBD864B88191D44A03BAABF77AE1F9D794
1E759D3D702A85311C720CA7997F93BC5B9D987B94B70D0A1B96489B78A8214E
FB3AB3EAE57C27B1DAB7F691529194054B3709508F2AD6ADBDF5FB5ED657B3AA
5C942ED0C061CC7E03513CAECFC02EE55AE3ACF0B696E4444DE0BB3491FE84A6
315E3607EC35CE3F946D7D804C18E9DB580E492F7617EAED15BF07A3B343C618
E5D060218601080A9395F9FCF7B9B00E93A7EF9494E107235A45F9EAF54EEF0B
685A1A3367F60A71EA8AF73445F2B3D1AFC47AB85E70E7A91F23104D418F5582
332AFAAD3A3B0832C2CCD40CF07EA3AC22865C4A011443ECFF92062FC963AF55
9C5D4B1523B69342040E889BBCE899347659CDD152A758D6237E52C2C700453C
E6FF552D7BF0BBBB51D104136DF446974C679FAA07706B36EB97D9202C576359
9B3C05E1464BA140883F311D58A242CD10719D1C27F71B50303BFB33BE55EC04
428D1D8869EFE48A460C0BFB2499E7ECE43FA2DC92442FF7AFE49961F461F60F
A06C9906540BE0E0061C03C5CF1CAE3ED55EEF399CA17B715C8A6DA4099DE691
C02CEFA930C25B6C0A7DEA262569416202C10F5323218706930693B782764422
692D98FA836012F1BA77AE80BDDD0452346F282DCEB0D5BF219807F397A19BFF
BA47354C334F1D3E8E7A1D220FA70EA9CBF0B38D6DAA116C1AE4BABDC5FCEE3E
B40454892CE429C3ECA8635B7A07ED60056586CEC7F8ED7C623E5517726F6028
288B8CFD7F42EC4506909C1B4904CED6AFB3EA913918F7F9AB0B9EB438C87A9D
ACF56D583486E8DD0357E35E1805174AE7D1ADD2E056258AA295803C60070F8E
89217F14F955A13363E51AC2C563B89563D0254194DE000681912B168CA97365
269B2EA07ED532380833BB8D4514BD26F0440BD8CCE9171FE3C81517DB81CA5A
9C55306AED6DC208DE938C665E166A285BB1029C6853A6DC3A6C6AAD5F05E0C3
B58CEBEE82D396F2A3B3276D8416EA2DDF44717DCE1C4C391EE9AADC6D26F1D3
B0B0E9797836CA0B1D5C98E42EF181A0F0E3854B28930F95E0558CF3A66A20FF
279EAD13D61857519977DD5BBD317B3402D11CD481BD19E28DB7DF1DA1BB41D9
84B457154D1DF0103E0A79EA17E9D9E480D3AC9EF4B833D951CEB6073A23BD83
2380334F5C44FD9AAE7E228A0221319CE786D1E24A8B87C4809C3247E7CBDCCD
90E10600663B161A15DB54D1C7DAF3B23C5F36ED01D8955E11C53CA69AFD1412
42589D023AAC6FD1226D19189FF54777E37337534BE8EA33D99558FE2E5911DD
DFB31D17A60124EE8DA6CBDA94196D7838A7355013374B68132A30576D4DBD04
EAC244CAD6FF548265DEA8EC1D37916398FB8CE955E12D8A89ADEB15F42BF2D8
F0077664EC97FD29D95324A995E399ED18CC882327420F56A44CB2F2A844BD9E
19A6ACA8DC227D0326FDC21D45FC95F4483FED80420E4BCD787F6C1979B5A40D
A75D40119013F43D9AEC9AEC5A51E00AC57C8E9E77871E737ABB84A750A16A49
99D5A59AEB5FAE6FA51A6F2EE27EFE633C28A2F142B8069EA0BA7A8CE3B177F7
377827D34D3E982DB93A891AAABA4C543AE5D534E65D8D814EF1E3A259171749
D0FAE1D3030BBB940F9EC37E946C82A51D243612B70B601D2DE189B29EE33528
A118CAFE6B0E7AD9B00B33D1D7071FE6B6100A15BA2467664F4796C58C3E0D42
D357AE25A878133A558079225EA5481096196C978D942161A04F980337A295BD
C869ACED5FE942C394C0B30C2D8210846A85A5E58EE0E7270BA6159F5A78964A
E3C94BD04AC8544FAE99452556AC607FE96729286CB466DDCD3A39017C10F16A
60D209B1103B14E2E13EF7ADE630062A2FF2343628D1743ED115FC6159ABC410
5EFBE8689B341522A57255E28F8755AA7F8DC6DDE92B95ECCF029A6B18253B0D
FA1D08FCD36C168D0736A84730B348FFE408877BFC338EBCE84D15AA4B546DAE
65D46309E168882E7A8D19834ED3F89FEA18ABAF3DC1579331F23725E0F21FA7
A6EB62536E139BC9924F72A1A15F127F6CAE1C5802D74F8FD71B4C19E141FC87
BC8DE0E35062D7561C061B6A21C4F199921EBC618B5A987711DAEDC509CB98A5
5D2585C20A67DA37307BC51D926CA8626347638FC4518392892A2A9F5B2F7A65
E60481D8C24B28642066C49523AB4124948603B9F91CD17D6FDE3E89277BD957
81406C6FFB19454DCFA46DD8D89C692577699B19D25859D7808ADBAD276BDF9C
7D9FA290F3FE9A709699A599568EA029012754A4CB668CB3FADFDDA4331B2141
2B195AEFC393A9DFE5411763543F8F0F18206F67477FBC0A24315EF7CB08F0BC
F54A4651542B59B92AA15CCBD07D896789EC56D0B195A6E966C90345E873E739
8025B1947756CF6AAB9E456F3C42E3532789A9C20960A4C87C05A7D09CBF42E4
FB442C6E90984906D3B878B93E46445C429FFFDC483EFD9F773585EA5E4D316A
4BDE71B0708132205F5EABD6CC5FCFC3B35D79072DBF6F165C75EB5345AE3E17
820472A668034A007894B7AAED1A531196A83095BCAD415AAFD831E4BF69B624
40418867A566D7E1CE0B0C35A11481330F05DE90275ABB79E9072EE76EDB4E07
51B2D77888D5D3E434DC58AB3905133D2B03B8D4F95C7CB872D3A148E0AC2618
70C899467F6A74A8A072C697462FD15DF6AC4A3696104AB9CAE3E40642B57B09
A6A065E4C4C99E1F76E3BA6602944B8C42CA08F54BE2763C6F25BD547673F2F1
2E43AB8E4EAABA4B90F114956144023E221E39E98635A98F8529AE318067DF78
B8FB84E6A4231A89E46F7F5B7E9E787BBB19CA6AA9535A48529F771F4DF75FF3
333876DB3582C6961B3F8EC696F0C02DFDBDD3C07F1A310D2A2DB1C9F9FF6A9D
7D11999D6E4942690FF00D63803AC0DF4EF29037BCEF153043EEAD380C9ADD95
196D19AD9B472BFA8ED53B2FE5C0E3C022D4A1674D46B9A908E48303B890E779
D30E4AB97F16DB1B65FAC80B546E3D21A39F4A3237A2E1C714C290C9EAD142B4
E14101B11FD57C3164763BB0D997B1ADF76BB7FB44E3B85CF429B5A20BD4D749
2E48629107B597A08EB9C4366A77D8F1A7EFD09A2E2843437C4D250323436A61
4AC3F3716433FD61C7BFE193D0600C601796A4562E08D91E6E96AD94A6606A17
3B2D0D2F161747B9B4BF7F402527DD2D8639EF6609A0D058A5EF83FB0ABAF0A6
023DB7DB7F0990F1F7BE8B2DF96CBDD39E47FB518F0E0161660B1BA09E080750
5DBAF608C981FE14D93DBD31A7A6F8DA08D8C0FAEB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRomanCaps10-Regular
%!PS-AdobeFont-1.0: LMRomanCaps10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRomanCaps10-Regular known{/LMRomanCaps10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRomanCaps10-Regular)readonly def
/FamilyName(LMRomanCaps10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRomanCaps10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-496 -290 1501 1100}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53E3095EF5AF4F01AA2B5C2934E5345
1D88D311DB46915432DD0F408112AADBDE54032868560673D08129A1793B6FDD
D1D82ACA35A8223DA18ED7A03094DE92156D5D0B42FF6C449A1823CEF7555FCA
B35573829AE5A55A1381600C734661125E28C2C51EAD103F3DD496F6EA7096EE
8FD3BEFA4FBD7391DF4FAAFA38FCC474FC632D8A8C890F5276629AC2552B74C5
3C8C4B1DF8FC58A3050CDF2357DD1F98E83C4D077AEE399C268ED59CDE9DFA68
BFE8629B52E8DC41DEEC0C9E84BDEA39B4AC552839755CBE2DC820864DC9612F
16D1A532150DE0137F647DAE154785D152CEE57AE3FF8F671B20EFA22C5711DC
B9F8AA784F222AE1183B01E2AAC6254D7994624D1B351DFF6CBF3B4F7B1DEC63
CCA90AEB60F15A33F727877927E80AC8722C27C584FB671FEB518D1DE33FAA48
3173C60B382AA1F0B22369BE368CBF749E7559509205B38DF4326DF6A6161C4F
E3553EE51C42032B00F69252E9043B7928B2824FCDB5189B3020CF1D596C59B2
135BC9D16D037D87C31B091D7C4DDDFAAB32D68F9C396CA3BF22BD6824BFE582
93520934A63EB6473935B1EB4801E3ED6475320DBFBA8C2F3F98F03DB06C3F05
B0B06847EA50E8220C87171F32F759EC361701793C97953550ECA6D4B28EC2FD
607D51FF237723D79DF208680711F2DAA6172AEBF28B736756CFE9D56EEF0156
FCC46EA96AFB2A804A3BEE06E0A59EC3652633189E85E68B5F3EFA7CBF91E3E1
D7472E66CCE86A28D2FE799AB043DA1C74EFBEB5C5AE6123A71702861463B56D
7BC98F38D9C0B29C25645142AD8BE57953956B838F815285B8802EE4BD0817BC
404C04D71B0FDFF6DC455B51B305A005DD7796527CD8561337EFB990C47DCC87
E2A042ECD49871111D71785275257C303761638CB0EF14492762F5A1CB7BD472
F0B01BB09FC6863455F33DE4BEF212E60A9021B94F42EE04735AF673E3D24A74
35BBA4EE640862CC2C49FD18BFD4A21FA259DED7A5F13C74E62BB9A4633098E0
15F6E5DD084E687F8909E2288265BB98D64189CEA29065AA87E8BB636C3FA965
32FA00F88F4C98217A140A3162D903EDE2880C3743AE61EA1D3E2DA8EFD0F95E
E88605CF6872260A0C808EB620E9F9156627EEF4B4F07CFF943A70AA730E2B56
3A5912AA256C9519F4F8A46E512BBA9F099FD0A4E11C873E88DFFCD25D0F0805
B0EA04ED10F3D442573A56648C90B3D8C4C44741A535D965E48F0F4AD114076E
79FD9D0DBBC50EDC121CA1ABABDCA567BB9D28CB3E5AE17F756273333E84F341
637A1BDB292EADD055C971FFA94B4E72EE284C44A9C294B2B18D9A2E50D90BEA
A161415478975E25D1E928C5867A495F88565BA02CEBBA62BBF3976782EE4B45
DF434B01660CFF3F89AB4FEF6BC7F7D7F83EED9F947931149B6CFA3CC38B537B
6C89BBCCE6C448AC5C61D17285F9E2E321C96C5501772C32C2B6183CA0BB5DEE
4B7C3C8F0D77EBB70D341E595B5A7BFE2B471EAC3CE6C0BB9A046AFF0D3CDE8F
81C142E70727135017B39A5A1AFBA562AA96BAD4D66958AA329DDE6CAB90B3FE
38E49F75EC083CE28D488E75BBF597DB49E3F42610D596C1D91A878EE680EB84
C857186645C467EC0164AB6086D2C2D95C1BA20D36E2E8C1494640BCF0294FF2
103926BD4D83104F9B660EFF434CCDDC96CC25E9F54CDC9E19D966D068DAEE4E
1255BF293797A1BD1FAAB9AF2BAB48057DE0E3C276E3A5117350E877FFF97EAE
242EFCE7ADE5DAB83C34AC97C66C21F4CE4812FA0F007C12820899207C35F3B0
14133645FB9F8E53A6E2A1CC08CED4D33CE9B69E7A5D0E31726EC3BF9FD98C0A
E5BA1BCF5166779F26081CE1DCF8FCBF985B41005EA0771D91D5727FB447795C
A639A5C9057E97FDC795EE6B7C39AF1AB0338BACA1A1E179F1AF0EABA623864E
553A210AE8C03A525E467DF8744A8B6DB57E04C99BF7F568041BF90B5EEC2B73
9A109B37B07E8A668E68D117A3E0C46B11617838874E7F840DAB45050FC413A5
037107717FB43013DA06FF41184DEF3526C06FD5BAB6F3763BD358D6931EEA4A
860E1A17079A59DEB9C7A4C0FC68AF583ECCBE6FE0329A031820D4D1DA9D11F0
2D650DFEAAD917E7F290E617903792223A2AA23AE7069154690EB370F940BAE2
395473B7C2F70EB4DF0E94468FBA1B6D5F1CCF350E3930ADAE5249B3D5CAE21B
281B22FAE6EE3AF85762C36421F291360670443326A44F1F4EA0E002D8B94CDA
144057B4D5F9FD416ADBAD209422879682A8D0D249CDBAB31345F45FCE24252E
D45316EA9E34A9EA03A6C950682BD7E72A81DC4FB2B9CCCA501761022009926B
5F55C9CB2855D5D049D3C73CBEF771A594437E6E1C6B0F15FB3102DB7A3DDCB5
3BF882D33E5A43EF201EC0B415DC701E8FE4FD3505B993F5CFDB502635117336
387D170AB42F95FFE8C79DD1C5CD4860749F82198FFFDAE1393586EFD3956EE1
0F7A3EC03DBC1045CDBCCCC3950C6C443E1EB25180C92F0640CE6A8AF3AE7EB1
81C2E4C11086C2ADDBAEFF30348287C9C3FA8B34A76654DD7AD692702C462BC8
6360DF3B3C743459AB088BEA49C5D06D6EB67124373543A2C18439DB2227247B
30A41C72B8836026F60961F8EA96BF0A4F3E778B9002DD7488DAD1A42BC257C3
C7149CB99114E73DDD3F9A78BBE152E1BAD8C1A22328682504131249C8468ADA
F74760105E07065AAB5CFCACB826EFB41D1A7A6F59DC8AFFD065CAD27B9EB202
0C908E91E81B07A92AD544D202816662873464594EBF58A0B38A156331EEAA0D
0BC24BB44DFFFCBF4181A86F0A4BD25C3921CD2BA8360AAD322C021122E962CD
756DE48DA93798FBDD034F4304D5EDBBA164DC9E9B3414D00E9F5B712394804B
D4BDA26FE7C2418EEB63B7E393108CADDA24C91C1962272359F2535FA1D1A508
FB5023D07D392FDDDE2AC0E0708B430846E137E6CA0B5436653A968FE24DF8D4
6D2003B45B60BB1B6D62DA735DA6689C2C03F196ADC11B27E608674E546D2074
A3AD2FDED543CBEB81B9271E5EDD5DEAA97BC86C948570063933291D78AB5298
EA92E13430C7CA1FC658FA031AAD0EA5B01D22253D6C26BF3F435E6A6E9147BC
1B68EA135225157DBB906F75C799F437E74F0E185AD518B7E446C30415CE5799
01D43D8E2B08A04783C5E1AB77A3E641BFCD7753EC20A9D8AED089AF77F0C5D8
96228A3AF8A96329A5F0EA14F929D5598F4437AB944A06B5EEC3343EB29A9271
70DB0EA31A11EE7634FD75CAEAA480F411AFB3A933234276082E17993B297043
B2F75674AA08FF419E5CBFB6407856406CC9C52353EAB3C79BAAEFD74B08910F
452C7FD271C1B9BACA52194DCABDB4284B77C573C5A7EEA60AC017A3CBD6BA59
A1AC2BACF1545011EA84CB75B2C5ED13C702870ECCCD60554EE8C5D4B9F2FB5A
92DA2D93B04417CC9240E9C692407250E7D47C97F9B3A11C8CB3EA31F589BDA6
00E115E70395E2E4C0A29284FD2C9A8740851EDC442490FAE8321683AE4A530F
EAC44A63E2B90731652CCDDBEEC58F573951454FE7AFA29CDDEF96E951AAA9B8
EEB3F9BD5F13210AEC71AED98317186244404D4812EB1E27A42058A387726A74
FD74B84CEABDA95CAA798540DFB193A897AEC52D74BB6747FB9CD5A633DF5375
2834D9E6147A844A7DC46DFC69EB7B63E6126545B566CA3099246CC6E5F85E04
5FE750DA4A9B403FD293CC4363897147A165FB658A4E7A74EE6C22C2737A8107
63C405C5DD41D7ADF7112DB70AEF68FF3B8773848FB918BD1D4D4963B96902F3
A84599D73EB3303D7B74883137EA5EEE14B739F60D45D102706C99D92E1CA501
846CC8AB6FB3AD6AC55575E66721F58FC39D634E3C68CB3E2E24D61819BC8515
9520ADC69ACA26ED5D96EF04C2AD0153759083DBE7DA9B89D877992A8DC821FB
5A141A58CC2A46228F2F642101F5B23CE1ED3A79F2C6006E04619B81578C0EA3
C3A72402DFB9B35C8E59BF582621648F48CC413EDED067EF9BEEEA1134788A6F
839F2C2FB22529A38153E830445FFF661BCCCA767DB0BCACA4693DF0370A9804
2E527BD65EC1E77D32A07DD7E1149715178A46263EFFFBE20CF045D1F128CA45
50BA9D6D6DA61B84D00CBC9FAE5924F8209ED49D597C20A0CAD1C2D3424E9CD5
8A179A2BB40AC54D2E45D206928BE43A964D2311F07753D0CE4ED2AD6198A473
F1F9EA821DEE99E27D331F0559477F0CF1D9731533BEFE67747FCBD3460F9E80
3E409065E158DA49560DBF9060489CEEBE735CE28EE4ABC81450157CB7DDACCB
72A0FB560345386569D9DEE8754EBA551B635693EC4FEEA9CDAE3564D5DB1DC8
0645A5DFBEDC32C58223FB032506BA87BA582862CCFE1FD43197B1C7953BD8F4
DA1AEDEC773D5C063965683DCBA5BAA51ED9F1F601F0F088C4C2859090964202
143D72C13B747461135CBEC72D82A7C1602B824629FA3F773B665ADFF0135A65
ACB5311765991CFE59744E7CC201895FC7C2415439EA0112F1804CEFA65F5653
92ECDDDC6641E651C4CAC35F163BC67A18CC18839FDC4EB001A723EE59734A18
EB12CD7C54DBA9F8C47428CFC2B96879AC6792E812426A33CD78A844120B5B67
120BA7884AE4336F3FEBD08B7B93B550CC6D1ED120AC16308B6DD2B9A8F686D6
AA020E49172C02DA888DE03EC12D4EA38E7D327F0F4C117F34AB17610F5D7F76
C207FAF88C8FAEF2476515A41387CA09174006C8F2125DB485D1F37C940A8F4B
3E4DCC91413C3273DAC2A3FD2C49E3C9AB8FF8EFC8DA34C873E57D38B01DF487
3772137582971F3249E6694A24DA005C84176455BA74C8A97447861732DFDA1A
5752B5222EDD9012B45CF0DF0644B2E5B7AE5DA72EFE54D294768DE021DDC1A7
C76EF77C6E740449BEE713B7E40F77F7F6EBB4BF933204D9E5E28D522591D17C
997D66D0491D2D29CFA7F4C88869E2D53DBAB54563CC5357F755C48E49F4F103
4A8645A68D436C42FAE21F2C158167C6BA509BED34E0B0DA099434D7FE957C3D
52C2AE0E9177DB0B86627B9DE43A7CAC25E8A1D8B592CDD4375AD01D63E8F687
46B8029C831A0871A8F9F2E264EC10133C444A86EF7C38608D246A1B4379C45A
7C34D82EBEACACC718F5905E864DD54CA062EA1FF406D9E2E42031876A1CFCE5
8D611A8435A8459CAAD2B618D4BF9115DAC5B425EC8BA4590DD3555C2E4BB601
97FBB232487FD786E57CA1229401BF634D445C93FDC157796BFA5502F105FB79
F31A554D8BF98B8303CFD661ABF9A72CA0629AA65989A7AA9AC8B6930AE574DD
D32FF4BD7C970D933C47EA4515043C418049903E3F36885AD45509FC3CF6F31E
975595338AAC667E1ACC0A3D0AF0B6A0995FA0FA6A1C7BF34A0E25EFB2AD7503
D23492E7E980B2C4324736378E0843451E4D9840AF87F800D3B6E0248AC51AEB
F052E92CDC3ADAD81E2D2AABE09DD98F5AE00F69DACA0535AC90368B31AB3110
CB4EB8D00DF6246BA012FA3416E1EAF822DCAA6C0C4142A552F0D97037FD695F
92137A8CEB212797BBE778DCDB2D0F6726BCF115DA15374CB688BB2F98BDC3B7
21DB34D4C6186E5CB2E597FE2055304950D905D6AFB4390B62A3173B522240F0
D3AB72588D98BAC8AEF2D4837251BBBF065C283B7C7B3BD08D7708CF72309950
D176CFAA1D155312586A9ADC136D9155C3C6ACBDEF8BA575387DD0D73162CDDD
96166F795921D90204DB9F3E3FBE084A2DECAA1964AD31D9D2F4743E73B73557
69B7ED30FCFA10238AB9E263F42C980A603B024C1844C08D06E40C58072E7D12
43257B02B8CAFF2AC2FB7868A7FC61E6AD2CF8C5CA6111D592F4184FABB849A3
676A8D175D44E71B9CEB49676700958F17D09D8B8D37746E5AB46052350D2D3D
6947F4B53D2B14FD50B4CEF4398D2D2BE7E7A3103A10B82E0E27702BF83306A0
C3A89D9AD2A517E03614C8349282F97AF2292BEEF24F886427E846C0BD15A807
62263CD8C96EAA02F137C2134A47241E3F15A881F6A2FE15BD745CE175B92169
7F9D9FF0803559FEA211098B4B45E88443AFB83F96DECD5E0B32C5EA329CB342
00253C789CF8F0CC740618BA5DCDAD4693F4E17363864CC8AB69FF9238E0B18A
F4114B94CDF5DADB44EAF5DB260D8B8BC3027ADFF7DBE2AD88CA3261C59CFC1E
C0418A91E44F1718D13CF485B3CAE0E01B327EE29107319D27F242A8681C2397
F448C46BA164AC7BE0C0A73FB423A2AD05E28D490FE15EBC6A6956477E8B7DAA
F1AE28A6B253A55B77C969975DADE58C1A863D53B67DFFDE2F48652558A2D707
BE5A2C968491730CC85A6FAC2CF9D670F1FB69EB4966334402F76388AD6AB9DB
661A04037C111998C99A0A09C9002478AA31E4240F13D73182F04410A11A88EB
D5278ACEC4A55F1A082D537B3C1EE890A6FD2ECD5F4D5DE99814AD4A07983923
64FE0BEFFF89A5599AA47087D62EBF48C20DCB99FD2BAE6853877991059EA431
7ACD1B3B44D9E5F789B7877ADFBD0F5BF0D86E0DC7B68A3F2D8B66E59BE53EDA
B3DA137D59CC6EFA0F579F8A1C5E4FFF0AF7FF5CCE31B93E4048CFBFCDADF56B
75CC3A9291183CA5F1FCD9BACF833A9D58F384DC27B11B3380AED6F7A6719B66
AA3E4CF7A10D86C2E63BB1BCEFB27E668CB9A72C46083DD42729C37C41DB7347
D16B9C41AAE346617AC1DA9EDB3A2ED55D49DDDEFA61EA1F01DAD0A1CEAB6B77
A4F4A47CB6269D49966E24FE51C7D95B1FBCC83587A2536500DAFBE0CA7772A5
89F8D9CDE0932B5D3A1819CB2732460837EDC62035D7D232AD000EDC4598F22B
950DDB38150538219C18735C6FE1823BC63C569503A4B5CBCCDFEEFC01872476
101D65E487A587BCA95243A1EB5BA0431C918A879828150795CF2BA78D4E55F1
FDBABB8BF813CB9DB27CB44AA47AA0D4E648240D872FB7614B5068382C766444
22AE18999FFE37981189CADA735CF09EBF4678CFABD1A6D3FBBF8357D4DC0524
BC6A4F583F56C127E3666DF8476D5A8A6CC0A5B1420DDB2B7E75B0A8C76AA6C9
98C9AD482CED7C243C9688323D96A3F96517CFF904BA26767486441050388419
88EAA2FE0155EA8DC3F8EA9DB943789A191542089E218EF40FB4942319C28B52
2ABAF817F506EF45F7262128F935F4893B87C2220034C6F979B5B3DE3BA5858C
38C9C1337A638C0E5C575727665665C88AD38E13EB02AC3AE5CF08B53BAB7FD1
3E263C2549247D8DF74C6863D43B0266C927FC0C7682845F3E4266B7D327312E
FB770916FBAA37015011999870F0AD19B5EB1B9D54BBE7593C45B8F41C203368
AB891AA0006AFDE458F28C88624B7CD1FEC7F9EF2C74697D12EF1AC78B34E566
672E71A0A5B53E6FEB67E477C72E6CDA1458BC8DB8E1DA62D42F448933905E64
F93DE35FB61FDFA5A4C78E426D6F68DFE42F76B1CF5F095DCFF46884A1AD7C81
AD55FEE036634EFB88A2B1ED19E37CF0B527D14F008E134FA0711FE40BC8A925
3E5027D8FE5FE873E98EEF621E059DF969C14E19E1CB4EB43B64E6957AEEF5C1
7D832383CC11E5D6419158E6A838BB3106F54CEB953F0C16D9F1CEF47274C469
0FA0620F50E5BB14A0F359C4C172951461E884747D6E5D29114039F59776D65F
0A6D9E5088AD245098A9CFAE5B44CB364AE68381B4DD8789E1D35D4AE06A0511
07EA4D90D3FFD25223604AF01B5F46C739DDC81B47978F0BDBD79F9A6A53DA20
0FB56DC483BBA3EEA535009B3A8AC750DA63EDE128761D164A9843955BBFEC72
13307B78378886F93C1C822EFA66A75E01A68758FD97C5928BB2B1DCDB63CA10
90BA2CDF850F9E1A5C5856D41D8FB730E048E0EA435515BF52FD453207213F3E
13FC83A36F2D86CBF4AAC4ABBFA39688BB222A81685006706434FFEF6D6EE0E7
0900D14EF927A2F0C3A8BE6E4CBC44070FC79D85C273074A7E31F7C63BC4DA2C
8E1C1CEA7000F63CA5BF75389D057C364EB8747A414F55FB4FDEB79A695E89B5
B2C3987863CB4B29ED6BC20B0687BF97346B111AAD8EDD835B26DEE73E360BA2
4603A6B42398895F1F95D5F0D0225D8EDA64581718ADF5FBD7277E57E9919BD1
0558E3A5022F158043BEB6A6820566EAD71325D69BF3460E9C3C7E0C0F1BB457
048ED47325A221E91DC93BC429BB517890A8F857C2F54BA01FAAC221D701C672
36E08C7A56288E339620A52776770935A6A193FA21A3DC25DEE1FF03955E5671
C075DD53A5A82FE7F773815B2AA555BB03CE19B2B72268C40F772CFA2CD7A598
A024222D413287F7481B9AC0E13B169DD71090499B415AD8AAFD99AB5DE2BBC1
1B40ABFB7CE655281EAE4F27B1E027C2A23E63378F5339306A9F79BF2523B16A
083F710C102E07B67194745D7159FCDBB10B6459273EFD03520F2483A9E6C0E5
665B54CFCA5BBE96B39E69D388D9229C1E361D6C47FF84A49AE0C70F71EA41B0
2E1DDF2DE8630CFC5F2C8AE1E5BCD78411D194A831BD263880153BECC873A9C7
1796A7807E2345AD02481ACECEE7243887DBA28E28217389829F4D31CECC14EB
7C948E6E6E104A080B9441E0BC3624493ED50AB68A0B22A779D7D816629D1E36
FBA83C5BD9BC2C57BCEA7F9A6886C9F13EC903E886DCB7291933374888A65847
44692F87A67A218BFBCC8896E57E4DF116E24E0B2C3DACF2BB4D4F11C5FE4243
E79E7B7164A60BC32326C2D36742C0D71D21C63AA4DEC82918F11F62984C5F85
3516C1419DF929D29EAF4490A01F57EEC3A27B18E547B77AB0DD203BA47E66E3
B8932462C277481778614D372B043761D928D66FCB9D760D3096B5CAB2A1DD50
A23E443D8A30572DD2A12550B2D61B5B8D3DA00ECDF9FEBE424C8D607EF6BABA
6D1482E9C494671BB7A2FFB0FFC63B7D9F12B2F4A61E66537C09C6F27C5348D0
4809C49896E18909ECD6892BFD2B0D73A84B6E682E463E69702266FBCF04AC9A
0CAB64076EB9EA884B2F5A13400556D1D07217CE900C16506F570143710E9AEE
87EB93711F2A49C15DD57EA42ECA4E6E8D58BC4A195405629408224D07020749
9DF2F43E7D52E442E951CEB1C926563979CAD433B91341797AC8D4E9842A2025
15A73ADB4AEAA456ACCF3FA9FD5C0D7DE2197E5C96CA1E77BBDA711E73F6CF45
F31613A24A30023BEA9A207E8E4E119B5356CED765F73F6935478D5133B9E761
4922209C25478E0A63F78F3460EDD4F64B4D2A5B3E660B614F62A53AB284FAE1
FEB947C50CE8BE18F24922B066F392E4321F75C42A86C70CC8E4AE8F6F84FC65
3EAE2D03CBEBEDA67F83FA8F1322A68097441DA3511D8FE63394AA5E6B7F441A
D12126999FA71ECFDD70607C4FFA2A1D6C138C8A750A892DDAEF50284D2CEADF
C997B78F9AF18E63822DA479E4279465A6CBD43EB5B5DB8B72E96306900A09C9
002478AA31E4240F13D73182F04410A119C72285F06F1773BAEB6FC8CD2EAC6F
0799C903D18C64FE378916128CCEBF8943967A33F856A40BA5B302782175203C
082BC703ED67F8956F3C757799D61A801701C34E5F0311D00A7FF64F31505AAE
C9170516D38C247C25CC98E436D6B0129745977065519D41FEA05DE277A2B681
6846BF7BEEBF9D323B549CAD581F17DB11717FE745194FD74DDFA29EF38C14A7
D31F074565A14EB60996DCAA0762F3C701390274F4A233B7C21EABC56271E0D2
6F4D8222E82DFAE6D7CBDB0C2F268BB8BFFF2897D51564ABBBFD16D44724C916
7C7F909DCEC3005810B42BD9CA1B33DDC4B3D69A6DDA20E104C5BAB68F3D943A
9B0E24B8327345DBD550F4D3A85FEB2007E09F408B6FB0408AEBF36BB9459C6F
41B3B4EE5B63571F18E7077F1990611E243FB8A327EFE9CBBBE8F9B76ABA9F6F
7335FDFC57213D5D25DAA9FF60D639DE068E6459B14ADFA9FA485D2B692C522B
F8E5FB4531330E02C9A8EBCD6C3AD71A1E40A4D3F1B93134816B1E636A2327F6
240BFF595E24EF8941707987E8E672F486552480FFE3D56EF1EC01FC6D827091
334762A700EE46CCFF0F8222069A239E9C090C056C50ED33CCDF1DC4CD54AF2B
27F3898D35DBACB95E33FD81D89FFDEA459395AEB1FD2A2313C4619C3924D6CB
4C7156FED518164901F83DF3BAA6A0ED3E1145BF13B94FD26442237EE2121C14
F116A1114838B333EF11ACBCEC26CB9945AA4F8F616FCC76E4B0D7BA8C76364C
F343FDCB3945F586BFB542B229FECFCD917788FCB6F16B6C1C40E3E00F45773D
C20480C8D6BB75756FFD8F5C7A6D66A69276CF920B7BEC2E368A095DC1E3A421
F0C532042E003906F07403A54AAA87A7CC1465CB48ABFD9A879E5B8A847E9323
2C034664E2C43DF499BE3810C38A4BA01A31B5C80138263B8E0DA1FCC4238D71
517DA16343332416C4BFE510F180C63CD039D399B1D9C4208BDE9F2A8208512E
1E9EB36A96421288D8A846DA9F3D3B8DC89359340E6D6E4BB80425136F59F84D
8B2D3548C5EA909142D33AE8B2BDCC9705D1EC8848293ECD9599CAADB700A176
76B96C607DC49759734D8F1EBBF10A7E363AFBA180CC2897C588A09FDB14647F
570BBEE55DC7F2AED3E75B7AAE70ADAA461BAE73B4CBBA029A5BD8AB7E658340
5263C510185BC34AAC67226177133AA7CD431BB67C5261595CA2A18E0FD97413
5F38D540014D38ED97AC4F6058C1B834BD195096C9A61145921EBA98A70B52C5
BCA89089361DA0D7AB8B979BD91DBF43FB52495F20DFBF159A58F3D4BCCF3638
857C25C73B78F5C35FF0DD1AE8036C3620836DA8BB5CE31BAA722DDB36BA5642
CE4110C57A3A4D95D4D5188EBD111ADAF13004B95BB6A1F91C919C28F67F64AA
534A2AF512C1F2BC5BEE9F21801512D2455DD4B94E0C5EF66E5F4252E5511A19
172AE7E16B6E84C13265E7A78843F80CD719C44633862B102690CA956190CC61
CEF424A54E62107D2ADA1C19405B9CB4C39694E52AAA56E56F82678A4327EB6C
A34EB5A6A8B1C41ECCB9418C1094CBAB96EE405DCF58E3A569DF07092225A683
511770EAC39ED55DADB32778CAE943CE6E928D5C8A44F0B691350DC0E4B38E4B
5B5868A34E643E6075C7A82C17F569049E4A119632C47683095845CE5281573D
CCA18F596C2A638DFA3A2A0E4088072A3C9E36431D9A9656D60135F7B7941CCD
EA0BC0168ADAE8A1716BCAB61A1FBE56DE145488C0306C6EE589C2E71F0433B9
B8200015BEE977FEA781C3B8034170F9FCF6324AECC2554A56897CBF7F8B7139
ADF77EC4DA414C2CC5424CBACBFF09AB4F4962A697CA30668A1809DD72B71A4B
BF6C618A4EE64F0673FBCDF58BAD19C9CFA9D528D104702E4AD8F19711F44C14
87A8A062B0E7D307423CF2852AD05690FE1912DDF6CFDCB995609788A176928B
EB2B6E6007ACE26260537E178406C35173ADA131F8880C15E753D7BF2E4BC089
2953EAD550817FB700822EB157C4BE8DE18B2AC08FBC05291063120165B4379B
1A4DC9D967DBF6AE8C59B9584224CD65C6361095861A84EA1B7A991DD837F2E3
96EA1B598CDC2B459A81B19A090AA25E8D0036616784228ACBA46F5DDF43D3CA
439B4506CCFE90F24ED9CA8B3498FEDD429B1B1B8550F2219E7EF9CC64983581
38BF2645040109A3D2D98CB563D4CEB5C030A7D2F6DBF55063AB7EEC2FC100F1
26DBD977068AC186C94D6BDC3E849EABF685A634431D9FCCDFCB4A1195C76A6A
D5138A35588B794EF9FE03CDD26508432F9ACEEC0C86CE8744277F5C32166AB5
39082917BFF7EF652D589681C60B99DD4F132248742876953526D119551A8B29
CCFE9D9B35C9A04CDB15B160C3E2B285BBCFE14C06C490185488510704D87E32
41AB1B0AE52F898A234931F910D5DFE85FE2218C80C58E34DF3EA0718B7C8E2D
6511B059092391D17C997D66D0491D2D29CFA7F4C88869E2D53DB8DE6F4258E1
A49C6B865B75EAA21C02F7007978FF715C0E3EF03E39BD49697D30B8BCE8B934
1D2DAA72F7FDE1FCA3BF72DB85657F4A3558D4585AD1918E86DAACB86231F261
EBA0BB60C59D40F48DF92AF2EB6EC67815D27BA9BB672751D8A658C45E07B955
8E776E94EC0991B31A4BE92420B6D9F5E6FA1855513B7131C7A04B00038E48F3
936442CB14BD2C5658C938BC685FADEC8C6514A728C83D7E00DFD4EDBF4044F0
E247D957956045B16131155F4296C5D97BC3D1F1C93A6E82767543FEF3277C1D
AC4869CFA865B49FAFAEE9506D2F10DEE673E177D6279ABFFF8E757851AA4497
5855AB9D1E3310DC01B08B5CAB5346609FCB048910F3D70211659CDBCE05F073
3AF96804623A11636472F5845AF507C8EBA6518215D75034119AF4A4A9D8A9F9
24028ED77937B477662CCCE77BADAA08B20B9392171DBF9964BBEC03013F324B
D4B1E3053E4E12EF73AD5B6DC764101CD4CBC3FC2A4F1010CC1DE442DDC48044
4449DB76A321ED1517E750F551AAC934621B52AC90EE56F9DEE0666C2484BBCE
C64AC7004C28C6681794C0E2CA89BB581FF57DDBFF7865063A2AFC57C76819BE
9B78D0F4DD3B3B23D69A58E2C82C1981EB8E18B5EE80058433952B6985256120
82298F0E6E36968C8C0932BA0E02AA42C71D9E27302A88E52BB8B1924F057B9A
498D69CCFBFE7E3062895E706E20DE8096399754FB32677CFC456E5CBE116BC3
DFC67B18E95621D03FAEE1831A15D5205891AF008F869D7AF5E4EF1989FD377E
9724F1BD2A06FC203245246BE57408FCC7B3586AEF5F4BDD49CBC31AA72B65C3
BBEF8EDD9B4EEC32CD7D3C7C2FEC51FE0DA9A33F1C12A392750F3D1D4FE99AF4
D9A1772129A3C3490B8B4529805E0E306E95001663F0EE156891E1537A7E03BD
98EE97FA23D768F48EA462E9C8ADE136814E40E9494038C8C4146D9E400A2CF7
0467645A2898C551E43963ACD7E7868CAA4488EE815D40E28CA54BDEF9122801
8A6DF526D5C66A9F11AEC07A100C7CCF00A1BBB7177AD139137E1E992023356C
5C546DEE5401E08A00FD38A70551FF9C8A68CEEEC3E24A8A8D78F1B9CA757727
B2A7D3A46798F5F975A2784717BCE6E4D0B66E0000BA7FDB864CFE04BD7CE607
0FC5EF576B1DE985AAAC8126AEABC40B64A430C0AA868759E4C0A2689D828D2B
468A3858BB337F0E6842EC5D9C0D5D2596ACBE7E4BB9B5198903BEE40A9F1FEE
2CE3375D67D77D11B92C07A9CE1FFEC4FD57B0891FBA2E75BD5D5D17618A9ADD
DA75ABA8C339C5AAB51AB884232E9D200A40A68E4799E5E842BFA51FFFCEAE9E
1A97661A47326B6308D41B37E844E66954DA9032B1333396FD545000E364E7E6
A79BD95977419E006D51A92C2CF0046A5F542DBC264C611E8BD569D4E7894668
52BDABAADD6B9E6E1B71655C46DE2F505615AB470D93AC31E7FC99288D9FB5EB
919A1D92B466676E57429E6BD74FFC6257A2E0CE1910FF41A7B70BE8A29332C5
DA24457DF7F2AFBA61F8B754C7582A8C089F5553B7617187C50EE0D0D7941F08
41112068656190221491CAE0922A3C733FB9D45F81757CFC8ED6BAB5630EDD86
4ECFE0D6959D5114EAAF1612C970CAA2C9472CA9736B50613961F9E542A99E1E
9EAB27BEF2BCF74FB40E6263AD649C32D00F99B504DD1602FBCC202CC8046C60
9E8D29EB8FCDA4F0323901508EC6D0D3A034E320755C9FBA42428460AC283786
C0E4C0F45DA2C8C78EE355C3B5C349CFAD8F885A3D4CA30C74613E0205AF23AA
2719BC14013E7859D68CDF0BDCFE954601924C473B761EA72FE8B82C2A961083
82D4DE8073A483A2C65E3AACDF4106A11D6366AF685F88D99F32705FFB5C3190
91904AA6F8C52B2F1E9E66AD9E7C3C3C96F6FD1D2A69856DE6ACF6E51395ED67
AD441581D7A43EC3324CFF3DAB7E17D9D291D0CF9CB9086D116D56152BCE3296
95FE8A830CCF318CF0DDD078FF2E319A37EB5CEFDBF36492D265A24D538031F5
D1B00F3C41E627B1DB9876EE658C50AB2BD9D2B92C897D83ABBA76105BFF7E79
29B8B36A0F3C3F8378B427A87086EA10A597E1623529F8734C0E096F1BCE149F
8B0F4C80FD9ED2073D21FF50B841774BC20AA8870AA9DB4ED19128C657C8098E
D5BB7691BBF8C1F6ED0358B085054144022BE6620E3BE3BCFF07C029D465A074
684244F63F8367906C7C4648EF33244ECEF4405FCD839685C2BD7D5FC1353416
8DDBA44083519C586F6BCA610DA67BCBB18285BD9C0C838711A76C5B5D57F356
EA414904DCBB1C1FF12E5BFED5253156E3A76B45CE938395E129746ACA103A34
C38A7E6808E1BA082060EE975BBEE0EE2360D53A6C2EB0393A21C2984E95892F
8AB221D586720A71FAFBE2C80951B24AAACDF129B2BB843A35372A2FAE18AFAC
C74586D3DD54067F7779D9DA069D7897314C617685D05AE401C710E8EC03A64D
8C462D8E458ED29A12F56A9D3FC1A5A59BB391F99ED1BC64F8850BD7F2551F3C
144EC0BFA8529787A6F7E7F29C2C9D31F4094F9E218E053ED37FBC0EB204AAD2
53FF338FEC59B284251A985F7377BEAA49275B5E62BC871BCFAE9AB64224D592
847AE57C85675CF04BFD1410B56E616F68C39FF5608FEAEC6E72A40B22AB733D
F071D6B92B62F165192F48C0198F2957A103CB2F0D1F55AA122628853277D256
C2107390CC3E2D2BBEB1220329E86A68680D1F9DA963B401CDD3C429BD4CC3F9
6584C065FAFEA3EEC98A137AEAE50529E1F15174DF4AE9067EC4E67725672D65
4D5081FCF2663644C985191135F0156722F0BF1DFACDE24649CA49CBA47F93F0
201678944115499724D8B9052FB4F6E0375B8F8640A75773638943DE96B8C4EA
EC254CBA1E05D8C31B9C3178133782ACD3465C5CA2D45C688F3CDDED343F64C6
CAC65D8218E75ECDA7292A0F2FBB4F6B9DA8379C3AADF23AB9DC687ACA989BF8
6F24F23F6F74F71AD0561F50EAD7CB37952D1A0E9F744FBE8041D1C3EDBAED08
9845046259EA79899713DD1E567F28531E7B25EEE41EAC3D35A3AAF9348E13F1
671DB099C4BA1079D778A6FA8FA13E04D067B55F84954495EA3D40E2620204AD
69A42D29B4D95429C7651244276269FA385532E9B57F1C2D2652933D4F316B85
7DD80D0BF6EC0333F920B9031F7626389BD3E392CFB2EEDE173452C0642741F3
C72D84A0DB18152D56A72ECE236FD3A3914574309A3384CE66C909B7040538B5
E7DE80B6DE055DC28C1B394FBCEA0BDDFC44213AD960278AA498A967D890C295
77ED868877C03C1100D8EBF3CECA4AADE5DCBB3F0CFEA4E8A5DAE149F6483523
881EDF02DAEDAE3EE928160342AE6170A01E13666A84DFEBC5A5DC04BFB1D49B
F5BEB4A8F19D264A7F4B1C259E4B1010AC355CD9D1DD0C6F18999CC47EB3AAC7
B89EEEB9E2F9CFC6BCDFD9A438C10C8C604E64AB2F9488EA7B1344329A6DE47F
D59BF4A2987AD80BF0054F72ED0CA0451E5D8A813AD6697E53A43ACACCADDACB
20AB6BFCBDD95D322B8478B7485BE9C86F055D7217D0F46FDC29D08D6CD71B9E
1DE1C50C1C3C85C14940A830DDD392F93F6CE1294B62411E6DF77D4A4A4D889F
D9D7A6AC1A896380F2762679E60FA6E763176E1B2512B04580233972D9211954
9CBE53B0896667EC7ED9C97F909B8B374E4975E93D9FD32DFA0AE84699D182CF
6C029A8E6564460CBE4D5EE06C24C4F502E4EB602446673621049928B01E78C6
FC5FC52B1CB9BBE02BB81F2886C558B9F2EB0504A2F8002B1B13E2A496759FF4
2496772170C511EE704B4308A3727F64393E392FB6E0369BEFA855C8CF4E76AE
27517A9B3ACEEE42F3101F44998749B33FFFB35AD715BB0DCDBB2D35B51730CB
8CC9D14A39917EA3055C85D171C0378299712D1177AA7469F470279E73A0EB1F
BE7B70C8CE0AE57426572795B0826AC0D3E445C98DBCFBB63EAE33B6E75C7E71
157123DE44DE684057683F923A2126FE2A788552F7A3483384B6E646EC0415CF
6D4002CD9FA8779392B0A780E97EEBD2450DDD1ABDBA993B98A90E50CBF66121
08A4F43DBE0FE09467C33DA6A1C61F02BC5847C65C187E5B23DEC4C625C286EB
9AC7E30F0BEE1991402F2BC62D606C038AF2B098A79351897E7B6222B6D73635
3AC4E3D4C203CC50342491D2F70A528226650D38258FE2EADA6E4E1D582F4723
F2143CD07E0E6958254B6D96C9E5485E26B07047B80849C0A77BEDA560ECAE3F
CD7FF41BA0AFCC480F261D7CE694477F749F82E5B4AFFE12BA90C032157C7688
7E325784917AE505A158C5B3D37C1041ECCA0BA811777B5019CCAC36997DFE14
2D7DD000A0E766DFE0F272E311047B6227781696AD545FBE5A80E2A32D7F8462
912966E9E97A67D036FCC3FC5375A979B78F473EE7AF6AFC189BF5E14FD0D21D
656B3EF50D47E923F43BEA1BE16CC04EB2A966CBF4FE707BC7472D56ED0C13A9
66448345074B1F2C00C537A79FFCBB1A784959B43E58965C260A89E7E3BB7ADE
BA9C882AAEE60A026DA25D51A46651A1EE03A2CA61DE42D78AEF016749873529
5CFFA292D5B7A1FADD93BD3CC207D8623EB59F6B3FDF302403A9C2D794743851
18652EB37CB7021F80792262A4D2F354389D1ADE3C1E4BA1EB8855BBFECA191D
4B80212DECEE21CB16BE0DD2A5B6AE12B959415091545A96B78F6F4DDB5CDAB0
611B3248836DD9E54650EE2D2F3EB92489594667525BAF1656DE0175464EE264
860B6E310854C80BEC744D529624024E35566FF0EF71D60ABD9581F43AFD7EE4
A7099844282972DDAB121A040D3D7CC97870F88C3874BD5C497F391141F2094F
8EAB4CC90B12E10F8AE6DC2081CC4C4860CBC1DC3427060C9118E755156C02A9
9A7EF38084D649289E4600F5A67256788F406EFD36886F531DB9D7ECA48701B5
D4511FF86644AE56F46392D5804039C0FF5C49D1AD996A67AB0914D83D859C06
AA049CA26AAE7F316592E7DE134F775A835D46A69D1C4BBD6B53124D7433EEB4
4C724ED69C8697D06A5246DF0C49444B5390076A43C82C91B982B19D7AA8B615
16F4BE3585A899E98988CAFF8DCCEBF494D5676912D5E868E3877779F910B174
AF933326ABB47935AC900487A2273F6AA2BF735C312FEA9A1AC7289E4B43B953
D2EC568761231C3119E073DB7DEED7DC4A04968B69F792644FA8B627CF923CFD
F8CAF8B9C8FB9AC27C8F2C2F86FEEE11AA06BBC0027C40E0F9DE9385F79D5989
98FCADE704A1035C780BD03AF71BAE6A930CD02B6C4D07D6D0998EA18EC7CBE2
73105CE6378A2ED913F14D20C272D14060533ADF2FAB44A60E6395AF687EC88E
429815282D632366039F37D3D55E93A63A397B46FBB2B6757DD564C0BF55E0AC
8EC66E031CE51B2D7D27AB41A21D646C236DDEEF1A23DA64A61F0DBF36B86A59
893F277DDD906E28FFFDFAD7E4B7610E6A108DE7F71F178FC7448D4C2E985072
E0811881511DDFA4A3C730DD7CF5C1E29104673D7270F35D580E8F3BA9BC94F1
31ED0110C946D421B42532E5BD4FE3D8B242EDF647251781ED6CE249DEDCA4A1
FC94E0ACCAB225D733E123302C0C9B054E97386886E8AB5D03167D702466832B
32DC035DFAF601E2EB6615E116FA9A44B8D0586FACDA34A0D0DC74662C3F4FA1
736A4D67CE0650766E29A79AD6ACAE003485A4C21B389F45F8022593DF513D31
54E07738A2E39D6AC9429F1A359112CA28BD92DC4EDA5C72C6F813D53F1E9C37
34B81C2CB5207702A9A0194F0DA8D335635EE2174E2DB99DAE9AF89BEE304763
BBA1AA81F9D74B24FA7EACEFBCAC72DA4AF7C3A7C06483A7FE49E9118C94F79A
DB280E5CC383595D57C51F4C969C464C1CB1712283C42A77AE7874BD4EE0AB63
64E2FA747EE9A89161F93F178D7A24AB2C747B80BDF0816DA99795CA28792796
8E85C3FE71046BF6F87A97CD03FB8CB1FA267164742287C9F05BAB96F90F2374
8B2DA4315C703763D6B35A4836A2AA71B39B7AF614B09A3D9FE54E8B1AADF323
785074E2F023CF26547355053A5B40A0BE90965C2C34C42797BA6CD6DB3BEC3E
2ECFC061F2F9BAAF636F17EB88960EA70F1F0F037DDF2061921A72E46589CC08
EA87EECFDF36B819B07306C00D700345CA2E6113E992D2BE44DD9B12DA394FF3
5F44EFD4D133019C4ADC916AA6F4F5FE8A642DA2E54F42220C01688C94717B2F
1204BBE9A32B02C569FE47B75784AF1D9300E4D8EC13C0B542DB50991CB26D44
DFA0957D4DD0665F0BB9EFD60F9D0ACCDE739B576500ADBDD6E0D981C2149AB5
368FF41481D6B8DE8662E73CAE558AC3FDD6C48D353FC68A77014365407D48C1
350E58ECA8C0532F762F64A11900664ED4E6D4DAFDF0C64F9446C356216312C5
F614AAEE0D8590A3A26854ED51C4A9A1C13E40363B10533A8BE1080729D86FEA
A2193FA6D6C34422C34643DA9557ADE417810A48AA2D73D0E0E9674BD4C83958
81C15ACFCEBD5772A959E2C99D13BA11BFAFF1112E2CCB84677CE03DA00972FD
3106F8FB5AEA60ACB194FB8FD49395A70058C942F80C2313118CDFEFF258E569
E39372E34E3FF5AD87298C696722D1D562D4A8478555769EC2C44150D849A0C7
D966B2EE653CDBDBE9C8F352887F8DB03D70F9E692F0A5A3160110CD4097E3E1
FFD0B18758DF9ADE231B76140270F0A05D53FD964DF5CB87A377ADBF202718B9
E47B1DB784435B7EDEA4BD19388DDF3C5B474F5374D80D469AED90BA08D8A04E
A2CF32810C68ABDAE536D95D46BCDAAFAA5A8301F7DDCD3BFE10B6C23F1C7ACA
39A6117CE4DB91E197AE348634BF44B2108CE10CCBFA1B838169A4577A9B225A
BF538D4B10A9C5FDC801B144AF82BBCCC3E63B027A4C3070D38586C67E8A16C5
60DBC0D4941CB6DF6A0D1E7492A6DE009C0F464678859A03070758C38629FC34
410FAEDB24E5DA8ABA2868658526B74727FCB164F21405F988059A1BCCE6038D
184DC74E2E186A664391B7B84E2281ABBAB44B8B81D92F63481CCEFBF4264ED8
900D17D9632421541DC60BB39BB060ED6495AE98F6798010F76FBF67CA47E5CE
09E60F0839874318C8389E298F554671CE327B099B0AB9BDB8192271B478CE0B
38151243D996CA5AEF4354211E3953CD7AD90239C1FFCA061A21652100B8E2F3
DCA6DAAB758BD7FA7D29C266129C91A2A5804ABE9DBD230FB37711C0E606B1CD
01AF00122F9A948F54FDFAC13A9C437607321D3E4C10059C1091823B03DC61BD
809BB14C7D4FD2C4E6057BE5F5C51A242002726250A2AB4E8AC7F70BCD0AEE3C
4CCE6E1793589423B942DFF7E8267BE5FCB0B209B090009718A49C6D7256EBE0
D843690DF3AF3420D94859E53AEFC9D1DD75BF4A02A4E2C44D18720A9F9D707C
9D341698A75314282E4770738AE96FBE5811DD097EB0065B1E01ABF5E2D8428D
248B16047FD72F0059E35DFEF5A8F444C41D300E540D53723F45F0E20277695C
CC2E54A25041A959AC738AB6CDEA6486B7EB9914CE42558ABC90B623AFF1FA2C
B3EE64202FB703CBE8249A14C37B54C54CD69DAD2A5C2183103109D6F82129B1
301EE091D9F7A4D345114235F4BA289528C04940A830DDD392F93F6CE1294B62
411E6DF77D4A4B7EEDDB6330756507D8BDB3F97266E6A31040AE138A8469E758
4D0670E527BC95332D13B3980549FA02073BC0A45FD5AD5AA0468323052D1205
BBE6E794D7FC7861CC42DCDDDD4A4A3EA5B0A1FA84E55ECA7617A4112459597B
716E81960CC0321BF3AC8193758B4610EF33F894F09C9ADB7C4531253BFAD318
0DBDF8DEA31BD5BB3282B15C22014FBA359AB5BFF346F5DDB0BD589A54893931
D3F46EC04582CAC86BBA5E5E515335B3ACA75A5A7E5F16E27E8CBF4128859E2E
97D48C02844AB8D43C84FB19D8B311E2E8146C7D3D076F43B3F9EA8A848D7E8D
0E219B61F71B5D50F4DFB79975EAD0E794E842C213CB237B187A7B54F41B5443
3526B5BCF13D2DF1472686B200B23FCE6AC13FAE056EA1B304C5FA713A88B4EB
663FD7959C6D491010F976D4C7EA2FA6C18E22DD503E8981DB670CF5CBD09E17
6E265CF148A20091BA8B06B993088E210C91279AAD5922A3546551F93A076B39
3E4219E0EF172C72ADE99EA91ED60447A31981F8F13BDB8CCAC4361557D938FC
4AEAEA9E88AA0FF61ED04C6C105F0258CE2084F898D7571091B18B212D48B43D
6007AF07A0FDB7C9FBC784A1C9E0506142709DA99718F36F909299F3C570E743
FBB19F4F841939609B3A3D2D388DA4DB9FFD25C55A4F377E53B352830FA336B8
CDA7B5752C68FC0637C661E3ECCBB47543C20271E2233F7FBDA8094346C06AF0
1FF1D4784AD33491DBFB17AA6A4C7C8B2518C12DD5F849263DA8B6B2C38E4741
21239515E3E3BC6B36475154CACD25A07C74FEAA2928802611B05C9CA0ECCDCD
40CE7AC49715D8BD0A6803D8B14E755118F43CE13E54945B0A6BCB5633B1D580
346D913BACDF1DA8EE9EDC8540FA56F817D5C135D554004829A6E4566D3C3D4F
50453B4C997ED2C8725BFB415A30E47844548A823BCD7D0D5F3A1B0B5789DB78
6BD92416107B1E59084B5F758E509DE66F112F49E63A16F60B6795CF0D93839A
E2FB6D0B74207F0434C9599D055D786DC25523AF3CDCD9D834D54D210461A17D
F138F3D9F5C7AF9CED4243271A1FE1B018462BEBE17138AA07373412B44023BA
4E204AF4BF3AD6DC4CF005D393672AF65F0D015C86E975DA6622238B837FDE02
71B310BDB076E1E5D2187136E1E88EEDCACC0DC5B4F3268A8831F3391A7B2A17
E1A8397AD1D30455CE9BCFB29BFE08071774366804FA232E4AE9688E40E61987
035623AB8DDEC101D55543FB93BA5928AAADEC03C130570142D6849BC5B3D044
5B30D984FBAF9F56E6FACF7C07F249FC058275A863D921A182DC7C205A93ADC9
40D3EDD5D675EE14CA60D33D1C57855BBEF5F5B024656B80578308ADA3B73C7D
92DFFA19F1A79AC9BDD3F2F88D9725FCEA44A75FEA44CE4C991729C5792E1052
A4216B17742ED304B2996DC77BEA528DD00039AA51261D5401AB2ABD3C25D5C9
A2FA8C392A82F8DC836C8E33A5B5A2FE1B6C18912CECB8E244A91E1AD8064357
046BF2F498400D6D7DC137A904C96EB7B3CA2E65F64E840DCF69234B15780303
EFD10F9B6887E40A5D78E6B1EF8305A4FCE9C00A5845D1C7E8F51710B4F1A4DB
D8E6BC200679470F5503B71479FD9AC22E7818EF7BA80719844ED6735C3EB876
E244D5CDFE745A089F2679B720C105764DA0F3744E683F88050A9CC76AD73A11
DD873632665A06A2D13141E35806D8F53E8F34D70DF5C324DEB566724FCB712F
E0BF7EC9416F02C2C3116926FBA26021B38D6E21AB7875CCA19E45CF37211113
56D1F3E208CC54E7684A70232F0EF82F448559F8CB85DD9909A74AD694DD99A2
3A6BF1BBDD51D96BA4A5207AF1044E917186B01F946EE08ECE7455EDEA610D0F
B69A58D32F41B39AF49EB624CAA6C346A08DBE65B1C054C0587AFB35100BC76C
C64E05B36DD4226A16A7822E6D523A4B3970F587F38A0E89A05611B3A13BD144
BDFA564DABA6CEAF8A444AA157E95381808E974D7CD402B571D2CD823D1E7014
31809B56C504BDB1B7D50B99310A0DAF0C020C04EF94D0D2D096B734CE3721C3
71C213B6AFA0E73C0622E2AA49C4DE54A05AFB1AA6C7CCFBD9F72150DE24DFA0
F0D5FF99461F3A9DA8509E7EE6AB98B4BB88F67796EF2B133E9F6AAE0CDA18F2
428EACE52EE14B5FE74DE6D3E114246049948C187FABF401324F9989DB792F77
814729157208E3B37B9CE3F1D0C616D951BA702DBBFC2C1B953BFC6CCA78DB0C
094BC82EC4F0BC92833AEBC6E11B70E1C0F3A18E54817F7BDD3895DF79E9BE61
9F55E9CEE03B1AAC8C7642DA07EF2F28988112405F80F2BC8A63F2CF41C075C4
DF19A0F0AD8A46F5BCC2BA12C4D68D803B840ACF32FFBFD9E8DC6ED9FA9FF379
C70C8E439578725B3F51746691838E600146F6C88E1BE994C9B91F45C562A5BE
309D5D926AE5C673625845E1981A3316F98A77F4D100499847E1102CC075FA12
10881D95D6EB2E7C492BC58C366F903F717C1A9A37719070DB1E340FB5AE3AB8
F380A19F5FDCDCFB687120DD2BE5305363019BEC0F407C2D4DA38EA432F0E7A6
D8221F23B7C33CFA77D83480566E36545DAB1BB0423C34755F88AD24878354F7
52B9EA1278E210D305677B9A4739C67ACF82AAC653B48D8D7589DAF8148D380D
77F8E7DE4DAE00D18C95C7E50A7AD744042B565746C211F30813630C7EE7DC31
054612907A0811E8EC4075D24EB0682E7602CC252BA8AC0287850F9073E30FAC
A80736C0BF828DC7E5A8F8F4569CBA4C2C3F91912C485C5DAC43C435E2F5527D
647EFABA9D63753FAB6F4BF4D7B35D01E3A198153B354914BA8E4C0BAC128B7D
4D61C2AA87093F0D9188350856B6E34E1109B826A3F23AEBD548E10C71A93759
6710EBCD5651DFA0566AF29195C653FA085F712258B8A1B9AABB8A860492155A
DDA8E704EC5CFDF86D3B00CA7934C295363D8ADB04340CB71315D89A0A06D4C8
C61AEF51A2BD2410FF027C40E0F9DE9385F79D598998FCADE704A100379B7D9E
02960F7C0D013CCE063154E006EC3DBFD9106F331F128C794D9D6EF7E18E8301
0405CAA3AF558B2772A5EB6C07862D3090AC8A81D8019BF968EE312103282494
D6472D885F3CFAD49B63B96DA5105CEC17F4DE04D7DB69822968706EB94D1720
FB2879E596D3A7EF942D50173D24763E96F2C385B9F9C34E0382F02EB8C8BF9D
3BACA0FAB8F42D90434A48E3F4993DDF5FDF93C9E21FAF162C920C27726380FB
D329D29ADDF290883487CA328A0102AF3247216D8F96EBD8D1EC18D48FEB29E9
68BEDA93F92B4398FA2E1D6CE1F398ACBABDB5DEEFFFF4DA29E095CCD0114C8B
49875196489903BAEB958166DA9C2088BF9C76C921024B55FC6D5DB5BCCCF772
26C214AE81832A9157AF1175AB47229D0F348EA969DF366D3E164E497528F422
DFFD3B72A168E84519D138C233FED4D468568036B06C33F7273ADF8875EA0E53
899CAA8CCD652C4D5F26A7E0A25B9C7C4F5C4199F13DACC7D8F943E964B009D7
64D79C3C26CF9EFBA94B4FBF6CFE9C75C0F505BE6261EB9A2CB750BE2E146ECB
DD16A1584F3EA2AB3D9A3783D8743C3597C357ABD25D6B8DCB78E81FB5B8D5C7
0217AA3648ADD641A983CA3BCD930955DFBE0DA8B9619E7108A8EAA94000C80C
AB2AD7ACA1D2D0827EFFDD05D4EDE9C2B589686F3F263BC002C8884F38F3BB6E
09768DA7EB3BC1496E363543F04DE5B6F6A9812C7757E990268FFAEFB175466B
422BCC69E8B69400CDE8AE2CF394292067CCAF4F4E32669BE217C096E518A781
20259FE222179A0B410CEF30DD249F2A5D23E5E47C9ECD23288E6C069F496C57
3ED18C446A9892616611F8E6172063E0FCB7C1518524619525DAD95ED33B70A2
CB2356886E9B27AFB10DB195E5EDDB1006AE12755599CF67E27E753AD25C1FC7
5E2D35E33B794FD8F19F03162747FB4086DE7B1C1C800BFD4F229399392038EF
1BF9E659792F783316889221A826EC20ACFEE1E14ED854D3DED0148890086099
5F1623CF43A1C00109AF4F59B91B71B9682CE60E17947EB7915938EEC8A66836
140F02D324C7B4B70BED56A8FF4C1A2EAAAFDAE8BBB5E8E952B17C07E69BBE73
C205BC659E191366CDCFD2BD52526414BE2E70272CE823A43FB0D77B53B2866E
7F21C96896DA4DEE11C94AB03CA1A32018C4B034272D9B8876DAF47EF08D2DB5
D2936909F3E8BA0936E751B73E754A73DF6685DE51FD6A9989881AC4465318DB
FF9E0E5E13435B4A830B5E77C42EE8E41CD5CA9BD0C6E714DAA34F8DC7594332
E895054E5FD3DF1EA44126CCC0345812AFE08FC784E7C4C4287D887EBAC1683A
8CE358ED73989053E0F420D2D4A09E9CFB29726F821A7787E5F817FB905AB350
D466B4D20EE18B679FC1AA857C307C4D2AB54597F47496C8889CF6CF6C6E377D
41AA9E983FF07D8B6356917744AFA6F67477386B69D3DE885AE1F8B52B0FC756
5D358E8D01FC5A9066DBE8E1FE86726B646E864416CF2B7E1E9366A136B9837C
80FB068B3D2290FDC35C286E35763A02A8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans8-Regular
%!PS-AdobeFont-1.0: LMSans8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans8-Regular known{/LMSans8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans8-Regular)readonly def
/FamilyName(LMSans8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMSans8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-446 -314 1510 1154}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123833081E024C973A102E5EBE9986
D95806FBDB9DD41BBEC9E98875643E43D499FFB2E48F58EF7FA59843B8CC092D
AFB67604D9EE4CF2B87CD20222F6DC988B80418F8EBCBA06EB7577DC5FD0473A
55FC62B9B4DBABB8776941636268C7D4F704AFF1C85927E2D0C03585B60D5DDC
D07A1FE61288043CFE477BEC3F1A0BB96666D44F8286474186BD74037C208527
135C090597DEC81C9F985DD84C889A3A32B3805B9A653C816C523D14F6215B89
5E57100A2E43AD20344D45AC8419E928E4DC97E1B1B2285602B23DF89E149B9C
975AAB575A17772D4BD861C8DA1CF693AC37BA57CC51B9CB825607CFDF41347B
D09648E797437823A12DA3ABDAED3E3E1042F4B4BCEC0A9CB2517C0047ECDBDA
507600F57BF0F93B33764E47B5572573253F1439C293C4CBD1F018FCF994A313
30701B46B9E83B3C16E17036EAF2F0072D5CCC8AB293EC15697C72C097565D80
BFDA02AD9357437E60FB57F31BD6E172895D0E1212674C1401A3CE2599E7CED3
EF0A11750E622958C887E58600672A1AF43AEEA1D9BDAF69147E613C610E127C
9C8190A5B3F5F9A3CBC6A9A61D1970F030ED0D623FD6AAE34DD12E7F12B00204
42C239808277550593ADE8004B53B5FC0BB124F58965745A82152F9860FA6FFF
94BFDF287A8FC265B6B0411ACFEFA520E402DA17AA6B6D0904D8DCB1A56E96FC
6A1C7300A4455F6FF98AA6226337D5FC699B1A0900F049453DCF3FCDC8A3E397
C011C9D2E55D0C2845297B4C50597F58C82B0348AC299172DD191715C1FC81E2
BA9F00D26B3D3098006622D2740A0EB0743B1ECEADE8F9697C7F782265A58C4B
7D8B174654EC7F3BB8ACCAD729170D100F5DAC4CB7CC0EEF74D662EEF94702E7
9237CDB6E3DAF2C65E5A10DDD52EB236C227C3DEAB315E5CE479878DD60BCA19
564DA461E2EC66ABD6E7B4952C21C2D3E37C7B97175C5668DB4C64CD1CC23F71
36DE0E644436C67784A3CCE2F3DB601601B011F527AAC3DFA31A51A29C8C564D
794FDAA23AD6B4540055EC4403642C9A62E6138192E19652A050AC81B2D1D4CE
B9E40F7A0C351F8C72E4CBC21733BDE3623932A66FAC82D253D8251331B62150
06FB1CC2CF016E6BCC1D7732019B86C11D799B79F33BB09CB6771F637BEE71E6
FA1A18E90331A61A3162ED7589B05BF937ADBEC739FD624F6763A3B951E33C7E
F5F1AB73604DFCC2AAE3C9DAB3E303F8B56D1161CAF14DC202B636DB484CCA84
03197D7542BC10E7F9CF2FDDFE83B006FE1A6D13C6312FFAE07D32B62AEA32B5
8B8D127C00F3B953CDA49BBEB1B913570A51B2F96D302EF8913C6BB60B5D3924
78A32E11CECAEAFB7D4C6127C4A26EAC47FC77E895E36ECD8881C06314B93496
2984C7FE400CCA5A5007E9E2A5E16116D8483EC235D20B206326C7E4FB54256D
88CC4BD4DC84B5EEFE217BE0B436583B1D92B5C563266755B07C1E9658B8DA9F
48C8E10FB7F29D1EAE6A5E1AB2F9C2FBE93E979D8C74B1ACB91AA5D9EA54F207
742D31C0B69DDD41BA88727A80869626C7998F17B7D86D4D6F2D1C5324484C73
C05C61C3CCBDF28D048F84AA23178B60E4042034918287418FB5133B36447469
4193A44EE745F76035D5073240736B4F1BCE96F57A97F831842958E6B6517018
BFDBDC3423CF739AC5B38303C3D4DF196C462C8742A5F062F69B935148E81C55
7C4E1B77F5441CDA5FCF63459352EAD6B4A2A666CC5D85855641CB31507D0100
B13895988AD2D1F4DC2FB40840A0CA3622532561939CA66F3375B5C3CC39D956
0C010A1363F725ED71E3442C0A00DD938476920CF67869A9DDF5A299FBC13BD0
1C6450DBD0DE1D9CD163520429734028AA2CB185F711441471ED972022B4D84C
F007C1D9B1D7E625D684C53723CEDC5E42A4D17F35791CD367DFB3078ACB6507
E89B97158EADF677C788A0FFC3EEB38D5ABCA560E04852E7DBC79C2DC8561F80
5C0DA1E125B17E572A8DB0D0565F05E271CF122E3770490B395E4DC4AD00B46C
36448FE2DB35CB45276DFB339097E9EF935AE0DE2D8839376A78D70FA44F1974
ABA413D7143EE4742916BEAE0D21F24A3E4D146DEBD198727ECFF842EF5F146D
57D0287D62D1A34793E173D032F71193B2E2990ECE96EF6D712B4FD780875393
92EA302BFF0EAC108829820238728C6305754EF0BDCC8B7204CBBC597F2F9C95
9B69948674FA133F77935F24EF5D7522B401F3A783BF474B153533C05AF2DF8D
DA960CEED2FF28FF48234265B4759B50D24BD711DAC557EF4F768148C131B265
25D173F07ADFE2C2AAF32AA0B556EEE562106998F7FBFAF7313B1FA589C0DD6C
A9B5A8D9DDD843E6E80330277D6DD2356D80BC6180F2E924BAEABAA6E2628007
B37A2029F3D9F5E1728F408B89D85806D6A6AD7618A93DC4A85C4076A95944ED
748D1BA12F86DCE859F1F48AC037F26DEDB1C48ABA2768E9177E799855334DAC
3760EA1B589B5562F3D48655DACF49BA37A4AE429B79608716438BD99613EC67
5F40200FE34CEC934F99C14E909440B5457AE7487221179B9885F7A063D99B45
1BFD666E82909A1D82572176422757988D43159FD814DAF574818FC2CBB20431
9D5AC85C1B43EB9623DB369D2E0217DE72D65B0B051B0CAF9FBB9BF6FBD49BB6
7E0D942F8A6C4128F6504B102B0745FE0B75AC33767B7F328A8E8E537444EA52
7D0ADCC055264CF38070833FE36F3E9E75ED639A567075C6FD56077C00902CA6
AAF0C12EB5696A397E624F888EB2B5E2F8CD8F21B4A6E6FCABA356F58CA99ED5
3039A1BFEA1C40DC1AEA90C0959232198D1F4E26CA8339782ACB8A908C5E7CE6
98479ABD173B95479825415B084F754454ACBF44DCF4961F68DBB06449776DAF
07138F356959B8327FAA6CD71CE5EC69F97CCC84646C78399E063C0AAF44775E
6D1570F08B3085066DB8C38AFFAB5CBEBC7567A0330E68DBACCE1DBF6D7A0ADE
9BF8F8AC548AFDFF12971C763213CD781D208D0E5BBB31FA3647D2B0AA7E0124
3B0C3964184341D8D1ABFDDAE449FE68185327170B046B27F59EF54E9FB7783C
8A81FCC602CCD47F4BFD25E5D4B24CABEDE1436754701F9823D97F39E01DFCD7
F73BDC4069607F52F09F53B087A3E5284B1C41859808C27C7DFDF4D22DCC6CAD
9D6A335B2BCFA6D000A7C579EA6EFFE9BBC688FC7FB98005BF250E91BF91F719
E5568DA27D69EFC526F59DABA970CB94B8CBACF31A8EBD8AB754A936A7F9A209
8050930339C0DB023D08E568308EA1D4D5663E33173E5C99CB752EB3EEB45A26
663E123B8852CA9D2E0F4A930BEDB6F4CE046EE0A9BB4FDDFA475AD631D13A80
2CB7B6D960A86183FAAAA649948FB3F0D55900D5F58F37B8866DE8F3052007F9
104EED7A5DDFC7AC37A6D9E49F46CA0B3AAE98A934A36CCDE8EDA8362FE97F20
9BA574B5D5D039A77BA46591F6E45F73DCA2513811A6517DBDFD7D818F48E683
5C26FC0C7682845F3E4266B7D327312EFB770916FBA0C65A20305AA1A087B1CC
97528D5088D1E07DE9A23C9D41F23C77C5072809B2819B32478FD58A974363AA
8F4D622C39534F12614E0DF155D72F1EB25082796DC38497B4850BDD181EB8A9
6ABE64730301A06C16A74FE25A3C3068A83A513556D05359A393B6C6929BADBE
97502F351D81614CD73E27F230046F89E913D02B0326F68EDD3146F069085199
CC16681FED2AD0A7B141001A3FC4C5D21126A66592F51AB6DEC1CD3393B65C2B
CC478177F585F15CD2912847D0F53FF2986C63691FDB76EAD40D9798E28E803B
BDDE19EB95FB140A227DF24CCB36C662C7BB5E8F7DA664D1CEC437E17D6BF29D
BA2BFA67306C1B77FBCE256EA412CD417BC3BB4B243FC3A0CAE847B3AD58CBE7
B8C5C86283EB434163C89CE51D484F7E49765600A125D6DD423540B78E744459
2036A2427850EBD6C17EF1545EEE457EAEFDAABEAD2039060F8B6BB4C28AB1B9
A5AAFB7FB945AA4671A6A97BD8C6807C21360D0C3F7742F47CBC27562830521A
7BE2EF1D993F75619EAC1B3A7A43761856730BA49A3260BA0E094D9116F8D9C6
46740F45157716658C23144649A72A043685E0A6F25531307FA0CB5148358692
A287F5074A8C01BA5518911789F7767BD4551B1A301528C4F0C5008F19618E63
B50C60FBA08F6449B676DDFF2B9DAB14A41206C3350B9DFC1DEC1CA57547928E
BF55EC09503BF1AFD89227A574BD8D6F6283BF7C4A30E256A366A29BE5ABE787
9DB7FFB127700DFE7357E50376A9CE8E4B6C4211CBFCF9709AA29144F3A40000
E75FBC7E5D5A2A65C07D4FBCBB8FB94BE05DFF2B3FBD09F11CA9C72A278C045B
1D2572EC08DE1424D242091780720E28A4055091ED6C0F733B035CCAC9A2CAA2
8BC0DF33C013CBF06EDF7DF34EAFE36D3104DADE5D30F2104A0C54D49D520611
165AAF3711B005AD3DFBE56FD60E89A4C5C968742603F4FDB0B0B6D446B29F4A
0504DC2F9B420111821EAC567FC09B4517D9443FD0145DD7514B2E09AB2960F8
D54E965C4D8F99DE6CD69EFF58A2B6AC9AF7769E0A6E389AD0B2A5D10CD4C41A
40097EF75607A937A95839A181E6E55835DA3E81C8846980EC5C16651039C0C1
ED728808427CE96611D1F832FA6DB2B8783BB484E18505891086618044B4EE0F
4C3D3AB7CC8FCC4707DE223E7620AD1E77F2C9F7045257D254633BBD96D5D6F4
5696C589BC74CA556158DA32EAD64629BDED7D3AE5205535F92D8DA29782A187
5C6C8E74B0C86C0D3A604CE160F8ED1C2FE09E0AF9A45096060911999B94126D
B0DA5E108DFE59AE74C66857C7516D99DD1DB170A10E67FAEB5FCF007BAAB24E
5088794F62025380E1B1985AA631AA151879B37FEFB6F84B7EB6D57CDE9993D2
AD4F956BCABA7F25705254707445E43F11298F2B2836FC9F145DC459ADFD7815
41EA03A5D6704780155DE7E7B00A8B99E733AA64B78236F752DCA4D16C84E03F
22C9C61D0EF5C2431DEEC9C12A440FC332666E5F5A99C9ACC79B6952D59C46B1
586141301B6535236B09184689D672FB302CDA74DB0C43A77A643142F5804346
C1264135E15756B43D90E252FD16B3D1D07C190A30D72F4DC185613B31DF5DDE
2713384F4A9810BF94FA7E0D033E338E149518B5493D7E3500577099B505E655
9BB8E9664CFA5CB68AA71040D5DC521E1CDCBD27F6AFE6B8BD4E941D2FC154BE
A826E96D9C215ADDF45C88DEB19A25ADF96AA92AED7E26BBB3BBAD087C4DBD66
34637DCCE4848D2BF6E4764ACF0D6D5F26D6B5DE97BBDD74252B3DDB8CBD26D3
8BCBF23B4CC377A5BCFC19948EF5E45DAA4B5A860155B96B4CD17D25C1F69186
16CE476C12B33F2388C1E140DA4004919027257F2186CF716C685176C94E1A15
8E799D50610BA45F2003568AF44E2EE4DC9904BCB4CBA088D3922EEE7150107E
3A46EAF7928ABBBF6F2EAAA1C54F2F501AA172055892C47614A9035E79B01536
93796F91BFA1DDEC196549ABE28871B49AAF2BFD4E836BE55BACB3C737A5C73C
170B6563DA6A0785D44A92E180DD7550442AE3E0F8C1178EFEEB5152EB512122
E9A215EBDC5652B555D498479D289A015F8545F681333A6EAC4EECDB1B8AFA3C
E22F8B07A8C48FDD4D1333898953AEE8244542BFD2849D497F9F8E166005CDD3
ADE33F6D4B2E9C167ADCE832575A237C9637BC3A58D7BB96AFD1BD3F1808F707
5FE193F6C8EFA3CB01B31B63E3DE2D592079B66CFBFD74E98EAD3245271BCF81
1FAFEB8B4AF97E8EBEF4ED0334BF03EFA1554980E13B37FEC33DF3B23FC7BFED
A3E15BCD8494AEB75615C7A8F64D13FDBD4FB5AE98A4AFF2CEB1F92DC495B23E
AB87B339CD87B09F18BB72913812F041D5C00E90C1BB3D58C1A115B39B76EF79
2F7CCB492E4F71538878B4522D1AEE2980FC421B2977AF4C08DB2DC98289D2EC
32B466D21C9B802FF1810458E2756AEA1FD732B806286039E75042D590F24D8F
E9F50D35EC6D1C9950AB0402644E83479EA265192B41D8F3E81B4761EEEFBDEF
7E850602B6815EBCF3E19A3AD3094F5C09C98519210AAAE8AE94F744C02BF2E3
4544BBB19D1B5F87B2B89BE7CBEB6ECC8848D17A70BA8DB8DD6E5B41F5D52781
B40457D3C1C200483C0CDAFE837D984A761286C76125B491DCE3489FA322F968
E512AC8A5FB7C4DADB75C72FF726049E86265687368420C97F3A415D53BCD1CC
19ACBFC6867B4BAB0208DB3C5DD474D8829CFB026CD1F9D4B7A5B18F88BC747D
C2510E822259DDA43D30C33E916524C5E3561BDFF89136385827B7980C2FE0AC
B1C470121D9FCEFBFD625B7348402BEE59368220EB2EC57A6F5DF049C399BB8E
5B26813C6054B0EFD355444F1EFA69BE5A72B52D8380C5112F4CBCCB78C3DF9F
8D82D9EA22FC46617AC1DA9EDB3A2ED55D49DDDEFA61EA1F01DADF99A7D2E492
2E00C3EE943AFDB0739F75F0F1D250DE5B233FBB1B124C8D80AC2794EDB253BF
AD5DEDF0222EB7D72274BC7E475C56DABAD14F32804F0747A3C6E7330B156AA1
E3C01687A658F558B8F61516680DB3C059EECF1C3FDF8417EB931EC402CA0F24
50CC18B4D22872FD58121FEE981541B50456D7D18E788D2DF9753691F4823461
92B463FA2680A5A1E7FED1E46283199D5A2682BE207E04BD4B435A2949159C47
091A0832D4CEDA6CF0852CD2FF4B5719114C0DA6D1B0AD44E8FDB48008504174
7A1895896B8F275D9423DBE3730633BB053B59020B7AFA82C7CD159DC7C72517
CAE1994A0A790E475C4970EC656B89AD428BF4E1035E92E55FB21E639AF66E6A
3A571A8250C9716F9F265E0F76FFF660C54AC08131B56DF060B63E750342AC61
5286E4AC04B289D3EDBE86B8052D096C5864CA94CD5BA274FD97632C6C0F0067
967A1A308B96D5816166A81DF85561DF48DAC4C5DB5A2AA6B01BD0ADBEE35AFF
BD0A14469DBE041582D8B1BA5D736869A1DF71D59811D25FDA43865CAB8E8A20
A9326D2B50B9700E88FD90913D77B6417FEE8C039C12D8CCF516AA5DD9CA48DB
26F515B6576AE85A29BA65112121E1DEDF8153AF59E1B079468F08130FF077F6
6ACC0449643C295D82C70EF177EC0C2D3AAD49BD2A0BF511A722FDCCD19348FF
FB8CC7A4CFE322EBEEE15E3395B062B933EB55FA52E425B02401C79FF0F48D18
32E838472A8F1A94A91A8330634BB7968281E22133A947416DA2238038CC1475
89C36C8196F901BF6D9816FFA07969DD0CEA6C9669890092316F6A01DA7224B0
6AAD1687DBC419EFE2BDAA0F4D090D274A7CB5AC380B1B2006B28BD56725C287
44060877B73087CDACE34651547823DA7503D50E7C2E9451C8658FEB205E020B
27F5307E54B6F4A4858CEF9F21FDECDE3DC0B24BBE34AD7B572EDF436436EB7F
ED0BABD23AD8FCBD71934F0597C65122BD563F761BA4732E96D5BF346C211267
BEED7075B675167872F7A506F4B9E4896A4AA5AB5B5B58046899C9C5993E7302
C870678DEBEB07503EDE0435F57FCCEE637518F5812EB351B6558151AE0B43E0
25D14171FA920BEDF8462A59235F808BFBFB410C50E43A1EC101E5DAF2E71827
28B38441B5B6FE9AE8268540A9FF11ADA29B5A795C29AF1758A378BBED7FC315
2013534861328A5E4673A4B180A8AE1BEA97194C88BA5E67BF880AB2CBFB7909
B93FBE74BEE6955D3E495130BB3D28B42945DA4A9455103CC33474390660C14B
978158418AEC18D647A6DA9DBCF5A10C5007ADBE32E5D0E412FC23069DF8D162
A2B400EDE05DF412F5D3AF80887D36894E21A64F50AA7D53090F61EB25B9FD9B
CCEF9933F75C879222847F855960CC952649426FBD46FBB44432D9D6D92DDE4B
0DA61C03BF4360FEA49064FDE911D20A240ED2B4513467DD2E9F214E625FA0CD
4248B15A936034060334D2136641C1AA345C7642D1913555EA13D1678752CBB9
7A140C81DB516E544E04813437A0B89432E2929DC4A9F5B183E06D2DE8EE9FB8
3985B96CA9D8FDB132881DDB7B0ECCFFCE5E082CD7FF922805C21AB9435E2DEA
D0690379DD5578A156314BC78AA750E91BAC03948D44CE6AA5B6D92365D2EBD0
B357D962770F37D4A4C27A17BEFFE96B9154CF9B9E70BE65FBCF5161148E1C76
4E93EF4D2B88C75F569346AC2B878782D12F909516F74D56C5A927A2E7001730
D7CE823CA5968AE062DA5A54C5CF9AD095E0BD9530D515129F59FC510A6ED785
9DCC5747C69296B7999229531B651E4C98B0BD07C1AA85C261C55F6D7C5ADF69
1D4C163883BB2994826A94CA34D9E5B9B0965C52B191AE01721D88A03BF5FAA2
C6D0FA6444C3920853346594F0D3026F4900770B39B288622172E4D6171BD9AA
3BEA81915B81C56CD5055CD7F5232CBAF282AF59619638A93EC62A029471B607
8CFFD8AFD7D9B25F63CD8CC50A4FC59C2F3F6FD9963174FF863B57D85D994B25
A9E343F133B43FBA30C52CA8A503F3F93E3AB7AF6043F860D5D548B166C25921
D8DDAD33982A420DA8B0FBCED45414AD2285ABCE7D352FBDE6EB1E0F52B0D234
F2618EBCA323CC1B73E3AB241E4E95C8D833871AC8EB9E6A94AC62BB8D3E8500
6332DC7EA4CBCF5EB59A95A2B515DA86A293CD507153759C247901EBA8C4D36B
5C5E989B17A3A72248A138A3CA8622749CD748154EFD706AEBA91893597A866F
289B75B6C623DDC0E21C7E6920076B0AEAD03AB485F43DD669E9F6D78F7F3A3A
F0E163589DCDB652FF0580BE54FC52BD298B1DE626D7398E8DFC0C7BA115D338
8CD49E15D50DF45AB5BE763310556E5D82BB9E05390DEEC769C63967F79359D1
B292A2B968186C25AD5CE0BDA86D6C602F27D4D17370D21B4429ADC336A4AFAC
6A910A6B158DC42E97769D57AB2898FA62921A8D17FA331966743BB807BC62EC
CE310D8DD33666152E7DA26D679ED4D87F89B2D3FF1A88AEC672999B6FDBDE53
381FB28546087A7B8E3203B60A8DB8357CF639B2B4830DA2FFDD7B721978DD64
1CDF0C0459112C4AEC29A28E43DDFECF131E27A82FC1B8BBE36315E41967D1E0
1B09FE682EE128C28E930169DBAF16CB022D5D7BDB13E2A460620B8ED0372A76
B058E4BC1F616F6CFB2E9A0EF9AD85DAF560741A702B11CE084913296F4A3C5D
27DFBB1F3D0BE971812A7A83450DC0675C45C27A1010CBB79A5BCE21BFA46CCF
D6B4158BE06C768C73F344A107706B36EB97D9202C5763599B3C05E1464BA145
F368FAE4C9D1BB679CBABE4996D7829CA57157A0C21ACC8EF55F8E9FF435AFF8
3A7BFEF9BEEC854EC912ABB90EA785DED842C2A0642F862E14B66919AFD491F9
8D841A2DB2F981BFA79544B1A2F756D81ACAE235A58C64DC17B47C1C7C3A820E
A12732D95E3C21CAA8F9B9C27FEE8DA4DC31DACC0163FCEAC4FA882EB97C8739
69EFA04EE0627DD4C2D071F1C8E049E657F5F14377D75506A96CEEE43E33140F
8E91CE236EBFA996C51679100212026FEEE44CC3409440737FCCF58A9899769E
BE684B749A1D5C37CBFF72C7EB5AEBA5C7A3D9BDDCD1ABD7F3AE4C917B3A01F8
83767E8A5D9EB331968579C3DEBB3E382BC15B2751BC21E2E5AACC0CA211F50A
13075ABCF9F440C99FD25A8FEB3C0FB8C09606DF50490C7CAFCE844147A025DA
F903C17E5B0BC25F89AE84006216080ECAF450D8F1E3D7ABD94719F604EA68B1
108EBB5BEBC3EF465BDED4C73738D894770AD27F2BAA1A8AC49D55D311D7B27D
B7CB8AD061C3DC60016EE1F4848CA1A8533BE7D472D0AF407DD9F6C4238A71C1
F3511F227119F68C6EE144530AE8BD1FA0531017D74B47E173553F7727CAB5EA
16F460023E48C20D335FFE5E7239FF72332FA245BB59D385B940205426B2517F
B74FF8E56107FDF9585A1A1DFECFC086DD0D6D414ED8BA6E0D92A29E25918B5B
56C2935B4622F20B9A0C4CD3F80103A6459421C53711953FB5D85F36DDE63115
3EFBD5D42216945BBD05647ED068DCD0074F3A2B08A4CFEDFBB907B363DD79AD
C98AB074AA1C50EDDC6EB68C5B4DC1328B9E56BC0BC1104FF39EFB2360FD3BE0
34FFF6E650B0D9C5050670ABA64C062B5BB10DAE3331C3E3C1B56AB328435C99
64D0D5394345768F4A78E26D7BF1AC08BDBB8351C7F5C1C666E4E0987446F1B4
2166292D0CFAB1AAE6541A3DB6A5707CE98CADD70F81D892B4D2DAB0BABA6621
75C52E526A643F7FA4217D853967AF5E3659D9628533AE56E657371F3508EAFB
FA1E8FE0EE6A8E816CB79B2B26E424A78CFB02CECC37A2BF35D037B2C2EAE5F7
0642658A3C3543EFFD0999E7B2EE12E26D4E4C1998280DA60236796D84A935AD
41A3573879103DF7CE5F167720F3A7F94F2720FF757C2D2BFAF8B3DA862DA1E5
E48C0CF13D0BD5FAC207B7C7FC5AB1BAA9B3A11D34FDA62658B43CBCBC5E8F5A
A03947553BAECD57F4EBDAA673AD0E3ED5F7E7086C53B79066834B3766930924
14F780C2504096C1090865B9E036CC99A4EEC434992490906571E52F477395C5
C5040492FE6426FEDCC330BDFB5B09ECC3EA37300DD4FA4F7BBF2B252A533157
512E649A7B7F199EC63345AAE11DB0D025D8AD3593577DFB0B52B5ECEE8F47E6
C1D8A30C4E5E880AA0EEBB2A053C893FF1AA912ECBDE9B49AF18F66D1BD7BF73
82F89FE9492B2928C308C0373A7CAC1D612C9F3A9ADCFCF2099128D1C3565C6F
5FC2D898DF5C1E59CBDCAF4903835F153170BAD72480247EE13CC0281DC3FCB3
860E9ACAEC0BF95204DBF32AFA9DB2C058F11BC061D8BC48CC05727B71589342
370F8A366E11B3623E4443766368B5169A98B504DD1602FBCC202CC8046A8A60
AA24F57CFA5CCB8485932F527838C9E2F1889D11BA06271BB84AC9AAC072FF6D
5AFDC5A833E61CE4EDBF5868EE0E82E375116CA98589E3AB60AA98C80B3C7894
F005050A6601170943D58E05E4CF5406937B3A5D2AA9065A0B5AEECF35699FDB
C1A015DB07F29403E015CABBE735772E06A31F06539053D7684468EC7C28C0D3
1087954895F07A2AD1051E7DB89A6BEB0E85BB98C2A328AF6270E9C7E9BB0F33
BDD923A9C3F1D22D3652E70ACA874D9A0C4A787C9505232486F108053A082AF3
65FDE86FA40B544AB475F2B4B8DD91CB69558534CCE31AE7E157D0B060877831
EDE9DDEF91B81033F4F4AEA1BFE490D819A2BB0EC940AEA73B415341B8FD33AD
927E116CF2A68BFDC38EDCB945CE6E6B854ED664883A12B8C35D02482B7B163E
B0E142BB4910BDE583EFDB6B2D3166A29386EE4BD1E3D4379AB62BE71E9B6F85
F8385D885BF730EE3F1F887F60473DF62ADE1127B2054C6B9A16303916527193
F8329336B4B5DEB963A34ABE6D113D7FCC36B584D24E131F8CA382D2869FCF0F
213036AD02BB07FD44592ADBF1679DCB876202622263FC8D03B9E94241A33106
84C49D6187C823F533087883A087234A8A27F23E7309390E2C08646BE73DF766
E216FCC9E0D3B13991A1308547746D0F1FEF45942CEA347D253E10733C2AADCC
B226D5C3A8C76F4F6F7298116E7FF68A8348389D30523628C8A764B4913744BB
8C222DBC80B3A27C2B2E981903D9B761FB7FC6B4AFD951D3E5EDEA88234888B9
B7859F943B6CF4B205301FE5A2F54624315981DB9E59213A15268D87B0FF0AA4
C418F45F2D92CFEA647A6508A8ED99A91AC1B72D6702AE620AF391022A8ECABC
9E50D69CC7F6E50DC506C91037C1D31075E73026DE84CA9635BA967FE8AAD363
9AF8069CEF3AC8A3E2F65B2F01AEF2D23386E95695DD82B9077118A042EB52EB
7800276E7502D8CFDDBF8E8FAF25DB3B6D6796FCCE2711938D605AAC075BAFB2
C6694A816A7E158615829E59EE73573363006E3A5BEBC97290C6807B6805524A
6DA4D756BAC0E0EE2C8104171D21B383E51E803E1FDEA9D9AE4FF89FF6879484
CC65CA8405254A6429E15CB320BA3138F457FBA3EE0129FE3B4878E12EA952B2
7EAFF3E4A8016A6E258F863E944BA88D4A598E51070F55C6F3FE952AC5888D58
73DA681DA58AA558BE6F5635756120D581E9F3F68DC6F44D503C233895B9C85E
1265E59C9B85F02AB573DF6352E12A2CB9940DC68329B6D4E8489435A1D116CE
C6657727EEA5AEE64DC20E6B1C1CEB0D0FC5BC9721317E21378E75D88DEDAE45
EBD6FFEBBAE14D104FD0B58642160A801562D95CB4B3B22DC599D6C80BC9DFAE
D0E89F9410B4934D4B4903C84F0C3F5D3587D6ADBC4F4A17FD8D0A9035051E7A
EDCFE9E098F34618A32E9F3650DD9D461993AE9E4FC1E384FA85095C97BF19D2
316F5666424629BC44C4C291DEDF5015FA19A6522B2F036813EA9F5DBFFBD764
E1E646FBA33DF8ACC3DDFE5C6842BB83001640943EB215CAE8D21CE0B3C7A89C
586160939C130D20CBAD9EA901794AB36126A199A07BE1D261A4B9064D01DD62
0E7F7D63E814FFA7D512A5AB20ABE77B7716388AA987B266D62BA5841AF5ACDC
B7E4A948EEC0E9A6CC520FF3C45B5D1F4889E4A1C039D6CDC9DC009E94281EE9
0448387DC65F1B6E5D964834D39D8A06C44B45B213DDB43A269C5A3C77D2EB36
6A2E13096F1A8356E7DC604560B1E52F87B40FFB6195F89A538F04ABCF0A9C48
3945BE3D07414EDB2FB7BE07878330DB8D0765486D88D0C5E770BDCC018DA36B
7D906398A87F10D67BB6F379C83A71B0E755ACC5F12B9E2249D89D13242273C7
EF6C84B29B4C67BD3437380FD64A8605C1D63CFE0AA505A808F03DFD70A8A816
7842FE071FEA0094A55C79F0D4C4C6CBD815B95655FC8D6A14F7BE3E2111BF05
F2AB18C3188E53F04D4CA15366CE7D06080540F0D4AC6EC89FA057A21283D3E3
10C61EE0C48103876228E64854A527FDF0E01DFB9E52F360FB90BC3556247D32
025EA5A2924F3714CABC9459B074EC078B46067F4F1CB0E74F9C122136A2A3BA
425D0BAB1574C26588628A5A67B43A8595CD5A864952411D06BFBF4CB5A7293D
473E7793B7B2842407EEF346C76E5B74CA87BD76F70E6307B2FF5A570C474FD8
623F04FB2582129F14F5238B5D1ABE04907B47ACEA84FB425559C6C02CA2A09E
B3A4BD828F9C9CBFC0CA2106F91774C2E5FF39DACEB0914FDAFA346468E0D44D
0F83B6BF66888841E1A8E6A0BF1DB857B9446E61EFE066B665ED555DFF63F142
BF6DC075F7F924B26DD852D73CF5EEA567D4A6C22238637206A7941CF0CD9403
BD88E1DAC75E56EEE042ADDA9D81C3F56A8738208FFB82C0AF127322C51A5E04
0AC92793B52B6C65508448B6219413B5EA6AF940AA851F5FD7F40A6C8D540151
C200DA7309CA119426066B3246BC423E4E85B4C4A613EC4AD04383AAD719D54A
070772AF9A660127A880CCE03B1AAC8C7642DA07EF2F28988112405F80F2B966
488088E006FF95E07F1CC14DC82CB3D7C5BAC359A30961B158F34E426E865DC8
BAA0362B0DFA26DF487B9BE5929CC68C4EE6544EEE1B5F966B881C2977F80396
C16EF219FC9090192F172D05BA3046172E87402DF3168E4E9CABC92D290BE84B
679A4B2D65725579D42A72DFB3C5D1DE8DABC995487CDC5FBD75A3D61F5B9FC4
60B135D5102AE6181067432CF94ACE11E51D510527FBEC22F15F6420280B649C
5C90C6CA6F9AC336BC3D354768DECE3E29D5B599749C255C27EBF31C9064A4F8
E3CFE795F74543F4A0DB7EF982CA4194EB2D908D07CE85E9483ED66E5BB41ABF
15D7DFF9AEFEF7BE0BBE8BD493488A00C554429F7278F82D1CED8909B65532EA
4C0CD05DAE635D1EA0459FBCAA44A86BEA72ADFAB084A1FA3A04D52AD1D8F142
9579B242707B7E2AB580D084112F5D3A5FDFDEA7FB1544ADF58FF86AF9B2A5B3
E22233D681A11400F53B6D22C30147BB2AAC0354A77483B1EBABAA051C2BA3B4
F40A4D4D7EE5EC3FB7A759D7E598504150153A6E54C02782ECD3CEBF63A8BC8C
7B46AF75F34853E6506046DA9DBDC7842404AEC20DE7774A2745618882C23335
5671AC35DC5B2B886C4663E74621A6784F874870B8D6F7096E251C6B88360835
226121D98A5450771F19B59A2760C52C87C36694BE5257D9DAA922DC1BCC1BC1
0458CA6C4395659B0DB6B612C151544F352FA6E06DB5C689DBE39D73BA8C9C09
3FF36C008E45FC2BFF7603BA3CF4C6B4C95926DF2099D19B442950DB319BCF78
C8BF7556BF51AAB5AD4B903096F164D60E1A1C596EB9150A402C5C350AC7EEAB
82D64F9A5EB6A0894E0C274A29EE2FC01C25913BC44D69B3AF2FE2CDB765CF29
97949E07B104540071442DEB0538F7B02AAE4EFBFC91BB4E32ECF1455DBC3E90
2F2AC3ED51A3B36934845FB4FFFC731CEF46F384CCABC24E71650FD2487C2210
5610F279A1233DC0BFD48266D36F25E6CCF2C1077A1C7A65FAFBE78109CAB35A
C2730A761CAAED96AFDAD92C3C68667D61D91219C131EE556BCC9C4374EA6B2C
C8220F141522AEFA4CFC0784FB2B61772130B9931E01AC41A8669114BCBC5B20
BB6045BFD5AA4BA26DC69F2A262A5349E1153A25EBEAC76FEC601CF4D10F65DA
E3EDBD2640A8A15EE28E5772676DF8F2F603F3442EE12E199950CF429F804F56
D5C5CCD2474922303653495CE8EFF17C73C7FF825827FE2A6C008801304DCA2B
BA8F01DFC68627FBE791A39F0AC8535F07BA9A5A4FA3E69848D6ED99FF4F8329
887A50212B974CA1C4A61AFBC56FB87E5BCC978A8A4D01474409F0BC2DDB7B14
715C8A6DA4099DE69519ECF9E889ED33DC41378E58BD33F44D76204AFF41F0C9
84049FC5317E4517E94A9D3E5CC7DBFA30295A87611BFF52BEA5A8612ECF9523
41E499800CF85B08E39D3753C0B4A973030A9F3040C921F3B82D67AE5E767C54
483FD78ADD8530F6EB1DD8265712717E4F7691688FDB8F0ABC9D924302C96956
1C704F60EAD3DC1DFD8ABEE458C47C6C4E5A68F5DF71FC609F11AF528652EB3D
0DDBD758F7F85D0762327E1353649873CACAF6F08C1C16A1EA77F635FE14F2CB
B58922F0503241CE88F7E280B79C99060CB5E7A530B8D23B99D098F7160C4C3C
275A1F76ED10D86706D6BF5E6784149C85FD2B218FD4730C99868A992858D9A6
4F6959EF9B6A09ADB525315324526E0C2277521A9BA1F98D7C0F1AD0DB322947
0A9A834A41B7D92BB818F877E1647AA14B3C6CBD50988936ADCCB5EECAF200E1
F8948171139BA9397B57CD7CAC1B9E570FF69A6A7A1BC4BEA4AA3CF719981FD9
E8EBE567A6010D7D07A8BDB9FF4625183692F8E31D4C0B2BBAC3A56A1F64F245
3376BFF102B5A4EBCB45BA7E9A67F161EA1B875B8AE95D4CD1F91304FD381AAD
A097C8E757E0EDED2910C66D6FB986F41A15FCA35AA12FDE3B3BF5254E59C0E8
B82075C60AAA52F159DEB7C34B7CBE9A0B9F6B0AA877A2026EC9F19CBA85B8AA
268D00B35AC89644588FB8BCA8074A3609818C7B6AC77F4F435F098D34636052
8AD17FA79B4BB9FD2E36C9411E7F736D1625E55F903797D607CFBFC6E579235C
94596F0639ABB1F938A151A2A42FDCE3C59C556E5235557DA055A16C30CC0E41
7B18667B975BF873F4BEA9022072655ECB439AC46307ED8C313841A757C5FC51
166D8E74E342451F096338B075801F323729C9FF29E681FD7B0C080A5B57E193
4857D8894876F46A2A4BAC73AD3C0FD804C49181CC7B0357B5996E98DB45FB42
6B00636C4FD897BA0934A3E4822CE89A2FA7CAE9AC02990882F3E81B9090CF23
C1692D5597A2E3D1C3964D8E87EB47950899C82E7D266B03E363443F5376EC13
D4824C8F9AE2E675EF11E395B856E400C72037F7B8FD8B789AEFE644F929E005
007E330C951F630D98F44524D7CAA775E8F2529AE564B4024B1FAE27CA175059
B26DC2CC164A385FBCA376332D27BBFD40F4D1F8727B7F021BCE3FB62CF3D855
FF25F5E0A296A6094040F2B528CD48CD2F8B92CAB744D01CD4CF213C0A8F1C02
CCB3F652A2EDF25D95A9456C7098D09D5575F391D7403FDE31BC694628B99661
DF32F2D4BD16E2BEEBE78345B17B829686C23D94EBEA9D6C9E65CEDDB398267E
D7BA6583A6C2EB5F2781310B9F71EF1D05A87011E5D0BB099EFB09CE77805AE6
6225540A658A9CA19AE07A15A653B47F78162F06BE7AF1A10ED5AD4E6D502D50
9BC9FBC9D6E6646AABBAA96BF229A004245E590EE6A83D1E89F29B1EFECAFF31
922A16CB785948643D0591FD03CAF584B0D4AFB602504C560DC590052EAC34F2
A96A2A15E2FDC895E95036D23127557837506A3B542B0B35D4864F882DF746F9
505BB13DCA884B8B83600D55D442DB5F6975C21EE47B3406DE7719413D9E8279
F9927AEB3BF54C276271144365E57CB61535E56121B03412F1B50E1A916BF519
D9CB0181018FF1A73B7C1F10E8BF2B697EAE7593248EAD1C7ADD5928EA3DECC5
CF896411458463E8C58580DA921CC84DCA9C4DE27B6819754A9E31302E5E64E2
E417C6B64D77429AFCFAEFB7D2C37B7D2931D0D38437332BA30C55900F78ECEA
1619A50F63C896FBC1C3A9EB2DCA0F2F74D862D7690A2244E27C670039F33D27
FF79F6F5EE718D4A499D90EDC8267492DFC16208A195BECF08C2BAD47CA484F6
4080B76D7947EFF8372F85B1A73996DAEF61BAB889712EB1595CA37FF9328FC8
842E57D5B88BB9D233B5E47EEF26714A4CC8923A9396669CEF42A595CE4B65C8
6C104E9D92A4299653008C31A8386EE4BC3EF4F26630E0B8D4856A1FEC830E70
73334B65048F2AE84F226220DFBA0FBA985D136415D0F0FE65924AC2337BEB55
ADB1106E0FF4863C43F7B4CC4D92EFAF8837F3B650A7FC244C1C70567056000A
41BDD9EEB85DD24513C2B16E59080C7D31ECBCD6563EB1AD06329618CD694761
352B105E3A0FA67C28ED4AB2CFDEDBB06AAD24F497D993A4B132A6E7DE5D7F39
98678417908FFEAABB2AA1DB6AAB259CAC63412153E8B87D7FE4108359875A42
2493C3E2B5187EA654BAB542981F079D7FCECA241583B84C15688C6165A8BEF1
56F6AF0D737D2A5F96FAA35B0E8DB6D19A77FBAABD1A772D0C98151CCD730D56
F1126D6062165B9EE0BAA7684E57774C429923BCFFE090607AC0952373772880
7EA7CC5A25C793F814F4D59925493350028443C6EABAF73BC1B4BA5328595E59
C255A5FC36A7C291A47A69E9C57AB73343F5FD681F3DE445D469C074B7425C21
18FEBCA7D2FEAD169DD7C4B204DFA8315DD1564304B0A35A584114CFF5B5E463
35810D53469584AE9A37142A3E14CE5AE65A2C78822331707D201D4AD7D2CAF1
775097357A4275DC394324393D49C69C6E238795A66FE9C57B4981A6CEDCECFD
566DD00194D7EF3EE7745D6460F94622AC516E9D777D6C65391276E0E3C276E3
A5117350E877FFF97EAE242EFCE7AB0027BE9A04F9815DB6DB1EB3472A1CFA53
2E87B80603A641E837087FE7179E9020062622DE064EC1424A36558C8C94E120
FF8B0AB25D953DAEBE2006856F96C889381EF9A305BE5821CFB8DA9DEC9B6DEE
0EC34592289E845FC819BC6268B672E98D6D3A64C4D3C3AFAD086900386D210A
8866EA71B296616734020B514C8B677ACF46CD9CFE46627EADDC9F2827BAC12E
0E45B310AD8C11FEBDA9C228EF59139A10E055CF9C7B771C905B7439EEE46D7D
3C88820DBEBB45ED454DF0B009FEC9F8CA76F8684FAD68AD80CF22E61904C92A
4FCD68F8C5389BC7B4DDB7550121DCC7556834DD3F66EFC7134F543BF9748641
D59867A02160DA97D3209091D8931BC21C6F969288B1CFB9B4E303F8B56D1161
CAF14DC202B636DB484CCA8400F878387486129299A31E2083E4DE5A410131B8
66B55A8DE3E9BBE4AC0AD95EBAE53E28EDB2678C3E34B413BD5487B7E717F3ED
85E49FBF0428125639D0F9FE44C80F31DFBB781D59E88127C87FB94D1E0B609B
99EAB171F8829D377254B981CAE483B8C9A80BADAAEC8F1602CA48F9FA59A205
59123B2FA6D205481C5ED463B7C86D68999C38855E3BC495EBD55052F31B4784
1D36838D978E771F866351E76E7DB866A2DB1B877D064467A00156D51A47D5AC
FF0F2E068EA70ED2D5CCB9AF9913BBC020A416055586C0382E7D2547C9B47869
DA6F735671291F976904ADBFC40196082485DFE88C095D46C253252AF7805CAD
A251848099D1CAF25B3F58A361F1B1C042E28A6DFB60A476A608FC51751104BB
96EAF8314E2322C457EC637C47F285635AB07303DD83B31B0126B86ED28DF8CA
B1FC551AF151020BF0C27F175DE9534E4DE048CB7BA5AAB29C23F688B1722FFB
27F2066C02E1BEB50862F718C60CCC41A470003AAB80E1A3A054FAAB7F2A9793
082246AA3F76F553A88FD966801A249712B98F8F6684D7361A11D080BF399AE3
7F3F10203F5066E2D80EF7C7866BAFFBAAB9347D3FD8F575230559220F6A416C
005EACE2A41D5B1DF193348E8CA988354F249E77C9CC8EE4CE02FBCD76E3FFCE
FE1D9D56A1660DAE90B755958197A33512C41C753DCCB18277AD919493833AC7
3ACA7B5E025910A0256EC083DAB168EBB5E40D86168EFFF7462ABF70F4CDDD9C
98773585EA5E4D316AEAC8CB4182A887EF4B2EB836855E3BC495EBD55052F31B
47841D36838D978E771142DD5B7AC8BECC962105575D61683862D5E4C2CF8BB5
CC9D1328CCB4CE026622460A1EFD5A50F83C296A67133E2BB2178486925CDAB6
942722DF221264996510C908FE4FDDC7077E29025F144DA5F06F904A61C147BE
8CE7426A6EA773D06645E292CED6B53805D9798A83E2D37692C0A70F58A3967D
E26F93EB7C1019B8A18D4135AC5B3221E9AFEF36B98DB6D4EF3853B42822FAC8
2C374BE90522621DEACC953EB5D4EE5C195C81DEFFBE1E3A18A7FBA31BE16971
49D7BACECF4481DC61CEAB7476A2E57B4B6B16E18F9986304859D5F2FC0E0D81
998509EAD3C438F8B740187441B0D4749EDBFB35844F8CF727A381284A13F6E2
DAE85D8EA07DBF0F7CE8AF45BCAE8E0720890E8A655C5D91AC7F8E69FFE57EC1
49A6A210BFDE7F2BC98494AEB75615C7A8F64D13FDBD4FB5AE98A4AFF6043A20
58736D607CA8EB562EDC8ABB5D6C02C5619860AFC38002CFC7C9922DADE3577B
E70F3D4D71719C1183054E79EF60984DBB147C7E2FC1F46751480BFA1B9D94A6
42370C3478FA5F3EF565FDCCB00039E2259431C05B924B28552FE5641F3F463F
43AEB75CA5648A11C4330DA8A67F13C35538CE86CD9BB2321C5698B48F381A17
E46C3C21B9F22301C72CDB2334AEF7C6756750C915290D28979CAF0B8C994A56
6CF7F00F2243496CC335B14A9D113DF4DB24F910B5AD090E5C42CBBC728D0C98
E7A735B701024F1E1ECB5DEDC84D2807E3EE2218BE658907CDACFCF46A2F1E1B
B7A3830B1406374480A0BBEC4502F736F76AEB24341C9C722BA6364B3159B644
545FACE715CA874EE4A500C7DBF813A96D33BEF646512EBAA6DDFC0E7D749F31
EBEDDA1352EF21511FFD30352B46B6FB6DAF96010F20A70001E333DEEAB9421B
5EC16F9FDF7A56ED95A7DC4044F60BD2050AFD1E8883539BFB03553242395F87
F8E6DEF329A4FEC05BD1CAA82CFAE4B1884FC4CBC1F8F262658149B2E04A2606
BCB444DB27DA561130A8CDB47B09C110E2AAD16B3B24C6081917913AC93F838F
F4244B0600E11701BBF4F526021AF4E1ED8D7027BA05E0167D24052ADAD5933F
D642563C46D05616C9143B8EC9D44D39CD51038CC37CAC92B2451FD1ACA68EF7
1BF02AE7BBCF3D8D696CAA6A611EB860546CBEAEB1200036C93ADC6E7AEA7C39
2165F9B1A97A88E2E724618E37A1B853A74B2A17B6CD13D33508ADCC000BAC03
D76BD041F9566C7B2F6526A61BF7FF7AA0BBC94E7C214867C3975C2ED95507C9
BB023490F8966CCFB94854C959537D1AC09480B9F3347AD3F4BC76A0B5B19CC2
46E11C580DAE149AB437C6925E0CB5BD96D8999AA00E21699E5E8933A056AB6A
5F93BE614D4BFA8B7DAADF6A89A049B0D74C2B220E433ED3A43952BBA95AC17E
7A5105FE49157850C07ABAB338A3DF06FA933C489AF04D4127615F543969BDAB
2518678E3DEAD9ADB6D9AB60AD274592804D5B8E817C841DF038B8F833EAC48A
51F8045B0EDDD8A901220A970FD88046AE740CB5FB1DBBAA413948A8A6E1FDC9
D6317264E713B4DB6FD7F1CAA67AC1C969BA6E8C8540BD487C2C004C1EF131F3
D7A1FABAD81ED9C5B85E8950973404E9300BE24AF8E573DF0FD3DF6B82525822
8314BCCA092681A82D6A0552E655EAC8DC8058DAACC716C3D5EA5EE5E112543E
15D37379026E09A196A35A8CDAAE977DE1A0A3BCA295346CCA23E4A9A3C183D6
E43CD8F45977032334DA9A8E8CC92071BD450897227A8FBE647E2844926ACF57
11C3157ADAB2177601E7430D13E9FA33715C6B619713601F966319836B95432C
1DB0B79116438A7781DF9885D74B9F6A5A1AB1AF6131475ED7C76C63967086CF
07C8A292D8222AE3A39AE81BAC4DEA834BC0270AE6EC50B444E7BE8F7426EA2E
75F80913B670FD6FF8065249CAB89631EB30FC0FA2083FF168A630D7AEA4DD45
11C79165B53153CB02B8BE62553E2539672619B94AE675D567C30740DFAAD761
3AA7C519BCE1BAAC94C8ADB75D64F23A5B2B40A6A121FD8F60B267E114539777
21409C3FA734449C3BF9A6C5F3058224B75D923BFE2C8D1B1EA43BBCB9579069
D2CD2E948BF28B15C4793BA18599C0AF88145EE76C648C22D8836940D786E721
1D98BAB48DDAD4256B4E4E561A6168CA879F792C706CC165ED213A86831065B1
4380323B7588222674C1BAE90B83CB4B9DC9BFBC7A68801D81DDEE0C5F7C0C7E
37AC74B93A63A34884DA90977CB88B835815F41766C34BCBA3793F25FF7BB934
D98F428B172BF217343D46C3D5AE5E2AD5ECCBD1FA9E023AF7B3BB01DB0E96F7
6464968813993F16D11CFD48D827DDD792910AB45E3C757FCEF6C1D3125BE374
0BEA205C09A2760969845CDB0BD27D6B600B480E34D300EE501D0AC46DB662B2
999A55D0862FD7493370BC825BC7A5F637DA6896EF7C56B706950813F0D5BA28
450A46D654F9E31C71A08EF5FFB5C626348824EF4ACDE29762ECD5F2600A8992
B32927F59F27F37F85376D88C1E503E89F7665C4DFDEDF72BDFD0E844B8F2418
F069E2C3F933D168E80EB9DC1708E89B1C237CB273687917186ADC7FF6364B49
036D4C86F052835C69E17C14B386D68787958C72BC1E1AA1A8AD587CEFF48C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMono10-Regular
%!PS-AdobeFont-1.0: LMMono10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 778 222 0
%%EndComments
FontDirectory/LMMono10-Regular known{/LMMono10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMono10-Regular)readonly def
/FamilyName(LMMono10)readonly def
/Weight(Normal)readonly def
/isFixedPitch true def
/ItalicAngle 0 def
/UnderlinePosition -167 def
/UnderlineThickness 69 def
end readonly def
/FontName /LMMono10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-451 -316 731 1016}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105A2B97A25458EAC07B98B8F1ABC91ED489DF5A
340A9C333CA5AF409E52EE1BA5629A1DA85B8B9EA3150173A28A696C6B98D060
4CD8AE5F032FC97BAA1F5394B526DA51B5521D60F8531E0E5A437F5E00E9B683
3F08ED5C6A216D2CA9C1806AEA6B335CD03C87CB35115D28AF52BF955F7F349A
C9C2519FBF9D866A7CC0AB363443FFA4831A9FAF41181CC67437D2315BA0438C
2D2387CED780B0C89728BF50FCD44E9E83FAB34746B8A91F611A7C821C73E49D
7061B681B3A8086D36072662EABB0D12DF1A344E0E619F61E9D79E59F7F12ECD
902103D50AAA3E5C951FBF72E96E17F3DCD91CB14D7F302FAC08DE542A661BE1
76D75816F241E180B9EDA0DD2D77FAD91072D2CB4F9CB10A0042170ECAE66728
4A43C5E849F8DBC4655095F039DBE7FA1DE67A9DBB1891D618FFEAFF67FE5683
AC22D2CA7A6F772481EFE1BCC831A8A1C73DC456E8581871196DFBA4B0AD584E
FE85A66B9E4D7621073A01B4D0E450338C9077A6808156163FA45AF5640D6443
42DFBBF83113738F8AA0A8569EC3410F8B1504B5A572DB5855C9AB6CDD88939C
3EA9D0DAE1E73EE83BA58587EDDE46FD34C7A4E0F5CE13AAC9D44D1C598CA95D
B1BAF457820D26526039322E083AAAC442E04290E43ACFC73FA0D289AA732544
37F9CE9AF092D5A976E3284F00E12B00DDDBCA7D9AD3389F03A93CD03A8ED655
79B16B0779800ABA08EF65FD4A17CD265E56C22DF32F67764467507F67E709D5
16B22CCD4111B7AC2A2DE413881E3770FC0753011C98A62B7A5A7855D7295C3C
E4519841C6D9365A9B2A47408684E1F3020DC3A7B2066E895AB7271A1C10A070
D345F88A54B61C09DAF4947002DCB9CDC539B448F25D5963F0087D9276C36566
1850D76D0F9BA36DA698F5B60C1FBE717C3F54435B4FDD7ACFA13B5E33A6D8D1
892127D458D2B3538B177C63AA22A28F3202D1F3DBC78DA20AF37C1021E866B1
13B44CFDA6385152AB8E956ABF92CF21D87666DCE352EA43358685BC25A09853
3D4C2E65C7CD55627602CBFE56EC453E46D470DB3EB1BFE5034F8849DEBEA7D3
A46798F5F975229E8FB2E0F8485896191BE975E56BDA6638FDA8BDD4DE1F90D6
8CE3E34C90647664B563B823440987FE7AE6ABCA16D566FBEA8B0960A982D2F8
63F11F3CA5F1FCD9BACF83BDE949446DA4E6703DE5A6612AE12C9487E3A2D1A2
75297514E762C01CD9930799BDAA3C0797C58B02E3C78C0813A7C7D2AA4DEAFD
87E0B80EA9C5B92A11EDC335D079E6ACC69BD64BF071A2EC3CB4325FFFBAC2E0
F8ACABC6F575CBB58EE2E9EADF517C21CCBAD3E56801DB21DF90B45A73F62F58
49FD40B5C0041310556883CEC750C615EDCBCCDF3C182D41FB10A63104AD5F9C
F990CCBB01C6ECBE840E637E64C338DCAE28398846CB3752FA92F87103C232F2
FC132C0BEE873BB11E3C388D3840182F35ECB419560EA5E22A42E1C757C98A89
7BFAA14A72CBFD23D544DB0C2D4E80FFD5F88B43266A672CFCD697B42FE95CD3
5415BF8CDC08CAAB216004EF466C70EA68992FD07875C2F4C648D291642429DD
61FAF86CC41BE0BF696A90905DD3ACA41690216DF0AE3DDCA1D950E0F232E1E1
8A7C19FE9BA51A9EE3B8F06BD971FDDB94481751D41BEA93204E6AD3AADA6F24
15A8BCD5C987B5B37FFFEE3BEF3E46AA957F5D1988A3D8F64CA95E283193E121
9B298DA01C6F8EB2A860446C717D6BFCDB56881E8B9227E4FA17D288180AB20C
0F2AB7DE3212D630CDC57983FAFC88F684E6A2C237143FF92C2647659B570FFE
82B8EAD68AC55C6313424B8CF1189E39815FFBEDACBF098A54372F2BC0BE39C9
E243742CC0351B89F452BA74CB6839FB6142970DB31BDF8447E405178B7B2CE5
5A8F36653841CD79FD3514557D6912981F3DB5413AF1E242AB56A36266E2E755
FF986BC23DBB806B7D1146CDD7B5AF2FE2AF7C8824D328722AC040FC35951059
7C3ACDE5E2829FD745C84B9029AE43E4730E8575200F70D3AE26F23322B5F5B1
AD9F67C09701D58A8335D97B202A5FF663188CD00372D5F40C916B01C3A6062F
7A3BC54250B62CEF85C03F169D1154B62C9927502590AC4935026215EC675BF3
F31598E157FD3F3192252514A465CA900C0A13EE814AF65ECAB4224C27161748
515EED8C9C455107A2D2C942356E715D9F1637C31B755EA31D26BEAEB70F4589
06D79D42364FC91AC88F98EE11E8609E02E01CE34455B2FF6F19FFCAF6627099
C08DDE996F9D3B8A2E27BBB1A93E9118B3322A5C34894BEB40BEE8B5C55D9F5E
BA49B93DD14AC40A4E4226F5ECD3DAEA01CB2604024ABCDE6BBD5918337528F0
D0C73A81FC12A743C71428599819EDBDA44E136B801A216AAE5168BF1DDF7181
76CF183C5CDCF006E69DC0F5DF0E67B98332731EAF06EDDA69B74D0767754DEA
6F41B19956444E02C24E3C3A0CC1CFCF4A01F9BEFA8EB263C089CE1074C9DD15
F6E002BB180E99068F4C5E280DFA90085DDE5B9EDA1E51C0C8B947175219DC29
4964D501CAA5B86006E358C322B2896A8BB113136337F88C41B0FEEE988003BB
19E97A02E63F8B30EBEE9FCA1B8B7B45FBB21713CCEB7B316717EE859D7C2DA8
3F003A14195495CDA30A41A99E5E09087A89E255BCB6B83201298C09F52673BB
21073D7A313CDC5FBCB16FF1571FF48BB735A82305B707B99B0F3343006CFBE1
0D39328466F0E8CB517109806DD2CB6704EBB0D4389D1217080B72FB5390E6DE
2159D712C43EC39112935BA5FBC2D1C30EE6F51EF111C1F3EDFD1EE09953F10E
FF5F6CDA936A9C1ADFD821E84706606D82771975AB24DFF6BC7E74CC9509265F
6B11B12B80D093764F2321E396514303ACD78C5DA2B784C8F19EB20D25FCECB0
FBCE04628F6D21C498D274ADC1D97A103530EFB969DD821152BA2796146E4272
15C73BEEF20E828A46681B6BDCE89F361E578037E09962E46CCFEBAB841E2977
977BD77AFD260042AFB4E19A95C7D9B71C7D637420B70C1D82F0A2BBD5B56D32
B90E027D459D467C66E0B2E15B678A62E78DCDA3D406E10B619A2FF165209606
EDBFE78E7DF09B18829BE2523F89F383D270C1312811B28CCF45FB16E4806067
890E1B980D5FBE1C676D2D22D0D49C3B5691C1AC279E11EBA4285BA60DAB3979
FBB1642752A12BB4D83D94D9CCB6C0ED8346967ED512997B47C02DA468E1B140
5446D985B9E75A108B79353F658764701CEF19E33CEB900688B76623F07A3504
B11235E05FB023A6E44AEC660E02AD5C0E438F96417979494A189878F20FF7D0
A11571F69B4EC965F20938D79FA4C4E5A2A2C775BC5001E4DA81747FD266C9BF
838F0E570E8CF04E85BA16BBB3123ECF3733A72F551EE8EA5563D046BD8990CA
3F0B2956BD268608F800DF03B45B60BB1B6D62DA735DA6689C2C03F196A3D4A5
5A8DFC7CD8388B36341CDE1B35D1DFC9E58F73978263BB49B5A0E536FA063D6D
8C53508A79C1DE7D8275D41594E6DDDE2D44C7385CC38494DCD832CC99CD15FE
185C146C3B2548A3018AAC559F33FC9278A99F20C9F30363291678A7D920F128
855CDD17E51BD6A8B38A6CA58290D557AFA6B2F76D3C2C0D7C2FEF3CF0E07A07
7A88210B7A95379D2D7E532DD155061B00B7C9892DF4A062BEA11998D025B544
A987BAA117D7314D141F7DEE6553BA479B6B5969C0D267A71A2DD883CF58D8BB
DA154BFC9348A604AD1CD16445122706CFDE69211DA05FF14547300FFAB1FD39
40917542609A189076CCFC5BD40026EE4F33793041E83EF250D5C428B9DB6DEA
C8754AE29EAE5AC87616C0C26855CDB02E65BCDA0274E62FED8EDFD2958C261E
B63108DE7A1F773165050913614F8EF8A85BE29E113D06CC89B12E37B1FA6FDB
0D247F4088BB9B710745EA0567806377C7E031912478F16B0E889127D5F0571E
7392816FCDF281A3C0B28B692C979B4525E8416562C7BC6050F23680C0DA9FF7
E6BF4298E548FE405D01D18D862347BC752EB0EFF7BE8B688A3622826EC83CC4
2DC99E0774AF023B6737631A91A605447FC44BDB516C6C2DA662CD22E3E4A8E7
0082F0C085AF03D89E764E46770A4E67F41A27623712B626E7C8B5F8709BC9CC
5164A7370E155D2359AD152CAC44BEFD085CA5CFA8294D816AB213213CDBCF7C
83ACD62213BF6D8A8C77FE8B206165534B52A965E69AD0F1EC130930C2F34201
4382F21C586BD14FC0185B6DCCAA31E67DFDC33E9675CCD879D1FC8F1048323A
A0A83115E8AED878484FAD3448F4BBFCD659C267CDF7F981B9F838C1352A05CE
F380FE48988629995E3815FF4B2EBA5E902D9C5ED30617417F403ADD5B2908E9
4631A3C11DA4175B9F6383A1E180B72FBD7B5AC95B3FA74D80C291C9516038B2
23C58164BB4CD6A36184D4DF1BE9D5DFB3269E9FE9746E6BAB1E859F47797350
7027EE3270D95EC7BB9535B0EC5D60C91F290C822304AA49E2C20E09C54E03BA
1490E6D02807D9C7A87F8930DA173B4CA5A62F687C9C0E2402AECC20ADAAC3C0
C63CFC3B7ADA39C0AA97CA287AA1D8D4940CD3518AF32E5C3204B59CCE1CB063
63EB36E1DC60B5EFDDDF04A4D7B4A327D228D4B1121B69777874A4F4B89D0ABD
F10E46CF71C05A7C911225D77F4026227BD42F0EBDCBC62BA0AA26111A5FACF3
C6B88BCA14741C1215077A8CE5BD7B6F4912D8BF877A487B252B5C8AF3720D88
63375993CB447759CC506C2FE22FE5659EC9AAF253CF1E33F6EC39837B204FDD
6937F45C869DD22CADA57B2FD435DBE68071D0563B201D364E29610F516671A4
DEA590E5EB0FD33434F389C1A723FC6138CFF4CFD0B06FECFB33D497038A1F42
082A5AED5538D460D3DC8D1AE8ACB8B4E56AABF265FC35C70118E421AD66D3AA
775DFDF9275F1908B0453B07B419015F1BD3EFAEE422ECD766202167DF4DB18E
58917EC6842451E3F7441B4E9161B84F3329A245521FF9BA03A269A0A8702900
2555A09E4503471023C5E8F779061500E5A439E880B3DF385EE784D91E56CE24
40A58D277753A4D9D6A7E2A9CF1252C5CB59E973BB06E726DBE53834FFFAC353
D691D7781D9366CAD15F41F7AA0AEDC115AF57A6320C8F34A80224FEC52CE047
DAB64EBA1EEF23FDD6D15A5E4B14C74EEFBBF007CC14BCD053321843A4D058E2
997B621F6D7A1A52FBD32AE761D29E7A2E61CECCBB294DA4B303547DA7AF872A
F2B85E7C1C3E750A52C070289822BB030286ECF130C54E6609CBF4A5DC01AD6F
3500F327B50EB059E786ECB36B9DC8744E250A9967E7B70BE19A5A755A8EFFBB
AEB86F6B295849968F489FC8D7ABE2A5C860D9EE2A7579FAC7524EE55393019E
EE61EF4B3796F6F20F5345C002EADB545806ED3373D16487801F7A6CFE211D8D
3960EAB46B72FFD337D62DEA0EECDAC0ACC8C1B258E13B0474D956A9A0270655
811051028B571E39D1A96CCF6F085956B0333D16019A6A972910DAAFFEEFAA0C
2F8F059FD614E5C88C16C92401CBEA5732C69BAB87EE2215126F9A9246F14202
27229158747B235AF81D9C07C409CAC342CFC3F4C56D472FCFB5C942F5517FAD
1909D38C455C73A4D397105BB491AC49E08AD9DF0272752554A4EBC8ED55722B
12C8E070FEEA2648A9AE95525065CFD1684ABCA8EDBFB3CC9869F5BEFFCB8676
8D0C654D71C7A68AC30E1CC4C35114DEE607734D0910C30DE2682CCCDCDA6174
77CB5EB50F0CCEDBD79DAA0CF6254C627A1962C49AE4300D566B96C5079D1249
4653479A06865602BC9234D442EE6E8F0858FB954027FDCE0821C9D561A65998
9B17A3A72248A1B841E9404F7E75E89009D83A1E6D82FE09308F4F7DA8B4AEEE
D9241170C74FFC5E9B1D2F70A87D381F424FC2F34BF902F0C3130BB707B8A437
181628681D3D080C14D47A363716B711C2DFC870A1A7E340D504BE0FEABF24B5
BC879E714CDCFD764D8D52A10182F141F0FCC1A424E5D70B18765581F8683A83
5B98A1D4AE5D9CA434A535EEA888124D09D47FDEAF4B0DBC9D59A559B2BDBAC4
8EAA0CF06C0DEEE06BD22862FBB603738B2776D1C11C1CA08BC250CFF4FABA1A
6971678EA3492A1641851FF8280D2C1BDD3E988C192A26EBA06EF157958C1BC0
0554409AD56FE7119BD60FB1C80227D9B633FD5C536A261B9CC6A56073FCDBBD
C0B2F509DE97AF69B284FBB5586F0FF2E48916DB427515DD57356E07653B1B4E
8DA17BB26B03BB06E192A71EF2ADE6B0BCF0115B22E5DC4AC9B7F548EC241A2B
33D3D0AC69A34B5F54605818FC34559A4AD68EAC4323C73ADB5DFCE07CD6B383
450430CF867408666C11C1BC79CDF5E0A2217FFC8F1476909062CA39FF12A6C2
7A359151BB4C2C720ADBC23EE2024F93F343C6CCA44E92445A5927D97FCB8387
218CD94EF127847A48B648FD0B60D05306FDF9D0CCD55FCFA35A91FC4E741A3D
D9230A4862FA16E106C70A097035549861A8B6D57670833F82D0F26D0FC84346
54301BF2589783EAA854204449A841EC5C0A9E9C2DC8A7CFC020FDF6FD6D60F4
F5A5B281ECA6E09709E51366D4768350919E6C0DCA42AFC7E0EEFDEA6BD08DEC
200EDB3A2C7866C977678C571CCC9FFFBCC4CB1538BBAD22C404896C6490EAFC
75CBF6CADA6A6B7EDE547AD884A464DA4611C6F4D6F7526D769E12657A145FBC
518786EF38F5BF06F73DF53FAF013E6207BD0481E9BCAD5A7ACB5C30A9E79E85
CB8BF53846F45871E08EDFCB6F831A69254A546B6DA8EECA492D56B2F9F55B30
54FED70B7EA564D92A65C4DED8966517660EFB9F77E228EA9A4878ED27E515FE
D0D26FEEE69602B2BD58D14026BC03EEDF430B9B73AF085CD308DE598078BF65
5B07CFA214BA3238EE22916DFC64E9156B8CF2C80FA0840C219CDF31D967A978
2C3D1060E25FEFDA9A31D6E8675CCC3778707B01BCBBB9B720B4DB591254AE4F
45B4060BD6DAF8FB6205E89A7B698F0252122B33F45E02D310029B635EA6AC56
160496E102C4FA87EE82799CF60EF3466030710CA44BD9587ABEA3DB9951EE94
DC5F5AB1A615C44A8D3FC6F3A54671AA3376CC292CC9230BF283B612A6AA22E3
6F01DF05AB58428703B5F8FCF7156859F14A2F439FB13CE8590A7BEBAF2770DF
B333EA66621A56159B9F0553670CFCE11E6829DCABA73D9CE75D74A63FE530DD
C122391FE6A514D300575C2EF67386F05A45B15B33F7450CFDEE641C9F45CCFF
5114A2491504BD8B5A21C74224723A954072436EDF60F30CD8AFF952E9BAC607
1BF5B31609AC2AF79ABC77A6717A1AECF7A81906803C622BE0FD99044E1B7AFA
7834A95FE1307D53A8436601EE713742AA95C63E50BF80993281A0613CFF9805
301EF9AFCAECBC483D01113B2BD7AD7DB9DECAE91911EDA99D0874206720A05B
F6F8C7115F449D877F10F7C8C0EC1939A8BA2B477CD2272ACF936CBCBBCEA633
2514500B404210A8D394ABA1B3FCC45EDCC0FC6453406CEE1E199A2ADF708DDD
CAEA17D0A18A938D2430674841E82261237A2792983B25B8B8CA312E0FD4EF89
8C821C238EF04DF7BD7343B7724669B192EFF8F66E8C07CC430D70EB815B1988
90C950FF7906BD790EBD38FC43CA4F59B3F360C66AA7F5E3299C87A5924D9CEA
08972754E1D090E3889B56BFA096258B227B77C30CB80D8452F4D244BAA1E3B2
82FD29E62A82384C35693622073B64561BA02B8D3F7896B300BEDD40C4E26F6B
D63D5B8B42C34172C5F5B536F44B4F3452249DA59C1E7A051B9D7580B45EE76F
2C097B3D9123E213615F55526B5D84723A0D6B9998821A9350D76CBA16B7A865
4C465947C5057E9B1B36E4D572DFB217060FF2853B2E62FBA0D76FAC9701AF19
072AF55CBCC48CA8861B0BAF96DE0813F722DD86A572F602F36E083DFC32E5B1
88AC830369E6CDA2C46A1574A39B61A5EBD0D519ADA5800004429FE7C84BFA04
443334F2AD889E4A3E230D0A9A6EAD304D47A725E21021B82B84CA0A8C1EA072
FB59BCE479D2CC041AE13DDC40D378D93B056E4D96B1E598D949CB50FF97719A
22BFF5D31C9C6C0FF56F9B3DF196373665926442BE76CE28AE3DC8D73A84AF77
A1A9B7F8FC840C450646BE26D2B060C263168EC98F5002F02D3E7B328A87061A
EED8109D87C3B4C7E5E204608458C84ACBB8BEE2F431C43C172F4B2FCD303237
B01E13D2AAAE0E8BEDAF0539F61F720CE7F7788599AAF3FF46CE5AFDA10FE3DF
7D26D98C3AE27C211C8C4FA5132D2B427B8583BA1453E3FA951B817B69BEDF51
BE484A6FA1B22079BB361D05B15CABD469779E277E8E5B8730A2961663C6A192
0E8A4C0BAC128B7D4D61C2AA87093F0D9188350856B2AF2AF9729847B5A4A1E3
7B766568C833B98C74B154278A60CC9849A0B137708F4F07EF69543F130F9658
D7839463DEE6F4059B764CABE282BCF201A00C06829558B71650095D1CA40B94
17A1DB1BC9CFD7A726E5853FD368AC0E231708623163ED2DB636BA3320826933
0C24A4E0B5AF9086B2FF0BBA147BFF00785663883D258292F85CF6014C5C0694
D0F15976CFF33899E6EC7F3B3E52F665739EBA40FD2B9FE2CE494C712C51556C
68D9207104404896DC8452D0F3C5AF89D64754D9F00DB8B4F16252C10944AD2F
24D7331FB56520C15403904AD426E8849C398CCD4F7FB96BC2C4563C7D80C0F4
66B67851DDD3608FC0175F653A26842C9832772C15EB82E86734FF9C269B6E6B
7ECE91BC646C0919C9FF009F156D3D059948E68DF36A2F32777BBD74CFF9C797
041D0A982AB1C0D49991217A399BEF9EB82E6BD016871B1147B362BF40B39A47
B280E21C0DE4F85E72873C443905211783CCC1B4DC552FAE3830ED59A43AB878
15C627822DB3D6E1566AE80DDC6417F31BADA72F9F257D89E3D6A599CC98316C
94774667093B78A0DEB9119BB0F6150E583E0AB51C2D9CE9EDD24FC1FAAD84FE
BC79674BCFA2ADED44359A90D3BC9D49ED0223734E5A7F68B96A1184091D122A
BB1E389576555F3E251647F3EFF443E8CFD42368663888593BECA8DD0F4A2BE1
2342D800225F9CA35FEB2062B3FFC8CEB1EF9BDC5E27B86B5AAF00C4FD7FECE5
60A28F1819655D77676183ABBE7DAEF97170046518FF27E67EEE2AA9B5541F73
799FAF56EC87DF91F6747833E62A193F3DF55D31FFB476B8B54F5F249AD4F434
87F61D3712FACEC07D1070E10DA34D207E2D344277E00DEDB53F6E2B4D0736BF
518605960ED34E950BEE93FCFFCDA7DC7C5761CF541C07473EB703C2B2784740
2CA4B685827479170AE306B675FB4A435B05827CE32E0D7A3E54F783FE3E4B34
2C247891618BBFE3A012DD55FD0AE1B8C194F43CA7F7D91EFE489F63852A12B4
6114BB6BFD37897D8542A37DE12171708D1EFC4777B8EB30EF1C7E458A884F75
0694B2DA98C052BFC0B40FBFCA767F3B1EEA76B1520772E21D799ADE235BE00C
67D41E000B1004E1302D6A3AC105F02D7AB3A1DD266A5E7349145F1547C49AD1
852FE7BF52CDFFB13F08DC13655D7241194A25388FEDA8896EDEB52E51033188
8F63D113F9572C0413F8C790BD5DE8AA993FA0C98C9BB1216EDA7BC3094324CE
A4FD5A9518241B6D46EFBE1744123AC8C0F4CA8C980DB119518F8915D1B3255B
2857A1A2DF3BAFC6F113BDC600A6FA40FCC16D91546EC95BD8940EF1700A5437
08FD91D7ADE548FCA50F7BC06D801AA613EF09BCB258EAEB5620FCF9193E00EC
97487AA4432468CF994F92CBD51443ED5564F7248B3234FF23F23A74A5B94006
A962328555D68A53069963FA36D7A0CB39AA651AAF1C7B11A87394AAF5689551
CF9F260ED0FD35F425F0F8F0992FF91099C74E1A0AB0BA67A4E45306E0646863
CAEFE1DD07EFAFB9C0229B539092CF50A0ECBD1743751B2A5746D139A591AA3C
D97D69E984AE49B4054206AF4126A23FB9D6936078F7F924821ADFE23B36D9B1
2A032418B9321A056670EEA02CD172AF094D307B9A074DA1502ED05F04969D83
194164CF2BE822A540F581EC9293DBB7A4F493722E61DB62F5D21C2EC4FD4DE6
6F78E87A90285ABA840D1A01A52467312C90052D8F2271585D7BD902F471D99E
D216F35513993C9D59D4C890589C7FFC9F6EF171A9A4FA400DB6578089F64CAC
53C721060702EE12C6641799994DEBD48FC6774C31C1486D6B0646AFBEE8172C
D48EFD8B73CE70815EC52057B8749C89D2581040E9CFADDA43C0BE6B4EA4F041
2A0DCAEFA2A20B54EE054AE15F26A7304A9A97B5E49C316042736A73C196D861
8F85AB3F011E787205BFEE7A69EFC526F59DABA970CB94B8CBACF31A8EBD8AB2
67E083E58B1EFDF083A5E8E4B299607534E588FF88BFC22EA09D010E11E6D49C
77FC969D1EC519EE0EEA3ABE6573B3CC1B5C0A74B476430356CDC4BA97840AD7
6C924C0D1697E7A5AB01D4273EFFA969966A789FA2F37D7780893A714E15A869
A760D44D5B355836833BD1FA7CE41B63730CA3AF44EAAC3063B0E652019DA8C9
A7838F8F43509DC67E8DFE3EEFA96E8ABB5CFD28CA18CD9013BC80E575D191CA
3722D2E3950782EB4F63CD5071D346C021BD328951941B644D69538C3D023168
CD87F7D7697DFCC6F2BF094E8EB21476A72B6124E24D2AFEB2FD437AA964A8BB
79B50B784FD9239EEB2738821A8489436ADDAE8FDC8BBD23B356B7A1488750A4
D98DD7966737111A6DD345C74A25AAFF389346BEC4AD125FB66DCA12A960C265
45F4BBCE60EECEEB2B7B9B392B5E0ACA15C2FF5833F897E415393E6B62F58F9D
C86556254A8A71F70C8DA8CD020ED7EF071525CDB93880A24EAEADF171B5C076
37E08C533CE73BE753625DD6DDD8816291EE7725531F8977F6392DE999D149EB
7516379A6FE7C3F1CC174433057C04EC5A0C83CB1E8577E6A96552ED07652914
BF07F2B16E5A8032FCE0B50CB70D4F7E3E5272E57DEB9A22A9CD266753287FAA
1AE38EB626E9A41CDC6BE62BC7B795E3D9E480D3AC9EF4B833D951CEB6073A23
BD8323840FE76938763DA88DC72FE6A7DD768B984FEEFE58A20A741B3E480C41
EB8241AB194C0896546D749C9790693EED6D166CD727639D26DD574C550AA386
4CAD2FE404C29A0011E48D827296938139D9AFB275D369257E42AA6EE954B758
A3ED81F506337B1557E44C36771D1B98B288490A47DAA664E4646B8F09669DDC
B94F7ACDB29826CBAE4EB05F65857EC1CBE59F047E3956309ECAAA9318570D23
9E705A7E0A796B3892A48FC9415E838D72FD3DB1C1D2D773D17B9EFFDF4910FB
17417A40ACE20A956D44079469C84B6C55AE734229625C964C5B35F141AB7338
28BE603192E5E9D8452B79FF383823BC168252F57DC592357BD3C4E4E674798D
1931020E3CBF159A4BD8DB75B87C3C98E8231D2093E8410180C54A379DA75BB9
DEAFCBFFC49BE014D25D83EB3302EF6DC77C07A991FEF25BEF04DBFCD5E9907E
38EB02257D7F32DDC1190AF61B7649435A0810307CC13A1050AFDB5FD2070031
BBBFEE555E7D44CE41C30BB402DA4D3FD3FC0AF52F2190F679B4AE7D8A6F58AD
DB87DD0D883AF60455753850A637565CDD6621C4B1ADE33FD14670C66F070D8C
F7E7607B46F7DE710AF9F15A33360DEA36DDEA3AF6D0325E404404B210C1640B
08B8D586177DB014AB4D745196AAF73F063FCD05C80E19A4165AC73F32D0ED08
C8FD0D0407325DFD8C0D86768E3BEC5E192ACC1FBF937035DB4920F0B8EDA74C
0D4EE4F7AC5252F4EF69BBA047FBA2599562C507EB172FCEC9B7C23EE02FD19C
327134B56197C411E3E343C5AC4319E18341C0A3D1002523E04BE24E0A032DBE
3450095C9B38704024072C5FE89BE9DCCE26E3454258EEFAF7CEFC601FEA3FC2
02C8478B0E1C44B0D90C20D87C8AB980B95A2F77EC3E049D527B3C51560442A1
75D7B399FEC0044612E8EB5CA65ED931CC5E0FE1F28D6565F21DFD87067CC2A5
5B56C2F563CA91270C5367C18CCDD441B277F6083ACC004F7639D008DF75543A
50B6DEAEF112925AE1F57117D2D4C8EE4901443AECD2BACD55B35E87FE7B406E
5F1F232517AA77DD3875AF98FB1FE6FFB3786B274E64D31D345CCA3ECFFCEC8D
83BCED6066F88E24B949F64A0CA1C46310F46B7B5244537DF81FE7DBF593B5C5
63266755B07C1E9658B8DA9F48C8E10FB7F03E5947785C433D4E18A02ABA38F5
5742DC36E4FF07A7074A017D6C2F277AFF0E93C8C4A3E3425FF62BBE155F8C50
D5ACD937150B85ACF4262B137D9E0FAF538F8838EAC8351E58BC51E25FDEDE60
F0532E3B730962F63C8A80ADFCF568BF66A41F3B3AB8D7E33C4FEDDD970231A5
1364D411B0A68EC14DBD5769EE77792DB6ECF45EE980F5283F0BE2ADF32E017E
9EB5E294B9559556A974B886153CE4115E6073611BE138AEBDDA44E8D1AA9ACB
D47096880544484883A0F02FB4B3781CFF5E1D1550A313D6A97A52547DC27269
C1904CB0CD0160136BEE30A0B65D13C464BA4DA424125D1735CDCF888572C3D4
E2F02309DD39DF145253BD827ADB43D157A1BDFCB3233B9397EA3978C657B199
A800BBA9D7715DFC217D2B3A1FE9844D60455F25D896AC099E3A80CF0CDB1089
6E3EF92C7433EE536798FC4EF75EA4F294EA8496D032ABCB2D78109241C460E4
2874131DA8EF2EE615A9975FEE9307549F8FF9D9735387938B15A9B4D9AB149F
E14A7427E3446601A76F2A055394192D922641ADBEDE3875523CDFFF0F3F6E05
F6356D2D249929BA4C2DED2BAA764A41DCB7D0012E402521EA9578696F57047C
7CE41C119A58C91E9E892765A382E750152A94A0A0DABC97B4B2A944138C5413
B31E7C80FE52EE1275B05D19E6DC95D93914B713820ACBD88C252C028E75F84C
6EE21374CA267D25115DD6C4787316CA6991ECD1873495FAA5C7CD44201F5886
E3802DCD4405C722B00404D43FDFBF3FD11EFC363DB28AE740FE049B0DDE72B9
F10BF392EEB7EB8AED2B53A6F2E318CD8AA5CA60411CC615B9778A9B58A16896
9D0184288DDD4D2F6EF0D04B7EDF16EB8849CDBC2C26CD5282FEA79D052D8F22
71585D7BD902F471D99ED216F35513980FFC92CF8BFD11AC59DFF36C25AAA8C7
71A83D9CBB7FAD8A36B344E43F5EE5683E3A7F18BD164E2E92CBD9284247DD8B
CA175C6B403D486712D6978C27F2801FB8B7B66BA1B5466D742363F38ADF7937
A89EE47EAF9B93F804490C80EDA4C7B9E7AA036C519879BD2073F6457537AAAC
9FDDDDB86B8F6978F44EAD1E6C3FCCB186BBE6C20FD49235C7430364163AEC6E
911191B06F159BBBE9A13B9034CF3AFD65DA452D7B64C01A2E0FCC48AEB365AB
9C15BB3FAC62D2051CCCC0A389D730EAD6B05AD28D426B1BDE5B792CAB89DC29
8EF489C1D22AE431B254167ECC64332D75ADAF193E5E9B30FD11F04D70E268F1
D4B5C79323D80E4614DB94C9D754C36E160AF9CECF5AEC6574DFEFBF0B0679C9
41C32D841D4A55DECE2558496E6A5AFE5B58E93F2E2D3DDB352228EAE762E2E5
F3F0D68E3473EBC524734E0DA2BD1A957EC40BEC5ED705F31F64EF53D6303885
63FEDB8468CAA3E1D293B7697284F9D0891867DAEF6A6F1018DB60D5F833010C
C108B716D5DCDE783BD5D837416D3E85CD0D1AA5F35000BB2C95BA01BA7172F4
618CDC774CAC643C8A0519441C6043AFE063AFC4F43A31276A3946D95444CFF4
36EF0E377B78459EB354973435D5593A75071F79CF9F58F15C92A6FBF7BB5ECF
D484E59CDF6ED7F482F6056F4864EAC69C58860CCBD67D5C5D6110DA76A2BE32
CC58D40F3CCA1BD956A5198A8A4C95D7EB3F7FDB5E41BB1C0A46FEF16EBB0A90
50A03B9CA089F7320D1B9BA214E43E83C1FCBECD57318E60EC8FB1123A12157D
E158671515E8FA0324852EF954637D01A19BD70782CA4698C639FE6EC028F530
815D8447A9986794B83227FD4117B27984A141A4B19E695C157650481FF3126B
AE5309893814BA28263EB863D5E0DAE4D6E788F9D862840DCA808B149025C554
1CBEB3E4050202CED6B56AB56737158CF03B694FC508079D3A31AA64CCC959A5
9D93608E66A61B5B69129D74C011E17F9C245290E7FA7D4518CEC7399BA75278
8E65FDD0BC6460759918E9E614F8FE024A7C59EC9ED04BD079834D235D2EB83B
F619817A00CFE9FC5B0A0FDF982B147D22960A5114E47D092A699F1B16C8ED11
5437A8EA8CD328F269965B82EC8B89271D9A6FA754A922516A672CE969C54B33
F97419F753FF9C5850EE37E59A4A3B90EE6AD37857D68E7180ACDE65F8F45846
939F96E456F14CF9522AF6304D471A4D7A6449D75188F3F600D5FE70576EA426
23E9CA7FE32B90D3209091D8931BC21C6F969288B1CFBD88927B6D15C0293B8F
417DA7D574D83165C98E4FCE402EC277BE315B18312C8BE99537C3E44E721A36
1BED6055DBBCA637CCD068A86773A3FB74D01A7D06D59729F7194F9AE5827A5B
89299EC09650AEAD8210F7AC185DD5ED7CA83241B091503FE2B00E5F7579AEF4
9A3D4F24B178201D3D31032AC8A1BB77DD481E807EF825F484120269E4DB591F
812C272C20E6767E45117F52001F9FE1CA39FA3FD96375E2453943787C336806
2D1F5A5E23409DA67158471CDE2C3225FA6E393C673988CAF059815411439812
F73D55BF7E9EB4330844CB6AF35D2AA911687047AA2DEED29B985455F21E9522
5D7DA4780BE7588F2AF6007CEC5F16F1CEEDFE0241704A66122055DBC4CDE23B
8910D6CACAEC65AFA2F6BF9C9FDEA1FAE0D25E6E7B54A05E957A0BE481889125
A9F918B0D589B3F75130C16824C768AF07829359D9585E64390C25DE13AC5F07
F4C13FEE22C049040C5C7CAF309D5C0AD292DE9C9C69D7DAD827883779644A3C
942B0D7D8D298EACD96F05A6FF181B15432E1514664240BA7C78226D4E8ECC5B
15EB17F5DE95F1F507FEC112903F2439C1E08D8924BAEFB126250C706891ED2D
8A5A42889A1E3072B94BA1AD3A9E8CBFA7B542D018A730FF2D47456E33CB6D61
6C62D1528243219321E41EA5FA846C05226796D86CF4415C5B744EE84633BC3D
109747E0911C7859CEB157765BAF324BE7F0C4843DBB1521E14C3D3DD17958D2
E8D1710B7ACCD6CA9477ACBD92D1BA24E033458D3727ED4B961BF049045F8335
AB3A61FB3C873145863BEC1B5E8CAB53041341D06D4C63A99114EFD23133E2FB
8243221A2E8AB1CE13F0AE7941F78325CA190CBB2659BCC601BA85B214C79391
84E93D19A5833FA589993F6D8F839808711285EEBFBC291DEA72A6897F5696C1
27D3C11BF012F62927A6F398BED6F31B395620B82B324356A2D5D8A1DA540D8D
FF75D8E14AED4F06B3F1FB4AB16280601D4308FB33E18A80C7C229F5140D0B98
341339A5470B4C89E24C9D7534D19B71DDF800A4D407601BB632B33F1E4AA978
27FF90E66638778AADBEB1FD0E5F80595162691EF7A85BFCB7899A22941AEE6D
AA90426104738F9FA9A3A1CEADB5689665A133D00285C4FD7E49FA5D2FB56906
1CAE94BD0CED02B3E24B1C4F7EAFD43D3A111D7AC375945F753C283F917F25E3
FE2B7FE624371BD931719C5A9AF7F40BC0D75C77ED2826617D5DA713BB6C808C
884F0E073860F59F088DA06584BE2E6A1DFAC98532A65305D47C7235F2F28343
B0E8DC830511BACB7F2255206DC7521711D4021F5C994CC1BC277FE4513DC210
2D4A6D49F020525426FA67FAFA1E8FE0EE6A8E81E6A3BBF9C1524C164F2CCE9F
72BAEAA3AC1DFCE60C71E20313F9E3AD9DB070509438670D86C1F2F7E12FEE71
0F4CB7B89DF870827681CAE7AB3322A727A6A32D5E34FA090973057AADC1CE90
95C4A9B17C8909097119232B3876EA03A4AB8214ED1B1080A23E22A3B0DC6962
48FABE1876F93CA24CEA8F73468C388A50FA32AAD7B87B3235EFCABD4B500919
0D17EFAF7E8D1F0D615CBD7F3E302E4430D8AF79983D517381D8917171F75B76
060DE2F399E07EBB4E47E0B540816BBC07DC6C0B52D99ECCF89764E3718CF5AA
D7E22764176ECF7E1E27CB13D8DFAD0E258D61B3C4F03884D52A762312B681D4
C1FF1A9FD7104F862054F5817029FFC3116C3C3D0E4E3E15E5CF2FF021CF6AF4
596330893FBCD5AA41457847C5EC09C01622C089AB3CB216A5C27D634730244E
40CE23799373B747725F22F2E37F337A7BA180B0805E3F57AA425F81CB8561C4
A01E067DB113812982E9542EE86C72A3EF8A138E760F4241574033C78F342316
E80E156920B7AD241AB7309430CC88DA5251268355F9F6EB91BB729EEB88138D
8A2F5F6F5CEC17F4DE06460D12DE5D58BA9334E274E26C9B301BAAEE8A0237BD
635B6671F04ADD10C478B7F8D9A562487A9FAD8D2C70CF998EBDD1C6675850CA
8195A4F9FA9C539B62C9F307BDA3A263B7324F231D9898D3B9A1687237C45094
9DFFB4B12CFEF4FBF5EBD18C5BE8703DCB70D690515B24EB2BBF5E377D4DB747
34FAD150363C9DFF5C37A1339AA80EAB9386B024738B7B93D0E7601F1419BF36
A9CBBBDAC38F84D36B6D329ABCADAF9CEB29E09A792E33194C428D22F032CA0D
EABE21398FDA5FBD5500DCA48E4802CE91A96634B8E5E2BCEF8282ACB06F53D5
E9AB73CAB5C8D186AAD463996718C19D155A62D7AE82EAE4C82760C76877837F
8876AD9540ED7DAF335609BD8C25CA1E9C00416731BA7DA2BAD9955F9061A59C
954D39C688341996754D6B44ECEC87E538CD1A138A0F482ECC55ADCD02E5B579
3A42A90C674BE17D468F96194BAB0E7440A2520D39C9B83D7789141CFE611787
C952E7ED9A7C4447E7EEBC31EA5EEE14B739F60D45D102706C99D92E1CA50188
A886A92F74C72430C349E0C6EEA3B4835A64DEE8D4BB1656B5BDC94E1ABF95D3
3B8396AE9B26342CC1D2A284CAC611864B743D5814B07B9FC3ACC17CB6A52859
1EF4D9F9590C15DB00EFEDAA1F5EFA3F7A080233266EB529F20831E8490313BF
C7599FDC7A3CF5B6AF26E79DF060C4E8B3490805B678FCE0E17688A5BD0D79AF
87D099C71FF667B5886008F1F2634C3706C594349F1E95F04ACFA0C5DDA646CA
1EEDC05579757B7F84CF308B047CD43EB1810B30F96DE8440B8B6C0A4A50043A
59F3B636DFD5C095546A121CC80F1E1B7F5A0488144889677B31D3CB6EC495CB
D15CA3930A5FE314E02D56E60B62165B5298BD45CF303DFD961CD5057F44D52C
1B5FCACF66DB19F40821538AB6466492608DE79700A2696D228555A71ECF1ECB
107D887716F94563768073B8C4238F51C1E63C21E29CC31A438AD167AD6C39AA
2FE5CCA6028CB3A7EA6D9B5DC4BE21FD88A9327C3609D8888F174524917B7561
7FF66B0E7AD9B00B33D1D7071FE6B6100A15BA246764EB3E339BF3DA423C82A9
EF28E83FDE0C3C995E7B4F91A596709EE54D544E286F873B83CA675BFB2D7009
0253A42886B8789E949DD0D1F40CF156FAA89645A143B9D6E450E5311B3C8D1E
40676125C5C463F511124CA3AB60BEFBFDDB145500D77A97A8BF392606010F94
4ABA543ADD19D2BCF947E22EA79D2C8F57868E2AAB61A3C1D0EEDD5451CBA7A9
7B8B09755D3D61875115365E93E4896C419CE0ACCAB225D733E123302C0C9B05
4E97386886E8A9E20DC78B53F3E0B671098413E318D9A0B75C53A9D0B81BCCAD
ED6F1559AC779E0392D91D3A0A44AC9125D45E40B5D779A887A15B8604A3224B
C443B7B1339E01F04AE20A95C5E4E518E99528808E4E4702B9EA26AE7D8DBEBC
4C189249BF0EAE8BDB05A6B27B6C63082606B8071E2D8A7EF6E8F024A221794B
75C8B06B4A4BD034E3FFDDF29808CBDB6FD7720E2F4AF7DDD22F1873BDE4D10A
D3383FEA6A7AC505A4349861F3FE8BCDB2B447A5343F8BE685839038CCCDC8A7
7458E3291269248EC598904F2FAB061F27D2DA45CB5AEEB66CE99FBBD9293D62
238EE4A89F0DF2A0805C9B140D8CEB44740442AC4891051195B5BEFBF1EB66E2
E910614F0C02936959E2CDFCCBAB7938F14201CB1E5F4CC8301ED12E93B18927
331E648DB13B40153608AFDA850C48AB8977B7C0726022D0F92B57DF2E14EE7F
6ADE7E2D63CE912E0737BE8AF5BF97FBB814D6AF912DC4ED243A0C650136B8EE
C999DA93F9BC2AFB7D68D16395D93479B3BD866A4BF33913DEB54B4AF3C783EC
747BB813857F88843B1DC8E80EC1BFEB6B123D1F39C0C1ED728808427CE96611
D1F832FA6DB2B87C708B5FE456A79A38623745FC7BC778B3765D421C91593EC9
DC1EBCBA916602E0325211ED8ABF458AAF1086E038BBB6DA094D814CAC463B79
D91A9C6F59F62FE85DC5A5EEAC4DC45B4804B206481EDFB73324B2FE237C2629
902C5B111AD1B21540B6E08039B4E289228BFB8514BF6888BF5344E5F0786C7F
4EF8C2A5A242E84CFD4DC50ADFEA0C2D68BA9EF42F8B7C7BB88C50C6B50764FA
FF860CA83C4A84790EB2CCEFDC74ACDD0A592FFB2DF1672342B98C8FBB28D90B
304D98D75C70732886EFF4E22AAF594FAFA485E2741C8EFD42A1792CE5A2B6C3
25C39CD88E4B559CC1A1A0FBECB0B08026E3115CDBB71E7FE4EDD9144797ED14
879176CD908547BAB0BF4E835461403B9C00A9851FE24686598F875C9C782EB3
9A105A71C22CF37FCB40C435FA3DE2A058EE2076C77C33A93F2FBAECA0A0EA9F
46BD72ECFAAADAFEE78E1D8D2B9E94AF57AE0A20570D8E98052D8F2271585D7B
D902F471D99ED216F355139E3BD00E5FE2BEC73D6522C4A8E557377E04F7B88C
7BDBDAA2F6E859DA087380B82DA15B59A804A5A023FC9DE2A6668FA409AEC2E0
B28F60B44BDF217E8905D79635F37512135AB8E7DD9C1DFE6BC19A289A925087
B578AE7262FC845FCCF787429F4A3995CE61372FBCED3ACFE9F163EFE84E8CB0
1497CB50410DC9BF548AA3400DFB26A3E003F3B3FBBF28863BD0C4165279A8F7
31473B70CD3F5A5CEF3848B76BE67D51ABE9ABDF14AF2990C8304EDFFA803800
B5D37525247C5C189C065B934F1A2ED4ED053A1AD9C8B08F37C8247738575EBB
A55200C3F5E299E0C0F7F1D0C83ECE888457C900E82C4134A938DDDBCA057387
BF1868F8F5FC71B44F27AD672FAB351841C74CAECABF8616AD95FD9ED3B11C91
8BB38D121C0457049F35D5A12BC32207039D9B8637ED00458CE0287B918CA55C
5DD4A52A060D1725C26E6940371EB4FD92136CFD1E03B285AFC3D8A7C81B83F0
D950DAD2F3E94BEBD0090BD9A658969B3BA995F1D6868BFE9F953BF403095D2B
D19712926E230DD02AEAE6461EDD83AC935AF72F0B10EE7934C215451BC9D441
EF8278B9D00EA80BA58FBEEB85E4A31E174DA9330491EE2EAD0AE6BC9EEB6BA3
03B1AA7198D3CD544181F04FEB26263F9CB022B9C791C47877168E8977CDA919
CA86D82794F04E7E98639DB8F640B9C9947F8323A5B324B4DA4F44A5E5FF0885
30D6CFFA37FF627F4756AFF88FF10A172C60310C10FABBB46D336769F99E923C
38341D5FAF91E5BC1FB3E8FD5E3421E82E96046449A558A88D426B6C046E9A08
8FA6A581EB8A78789EFEA3EB8929EF655F1D5D2918BEB0489091AAEDEDF87704
921CCFA16F0DCD60F522EE900DA9BA388E9227FAE260AB5109DB147FD7244018
F9B4B87D407422685D87B84ECF255178D2D2C4B7F7857E7F5572DDA5C0D752C1
B0F86BDE60D7C04D7C218132B4D368014EC017932F7208572B6ED7E848D0957B
B2628ED1A1A33F6AC2CF29F74199D60E0EDEC2BF9E3D71D369639D1E8C4854CF
1D179AC05D5E50D244BC4735C9ED3F75A15C092D571DB75206A5F117077BE5A8
813783C8DBED5C13A2D61AABF004E017597D1E99EDC8908B6062ADC0D448AC88
46364C65202E136D6B857CF251D5885855BD899E83105802E71EA03AAE926A8E
8CEF9A86EA07AB0B7002E40EAF065A2B64176885ACA69F8440838DCF959C9AE2
E3C9076225CEEEED76D619B0F3264E153925BAEFE77ACDFC07B7FEA769AD6DB8
47C5FFBF83A9135CC1969891B05949007FB2D0557A88D362014EDFD3445233A0
3CF4589DC1D014EC3759591AAF9B974EEF817A3B0F0EA37831C6C52A33B45F9C
7B9361F7C7F4EBB939F46ACCC6B8914A8553BE234EBEC0692797103CBDEDCD86
C7C856E9FAAABEAD2039060F8B6BB4C28AB1B9A5AAFB7FB94A95491592B0997E
15984F42D4B724DDEB44FBFE435F9CDEBCB357EBAB1A189F424831F6578541FB
21A36E4C6B880C76E433A346845E31374AFC94A06D60290CD899653D8860F010
BA060FE66293697F07A62418DD31C081D1CD670BD629CEE07E06DF83614E2E11
CBA56062181F7F0BC73F1D01D1487F4031379DB5C7666F555041C9F910925C37
EABD8B2A042FABFF483882103582209E9DB25DC4711E4D3BA60B95605DA55C67
C5F6EF7AE2049EA3D2EEF61136E5C76F823D29D35078412923DBB3A32176EFC4
9F7426BA1AE7D18A9445698A365141BDF48E56E93313DFAAC6BBA86ACEDC4003
6200C3BAE0532181AC9590FD07F6CB86871B8015310B7CCD19092E38926AF357
71F961E92D1CB0373B54B48A334BC58D1E56137BCCE787FED6B64EB4749884F9
6854C277C63649A9845BBFD1CAC6AC65DDA53F44B6905704CF35D7BF8C3CB2AF
BE30969D6E2DE791D9F3B2BAC8FBED7AE0AA0A7DED469C64A531CE51B62E028C
3D50BE01FC9CD5D5F36E28DADB469641E146819FA3CDFD931CCC6900B258DECD
C3E77C89E414D0BC8963372E8DA264DC745C7970A1CCC9F3927A206865169E9E
7AB8A1ACCA1756D2D72F0D4A81042FCDF45C5973B8B17E13CCBC9CC1FDEA4350
EF9A72F38FEA8A16EAFDAD510D721956F7200EAE8F93ED95AE429D7CCFAB1C5D
F203CAB41F0E6C48E1704F311F51451DD607A8AD5BC87234D5594796765CBDDE
8E2C7662221E2CBE5CB00A0DF7B4DF34233D0713A6DBF2A6FF6B33BD3E063B3E
1518E734590D1F8326FAA17EAB734FD330D412A44AA8D986FADD7D7ABF910EE4
798D537E8542C599D4E6BA6F9ECDE9166094B03E1B344E3B29A9DD939BA4C4B3
202B86C5F5D55CA10F93D53C35497F93A5550CD9DE284729459FB1498EBB9CA6
80A624C20CE95AA5B5D4FA8B062D4584FC5F88DC7ABF2F42F1418BDFAB8210BA
22E310ABDD94D10267153A360C9C94BD89DFADB571089337302811622E4A7A73
B41920BA2F51F6627DBC1F119BA6B044935CE6DC91D4F8B7800A05DECB300CD7
A8C38D774B6631852F2D4A4D45BAA85754EDDF9EC01F28EC7B1CB252FB5B299B
012DCADFEB8FE99007AC7E0C796555994A6F8BF58921929EE1D3B4A47E26C446
E0B8F2BECEC0A03F4EACCBAE584E51CC1432C5F44E74E3693663C3C162665EAA
2F25BCDC92F98CFF9F3D5881095B96FBB30E84E409D3367642EEAE54372558F0
0F79493DC9242D937E7A509DC68B52DF7F950CE1BDB15548CAD879752198F7FF
B976D00FD12DDBC962AD844443159BC389C9D5F00C72BAF25CD74F91C9239CF4
C16C523352299DA2A220986828A3C2C89F64B7426E0DDEC4F73789601E45AA1A
D96384134925909155C60AD3A77AEC843DC75C97EACBCC7F5C2AB98C19276A10
4C8770D3E62C7EEA9759D337AF2DFC0B249362BF1999B6EB81DCFCDA69E68F2A
60A847C75B07B7093D9CE3EB8C164A42676C4C753AFBE1C000104B8BE03F7387
C697011834635F86095CF4ACDCC4CE67F85FEF8673DC54EF6509D02C6FEF286C
526C01951339116CFFE2D1DE3A9C4D5F986B5B114CE454186605D3E227ADCD2E
2FB1CA1517AC15DEB0BCCF94CE83436E9CE92DC277BE315B18312C8BE99537C3
E44E721A361BEFDA37FA696DA3480C857B7E2F12318F34862A3CE07B5C2D2E00
3885443D4B789F3B5981DFEDFED146296AA6AFAD30AE820590CF22DA6BD5621A
494EA63AB3321C9FE1D434901BF499128ED228A0548CD9FCD5194B302D289DE8
734C471B6800267C03E9D494AE9808EE75928C6DB7B93D5967828D60CC8C0C17
92CEF900D2AB0171C4832ADB909B1C5F1946460795E0B5295B835DBFF1DB3688
119BEC3C1B8315BF63C3BA9B849EDD5F620C7E451943A334C9C9D3472BEA86D0
DA84B4059D9BD98E4777F4FAB7F2DF5D6DB3041CFECCC768588BD38F0FE2F105
BBCE9DE25A558D69FB699E5EF78ECB6C3E02F2391C4FFAAD44E4503592F99F80
3624EDA5DA0FD71DE95427E61B9B2AC01A01B563FB3A21150ECB02E34FB17C30
1764186397EE9D412FD0F9478322215E9F59E69396C35AC4097C4B640C2232DB
38E4735EC693888CB7590966A0B7ABA948A2DD4999323D8B4FF8129A8EEC3900
A00CCB026E694CD7890B812141083A67AE2001F137F7BBC1C5B6821792910DA1
123723667CAA346973A0F5066F1FE1971379E54E864D69A043327A588B8C5B1C
D693757C3A5B86E2A14736C488FC252FF5B2D5F53DF4BE1A7606D112DC3AD11F
CACC031B2CAF4126501FB9071E10C2DA4065A3082CF1D067B1D09AB23E7EF673
45130FCE98D14DCD6AD908C52C268EEE5C776507CBFFD885C109EB32CE516270
1D501D27B61F029D08D9A281520C4A3B4127C06741F0F65CBCF0B1E400E9F96C
C34E7E2C3CCF88A517FE6F9C5ABDAEB9CA4954AD9069797717CC0B929BABA88F
67E4E4147BD5D431460E2842F0FE03D8D9746857EC281AB2A2C072256754C402
90FC6BD7E6D48C69F042F7A5179B5A019E77520327CCB89B0EB07AE1EC07FD93
D19F9C0A6CDE25372FAA078DC8AAB00146550EE703A14B531D522F882D145F3F
0029A07BA8C9297BF8B0B016EDCAF80B94898F1DECA223B4FB7B82B0FE9A4F57
10BCE3806379889D6DFEEE7989DCEE471A182A20ADC94372BBC5E28B0E25A6DC
9E70DA6337D97ED7C7573810CA1DF34AFF9006B3F20016E818B9F06ABD24C184
3393364189AA8E895784B9D744247FC4DD5575318E1A50D2BE0B7AEB1B5A03B7
A717E254192D14BBA2CED7AE52D59A8AF83E5901B9DF69318790CC766E7D5345
1C02C6F64C0C9ADB5FDF21E5146709D0DB32D2DBF6C4CD3674C0D5F9E843D511
41B789F15A6E67A8BA6CF7C24249DA6824C9D1255630E5544FD39421BCD57CA7
56D71EAC0FE07D857B15464E7DC2E8F4F4B83CFF8B1EA27CF25FC106E7D9DB85
87895C5C402C2B09D4D592EDAA637B4E4E7D72811A0FA12A092840A740F3C75A
30C1B241A0DFA7D3C1E1250364FE5AC95D316535E1AA189B13BA39FE835F68F0
9F7C891290A2643009F7C21A10C45E2BD3C34398090308D9352E7E4E5DDA08D3
8CF2E05A5712D191D61A11573D2835DF0D37360A9B5DE91E2557AB5F1B0A2DBF
CF2677B16B4C3933695839961674CE2B5AEF26AFE67D42F9BEDCE5884443D5A0
81512395BBE9E6A0EECBC135A3CB003C7D49723CB3509F29909A009B6625CD53
9E9581A74A66339B839947E1E27B03814F81700A47C3C7717647F565FD408DEA
EB5EAB6FE08372EF4D4C1E27E7E8DAD4932B91F6629398A701E6BEB6D52F1957
018202E86EDAD18163EAC0A67899ACFC1C386F8B261FABD320AB8EDEC4834A5A
1D1078DCC4444EE308B8A5AAAEEF347E3A8475BE5F3E71E7393392A0FE492855
6628295F5FCDCFA443C2122F18ABCC0D24CC8C08E7076D8D7079F3CCBEBC1A11
72A308FC31A15F849FB1CE99941EA08B8E43466E12612ACA56B94936097F526D
D829777825FB6E2A4FC5AF0026BBB72F5EF0C8BA95657AAB7BF5847FC1424ABD
6937BE23F6B76D59D5AF0A735C70D77EBD7BB87BBE1AA727D8BB906368EC67FF
12532862EC8152A9452C092484FA6FAA3563BEF5274014BAC2CEBF33AFD5287F
A97D0495E28C71292C97DC6B48A07DF21FD8F16044FBD1A04DA19237266B30CF
225539851E159F9244B06E3B862DA49BE03909E73ED043B4543AAFD096F79229
E0B5E31F2882D3D5858010A8C8761F449B56CE5E13FDCD7EB703F36F308988A3
88BB4C0F88B31D6D2EEE7740053F230E397E8DA92F79B902825701AB3303B5A7
4EEA27ACF8CD9330D9D77B4EF566497DF949ACBAC3E7CE7380CD2C77780C384E
F70B35FA7E691B0B202F84FE169489381272DC315A0FD73F7B98335D153A156A
E5DF8100F3B17B74624263E1E715E49606545C4E33ECB68058293432B655102C
D293D39A70FC89AC2D82DB7360352D5D4D2555A2E8E2B29CAA60B524484BA999
9FF2A159BE01F6E9A1E154D0E43853070804002E9D3C7085AD08AA9B413E51EC
8FC02862E2233F82DC501C6BB64C883C1352A17BA8CF98E24E674AA33C84A193
4AFB8176676696546AEDDCD7102E1050B2576261D204B3F0A740EE764F3DC5B0
7CEB0E572844C4F9AFCA8A4AD365C79B4CA70A54AE7DDFED2ADDBC560FBBF164
FC63EDC91C4B10E9BBA0C2816C898FA51E4213565B1EAD360BA527C4A02D619E
7247D64852C9A554DB05356BEF57A03A2B2A94C9E3F324BE1B8A4F4F0C2FC803
5F3C3EC31DFA707E711EA274DB56D23761F729B11F65A7CDEA3C1F1EFE20BF9D
A6557EE5A2681D05CE5A20D5E64C2A06954CED70359F475C7DE11A0C778280B0
F571421848CBE3E69B5B92C324137BC5E3133136F7878B350515149871D09AF4
C52D223D4DCC9E1E936F736C9C60A4281793344FA5B0B75AA5C299FC5DE768C2
E4E8A64E8A9DEEAAAEF9B88DBE319ED576
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans10-Regular
%!PS-AdobeFont-1.0: LMSans10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans10-Regular known{/LMSans10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans10-Regular)readonly def
/FamilyName(LMSans10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMSans10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-420 -309 1431 1154}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFBD8A43517ED5F05168EBF9D3AFE
25EC2992AF87F286EB5CBCB7AB5454926B000DE86BC7DC7722EA9CC5AF351D71
F88C22A045179501515ECAEDA3F7CF9A23FF4ED29532BCC5A2D9C4566653DC0B
F99B58B303B412848BFDFCDC0BB4CB9FDF30F98236F5A2863FD3E28016CB2182
2E10F5EC6419BBDF2A9031E1EA217B147A06BABF1F87C9585634C5265AD31FFB
EB313C8110270894F41E54896FAE4A5E1A9B04BB8EE53CB5F143D8A3B77AC1B9
96AEFAEB5EA99D855A53026FDEE6A856D3616D7EA42379EC96B931867D9E55CE
3ECD8877C379F6C2FB63E92F146942350BF980AF3D7DE17DC4C2E4B304AFEFB6
F4A34CB06164596B7DF119147C59AA2A1A8D448EB219B2682388F94393CF4D74
532926ED5F2B9D281EF3324258F963D1A460D08DBF08127EE66D40C3C74B98AA
22B9AD6BB84113F84B085EFD4982BFBC507D1215DF109AC39E0B12230FD6DF02
C4B69CAB0B3375C9924071A89A799AFAAC3EE2010B8FC82E42BCBDF021C9DF72
D2D02FBD2CD3E161AF409AFC0828954F2BF56A15E1ABC0815ADB9C244B0AED7F
4B9A54CFA2A286FB4D9DE215B8B5879444B3E683FCAA95D0F1520A716BF2325E
E76716BB5C5DB5600A7CAD11F019AD5B3965B61494D228A3473256E4B8B22A6E
08F055AA199E8E9FB2B6F04B01BC31664D95FE7CAE16648E0344934054BCB06E
44A33F278B8A2215F77018BE752B8FBD6518461CCFAF61F07032398367B284D0
B0AAEF9509F632534C7084BEA8B52EFAF676C38D4A720D4078C0B3B525B7178D
9F85BD44B13272DA283BEA7AC239A3E1A0FEAFD3E9F7AEC9CE3296A054919E74
51FDCDA8344A2E134E285D682648203E81A5343EB6EB96FB42F1034835DD0440
3968C3E86CB7B20B53F9CF8FCB188D635FE58370AEB11453FE69A0DB8341039F
EA654B8FD7323E5536E130FA10100643C234CBDFB8E1CAF1E0C1D9073C3299A0
24F2E4D71EA82005EA002B65E904A046FE96653F266B625D332C961EB94026A1
3E2C52BF1DAEEC9F50E53B51DD597D57B61C96A427B9A6E85E6DCF6D389B34C8
24D359097AA8BA9219D082CE150C383C7A35A06B7C74B7991E1FCE71517AA0E4
AB9AB75715DD53E616CBD344CE7D714BEAE2710FA343A595982F0AB9BFDE1C2D
1749DC63457405359DC4DA4D31CD388EA7D4BFDA5D2D45C0B5F7B1FF17874AA7
CC620939F3BA8AA5ABC54265B68DE81582F0FA4728B81578FC2EB39C989C68DC
7DB84DEB6DA73092F21F04F718009DBA58BF4FFAE24907573C2C7A684F5B3391
8BCBDC61EB37D5A154996A65A1606C0E1387DD54F5C8BD071C4E9A73D2A62839
2368D68C28ED60CDCE0CD13F54F0F6F9B8AA15581085459FE250BBBC4D930258
426AE5F0EE8933D269E90877555B1E9AF694D44B85295968D0CB1FAD3420926C
4455FE7FCBE124CB47C28D01A91B690FA50680F1872B0C648C191F49B0445E4D
9172E116886714ACD5D2BB98B011650B2A5D8B881D6854DA373E852C74B1D27C
25684C3B97F38034E0EB09FFF000CD16DCD5ED06EC4F5E8A91F925D6B528BC0F
957029EF80058433952B698525612082298F0E6E36968C8EE2116E5F5C2F25A5
4FE587E55C037EDF4C9BC1D95C48519CD63CE8E38A742078EF5DF4BCEFC85437
AD3A71B378B00586F8A890443897F479F5C27BAC920128ED98716C9F052D6C66
D3FAEE0166ADE5F16BE5F1C91532AF97ED907BC5FAFBAAE31FCE73C77BFD275F
6CD467E0DF4748B39BBE76D32933BFB3185C3972FFB25E95192E5B67823F69FA
949C086BE1D7B158D0138AE4FD28F5D5BC258A8D370AFF7408A8F64606BD96D7
A485AF9AEFA3D62221703B061F597E967E08AE7D12FE930AC07EF3E7DF5451C2
0901F88098B1C882BBD0B15CF1E3764FF0C956378CF26E8435CCC8FBCAF232FC
4C567CFD7F82EE726DBE6FC611C7B64B44F02B39F48375A7D75BC37FEB2784C1
A15D63FC81D82CC875B1AAF3E7D136D5F64A21F7629A7354F33859FD9E1D5455
234F366F8919BBA377177966FC45FBC7C446AD7AD4B729CC8A83FE931F3FAA1B
F231CE07215FA15E294C42865BCF549350CB0F18A3BAE861023545189BD8A3B1
35FE7050A6DD93D6CB6FECC4ABD920CA5BDF2CC4DEF46FD4A183EB07660D60FE
47A9F2F6BF055A524058940BCF1CA8D16D9A2D6E64C226B1310CBA00608A4B24
045FB082AB4FFE58DDE52D901645631CA225811B174959C0DCBC8B95F1B879C0
5F11D522DD7FB5C5BC6F1F91660E29A76141D7A01DA02AC41EE688184BFE6641
C0D34DC5F77FEB37954182BC69FFA69B14BBD009A0C0F023D4D6706CCC054504
C0F6DB1FD83F056774CC7F2283B249B075479601A2718EC6D982C26C96439392
577194BE04D971C724CF4A112B6D4E11ABFAF29103ABF419D2F80488457BB679
BCD8BD13107973003A71F5147CA479EFC11349641576117EACDA8787FF9BACD7
8AD9237044496B324EE53A96830841499F9FC786D3256B046F7E559C28613174
D8876188AEE1C0B9BB4BE6F66BCEF2C09E11241CEA22C286B7F058E8F48EBFC3
6AAD3511F899A936E725FB0D17C742914ABDABBAFABF6A32A5F7775B5C0CAE39
AA8A6C2BBD4F5EC4370F3F71E5D6066601C018ECD5652B7FA2CED186FB34648D
5ACF1D3BBE3804C99B2005FA7E0F011393BED1C39420BFA3EDA081AA379231DB
5D3C332E6A7301F5C7C276F7365F6850198D96C8EB6D6921D08C663DB0699229
2E4EE841E84D80C291C9516038B67996B8930BAC7BF095200979771AEE3F8BB7
4D1B19151CB8A8CB6EA47F3B1F8BB5B13D7B90A4F95E54057538A64DA6519EE8
28AEFE91DCBB846531D5935D9EE074435A6FCF0C7E4C041BB3ABCC68CEAEE80B
1BD2C32B1CB4FEA12D19A76772C6F496EF2D2E5A6DE68E1C96E222B0F0964D1F
FF7A18A4EDD38ADCDD0BC65B870B80ED11E59D700348A585D49827535E9EFEA0
E51924EA6348577FEED9DEB049F694EB60119321915053B78A6A20247B49CE41
0908042ACDE9414264C06DDC2E17F44D2828175BF383AD06F224BB9C8438B780
DD70FD1BAFA2CFDE8A20546520EF3367BEBCD4324290408466080E03ADD27601
ECC2DFEB5A9335A6FACCC611864B743D5814B07B9FC3ACC17CB6A528591EF76C
8CB9A72C46083DD42729C37C41DB7347D16B9C46A30F5E8199D0EEB9742EB0F6
BE1DA71827BC04AEB3C5987BDB800DA1C4306AC740184CB367D70D8AB7DA9E06
1A3B883C65909EA0D9D322E686D6BFC47B65841457E0313B5274F487A92ECE96
7BA1132703A2FE3118D9ACD7B363AAEF5CA4DA0F8986EB1AED17F3C269A149DF
505817CF5FCBEB7DD5871EDA1C1A7482861DA53178989638A37897AA769D74E0
B3A299DD94B310B074577EF9C645314BAC0C5D26C1076AA31C8E894214A75700
7424641F740EC5307A40735A718B0906470F7AB860E131ED9AE9AE5186E222EF
53C533AF3B254B6E22C61E323845F40614C39B453620EB9D2066001BE1BFEEAF
8F8A91E309075446D1E6DFCB130E3C86A8DF932280BC552ECD04E2C33B76A0F6
172098AA7CF9AB9273AFE5819BE1D31040559F763E95CFE230DB6B35C87C0609
82F2756FC051C96E30FFAEDB24B156B0A7B17D163C42C5FEB387AF7BE3FEDF65
E84A150311D9DE505B356951C13DA10A3EF094840AFE537D1A31C200F6E27BB3
5E591601EBFF9580F378E3BF2E505BAFC7ECC4FF008A8123FAD0B30DFAF71721
1AC591D8C60B234F77CE6C6B2AC1A3E7DEC936D545E9C61BCFD3D02D048B943D
50B0081B2AF62392F4313D14413F87793CA934F06A27C78C5122CD9EC73E29A9
12FCB1B66C47A4205BEF37C9A723C97E1E7DB9D79E662F55F590C7B904D64166
FF0A87986CC9B6EA75BEE376DF70F36340D8417D27A83D007491C542505F3BD5
D8CA173653E1733940CDBEC9B476678A7BCD0C6AACB2EA3763E9450DBDE6163D
435C4B87391B48D38FA183FD1F5F5E1CE7CDCEE753A4F34FEA0B2C6B2E0B3D10
C37BBE0EA117C5B0FEF0DC222600B4AADD0F5E3BE26F746525FF88AA2E75E37D
8697F6FCF66C28E1A26EFA8F9EC9834A8D9C9B376D9B539BEDFBE4BF99F3743B
19FC705F51E4142EB9C98FBE9373D36B27E5C562ADF6F7D77789C0DC1F4A6B57
C9106D3B5B022409B7B1AC6BD335E5084E8F8E2DAB2C25D461E2DBAFA96610EA
EE8F5F1E1EFB7AF0F1EFF4F1FD4C20B8E3F22CE2C0394A4E3B3C0AB0A894F08D
7774102350E15460EB209E5D38A51E71A915FB663A04001D43A504ABC776456B
69DDCA3846915FDA3D82FC347F0D24314DFB378B7F001843D2ECC2E3811089AF
F3E608D224AAB01DCAE309E0AFC3DC53982F11B7020A2D36E903F851A54EFE91
D6C9987BD11BC7121E11712C9DB2DD051A85066E4C8A831785480F24BEDA16D9
6BEDA842C9B8078D60E5FA106E3980191A94D717CFA1598DEFC33624D698D3FA
83EDC6E254041751BFB44A0A88979A0D9076C66B4B3E0F2B45DFA048BAAED08E
73F721BBCC26CBB47A317480DAFB142380C6AB2D980DBBB869C08B929591DC20
A23F814F53B9901E96474F7FFAC316456FA5E802766ADFE485B5D572F1CAE6CC
1151D41BEA93204E6AD3AADA6F2415A8BCD5C987B6603A73297761AA5581CF81
98041C66E6A3601D9EA9E9A5479F057BA99AE776E482E332FC6F4EBD5E295210
6A7775E1C67BDE0D385104C7C0730BEF94DF3D9BB2161B44D67713C9A925DD73
C4C95CF2906028E08CB5287A726F70F66E2A63C856C853C3754756D2FBD0636C
61A841FD9A5DD8786EFEB0341790224929C26CD5771AE5B8D8A2DE1B513A2DDA
4538BD974A1B6EADFE9F84A7C5DC8F16E3BE72DB76EBDD3B6D382A015F745E94
13590B9E26D958676C71FDA5E29DF4C794A4FA812B13AD32B28BC126F049CFB1
A8C60E56234CFD61340010CE1C184163D0934B017CEBA3A38EE6BA2063A650CB
C87EB9D1C2DBC35274D9A9522AB5851F8574AD1CFF3581FBBC1DFC0472AEAD16
2D29F9FA78CDB32A0060FBE6744617685896EB1FE7188F329E2CDA61D7589E2C
45A6B2402D0FC042A560606B3B2D3EFDA6667CFD49D2238D55D45C48100D4763
E25A846DE436BE650FC8CACE55B67C8626FF33812B10E97D8E64D01390E9E92F
B6FA21943BA9C3AA45E950AA1E21B4643D9B7EC3B35E1FBAF4933DB2EDB0A303
4370710B6354881B07218CA48BC688FB299CEB1030A8A9959F30E50FE596E840
3631869981BFEE1D0526B20FB55FBF14E252460D7E1A708B7D0EFB2B5FF55F9E
4571C466AF1F95C789125BC27FB4A991C45634B477D3BB3732E514A38842B97F
DCA298C41A6F6798C5361119B81C6191E2BC7EB3D1D1FD16155510EA7F6410E1
511C924FA76B3CACD433D7CAFB950DF5FD1CFDF348B8A1F08379922A63753F51
9B5BCF07AC8B45C2A83664140E70CA62DCB3153FDBECF5E54E2CBE14A20F56A2
7B70B9C7DCBE9300AA28279F05232486F108053A082AF365FDE86FA40B544AB6
D61B1208360D54FB3283AD67590ADEEA3F5BEE429ECC2B520F9FB1B78757A4ED
5C2344F44E27B6BDB6C1C4998E384D28FD5180F75EEF61BE7242619B6D005F2D
6E3DF4B34F48600A144502EC6C0E97C248374359C89C36A60A26E9625E1034CC
A473A6A7414F9062FDD08665FFBDE4E328104766DABA0A344DC4E5319F030519
9F5EB9028A18630615DF446C732E191427FC63A7A675AE7AAC016AF5F6054376
893F64D24DDE0E0560100742C0C991B274461FC1E88B8BAC63A006735A03AA2C
8633A9C8DAB4EA2F4536F31F7CF7D9EABCB9960BD4C526766BCE7977AF4C2C58
DD5FF4A21DF1D7B0A9889D63BE4846B7575525C41ACDDB5CD7B1CBFAF76EE833
E519C3715CFF2AC3880ECFA0EDDF6A0122789BF66501B14680A3B9650D6FB17F
9CE59391338C51207B01ED36B53F1E1FA003F01AE0C0D9E3811F6D24F00B3EE5
8C56CC7E9CF8704FFCADC28B28291F60394C911E30A29AFA3052DFAC06AE408C
0960D33EEE87547541F53976C86DC1EF079B38B28705E2C4DFFE0AF6DB142F9D
944983B19A5C42053282E1FD0C7B97CC824F55F98CE5C578A52FF470E124B6A0
9DF13CB32790D8A7479D926E7CF5389915DF462574F4AEEE796867841E1A7490
84C0602F13B2F4140A0A7DE0827C130A28C0A71C1499CEF50F2E8C9742C8432A
AAB19E4EF00097ABAC30EE74060BE1BCD51B500B94E95873D7CFA0FC2670B5D3
780ECD1635CCE3A881E4A568FBBAAA0E7F028E8DB80D8A9043A119EBA19AC846
7D2367BCF57BAA6A177DA4CC2B5E5837A2E003966623A913BE45C7B3BE6E517C
5B1DA084C4B6EEB1852D1EAD0363A7BBEC37DA0BFA8DE172104A59134C57CD5C
D0305BBF875D7087C120EAC6A406785CB1A1B94516D4BBF6F6B68F3B1F7AA8E8
E422D70709254EEF9476C91C59EEEF6DDDC9E7C614DB80E5F9DE1E3B8B9659D7
809E6D1E9A08259CC88561A4BAA346307E3BD497D7F1E2F51B557FEB6AA32E84
F0F9ADDD15D431A70FC1CA00F7B9E8BF2C3DAB0BF069AD424E64221AF95892D0
B01D38FEB55D42221B02B0A538758B3AA0108574C5FB78BE0E8615EACD456739
84D60813AFAF601CCCF53F7D922007B1DE3B1371305AB9DE7FA6560AE4DE1B9A
FE745FDD97A8AB335A47E3505ABAAE079ECDBFC25ECADA33E3F6D66E6A404512
EA065022CD86A78FAD31A981655ADE7177F5966ECD7319CC2ECC6B645F3DF8D3
666728FD0CDF7BF8C6BAFEFADFB285A85B65D7C84599869222D13CFDF5992E15
96F11F87ED91ACC7F8A15BA7048BA6CE8FAB8659B7C703AB24CC6AA36A96D66D
67F077FD6D0977E8036AC5E14B9F6330FAC9972903C2C35C5D1483348AAAAF5D
026B3C9FE4AB485221FB3FB929400C555EEFC6781E5D8E0217FF657475174496
299457BECACD36404D977C451928DEAEEE05742C16C60A43B2D13C5AC04DC659
668C04C51F1913FF92AF59F04ABA445FF958E4CA098C9D022FF49744F3F1DF36
EE08F00707EC53E1CF114795631E3B14687B9E351F1722E66E8F8981AF7707EE
C32DFC80408D750304E9FF543B7871FC1E8DA934451F045700730153B1064BCE
1B37E48BACC0B12C70FFED18061145BAD931651A4B1EFCDBAA4C0089676139B9
5B6170A1856367EE3FBBBB32173FB9117613E2F558D269B00092DCE88C14EDCB
7AA60FF4580A4A2E016B5FEADE1A79C0AFAD4A873434BA54F34C03FEE3C7A926
3975B9984B5742AD57C699291604A091B9721A0FB87BBE7530ED3C037A517E7F
4D92C7AB7C869519F0A24AC76F9D709E512323E167B6081364D2B3D1ECB1C5FB
0B5D8575997D6B8A980952988DCE4C63B64EBF066CE4E6A9D2F69270AC08A9BC
2BB7783E87F35E9752D76D9E7A10EC566503CEF9340F82F0E079F1C7200DA0E6
977B036E69FAE4F0349A71216EF16A28469B6B0C248EEC80946CB3D48F2F3446
B177BFFBD9B94C2C008FF74A20138BEB2D0F6548A68C4F8F52F0A87021F773E8
44F7E60E12E4EFF739FC19421FA0D6027EF8C615112A29AD57AF9DCF94E0A79A
75B1BA401B7C66DE659436405B1F8692E1E8CBC91D058E8E2B3D65611110CF0C
3FA0AEF50E284BCE7CD483AA1F6F7C9417F1CD89DDDB2D5CA8BE744B66F29144
8A23931ABF77E16D1B0387843CD39A2AF0EC9B516773068A50CF1F984E972E62
8C1884D4C6CB1879CF83861B97DF33C24A26C32A540E57220AD7ED50090ECB75
DCE613E85695DD82B9077118A042EB52EB7800276E7502D9FDA8FECDA71F649E
B3C250BFF809D81E427E3BF24E86F01FB9B1973A7DD95352BF1532EB87DC7346
FD25DA57E0023803BCD3AE6368624B33BF71ED24A3FE3B2B5EC0FCF23F40210A
D2AA6E54311C5D8B76218DE43DA4233272D106DB6E122547B3B8A76671E69A4A
EEC0DFD78D5F4DD45FD4B7B6E0580904A27FB07FF02D4882FEEC8C946AE9A3B8
83E515D1C4E5829166B8DBBB1DD94846295093671BB7A2FFB0FFC63B7D9F12B2
F4A61E66537C09C6F5899EB14AAA9752283E94DAA8F0389585B31F61BDDBCAFC
8AB6EC4502F736F76AEB861A3516C023DD8E36C09D32146860F07C6E49ABE459
4E37BDC0C07689341A8D719859D4BBF338EFAC34668DCDFD42ADE014DD113621
E5A4445493171CA3A4439C3B8653C05986E9A6CBCE3163D7E3302867D2027B19
8F10AB9C32AFE6492E434EAD6F8D9FC4052DB8D75FD0F744A1470A7A67AA5644
EAF920C037564EACCE768714D7430BE1825C90D88DF40E76FC4942E026CD4846
D3276CEA9AED7E1958A2844855CA7F355E4F2C4D6F555DAC9A6D17C263F63D55
D6424C5B39956BE6CBEB98041B197FACD07A7E4A5D5A409438139FFB5BF8444C
C1E1EF1C16C9D6C649D00B22385B47D18D07C026F1760854F731043BADC914D4
89B407CFA86EBC251B22ADA57600D753A9E426992ED6BC8BEFEEAD4C4C47DA2B
391A8E87F2C6E50D86A356603A8642D8BBA6EC591279CFF261C7D433B2ABE29D
96E5720E9ED02B5AFF5A62BD50BAEA04E96DC81F6F9F742A10CFFDABEB160120
F8B488B6F5A8EF8D69FEF91E13323FAE6EAAC2E65C99FE96F0DB34732D1EA6B3
2230B3EE7BC61EF207D899B7132974C601B6FA29471DC34814FC81A1E1A5155A
1B3BBDBF3A63719D837EB628627743C1E7186CFC7CBA384156B71F03B1A9968E
53004D5D0561510D62F881B123F69BEB8A88BE7913502E5684A8BF4031B2FF05
CF369207AA6B9DA46C51F1EFB3D014219FFB966E070D8BE66F1F0D82231A371B
2A470A2AF01F683AAA25B2BB44126FCB64BBCEBDBC0C99138A50E5C0F57977D9
29DC9CC209419CD79E67394AEC64377457821CDB3B15AA06EF3C513628001B9E
8FB902DEB084FA4170CF621599E3A951D6F91497E97C252D233534F47521E168
D225F364D6DD46EC320786C536C7CBB691860B26161029D105F12823051145CA
88593FD61E5A0DC97EA2E4AA2D6C07BC29770D9CCB62135BF116DD8A23AD2C2B
39CE01BDF9463E1A83E05E29994EBA7BFA669EBE57C23DA2FB25FBFCA987D6EA
78D7CB46A02F9EC1E7C10945EC34DCAF6612217ED3BFBAF6B3769B667D2EE5A3
923CFC69FBCDEA39CB01828A0D09C8BB076A5AAE81B5E315CA901E262B773148
AFB118C470914CF1D522123E627D00097377258E81CC51A2DC62AE2D88586DC9
DA2FE1B1FF82C733E34F7EC4E40D8DAA7E34174144F78A8F72E0DCB8CC64ADDC
C5262DBB9C093CF2C222DDCB85D19E179DE6EEE684BE3A7D3E8C45A42010D144
02EBEDFF0B144B1C9BD22D737951B2F148EA4479E6F02D75E2FC0A94AC3448BA
DA5C8483D726F03D3603D6B370E688A51026B6FD8EB28564E5DD54E42B4D798F
49CF236D86B92B8F499033A7C8B20512D8037250CFFAD98DD1C3AB3D525F6DA7
0A332C61623C18E35F0116A7351DAF147B6C496891B9F34006745CCACDFDD4C5
47743FDD7A68BA6EADA8955D5540308E63E3DC5FF40312B91E66F516835B7EDF
02BAE8B740656A044CE55CD3BA66EA1C024FC80466EBFBDB0F04B473097AB8B2
844362B0652A6345C6EC83DFEFE099455232455A77EAC3C52DE79214EEEDB424
D767D0C64F1EBEC99C7C4D6AB3678A5B6B4667C90AF2ECCFAE7401CB52B5B4BE
0E1904E1EC8C2EF8E5F422C31A65013C8296EE6A6005DD26B5F5FF47117E5E9A
FBA7839CAE44964C974F08DB4A30A79DEF82AF071808C1B05624FBC760A5E32C
937B074548F0B46C30A3AA503426744E5DAB6A37F59EFE3EF57849112BDFD986
A3F7EE975F79735FBDBB333D136FDEF203DD3DA40F4C615A21E140A5152FAD0A
33A0B5612793A531EF11E4819CC5BE17B6351E5B5F80D8D3CF518CDE81917A09
35303EC1823825BF2E2F5C26BCB2EF160A2ED73037E9CDEF09C16A2C0FC13C87
32D5463F7F5F51CD877408B57AA4D8980E5892C1A2F0D275488BD6D5C441EDE2
2B273B7B00D0680BE629166D338F02FDC92AEC363DCAAE5B6CEB2B2A3C2A5085
BB0E87DFD0B90AC11B63ACA211A3421924EBA01BF0C7F3722A2E41B4F6007B02
924DB6ABD954BFF51D758526655FA1A05A37C9CCB92C4BA1E5446B31CE005A99
5647F750508B0076DF1478BA802C8521AB6B8FC85ABE689B800B8365F09F8ADA
038E7F0D8F74A67881D55BD5F32F0FD83D482CDF7EF08B9503D7FD140B5D3C78
CD706A23DACE1AB5B13A4DE9FB34FD99AE1170DBDA9AC3B3B72801E011B0E9D8
4CD154550F98F4F66C7DC21C2259DCBC688CFD5AB16724B4E0DBA3D131971EC1
82E6F85D3E166976A1AAAB6BE710FFE8BD12F041CD64AFE61BAC3A46E4A43E85
BEA75A6DA02CB1566B3BC263484034C1A9DF71C8538B03CF18832D89A4711E28
698C37F1DF9A0903B2FE9462811FB9AD870746E6D246D604E27CC427B415DAFE
C7C78C8BAB8AB2919B1C5F1946460795E0B5295B835DBFF1DB36881429F06960
009A11B4D0E76C5DBEE655E470D2748EF970A996218282E3DD31EA5EAB1C2B1D
AC68EDA5CBB912597AA7C777BB916526A7CB9A821B14E4B419371CF255F06688
2CBFC7B1525EC6AA4CC82EFC3050975CA531A5D11868C3F262FA279BABA8F1BB
4F07B431A1EFB315AA5ECC88128A0A15C6653CB85BF452ABBF5E8E9D8CCF2FE8
E055BCD775A3293189784AC8218ED43C956761169D9707901F83FE1FA0A1A441
9AB592E0C0708320E8D6C7D9F18194E2244B800EA15AF8C16B9B8329E91644DB
1EABC64A0F805E344EB63D558B7F57215979FA56D641701C2B9763693D204466
33CB481DC110FC14AAB8E9264F5C7183E1263AEA657A93730933239809F529E3
B69B892F9538C1FF8694298FF8A5AFE94A066340F20A782776BBEE677CFF3D6C
BEE77CF13B4BE73E9CC292F791A053919CBC9E46ED8A27ED6D85F54C29D52481
9DF6BCF9D3243E8041403FE386DFAC2247BE094A885352C70B1CECF2FEC7BEA9
DF0505C07E64B2D4509D1270CDBEFF01A02F705220EBE7346738CC89DC5A220E
4699C15D3972B2F06AFD4444F467C36F9AC3EBCB65C2291B9DD916618215ACEA
7576C729960E1E1AFC71B6D6E3DF19EAB1AE084AC10806803E50513AA7C034A8
AD0032707774DB00EB9092C0A16877CD65721C6BACB5F7EFA130EEDBC421CFAE
2910F9C30DF4DEEF6335403E9A23CCE21EFC903C873411A827C9A1EEEAE3890F
6E58D8C19D6F90AFD127A50AC42AC8041D54CCECD79A73BFB38AE77E4271245E
983E9964B43A8595CD5A864952411D06BFBF4CB5A7293D473F27EC7B74F1E8A3
69DAAB3305C440A686E566386C4E50248B51C5A80C5C7238AB883E083EA59959
A3000F655D8099CF8685EEA1537E8E962C4B9506054A5911CEBCA020DC06ED4D
34A5E4A2F4C5A85BBDE0A289CFE590879EFC8EDB02B3CDA24BE5B94F4D4C0FAB
79CD0D3E7F885F73BD7D555403B83025FC259D4ABAD69050D64014F313DA21E6
F3BCCCE3243333F02BB66EB727253F9B5E40B9D53121547AA7528316AEEB1321
9DA6C56D6DE146AAE9E24960F79D54863F75475E92B0411D53BC4FDD03A2CB17
0F751129AF903A2071B3E1928C721690E46D1455BE43BE46363E2130C0EA0DF4
60C5472E7D58C187468AFCCCFB2EB988DB6254CFD706847009D7C00112940846
0412139D2AA8BF58CCE6D3C086645D1BDB1786DA473993CC5C7FD74B5E4EF480
988AA30EAC8CD07D10E5195A4D26A2EA4BD5D79CF87BF6B5DA64D15164FEE55A
96EBA5A5B936B5445A26A913FCDF20A0A31DA98BFBB545BE417C8CE8695CEEAF
70E3B20C64D4C2B34A084B5770B0B6F9C13BD01C6450DBD0DE1D9CD163520429
734028ABDDD08E7180ACDE65F8F45846939F96E456F14CF9522D1B0A470BFCCF
EF0C622CFEAE7F4AE740D9D7E24185FAD549F87FDBF385F88B0CC9508AFAE0BA
9C0E21A3036E4D449F69B44621650199AD97C3B1D61B5C066E9118E76A992B46
9821404E6BC987FE3F3B89C605E8DA8B373912681B1F969EC0CB89D2BC6CFFB7
24E611670D764A28638D959E43FAEFEF8EDFBAC20B47138C553A9323B3475464
9F53182549FF84830862C2C73FCF0435B5B2B993111FEF38733C352751553801
6F8BA6AD48DBA95C946B3FFAEBF3970D6180CE16EBE8021E7A49B60DED32E803
A7E943672A1CD5715F33929204848870653437D24C9571982039742230A411A8
43F1A39E0E69027034ABF6E54D30B73FC9FB783595BFAF270E5D7EF576DB77A9
D23C6AD9A3AE11C6BA897ECF13CA428076E6C539FBABC2266373DF8DD163A3CA
1D6A074D97D6A35E17607166E08951177B1D7D42CE266EBD510821984A7966A9
C6AF19526BB1A8E5ADCCDF8C359EBCEA3E89A168E37AA6D2C9A462EA64803B9C
031BB1EC267D0A6005EFEE1C3BAC2AEA24307DF83856B9AF9AD20AC317CEEB05
E1FD368D66E61EBA6E7F9E97522E40E450759D9DF1DC35FC783B386B904264A9
2A74FDB2B29ECD6CF81A54A36382179501F41E9F39098B65E43FD1227A26F6FF
812CE452F96486A7D57BC1FB4EF007EBB868DAF4BE22E19CF32535AE4003856B
ACFB2A3F1338E54E99A9F87F4614EA1205C14FDD17538259FC5092EE8CC8EAFF
7C3647D1374131C55F3F5667414A90964937D8AE2AF11959D2E99EB27D7C7CEE
EEE5B4BDF809F761F5530C7656EC62077F43C0E47880A4CCB8899FD0C59EA0B6
0D4B11E7C766E2B24958EF0CCC88AEA77B7884727C392573F54297DCDF7D77A2
03D53DC8B5A858574BFE1E1A7B100DFE9727E21E1B17C741D529C5C10F6F5F38
FDF5A9009205413A4F74DD9FA088D3EAFB7F4C3146DEA1EF3A730A16F8766E93
636B826E97FC91A0A25FC7955B4348ADDF7CDF11628D6BBBBD4054325297D9E3
72D2E38E5AC885C23309CE249E75040B66D3626CD8D71DCD1D8A62B46F7B300D
D53792CD96C2F8418B5ED889428C8CC9AE15940D8C6A294ED50BE4EE88FFBCE4
E55F4C6575A78763C2458740C0A64358EED5E4992EFA90941A91EB94A62C3A2E
6473646D2479796323336E6CEBC7EB3038624967CAD6C5295773510F57D0BD8C
0C3AA1CECCD49637294A010D8111B2390B732BE421AAC1CB52C4DF7C639F175E
EBAA60CCCC73F3431CC54E465E5B4F509653BCBCE218CA1F1688918C32C31328
493CDA10D4F57E63D2E479471952C970C4A71D7DC59AFE7771E15580A4F2E344
8F459BAFFFB001E3215D8BAC1FDB26DBE389CED1923EE722D4C12D7644F56B21
B1EFDADB9A01D1395088F69192E698BD29998C24A90339A15FEAD1A280E696DB
58EE1E27A9FE5C0F99A84518531D95AF26AD94A843D0A7783F8E0FB018032BE7
C3DE113D3E2261E418ECAC6E6159B9BB39F48CDEA1D2D8408E7166FB1252F520
B452E8108BE9C86B1E0F410914E98158F32ECB811357F69CCACACF897A7A1B15
5C720BFE10C007521266D7743E3C1CB6D0B8C1A5EC9B46D562E2975040B30BCF
58A18197A1059DDDE128722859826DD2C4B44A8FBE3945E0E04E268C46B15C64
74F29748A9CE5787797167CC44BF2BAFB2019ABEEB1624C8D7FB358113D43E72
61CF36048C90361BD49238F368AE2182FBB631E375E903ED9EFFEF5618DE7062
83944D7293D6FB9B78607CA346FA9E26A5ABACB3BC20C845AB5BE5A2A6E1897E
361A770C2CB841CA6605E0C8EB05F0CF9DC9DC1F0754CC7853D1AE934BB81BDC
96CF4D720C6BC689C9C9F9BACA4C9C7A87CA8D24FF75C7A498B8A36141E40954
39D7BBF994D583A65FD848E9907FB40FE2F0786E979497CF2A3361B379302099
ED7ECED49ABA27F0C96DFFBF5A41C82EC805FC436052C08B65D2D8A66A55FFCC
C8EBCEC593DCDB97D883FC8740DA7DAA52C5AA0E215357F7DC728D263C9A3578
EF05585B0A78314EDF4F4361872DFA2C65EB44D5CB662BE0B3B4FA414FE6D11C
72E9E861E8273D531620EBC82447894E6A7AA1AA8646D957896208A296B41F81
33F00AA71B1F2E173BDC36E98076FD0EF774EB2D09D8D229696863CA74F8703C
CA670336996DFA42672ED3099C9D71DD46E93394D813087920A24BBDBE003EC4
0893371C9150E33FC03B5A87955F189F5EC666E140A101C86EAB1DF73EEC1E8A
FA68C7E230DAD77D98AE45CAE2CBA8483943FEFD6714FBCF250632C5595D8BD0
73A84BA05FEDA35DB3AE0AA8D1EAC9DF87B29201AA9BA6C7792530B5AAC9C4B0
3414725D2427FA18348EC22FB88ED05B64C4894D7AF6F9E66E8C04E8827BAD7F
9055E0B6EBAB71622D0A07E882F12F600BC7BAA7D23362F1811CA958769E271B
E059BF4229D5100CDCC6E78D73E9568034E6A28BE33FDA37C403476353A926A5
94A00E24D91844D3F3DF8CB1386808A0E2484D7C97E2F6D76D6312B76E0C958F
79106C16002AF3F738E1F6AE2C3D6FE181E89F1828BA564093D421F66CA08198
E10D5DEC49B8F8FB9EA30D23494DDFA3D10A0E8E06F1934736F8BF9AD49A10A4
C6F8A17390DA4FD8DC2FDFA7CAC25FCA4B7E3D4B21F6896D9648F8A384E4FBE6
EDDFA3B58A343725C742A8ADB8E2490B875D1C939FC76BCA004EF729886B8B4D
23228A79F78BF6B76FB8B5C997DF742A415DAA0CE1B8745736395AEE28BD40CC
0C6940EE386D68EC1320F9B4B7A60D26292B6156848AD4A1D16EDBB8CB4667B1
C9C8795E869B9B715BBC1FCF8181863EDE31E97ADF14A732F824ACCDBCCC62E7
66243DC3A5F7D6EC5930EE201055D6F2F1DDA71BDA340639E862FF7F16FC608A
3BAECD90D7C27C64089467791196A3CD70D0D5AA1A3091E3768D35A2D0D9B0EA
E7C71C990E34CA14E55A19F1B2692EF7B2E9C248EF38CB0CEF89F433748AA915
2D286CB6B478EAD4CE45A8E0CC91E1D614C9FCA10A660D8835C4F50F6C8A8EA6
4276D900EE843BD07D2209AA7B1D13D190FAC747A578FF08577DF22473C89EDB
1FDD780854A512FDD7E10F41EDCDB1A558FA924039A0D1DC865E2E321AD29CB2
AE74BE9700D712996519B24EDD3CF73E9A8000F0B91FF37A1E67BCC8F7F436BA
B9E4A9780B46A11D3EAF202F3E9FE0F860F4D5E542638E352E7766078FC2D5E7
D65F806E16AEF21B9D499FD047B8075BBD6B7FA756F09A7604BB684B29637429
6177905900278C6C485D0A6DA4A267B12A56BC42393BD2E32E6C5F077DE5916A
5E4571236CB05E25C0B681EE285CBA03EC5B28D8121A2675BFB1538011B31D5E
979F321F290BE47F2767D31E5008CC5411AE9F739AD3F707485A3FA9492C5EEB
B730DCAF7CC3F0984E3563F660ACCAA10CF3E87A03FE510B12292B16A14EE553
CFDDE729E1D572666EF166E9E51E12F0AD378B8588ED9E944EB87C14221EFB3A
7EA319B4EA0EC773D5C912F20A8829EE2C58BF09D30DFEB19A02D18CA44689E5
DAB4B1FB788A08592733067371EEBB2E9F3E4AAA7AA9E980D710A8DF0461EFE9
B291836685071A7C7643F954625D2E6EAACD7DA7010ADED0D6A83F04F396CE83
F0549DF3E2D583E52C3488C72C90387B5DC63F9284F658F5DE5FE6191694A19F
CD8E55063239A22723DA0ADC91D3B9C075310DB9B2DD514EEDC7E235C3DD55C6
2FA36A90BE9511E7FA848CE29857AC764A1929612769B03D49EE37AC2E1684EE
D5EE63823E2B7F8D13E461E1C6CCC4C7487EF1F7C48983DA8655B23ACA977427
431979A32F0FD1E542A45CD9DF121104676EDCA38B63EBDBAC71788DAF1289B7
3CB356E2648B8611FEF045AD3FC3C40BA40C50337B0157DCBD89B8D69DE0B95E
BBDE415BD37E6D0CF86B17D5FD4D436E03D1E698A7C6956D4EAFA89EC18366A7
9C9972559FB5C95292877B806CD1BEE8E4ABA4CD9D657B8944E02382D3CBEC07
2A1A22806ECDFAF90A370D51C912BE7CBA621CD897ED8113CC2724D3257C512A
7CB3219D0DF54AFC0F7D19E0A7036376B2D97DE8373FB3F1E340A3FDE9776844
755A1D269C874DCCB13F00918EC1B89C5FC5CE8D0CA2EB3B38F31711D4E9ACAF
95C02494F1D1E7FD197B7AFAFC1FEBE6722104D834D413E8CCEC1D4BA23F174B
C0A5F2F0A23FCF10C02ED8BD1AF09AC4E8A0BD65C3781E4F3ED7F9F55C21A04F
1A6DF8168FA2286D8C7EB892E1512B7EA26C5E0137C208DC71A57810714E3FFE
8F75D1DEC5D785F7BD534B4C13B6ACD3ACB3A42975B999659ADA3105E4EF072A
6C3FF3550A5955F7C593B510D666DAD1B8299609C0414D2C47875FBB75E16CFF
EB450CB8BC91FFBE6C83D561ECD4BD3ADAAB99A46FE5E911B539979CB7E01F26
2F75699585B00CE2025C9D5E8ED1500228465BEA46708372E82DB4415BCA4248
4B15A217B482262CFF78B61A3CDCD2DD2487FF034A4B703C60F0EE0922F9553F
5F64A2A17213B30ADCA9387FCAB26F8D2594ACAD9C980FC6F26BBC4B98AA0F96
24D8678DD82CC46AB67C7BB260937BC426C835D610D7A203D903D4E6A8F6F8AA
6FA28A2B5FB9653BD398287E439A0E82C7426382A51D243612B70B601D2DE189
B29EE33528A11B6CF281DBE43CD8F459770323F9A29B49C2FF1894F730F78AF5
8921929EE1D3B4A47E26C446E0B8F2BECEC0A29BEB3C05ED3F23674D6B55F281
53AEAB5BE44EC6C7719E56F4BC0293BD16FACB5C78714AE6F776AD12743DC88E
5C9D6474F0070FE57D16CD12153DE8F3770281250887FE8BAA1AE6302C0AC1C7
CA42C9A21D7E94D9CF049BFAB155422FDF6DDAC2E1D7B8B080E323BF9E608C3A
30450A3C35D4A373803AE0E3A24E4069332F84EBAA240D6EB313739B84432383
997DA60FD72ED816DB22097AF5BD0BF8F100FF57033A1752FF0319ED8AEB703B
C7366ABEDC1825750DBF07753E280C98E7F2433CE8B6F1A3C9DA8C4CDBD29377
F1B90CACAB36D9220A3F2FA1D88A32934AFBECBC8527A737E27EFD93DA037ABF
C4BC904083F4BF0F876B3340B0EC46BCC47C21892B088E82B86889AA42034C9B
D2DC1A70D97C1D02A9B993DAD04AB757F2D351645DD317B78A5506192B150ACC
7FBA624C499BC62FE7B4734070F8C123A633E5159A89857805AA0D7A911CFAE6
CEC7CA222024CE0D3D63D31BF44080AEA21902BED714B48343A18FDD3940EB3A
B80A978EBED46020CAC298DAE701CEF14BFF0410C077515E7A6609D033D80A82
CC481EAD70AADE0E2676CAC461FCE7B019C7207B0558CBEFB9CF25E8D97B854F
2A29221C68B1FB07508634A07D3A46006B0252188B7B98020601B3F0B1E400E9
F96CC34E7E2C3CCF88A517FE6F9C58DBAD4A37242EA4B8119A3159E06F45C840
54E62F752E44E0668B24430916ED58EF36404E3B912BF4BFE16F039AD0E44465
D651D2236F883F1F42ECE339B694B19D225131C39721EA5C3464B0245E02013E
1666DCE85044D0BFE13B5C31BBE28C4347C76E89E28C2D4AFFEC504703CB5645
2810F9349B099A38501F2314DCF08578A30A66385BBA39BE0765A7728CC8E156
84C683D992894DD9C7DD3FD07AA6F56EC07545AB05B3175433ECDF6F8FDC11BE
14D7835669581477FBFD614700D6BC3A1C4E266C13E37943BB86585724C65444
5C1E0C615A8E98AC0BD74396527498A7B5262D6F945FD708A4B04A9E22F5347D
E368B84B56C64477D228181C863A4D48BCF4A4D901C8CC5170A721815A222BE8
11B4B8A038D3058F19119A3DC15586929418AB684A92B4187DBA74B626F82379
048B137DCA01167F0840F3EF427451F2250A597961B66368347C2777B037B0FB
A022555B0FCC1421A0B660B738180C1A461293F6066B4EA38D4011CA388C601D
58FB5A9FA41852D31B8453EF3A5E87BD7D889A1CB070F7974A21E37FFBBEE2FD
B281BBDBA9B66A4D85864D5D304590B6FDB05F2482F28E592796449AE8F9B27E
4A25664E86F0C590D7FB9E51E01C95FBAB79DC4B0EBFAAB2C071E25FBE734269
73B11F750EA474557A1862EB18E6C6FB7F8644983D6FA9B570F9D1AD8EADCFEE
7E92E8D57B5935CB6F81E67FF5EC2322DEB358869BD8859CD968C5D286EBA50C
A6B5B218D567C2EB7DEBCD5EBDBBE63A7C5FE5A80912822F9E77D8AC13393AA1
B04DEDDF6C37B2D4633E27FF79F6F5EE718D4A499D90EDC8267492DFC1620F01
CA5AED88EAE8608354A27DA79FD0F96B3E2A4461C36E1FDA02B22AF2A316937A
37662E5A9F62E131E8C565FC80B0C4C682AF762302005B0400CB5F7CB4982A80
FC164AB54C21070738838BE7E803FF65047D7BB3FF5DDBACB84C9FD47C9D4F64
B331C1FC886F638BAC3B670FF548590FECEE8E9A0706976E13A9C528A198B8EC
8654AD69CCB5C209964A2EB74C4E824F8D506A27BEB2795772DE4E899B0F39A7
F2B4AFA236AB35C6DCBFA1165F47F8F52B0787EB4B70BAFDE86DFF545D63CA72
EC43889DD76E590699BC2902C9E203C4F99518B09E9F6D1B78E72E7E52019EE8
FC129A8A292F791AEBB6595ACFA45DFF2F0D83601A0CC9D6484CD7536C922E5D
54C8528E8A4BEB8FAB9005788A5B0414276496D02DA951336995D2DE6BE506F7
CADABDB3E4B6A7AD28B3B4E057EDEC637353C7D47BF41FBEC8804DE09BB4B0A6
3597D1BCA0C4BAA2BB8528C34C369BA3D2F067CD23D70AAD5777DD46AC20C0D0
2790EE255ADD62C4C3EB49C7683B7056EE108F5296FF68DCD3E59302B7F001BE
8C5822318FF299F6967B7B4020B64FF37AE7FCAE009DA6DA80D33DF167B2D5EB
80A3007FBBAF0BD71E110E9F200C10EE7166BD8D3E301C5761411FE04B82E176
EF708EA8227580ABBCBF4E941A07CF578F0659324A5A27AAD89A11C3B5607169
AE670817DD85D40FA1C2B9B4DF3752AF0D100132819EB6177E6EA5858A10D618
24D760F2B86372EC36424D8A7581AB39755D5539CB2A58832AA92DA5F34F197E
3EFBF17115FEA544E886BB13021AADC9950E2EF1FB69E5350B281CAF5F8A966C
3D263538B5C97FBA29571000F99AA9868EAB14085F9051EE17F8FC39653BF248
0622F5D6FAA5A61B34F4629D46F1FD661720BD67BC1725081FE92C6EB154FFAD
478555769EC2C44150D849A0C7D966B2EE653CDA18318F227649CC04564F39E3
BB8AB5037867C683D88A2746283186D67327CD487B978FD50D9BCA2508355C50
8FBBA34001C878C8267C6EF1A61D2B91CCFF1BED30BB15C3E2A11BBD869AD3E2
131253789C00651A03320D8A156382B9FB181DBCF8B1F5AA92379424BCF1D8FD
899ED402CAF450F44198BA633D8639980EA7B22089247B9A55E2475851AFE225
349BD9936E274ED7A5CFCC0057DAADCE2C71E553FA3B4CE88FE8F9CB823F098D
47ADAB35F604BE8D8CFF4DC312E6A454DCCDF83FF2BBC7B17EFAAFFE2C0655A9
A103406D8CCCF97174ABCF4EBF022837161864CAD316ED13DF03C99757CAA452
FAE46DCDAF8DD26069B2851293F533161005D90CA384045DC239D4F3242FBE34
2D42D52C383193734662065DD5653C091F908E11D0610D98BA6661C0ADF2CE49
8B72C709FA1C06F1CE389C5D4F9B7E17AF42BB22A0CBC0D1FBA7D7963CEE6190
6271F2CFBB6FA6CD9F406A4292DA919BF7DE78B7B788C827204956D533E0A067
0D60CBD73D1E1B9865CB43FC1ECA64BE4C153AC91451F122BDD5C724CB802333
1E370FB2CBF3D51FBDBAC9706CA8B4D3FD1F68A5290A07BCD68D4FC3E80AFDD7
EEED74F66BE8E8A733E4394035CED0C1DF4B83A1EB775861645239EC6EC6B59F
4713A11184815AF9CD5446664C39CE8B2584E069121F3561A3888FCE588E1E18
810BCB001AFB8F065FCBF8EF6BE2042F7BC61C29D379F2DDDF33386D5FAA4C18
AEA81E9981CB9BC589990656D0ECA75DFC764023564E8FF99750F0519A61002E
A3132EB8461984D3224DBEB1ECAEE51A9AE732B60EC33064E82B283AA4C6A075
FCEE2E979D771B9BFCD2FF4E6AD376EF1CEE8C498B72C709FA1C06F01941B4F0
D4BDE28886E9CC715784C7BF7F0AF6DB243045871E70814B1258131811877B96
009E065BF3653111792519A149B80FE0359DDB6BDCD292EE0320B1B6AF5352C8
05E8E2DD8A29811E6DB9E8BC8392B8940C458A64CAF8AB6AE75C678123B4BDFF
5B6D0B34A6E4F721F63848D95F4BC708E1EEBB69EEB95A0F45B2F405589F1517
080FC7282771FC2472E305CCD5C02D01067C2EAB987232AD827CD0583D9F91D8
744ED7D04A96240A6E17F3580E7DA275D73F3909D0834B170E2B62BEEDCCA27A
FB4734F83AAA0C951A08B0132327FC9AAE3322228A26B031480C4AA55E527E64
B9FA87B6CBB9AD96CF0DEC60B30E4671B5FA825587FFD6DC574B681B70697C0E
98140011C344547F698E0DC00CC722B65CBD277C5DF3B4B1275775C367EB0F86
531E771C74DD3701419E5B08ED32C290A0F84D84D0893A31E41E4CFA0E9F124F
D73991B3D28C0FB9D177DA5905E8B396E7492E95B9E76C94149A3F1958480BC0
1C7FEB8A6BF182467ACFE3B05FE61A64BF59831AEDF6CF4B28799093DD8F65BA
55CF0B996B1649ED251DD1F4F10F1F0CBBCB31825E163FEA3BE751DD3854DA5D
713DCF6434AE97F67BDD87E81163E68BDD4B8FE267CAEB120F6E4E141EEB1D14
77F07C14708EB224BA81FECB0A317BB545FCF1D4CC29C8332F46F00388F75E66
2D186F2D32A270159C138B2409D3A79E946E56800422B7820CE49022707C03B0
945CBCAFC37DD287FA96E36DC819958E26C5A6F5DE91CE5244E3BB451A99B211
EEAF7E22DFE5F0CF45E34F3E676F57892E7B84E9F184214A983674EF646B86F3
F1CE756EC0C78188CFA73565885692EB4AF5EB38CBA85B58C47B56EF8238FE3F
5C88DD7006F75A35FAF9EFA97C5FA81702C04838B81829312A1CA197279D88C4
43C2F8967138A65F45FA34328D15C879E2A9AA1ACE9E4426114DD821579901B8
563C2F66397852EE971FA87911950FD65E90E3CE3A2F684C07F202273F60EBA8
FE17289B0B15C33CAB44E9461FB09B9B2CA9F8F8FD0EACDD8433869A00CF375B
55B8906C9A0AC658ACE26BA3673DD434B01E89016AEEE494880B8E01DEEC20D0
7EB397935C3D9DEC1F9D7CB4C214BA6426A456BB119FCC90D4D49CE40ABC0D31
D8B7A2E5406F5D9554C12845D776A274E3990DF25D88067CCECFDBFE75F52D20
32C86A53F5608562153DD6A09E462ADBE677E6F550F93922ECBA392E27761E72
DA24E4C108C309E90A8C6DAB6DFE74BF57C7E351F9925FB96349F8D9786D8E6F
F03E9C4ABB9A669E392D15131D86F9DBD898FE9EEAB4E3C8B1BA03240D68B265
5D7841443F41E61DB63DD51641589F8FD366F6535ECC5875EC3D858E3BBC4B39
C40DE66DC5EAB97EA362436980B6D47AD18A9ED91BE5AB10A28CD21EF16C595C
A2A18E0FD974135F38D540014D38ED97AC494F3BF2A56E4E746EE98B96670728
74B21A5F98225AE2730CE0FF1D61A3392B13C2BAA4F2EBC705FD27CD6D21D17D
884128E64FE8F3F50A50BA8D036F18CFF8D23E9DCA2BB0AFB2F79CA39D61350D
26435EB900ECE26C5AFC2B5E5C21638900C3AF88825D444E3C0B1C0983B448D5
F42088533E687A6A893A3EF3E520891FC807DDC7F0A02101EC36841C4C77CB37
75052A962C832BF9D3B95757243F800A39AC561D5ED025A2448EDA8A35B55642
6606053F29357D3C3A6403B9A7675DC69ED861AA0478A60A246D31BBFFE54A85
05E005C9200CCB2B476083D7E55A2FC9E271D9F3A9068D32ACDB476F04E5FFEA
CBC97E5B4AA754641A3B681657DABB52BB0DF3DBB8875FF41E06B3F7FCE549F4
133677FF06C973F989BB2DC8F8D2F0BF1C8560F3C8EE3A7AE59C665CD642F51E
F1EBA346173A04B90834C0501DA25AA2B872B756536736F4A79DAAC6ACD3EEF5
BE6C97FB75F4A3B4BED6B1E3AF1B243B7AD3D27CFD21450727D615EDB0E86B46
D773DF1959595A4654C4EFD41BC2C8C582E13D39637DAB3980B5C28ADB83559D
C789FACF372E6F1CE474E17429BBCCBFEAC2529F5C684DE7C79850BDDDEE9EFB
C6BD9C192EA36BECCF85BA1AE37BD4586C793B4E7904D23627E2FA765DA5E345
8C44F0C3B7CE6E303D2A9BE6F573BBA80092B2A70A269FD1A2701CD47EAD956D
EC63D4C0B1B05332FED3F32955CC367A9EC6EE5FB3A93AA01DF86760FA5C65BF
5E5B063EE0BC436B346E014DB4099EDC67BC432E470A4725112C9FFC3941DBA9
40165BFB828779D087FB176FE116B1476F2EF2991878E11F38FF36D1F1D67E0A
154F2C7EE1C6D70148E8DD6A47962A2FCC9DCD6848CF3FC5DA95C883B143CE5C
2E92F4A9C78C0B074F8E374100814E077D716170C5EA7DB77612DF679C0906D7
7AB2144E8549C1F8FDE13B44C6E517709FB9B9C3DCB6550CD18A2B6AAC99C357
91FE45F069B7946B5EB1D7A5CFCC0057DB5A9EA58791874E4246C0A7321AE831
930F08F586A85CE6E4F24D302429CFBAD19DF81D8D65A32D1915AA304B228EEE
C5FEF762970596F44AEF8261BB77AFE7EF0FFD3E56E171C25804C38478DFD3C9
EF826C2CABE92CA2C9FCBBCA5F91B5E8E9F4D23CB6E7B93B734C1CA00B874D9D
E7F43FF60993FF317E2A0B71D337DE2F7E980A0CBC1A68E87568A844EEA08E4B
273A00CB5D81CF19612D08060E2CC989BA3E13B958C0DF5AAF91F50D9A6FEAB5
59F845681D61D02D28B185C9F052844D9A5F91CBCA6434060334D2136641C1AA
345C7642D1913555EA148824F5D5AF3CCA4A47F78B4368FC5B9567CA5876B77E
45E3FE30E2A69EF059754C9D3C65045928E89D218F1B1BFCAB99E8207FFDABC0
84BCDFC2A202F15B5E590EE75EC3C51AE69CE0C63338837ABF9463567E0646AA
83AF8EFC42EC051124727F9CFF28B33E68E1658F19BE5E606C079D70699D8D4D
29FB72DC6E795F083756360E4DA56184BE9677D3547C4F276566523742669590
3BFF8C8003F82A76F84AEC6703D866CF9D143E35492ADDE87C26088D33E097B3
93724A08324ED1CE7F16C3B222707A748CC97785174C6E81A614B95868CFE87E
FE6014FE4EF56765855524D5E38F1D85396E7C5D385444028DF1E2065090894B
C8200DEF93B057C7F66A85C21D885BB65207810A3802155C5BF6A0DF09FFD552
13925D127FFE601E8ED0AD98E9E8AAE92BBF0645F4CE75C931EC95E1EA1AEC74
6CA2670A1AB63F6EEF2B51E680CB5FC3122858C07E573EF02AAB87788A672118
ED269F616349F8CF706CAD4DE3AE80B5C0EC4EBC7EC33CD860811DE6B8EC0B98
AC67C80D87BC8840FB2534D18E23CFF061A044ACA226835B0174794263D43B02
3621CC5B2C33C7449AD768927340338C5136253ADE278AB73282F7279A93CCAE
FF605E2ED76C7F3885E9F57194038C72E7CF1363F6101F835722A6103139DE7A
FC6D12B1B2D774B8A235D811FAA9F93C5859D71DABE0A5E2CD5523135954EDC2
72A57DC13F362E5325673EF37CA5FBEFABDAC63934BBCE35A0A880C8E8A75B49
C122DBBFF216A85E695DB7670721DA9364EFF58A61C51B24C7F14721C6799A64
BB3F895B5C1FBBAC997FA431E353C021F98CC2BD25DF2B89B566F4E666EEE16F
92EF6D74B4C9C305E93DD7806E8400FD90BBB124AE26C0DBAB5C51E5FFC0F527
61912FD7E90C3C522EC78129A72E24119275293595D088C75659D33C9CA7CD45
0043C26E4D5A8FC792E809E0C72380B9CD49215B745B3DF14EF7B10077501C6E
37DC5B77266A0885986D0C5D4575824CD6B643A82D3298ACD8F929E1D71D0C8E
F27DE118C3F78A632DA2E3BC27F9EA1946B5563C69E40A7FC8DD6FF46F09CC32
C70C7352C98AFB9EAAD5D324BCC6F790D095070148D82AA5CCF3957768E95E67
191E940B83EC26AB75647D4C3B6BFA7061CE9EC812CBE3A5C2532E8868CD351E
21C287925BF53DB220919058E5886BD766CE82DB303E50C88344D1C5F776CB19
89DC798351E588ABD7F4ACFB503F5A72CC3F4F26291602EF13F5E679DCECA92E
F2EE4E7B73DDCD570C5420AACC5952403DB7DC0518081F7F55E1B5E0B69A534F
C51E68C678E7B4CD267604907A489112D1EFE3BE7C71D348FCD870C9B67D0F6A
558D3FF3E213BAC5E0DCD6D6D2C4E318FC2A928F1CA072DBE7D81449EAABEFA3
ECBE520114916D5AE5DF43B5A93B44916C39B52B6E7C6FE5E8EDB0DB28B82544
F05C4DB5A2EDC245455943A3DF47FDB8E5AA5DD4F276AEB1016026BCA7714EC8
D66778364FF72B1182BF7D7556FBE4DA60A83AB78C7BC81148E102F5299CF5F4
6551205EB42BF1402B16D363A2CD8B130329BA5F8CCE858B308254AFA1AB9464
B00DC940CE726C97626EBE4B909FA05D52379A4E430A7D181660BE92FC109B2B
38EF6BB6C0C5D59712CCCD71488D3418650FFF75C70759EB44EAF1C352FCB928
CE3E094C2903A36D2F09F5B8EC4F68869683C4FB7DF2710B6699336E15D288C3
0EED723BC4DEDBD1E9C518320C9B0BD14ED17ED6CB690FACFD068DA653D87FE6
FF44BA0A7D46E63F48DDEC6576D746C1AE69EC890289D058AB9E4D41DC0DC288
6BF1F7D3F3E840EC3EBB1E4EFC65AFA9871593CA1EE0B1AC86ECED1123C187D2
0D78DEAA2A9336C32A3FBBE71D4A8624F7E51C58925BCF96BB0C021D8A91460E
EF54C3209F066031D4383B220265FD59FC385D68585FFF5ABDB5F55E6A77DBB0
9411DAF5796D7A5A2C3A0B788C4A729282F10BC32BD8430591ADA9B16287C97C
2A28161A7E1539486FE786945A93011AAE3897CF65C83896859129CC7646D5F1
73A76A3F3D00123844C665C84BE4A5BAF57B5539C07F76B2255F2966DF56F45A
9148DAD45F6CA36DABF577370F2C58923C21425E9760979F8249E8A73838444D
E3268367266402E11621A518A596F3447A660F1FC3475DA7DBF44CBD45C73B3A
6DC4D5907E11BFDEEDCCE767F2CA91A2805DE4D06379CECEFC458F3BC865854A
D16D04CF4913E5E89BB218307D78CB96F12F506EE2AD36E949BE12C99377F117
8BE9DB879617A22F7841D0B66FB9B22BF461BA4C4ABF8AC1A33E6229A913C36B
5EA989487DD02C18D3291F2FE720433A5085F750D3D9D27E5D814B77D3B67315
6848C8EA24702B5F77404EC4DF184402E550FA75602759B34C126474F1DB677A
5FCE55060043A118881D430F38700E57EA1F21003370A63379AB2E562AFE6C51
B10CC13AA6C220BD1A9B7361D051948899C34F4B89919C43979719624684D363
569A73A420776A90E8A3169A91EB436E34521536
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans12-Regular
%!PS-AdobeFont-1.0: LMSans12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans12-Regular known{/LMSans12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans12-Regular)readonly def
/FamilyName(LMSans12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMSans12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-411 -308 1407 1154}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123833081E024C973A102D8F460BD9
75ADEB5A09536D6F3C9E0404C494A7531556EFD108E97E770410E56FEFC620A9
58A40E61E443EA13AB10BA1FFC9A8C5A0AE4B3A70B9DDA35CA4FAC9678E39054
2086BDBD692C89708EFFFA5F235831F7A839BBC56C877DB8F713A2D5393994A8
357B4DD54096FEC1724D57F143398862CA36F1C982DF09539CB8C9F0E7CBE7D2
13233BF5F8C425FABD2185591D3722ABE7F23FDC6700C38136752536882D7EF2
65AF1EBCE3D1D0DA11C2DBD4DE61169AD2010446EE632BF9DF6D929733846462
D10A17CDA1BF70BC1B45EF8BDF72CC5BF96901EE0E7FACDC309AD744B803E28D
170937F444782DBF1A9F10FFCA1E96428C339564080B955D616BB9A3E6C6A801
ADF0609EAF23845FC74ED07C0FD09827EA10884C9B6B900F3FC4C2DAA80823C3
52199CAB38314687E16B2402A698EF5C895BF425ED9B2499D4202D0A8D1216A4
E1187557EB50C8249AF9CC836B1B1D9B4A28CCE970EDAEB57538E662AF941CE0
53D88DB0B078DB739F022E2F92A79F2EB23F089A0E3199C3C2FAE7B93A66DB5C
F10E6763DAC5C342EFFB9104ECD0125C6E7D32D5CE68D11C2014A33EADEA70A8
03A83F22CAB36A7EE9AFD9569661D2B65FB216AB8D1FC7A52F1A471D48B5AA41
16746756E0A8DDE70884DB4D1DC78EFCC745E00B803C7496C6FFC65CAE5FF981
CF760C9E8224BB781DB61934E01B2E9197BB6702E6B1A57C454FA5DE2100267F
912D837CCD9A027E9A7B3BEEEBCC3AF72685CA319212891B6D217650738552E1
048F13CD46B6620DC526A8164D1FE7D9D20EBA6F65CF59CA7A611B1DACB00CFE
42BD5BAAF8E4C6076820DB48DEBAE7E5D36969EDD94FF0050D5F880823A40F9B
6601CF5E16B62AC684179510113589997DE43DAAF37144199ADF6D36E3DD98D5
D4B7A8437E6E7F9B01D636671DF223DB8FE2188D1505B5E82FDAF2671D468141
8E63895C1C7A4273E038B480FE61049ABCF2FE74ACA3475D594505629408224D
070207CC4E1855F6326AFE7AF5F4B0854963D365236AC309D47A2668C28A6FBB
8169F69C0D641428143181B7E1827E553A48C936C547CD0C79EBD545378913C1
E8BB064779C78D100FF516E0C93259F7DE3BF4B2B5FFC4C87D544EB1E5B45ACA
F787C842A25D792BA8EF152B0392DD7958F06FC41A77C8E75F715BFEA141E095
5872F63A26C470C8F9697FBA63800A37B6EDB5E58E81BCA267212F3D633FB84B
44F02B39F48375A7D75BC37FEB2784C1A15D68F407CA937D4D90887795B84C8A
54C899C531EFC61D7732019B86C11D799B79F33BB09CB6771F637E09486EACAA
CC508B9D267C79A91646478075E259EB8C971379458F91CD3F83B840B2E72336
283EB997E386B404E48B5B4511A96F0B373299C95C2D501F8A3EDA87ACC3D6E2
AC4D82E661E5A45CB902EF9E2617F7412DBE459C3CC79AE1D2AF03ADBF5D625A
FA29921EB9409CC94D3224E75B5764B9DFAA97EA454B7FA5E39585CD37431DFD
AF370FBC0313D946B09DCF303293ED9D5949D482127CA20F8DD56C8A500C6E34
DE1ABCFC79C06E69FC7987E3727EE06985E1559ADF6B988586E9D210CF36B6ED
E8ABE94C8BDDA908C412D1709F4B5EC0212C697D91FA63D6E5955CAA4FFE0F06
DD5F7604EE916A37FFEE337098C8B53B75ACBAA50F748688B6226EF1B9E6113A
1C31010A4BBD104C7E5AC057FA551EBBE8B2E16CCC5EFD174057C781DFD270EE
45E8CE8C60473C239DBA7010D3C9B6F79B12C6005B9831146AE55A893A5F9B7B
3709B544C8412F8BF64203D044ECC7FEEFA841B2274570DCE510E39D6CC4DB91
F9C3A7C06483A7FE49E9118C94F79ADB280E5CC38402C1E9F9DF9E9129E83B98
8B18A9BC4C44810607BFEFA00940B0624E52F21809704749F6D81E3B829D1441
8D9B930ECC63475BBB8CD1B142632FADD1D6C3D3AD841AD6A54680825267D023
FC3381A9A2CD89BABD30E5D617A93CDA0960657CC231C6F1D98278F2222ED6B4
77A7342D64AC059315DDAD1A2FA1F4E8CC696B00234513431B7D81D89117506F
0E89A63DFEBB88CE500AE7972C57A0BAA11AEEF6BC819027F403EBA7BE1C9AA1
AE684E1539E549972C97321FA0710759B6D079E0E3C276E3A5117350E877FFF9
7EAE242EFCE7AC3A5D542924F4BF5B4F3426C6C6E12E081339CDBD42CF9D106F
3BC09ED496BD9A79025A9683ABE4C7E6D2D4BDE30E5E1DC183CA471A63C5F45A
0225ED905D98ADC253FBB76D129DA851411F7D28F71BFD25F6FBAF766F159B03
5A561C376465F9331E5C7BDD1DA502ED79B2E8AF3DB3E40BE9E22D7346A518C7
B6B74768537CC669D8DC37769E59A5AC6BF061C79FEE265DBB5F0801EE2009B8
B1BB2CBC48AC2F425E8150E0A2C212DAC5B425EC8BA4590DD3555C2E4BB60197
FBB2324D6370D121761ABABD7B6678871BABF0D67EB829004D89767CF909DC12
49B2200374537635289B228121B5E3D7AF90313E70594EB5C354023BFA079124
08F171374EBEA72D599A27C0EED6598CEA99A13F659089458E3FFF42CE5D0AAB
28D29BA62C2BE02FC7C9FCC92C8C52D54E74329224C0D1AF05E482ED4FBBBCD1
5139DE92556B38F254A74BFFF2BEAAFB4F0EA0D1DA71F18A307061E7A19A3AF4
137889983657F78257CE77F79C2B2064115FCC2C0B048E62B50BF64A9A860C3B
91E456C1A83904F00C6F8129E347C6489FD4FC798ADAC7744A506E329C20D03E
5B00CC748B3EBD9A17525FB5101CDB4D94A4EBC6ED848E3EDAF5E6DDE7690BE3
C6CB2F55A12A0B8BBADA91A7C1C1A18789758287708E4FB86B2C028864FE5136
2683301207BC5711AF71E05D6548E39FA117B079C8302B574F7897D9F07AC262
0A4FB421D079F3741B296A58F0D5B4E47DECF584696F1F4AD63F015A117D2212
94A8AAEEC417AA6A4F842120B84252B3FA5AB67BD68C9727006876DC67F01E42
39B2702AAA0A8F27EC86192E30A5239A449B6A5399030B8ED5DC485BB8344458
6FAE57AEB962FA815982A2A9463279CFFDCB820EB0DD10EA298634FAF1FEBBAC
A5055336EA2E3A55F05E65D826D0748FD49BF7D3064DD668D016CD47C8D086A4
C9BA264829CBB9EC5EFFF31273BD8C22F12467B61057FC53C3BC05FB8E64B58A
3BB336E66A2071FFDB24D02862BE4DC8DFCF80A39E4CBD884D4994A7EC9407F5
280FE5690CC53C46F4BAD3A827D42FFA01150302010956C520A7F55F81FE2585
89761269DE4E4E4F911E68000E98D0ACD139BF6423C688F32BFA5256F93585A4
3DFF3C144EEE61D2894CAA4AD7BBB0F287460E60E88B89FFD651A00F8F45B3B0
8141DD5CDEB790D76C36E9CBCA5A906415083489A14C8EAE44E172D358E005C5
5B6413A9215AF9B9433AF21E8D84C50F750434191ECF16684185BEEA512B1FC5
5E137D23FE61B7D69D1EE483631D91DC81CF23FABAC0975AC960D4C07E4AB64B
360AF67CF350E769A7EB0E1B9BF5CD44BE1164638B6D952A9A16171880421569
23BD16CC0CB64264C3A44FEEDD179DB382F2181EC00A0208E0451F6B0CA3360A
D997EA5FD141D570451BADF0EBA854D9D2B0A27A20D8099642B28DE5BACD422A
27CC8CFA6819F92BF68422A2D6CDAF240C096EA124FDA5B87D97FEE3A170D269
A68FDC8BBD23B356B7A1488750A4D98DD79667371111222279FD4712E7CFB155
4FB459F06712270221C598B15D0E4A8C0DFE90BD2AB4370BF03E8058B5A0E097
E2F3DBA7F211C30A4DC08B2473442AB00336285F642D05A7B901F7AB8E77C6FB
72D7CB3D6953F1416C4D716827503C93150922D97E5DA774EBD006978CBDE78D
938FA99A616BBD1008CCD083D9C4180B08D53616B34C18DF8A379C2219317231
8686ED9E447F8E18556F50BC229E49B5D231FE5E26BAC879B6A7E1A6BEAC841C
F417C17343950F65DDD3206D4D9072461F746076EF9C47598585ED0C78B4D7E5
B9422B3CE88E98C241707FC2CDE157EC885EA0000B6E49EA8C144C8F1550F037
67A1D3A0AF7BCC25BFCEA010E023A2FB117C451A2415E08504F525DF166B4F58
7AE41977105175EF736828BE87991F755B2DBA4BD765F7A4F966BDDBC0507DA6
8296988817E8404FDE7B730558C056E1E29D254B3021D0E6CC6B1905140B6A49
6100C45E9108F029E68711C7E50370BAF7C1B52A067A884BEC6465A581489738
2EE7ECDDB8ED8DC1747380E0BF357209D6A4F4EE88E6634FF0A4AE92B580F02F
F2494CFF98E6ED9A01DC44BF13FDC091C45B8261D9FA08099BDCC0FBB35FE44D
C25B24CC704A0E31DB990EA9E24711FEBDC472571A6977855796EA22A64441FF
6949A8AE1753283BF2E9B0A86139AC1EB0C5870276265C795C55AE4E6C07855A
9BC2FBF17E8D546513FC15FDF323A7899A1BA694A320774FC7703576675ABD0F
0CEB9B96FE8BF57624B10D14CBF511921B60DC41B057ABDD59C5F5A07C0EB7A1
F1AE6D768B1763CC67595BA4880CE60BB7BE9A862223C5C6E41197EA826E100A
50ABDAA8951194774A8B20702D160C3450D2EE128ECCF8C27B8893041F84F2C6
DA434EA611EBCCDB60E4DDF1259F366FB11B9A9D5FBF66C5988D929182800618
56219C5847C0D82F0E866312D963E012DF0DD899911C7881228C82C0AFEB9A32
5D7CE7BF9AD7FC50473C92609CE1570BA2AB068CCE168552299361D62A2BC2C0
DDD57D65FAFBE78109CAB35AC2730A761CAAED96AFDADB8530E36B5B02D2FC02
738AA6FA7C4CC66C88F5BF25B6F0570AE15B9882BDC14A6567C19ABE55F81863
65B3090508338A531A7A874DFB11A5F1CA109CE8784A5B2BDC24F03B894B8051
2880391F89EC495EC8F05B5E06C7BD037EE34C9DAEE69D70D010C705403B359B
DAA5B9ADD109BB291933374888A6584744692F87A67A218BFBCC8B3F417DAB70
698F2052A9C6410448F075E158083B2BD43CA2D9ACE4C844CA4FF989A4D77F1E
20200387B025179C6C7BCBBB8D9714249A9A7C328D7FBACC31F8B5061C0CBC62
0D7CCAA0E331EB7AB0AF62CF9D5799030B8ED5DC485BB83444586FAE57AEB962
FA86448499C94A7162FA00F6E05E273B5DB89549315DD15FDBAD3DD5D71B748F
6814D308FDD1F2E214177FB453C94CDD629E4877DC526ACBDE6CC483A11B6093
8F0956B1B27F79F9C3C1353B559859C6B14B1960E18DAED68295A02CC27547BF
62ECB5E25A0AE928DA1E4073F2400FAA310695FD7B7BB37C48B7CC48D99DC9AA
79388C90BF6C7B559438F73AABBFA8010815AD83B7F79B4DD5F1392A2FE4AB32
A13A3DC4FAE0E34E485C31FB2952DAD2A611754147780ED76337619F86AF1FB6
373D0CEE6B46717917ED45A1E9807DE85363DF1E379460259D44CE01645BC787
3825FA54222D3F56DD91A409F5C00077A7B5F0C07240EB661511365081CC4B57
46D7DAA3C8C73B78F1F4A9842205E640375A9CAA5245667D057C95F2CA95993E
712629C891F2FC0CDFB18D8A4D2260DC93D7AC1107B3099C3D0F5BB813A1200D
EB0CEBAB8C20F82F494A32C35EA00D00CFC5CF8008EFBE21C38F9927527A4AAC
3AC93E098DC1B5EB22D5F83D6A295AB9E01BF45591DFC3BF8DAFE5401FA6479D
C0309A89C78837971855488EB554A6B562089EFBECCA2B2664527B384EB259A7
B19DC098BCF23767A1D3A0AF7BCC25BFCEA010E023A2FB117C451F2E69FDADB2
7871E711B7F00F668A0240AC9A7D179D09F52673BB21073D7A313CDC5FBCB16F
F1571FF48BB3F366A50E379B80399771B0B2912C8BE0428AC71A76D0CF3C64AD
63E04E8EBAC26CE3FE8DDE8F6C30A2362BC44739F4219854F51D3B81A2968A26
33D19D19CB2F9733D45747785C433D4E18A02ABA38F55742DC36E4FF07A5A09E
8C6792D3B1BA80063E3556AD68D0B2AE350504DC28336D492C4F6A7635B85ECF
70EF5733EDB26731D148A0DF7322C3FEEA48C6B4DFBDB48F7FFD497736E320C2
EA32FE2C326F29090704D06AA53B7559CCD26C3A1272CFA2C28FBBBC520AACBF
BDF74AED0B3575A19CFFBD20C3942823DFD0AA1DF822BB91C547733B18DBB01E
4B38BEB534701FC7128048CE8F2291AE97EF2C4B2446425BCE1E1D939E2B603A
03E917000E9803BBF7BBDAAEF0C88BA83CF4138AC7B430553ED3E8160E813F2C
217744EDDCB8CEA62AA27DA04D2DC9F3EB1838B3E3E370977998371DBAC5D3BB
E5694204AE852E6BAA8F264F70046B4730E9769D739C71DB7CF2DE13629464CB
5F4A1F760154BF1A88960FCE4C041E61B36E8A106BF35F9060144E812983C01D
2DCDA032E7D4C759CE994AD4BD0065D122E44FFE52EEFF539E3EF0CED8BAD13A
F40588675EF2B1413840E8D3E7146C9A060745B4F20C79A7038E473F435DCC8D
FED5B9071ACAB17EED41E81108B629E81060CE90ADF3FEE957603462E0F9C036
7151C840D11BF79397C17BE61B0803DE1A88EA79242103B3BC5F55E235A90201
A826568CF2C21EE1C72679204F116B2C354852A9E33D2440FD85E483A0A0BCE8
15E3F49E2D6E5CBA9F47D591269CD9D9B9600F500D06F042DAF6C658893DFBF0
DB8BEA767880B7064D05A6A2F57FDDAC9BB599A95E1F1CFD654ADAF5DE725EBF
17B214E686BC0E3B26CC627FEBDAB4FE37D8692A080EAA8ED098C052BFC0B40F
BFCA767F3B1EEA76B1520772E16580B0405EABD1DD34C94719878B9D613AF0C9
401D371E3543F0C4521DA28864D735B28426EFA3D588D038860AAB3B92A806EB
2F90AB0BE445530439E0E8AE43B43A1B6AA35114D0B8D5DBFA2F1CA5C3862939
0622627FCEDE6884228ACBA46F5DDF43D3CA439B4506CCFE90F24C7522498A17
C7ECFFAF85013B5C541204F798245660D391A59B4B308A8A510FF245BEC7B300
4A57E094DB56BE8EE394EBDC3D33C8B63F94DA672C9D042051FB5E063BE17504
EE916A37FFEE337098C8B53B75ACBAA50F7485D29433BBFECE063768C3B08BA6
47BC6CF4B18AFBCBAE3F8EA164B82D3C3FBF6D1C7B96B726329E0436DA0F2294
D48ABE642223D82A657245105757BE84B599C63F2C3858CDE5E43BBB6020F93B
FDE57FE531E829847D1672900092F211502AF427398B9E645141C6C9FD4CF7CD
176B5C217E6B32B701653742F669F54657753742042E992458F260D47645B8A7
18653D7665C79B220005CBEDC0A5E495CD52CF9919C19E9781EED303F8781D65
E8E779B5442C5AA2F385A84BB64B27DA576A7BD8350C28609799A8D59C3ABA73
070F8B3C4799D6498B2F62BC76563115F3E51FC473410F96B56B11B7BA4B3B0F
935D7B9F86B8D12D634ACA4FE2E0A3A7504E4A466962C44C451D307CCE78AC3A
DF0223DA6C547263340213128BC9D5A34CE24219818BC1F6FCDB8314C064230E
5FBC126CAEBF6CD39A86F5A809952F25B26C6557DD62C2B52388A1B7BBD57EE3
FD9780A42ED36A33E97F6D1A429EFC799DDB5074CD05055A705CC4D79163209A
2105EAC6577EA6EB46F5C9C061A44DE0154738DE06D361E0D9154FD2BB8D13EC
CFAF101CDED67042D64FF3624B53DB291BB2F6754CF1AFF83033522871198AB3
E954EDD88B5059BFBB42A9C79F4D9AE66BDDC633EF0ABF651BD35A09736BCACA
A7F29DF885D233DE4656E4CCC1AC1A5762BE48F5FA88A3ADE94F7113FD6D52BE
C23C21EC0C0FDE2375719E96291ADBDDD3E0EA1BC88E523099196F039EB567BF
B06BBFB8FA7D68D16395D93479B3BD866A4BF33913DEB54B4D0301CF72309950
D176CFAA1D155312586A9ADC136D921F396AEB0DCF37DFE3C79EDBE008780085
38C79938E28987AEDACA045F663A3C778D20B652D4C20EC662F2726199A62939
188C01706215B1223128DFF2F1BECFDC59BBB6448230C4611B33767D290398B0
7A09A94DBAE60D05D8768C7E3C3908B4D748B2F1FE882F22297B2A88B26D7CCB
0124DE9784FF7538DC0F88112C0E8D91E5330643C077FAC71FD55A5490C89142
F2844CB7E6352B01A120D5A0ADDFF4C3ECD7CC083D70252227836371FF83844D
7CF632B8E1AE26BA4CC08A38139660C9A3A2B130706BEB708B430846E137E6CA
0B5436653A968FE24DF8D02DC26A1AA148C5E9680DC50E67D95B2D0C57BC179F
1A765EFF7AFE7DC3807891D039AECEAC3F500A09579E6054F2B7EAE3FBE028D5
14C87A680A7A532F0E53AD0E8B1F1397A02EF8DBC323983FE3080CC0BE03329F
B9B40EF27EE622317120AE39713EEC28B51D1A2970F7C8A64547FA80B60089D4
C18F187D265E8494A80BDB1FCB3ECCBCDB4AF2E9B350DB04B85024823654FD33
D3C4D429D37C4CAF7A37864A8B18325C60CB9284367B49478A0E8DD61425787A
B6ACFF6967548E00ABF534D4380E4BBC02BB41017FF1B1FBA0F5D7D4B35D4E24
AC4A11F6D76800F3561044339C2037CF6834EB429617C33666A20F9454A3AAA5
63B6A59B12647827BC6F11BC2C3CD7CDEF8DF249E7926255FD030246AC687884
A3547DA00438951DDFA590B63A76E9B25318716BD59861F51B561DCC115192A1
E700979E292B3B57E1F7A9FBAE495A2A25D5A813D0A74F91FD7DFC6712CE7D2C
ACE19A749B192F87B72ACCB03DDE3CD408714E8E7C016ED719D6A4D045FA24AD
81E1AAADF851722AAC41B5ABF27FD6F447801DBE77B0098F6A9219BC87F66880
4CDB793530EF5B16FA667198C88057746CDC1EC49ED6114400F4724ECFF05FE0
BED47D963864DEA98B2691D0AF9A6EAEAB6297F1DE23785F7A30EF6B71A0E91D
39A856F11BE21F316D94ECBCAD9BD4E0ECC674B6BE583E3134464F5E6D442E7D
8B58020A028A1E226FCEB33E58A669E704123CC218A3E114BDEA9E08731EFF39
67B5A741B252F764BFBC18C29E0A119453CFD04FC736141F03DA35D68D91E93E
80203A62ADA5F3B76236524AA186982F47DA47525569C373B4B066BA74AEC150
52FE6AC212A20E02B86BE559E9AB16B32D0DF74EC475AC3C97FCC08A6E6797D9
D6D4D6794945B39D24804E5B935961125F4E43D88E7B92DCDCB3F560C5391915
6C4AD3607A91673A3DF62988DE97DA96C5C43CC63FBA4965079538C1F9087E6F
C665136B7ABFFE8DBF11827CAB1C331966C80787F35EAB3A94CCB98CF5733C7D
B75DA4EB3D39A3B9FDEF15DA1F1505CDD37755796CD5FD0793D7E8418BBACFC6
60D888697296B7CC6581024CE4DA29A54EA6E94CF68DC85C76FD06BA4B0915B9
EEBD5FE0CA05E9D6622174BDE3AB3916E34B9EAF5DEFC753A8023D4BDD17AA55
05268CA9DF32C3DAB7A37106D82AC8FF565002B13BABBE8D07DC3F0C5D4B3519
48D03668F1F26FDD83522D571226623E88BBEA686CCADB88397DB55F731E1C77
8CAB39F889A684F409BD672C3E6A26B4F2421D47D767D4558876E85ABB0B8396
FEE0C3327CFFED7F4CE855754BC800985A57640B2B6105B2D2C996F6D5724889
6469D83A6A168B34B0F1FF61A2D99F8C01DF70C9EB8B728581AA72EC3A00921D
30E42D3DAA179D9F9D728F290DCB8BC01CBF67436CEDBF502C4013C1C4FB9CD5
F09E057B1A71343DACC41CBCDC0E30F2E76DCB77221ED71F4119E6587FBB3C5D
950A578830C4D8725C47D095527498A7B5262D6F945FD708A4B04A9E22F5347D
E5CECCAB3F113FCCCA9588C7FB72643EAB8F6D8AEAD1DF4E56E92AA7E3D696B9
7D6C8D1A7E9F4CB2CE8882889DD629227B34D001A98B961862B5BA481DA1E4DB
4B8B29B883E85B6CB1AD69A9A97282E8DF9FA97A20E05E027CA299F61F1E92D2
7AEE0923C67DEE00878E5D449CB25E37E5B5348DB0B4782BA6D48AEE80D379CF
EE11E4F1CE43E0545BF465C1E966923DCD1D8AC4D0D2CC09E75AC1D3D6BC8E91
67970E1D356361BFAE3F7F5DF22D8F98C83A959665078867B4A024FC24B16AB6
474F370F7F61C6F76CE0067D2FF9093CBD6788A412D211A3EED9136B5B6C0F73
4A510548DE1788FF9C89DFBB823DF700E40C2E96411987BA74CE27B2C4557D4B
04E7F771105122A7F30AA68962E8A8CB29C6584BD23C0C34D077E4EEED50C049
23BAA32F2A94D9355ECCF69B6298116DF61E574345341D1114A3F53E9A4C8A79
6E104EC899AC0F12E39367ACA998EEC3BD084571DDF97E17A71DBE46014A352D
4B319133E9C9B38EF5D524E99EAD57A66C587F16F3B41280964BFF59B4AE356D
1DB3175DDC2A6AFD06EEE99509185F0BD9E6F5A06182C3B9844843B36660FB31
D933BF448907921383630F2C6D55F3188F2D11E04C8D23621F7BC8C90F4C4593
52F8149CF30339DAA54F8FA10295E55782D1960A12E9EC3C63D5CFFD2BC79127
EB92A645AA18733BD09F1D6E4B8F925E543869180F1374F8B233A668D08BC1B6
87408F072FA391643405435A09C1257CFAF86F446637D795510E5BFA475E8051
C73026B1B7D86F199033EB001C3B895E824DED43C96305B0D042E6D59F5DD763
FF359543D3E20D2F490B50F61445266E23D699CB6B1AF3199A54D8D459907D97
37C5E7929E55AF96F3C9D558B0EE52466D6DDE336D4B5F9F8395469839226C61
F3887B80F89660C0D86A22BE594113A00F62F7A579FD36FD6F1A44EF78C16719
0F3326BA35B2A0F95CD035417C7E909B751F4CDC6547F9D72805E61ABDFC1C57
0DE53DC2D114FA43CE0B06A5B8FB130A3936C4504264CFF7864B165777B02C59
38A3F19631D6133A8A826BEFAAC61EE108B826DE9F26DF59B2995B000E5AE2CE
32B6DF5ACF58BB905440E0ADF465AA599C0B0869BBBBD14E58B469F62197B850
88749F3CAFA40A6A3223D4CED495D4459AE15405AC35BD4A4795277C0923A994
7A2F28A8B889507B3DBB57536F1C9C507DFBBDC3D963E6BD121634970021DFBF
5BC78580A7EF7997467C254D74D5092242276E88FADC94A77124E291CB27BF10
E4EFC417FDB11F8C09C385119682F575CF89AEF4279EB1FB8F7531E5EC8814C7
6D0B673363D7DE151C78BB908A41CE91E857CCA6D5E8F941E8FAAFF32D168731
C03913C82AB96C6B723DD400922EF71403FAB37A820E7DF4E1CF4061D8C6D16E
DE5DD63C6EC51A967A23BE0879A268D2223BB036F4E838DC954C2DC09A14F2E6
98411F9F932836F6804E78DAEAFCF015DE9895482BE9AA96C29817AF06F4263C
6099B6D3B57E8D4806BB3A779935CB46463F4570CC1FCD2159FEFAADFD9A15AA
5610C82FE9B6F9C2CCBC0FF2E710146CB74494C551826A537FBE9B5F897B957C
DB27ABA4802F0AFBD6BA02D3036E3C56FDFD630C2E836FE1207E4025C49819CE
FBB990105C1DED1E18B1755EDCEBE41A6528A38D308552CC5598CEA91C8F135C
EA06C3251DD02D57D1F95EC6F09B8FA5F6FBA1D55BB33E7D9402419FC8772046
E7834B9A083C4CC2401ED331A25863D89A01934A2877AB1C390DE24773607EE2
AF66BA82F846986F1BB03C76288AAD42D9AB73076F309317F7FFBDABE56B4CB2
B291386861828F6251F206B9131C951D1ED4364A9CCE52DA5FCE0F492497BACB
4DB51595758AFDC9C644CC5BF23418D84B5F9009000B752CFA7E50A7F9679101
4712D9E9AA04AB2C81845DE64C387F3AE3EA8386A9CB5709CF8C33314FACAE00
6BA2064623902C8AC479EEEBB609EABEC64590D98EDD86421400B49D576FF925
E058C54966D1FAB8F2E593A48DA79B9A3E4E92BC5172E92EC43876E931BD9D26
DACB5E8A0242A332391A370DEFEA53140B7DA1DBFF84740FD5F88665537D3BF2
79D84C6A19318E7B08B2939078355D6C3F9302988FC5A01A6942F350865E1404
CADB8AE7A83015B55D0FA449D50FD590376AEC5039310EF1F4ACEA1A40014BA2
7BD58490D2410AD3DE649F4F521C20F6B6AF7E151F7AC33A81947FACD655C0E5
3963712A6EAD0F218DAD2781926594A4119E9DB10B9392171DBF9964BBEC0301
3F324BD4B1E3053E4CB8558AB5F9CB60A2B2B7D3726D4D06CAA2CB08BE179789
840B6D116064975734ED3E74E2B1EB9C3682C8040370715DF701C4B69733D488
CBCC996806C997D5326D7D902B8126FA929A433A9A8512116A026D2210B7D755
78FCAD8E3B32647A0292A81A5594A1C5ECFC0FC07EB30F735D4C7F124920F461
86D26BFE14AB944E0B3949BAB173449FD05F2D761B67600AEE88C2282BC39C57
1BD45057FD09085730695ADEFF88717E96BB4B92ED7DBAD6C2DC672BF913ED44
A41A2D1E513C41D87218C21F110ECD864BED08172CD2FFCE0794E4BA2AC19A86
0AC497B2126955553D214FA3C5F0785CDDBA06FAF7AB4D8D807961392FB22C4F
8680188E87C206189B65F6E5571E7997ABF7A447BDF55731E6B46680D9AADC30
E799BEDE4F80E5CF50E44B9D8319141D0F640E86C7C229F5140D0B98341339A5
470B4C89E24C9D72A3A8C9438B74A118064460F8A6CB7312AB9DC7B899657452
8FBC9C6EC91E83583ED5B0AFC5B2DD38B9368C03518848B57E30DCC022B26EEA
ED59B188DCF08F2838AEF8F97FA0DEED0186FB1B803E6AEE1742329536A3295C
3057BE4D15DB780E4255E9382562559FC325940A05FFEA0A7F504EE39404C4F5
E6D391A190FE062FB0791804130249FCEE06738CF090F81C43B24A9FCBD966FF
BF154149073B8A3EEB12EFB77E7AABC37F57BFA2BDD7C3FC7ED277D9A29A3B03
EA96BC30446FA34F89ED1837EEDA8A195AB6AD13AB3CCFEC63A901A9B3B9A5C5
F43471ED8A0FF52EEC38F483A86D33B8FECB35E69BE2380291D3CFA907F17A4C
84ED0BF61A99266AFE0BC2925DEC606B81AF6894363B2114294E66864446DAA5
CE2591121516153380E4E2A0CEA310D96BDFD883642BDB5552535A012790EEA2
3D08ADA7F66A3DC74D6126B8BC8E30EC6CA788E903A6CD768A42943CFA8377EB
3E3F4C64EDBD88EF2013AB4829EF58D62DF6C4CD5658D8DEE558D56E15105A75
F19B8F6AC9B8097F47863AC853E1ECE7258754BE931C5E199A16DA891583A755
330A5E5AD93F564C9A163A37AABE8921D306DD688EE37286AAE2DC22B56916C1
8B99C39E1F3FAF32B3527B9A9CF7FEE23F269EF4CEA57207AAB2B3D7D624218A
2888F4D7C9DA3B7B59CB40CC950CB577B025755BA04D5D03A83FE103DE7EB45D
DACBAC1620BCE641230920C23A80134558EEDDA22949ECB484E49E3CAEBB563D
7486F097CF267B9E0069E0916E6B555B31670C7044FACECC830BF9FC5B0C478C
740515971B4CE4375A1A9F1EC3D6148A1C850ACDD1D0D9287FA97D0495E28CB8
E2FE2A4CC0B9DE515A0FCB8C2C221C3E656F55B139CDD5C4C87B5870BFAECB14
6A3D451B69246E1B04069357CC21D8439789FD52FCBBBEAC636430D496E772B1
34E967A87C75DDB0CF6D217E3A78C1F0021E46CA77856A05A144DD0BC77CBFAC
40D1AAA281E4E34420D1FDC40E678BC42FB3835475F0982248D937A6C2DD7C23
20DC37841E76F57069E9178CABF3FA0FFB2587943DFDB4C6864CF1FC7152CC20
860755DBFF548AB5AB1461702C16DB6B9FC7A6BC09A67527FF79A7F4AE5AA240
9548C3FA691051689741CF3E4A01ED227D758B40E87EFB947F6EF31DCC61CDDF
C39A277182751A431DAB4869A982293003C83BC5371513272676E588988C3497
C382B1FBBDD8DCC67CF1CABC23E8D3B4E553780C34B0DF36A8825B776FAAEF16
2FA24EB17C99F24D3C9C200E954B4A6DA6617E3A56D72EF332FB941F40E88F79
AD6DFC8C619CE8FE1EEE3B9FE2203DC6C75B21643D462098578BCD5050EB47A9
F4313EDADA4845CD6C7ED47F7E9DB8862B0D4909282D49EAFCA976E2D25DC224
4AC1A3099AF1EAB3652298E6F6E87978C4908A3723071CF996F4AAB4425E9D7C
3C8193004DF6B0E24465256E71B09E123754F7752507DE77C8B35CA1A3F7D176
DEF397B4BC957F62A653018E98A03B7268517394AEC07E44659608CCA03A3BB2
6BB18234A5285B5517039417C84E049F52D3308C57734B39E016FDEDA848A63B
7CAD78C042BD6D696AE7B5E2FF38A99470D10F396AE89524456990D93AE476AB
15324149043E713261671835DDF1623638E4FD96E4063FB23B0C1334231CACE3
B876EACEA91560CA46C1C88BF1A9550F9DA16C9668315E9262C143A87AD4F3F0
A28C8C1833DFD60525A78B2A4BD7C5BD4223A7E16C5BF382CC68A690BF42586C
7D5DF306BD03A0A0B91406F90367E180A14170F7AC637F3015F91615A85167A1
4AF1A3A745549A2C8D8F6C93CCAF12CBC1C77C8FBDC5989A39D91E2C927FC0F9
D411C4599D9D6FC11694DED91997A19D95E52890888F7002E25E625DC477211A
C77F7C18D62E44A0351C8167558745A4772B854BA5FBC5BEAE9A4370CBCC6A3B
60E897A2A10ACC9590B7D186EDD915E90CD3285632D65C2CC0097A6CB98FBE4A
9FCAEC75025EC73938A6A532A13E23EF1CE928F9FD16A198E4B71C1FE2B17F94
079262A03A56BA2870165B332274F9BE188776367C085E58BA8F0F007B64C2D3
5B5C6CBEBDBD569AA32375DE4619505809407145D7148F40B8FA1D9F0DF623B9
E4772C1D183F91D837DAC94609659451F83DAA632978D0702FB53E7B56D103AD
819382A9EB1E201AD6F5253B4D30E256A366A29BE5ABE7879DB7FFB127700DFE
76E3B5B6601794E5B4C81CF3F7384A29702F0BA28FB2F1F5F450926CBC449C78
8B427ED303F7C710D50E8F3FB08F9EB235C3F1A53833DEEA43BE551A26129AFA
9DF18A8B9B31303F61A695B20B65DB5CC404B62D98C1FA975045EF40F4BE6FB5
15312A345FF18B169B121155CC0181DEEEF3D97094ED2C21EC501C3F05532012
6651F8DFCA0DF851F791B14D83F1DF955796BD15D834C53562765F13423A1CD0
068835D69B4651E206B397E2D6F3E1134D38039EC8C6A5E352C6081C7499C62B
1B92480E5963073189E7CAE9F2844D17BBDC178AFFB0DEB4493D2BEEDFEEBECE
C598CDB1BF77AC8209A2F49320A183B1D15498DD6EE56DDA47189AB457D95689
50DC3E2369571FD937E1FCB1AE7D1F4FD7BB0D32C0CC64B7D418705295AA7291
AFBEEC84B992D45A2680BAC63497C593C90728B12A4957FBDCA1E23E47BCF2C9
6A9C58E53950DB59E4322DC2975FE68D9DEA3C0DBCF7C332C1413109E975BFFF
1058EB7E1C2D93E4E93FC183B92C92EBB1C9D571BBF3740E786A7397A871DD11
FA1D78E5F78DF4E9B0FAFA718BCE5FB4FE432EFA11B131B70FD5A3D826575225
4AA7570340949EA4FBF43CED26FB01E8DC8A99D891001DCBBF4A1A12F4110057
9EA1129B3069A90C2B4CFBB3CB0475443ACB4B4CA279CA5CCDC91EFA8A83F96A
9DC950870C1B21E2186D8C4CA15E8E1CEE5EF7BBAE9CC424E277788953475AEB
85C963B6B554263002E358C322B2896A8BB113136337F88C41B0FEEE994CFAB9
F734AC514A3B200ED1151418051744E40FB9CFC34F1C31950A393F4F1720D251
60F42D9892372CCED4FA66BC0F8284D4124E5A355BB7F9168E861CDBFEE4CA4D
20882184FAC1670551CB5E0D692B3C9BDE4F85242AC48AC6197D9DA2FDE6A9CE
BCC633F3D38DBEA5BFEDC92435FB436F629EAD2AB3BF6C3781D123D7B13FA066
25BC7508ADAA2EF193AD1E8F143823BA37E501B80227AE0930DE6E4E027CF555
018F191F3C923F544E8CA05E597D82BF7E09FD39B4341967F54537ECCBC61816
D57CA516A4681C2397F448C46BA164AC7BE0C0A73FB423A2A81FFB75D05D0E3F
9E07539C80A599C7AA78251241B46E662B62589EE9832FC6295AF61B462F8DDA
EE658222A866BF4845736F9DEE02D06634547729442ECDC50C90989896D98814
A4E62E172C82D0B5EFE58F67669D0F2F88C5CC0B17ACD50C6D8989B3E8688D2A
74E9C9F9A5A8809002F08A289F9378231D5B159C63BEDBC8B663A9376E1F27CE
4207DEC332AC167E282459BDAF6F4C56D862C5FEFFF18F6046189BD0022AD86D
661BD0C1B7AAE7BA58D30C3FC4681906BD573C7A473787910AC263CAC0EAC7E3
C638FE124966C4632B7CB94C9DF7275990EBE5D704AD02616D034B3F80AD2AD5
D4E1DAE678029CC028DB4A9B94A891BFF21A5669B73153DF85531821C23E4DE1
D1F95F3954C8CEAA65BDBE9E0FA91DF22E6A4F66A29D45509E215C2ADFAF9C4E
D4EB6497E5FFC3F42F921D984F227E010F59376FB1AEB72D08E929E1630A7750
DE134BBF26AF490A8ED6384B821717860BBB643DD10E8CEC76F3A88D24AAFA39
C60EE153A0B74660FD4FE0ADF32F585728DD7DB751EC8C146E17EAAFC942F80C
2313118CDE3A07B15EE37DC5F4533724D785C22C645809C6B3B4B9FAF43E98E6
6BA3E83FC00043F27F1E73B67016A5054D9B90A3FE2052561C22720C0C78F40D
46FFD5B2E656036D9AA4A1EDDF6A0122789BF66501B14680A3B9650D6A4A0281
8B0A158B7895BB24BFCF21A45C95F7E64231E82A94D3F931EE74FD4C57FF541D
5C0C6801DEC72AA27D3F120053B7E9268CF93B9763BA70C77A82B01C2B1741EF
6F7AC4260AD77DB005D835B04DC328500DBE2E66A07307CA8A2F7A801C7AFACD
58F93FCD83DCF3EF58FE49BAA3C28FBBBC520AACBFBDF74AED0B3575A19CFFBD
25CA7A5AE8198367C7D54AC750206BDB71AA4324F87F4C78445DD4B94E0C5EF6
6E5F4252E5511A19172AE7E16C19F7B344148D1C44B49B3E6398E1051D1F8561
8EC5EF25303E22F493A53C3C1B37341F96F2F8FB4CD2BE21F98C4593954B4833
509E1FD137D8B823953AA248937D5C18D216E97039C5B076F16A3A6411A3D4BF
6AB784505D93BCAEEAE9CF1701F6DF625DB40083C9FDB6510619870C144864AF
6B9D3EA5F9A365966424B74C146E164A7503FE4992BED1A2323DAB45601994C6
7F6A07F238E7B76BE76F95B8C6EA8C10AAD1B220F9934FBCB525354832470FA4
22868CFCC8029513235C0286B76196E35049885D0EE7EFE008301D60083FB7E8
BDA75A112D1D27E922FBF1A86C9D14A277369E5A7AF7CB389BC5900C4305DF98
D59594162682F9947E1A097E36367B9D631483124BEF89BAE5DEAE4A2FE1EFEC
2DCFA57BB0D6E3DD6C027519DE25EBE4946011655C21E22D5420119C91515AC8
E880D53062C786EB15A5F0DEC6366D20DFACC9A51E37BFD99FB7E16817CD828E
6DB40B86A47A27C033E27BAACC78183B1E07277D77FCDF7E4E239BA6F6C7272B
77E36FF4156DD123FAB23AA37B36092D3F6CE83BE0B858CEE4CC140F09B9C2B6
36562C5C7CBD2D34994227FD7BC1FEE1B83BCB319FC0FE2D9A8CF214DC85B763
C354E8017B20D6DD0FE4D543A62F8ABE3B31E04FD876777454D4209923C06F18
C3A842411785C1C2709260CB18704C1D85948897108015B8187CA6C46B291E02
081BB5652A867C6AAFCEA866503D32708C76C30BBAAE0F953D5B8A1126A03DF4
5D0AD1FDAF194F7DCD648D8F14A5264B6277B27F417F17BB5F05E7989CBBC604
FFCA18F18485B0DDB33F35AE332022B997F022EDD90CD23378F9FD3F10F718FE
409769B91477249D08F7EC9005E5F4D03ECCDA8985D0123EE5F52612CB8123A4
FF2E590AD47310066954EDF3D6CB212FF2983C3FFA0E9045AB023E047EAB4365
22099C17BEE8EE8CCB1DA1A852152D4BB72DCA67ADF52AD54E547CB0F5938634
0C9F9ACF9B1510282836EE37A948B3BEFBF1EB66E2E910614F0C02936959E2CD
FCCBAB7D7B6183B075036DF7634B34983FEBFFFFBB7464003A1ACCCA304D23A1
BDC50F2DC6C818601D05AA8B2E289F1D18568DB64A9868E32D1914694E5FE055
9BB3918BC1A78DEE38FE96A5EE6334C12E55B24E5CA3AD0E78C5B2E39022E137
F808DCFF33D406320583193B6201E1F9F7FF4227AEAB1B276B793ACF6AED80A2
B715340059B49945C6D796F99D4B3778E50274F69BB81ABA1EEC1B49E1048648
E684BDD651A058F994B3221085A2C4867AB5F1194290CB61CB54B870B7C9C070
5374E0C8E16ECDAC535403EC370588601C9DC97722C444D33D66795ACC5DCCD5
FD186AE2E7F9C81FE8C4F9F1F2AE3B9560C9DF5FE69CDE045F576D9C446DD56E
CEEA07228F0B0DD1460715659DAC3E8F977C22150E9DC4D491B11A57871330BB
F116B7DA406DA85CA0B7C26E68F9E48691ED23DB0D3ABD8D6BDC79C164824B6E
3E3C3E69366B759B352F6AF5B85B3EB5F744202CA584A293F65B0EB3258C71CB
FE3F8C63E15A55ACA65DCC2D70D6682DDC8D06595AF02DE1AE13B66672A6FECD
532ABA4DAEF7AAE796B0550FD7BCCBDB2C2BD5BD8A16E33683A8AAF33E895719
63AD2AC7E77EB1A8AB0DB6CC37838A6472C601C215037E94AC894647530BA822
773DE75726823FCE87E1943876B8DC19F588791D546F74364A8EAC427B2E82FB
786FE8709499255A26F9ACD205A00D5C6228AA1D43F1C6F0E9EA338B23EAB1CE
A62AA27DA04D2DC9F3EB1838B3E3E37097799C0895D7BE2DB024F9A283E12327
A26FFA9F875020231CD40EF33EEA48ACCD58D8B69468E67AB377C6BD16D1193A
5F2AB98C19276A104C8770D3E62C7EEA9759D337AC9D703F951A63AFB753A6A3
C4DFF9BA53B2C6F34650E1D798751A0D375757D95AE364394FC25E6E0D02C684
0312A2E9B1E80979B7487BA2CB786018E20A5E0355AA35B0559FE3110CEABF5C
E69F5813A5220097640011752D3D74A080B1C200EA362277C7562AE7CF8E481A
ED2F46A095A3FE2052561C22720C0C78F40D46FFD5B2E65602B96B1998A08ADE
B2B51FD97C947F3CAF4A17CA0F8BE63AF7E43E4E692B8EDAB13CF5AC05D11A33
F2D53EE26FB400ED2A188680E41CEE552DF55A235EA7E738E9BFC05EA20F8F92
CC6F6F0883C1386E0668FF164EFBF2FAB76B6904D04CCC4B264DD76F31F017E0
7A31B99351BAC71E40DAF81E1F113DD4256BE6504185EAF8D48F2D1C7E3DBA36
13EA73BA2AAE3FCA5D2E78ABF50BCFF513171703AEED0A5A2C1C623A6D6615F2
4FED298A68097564AE72C413725A79EF90AD4FB0073FF142CFAF4290F2BEFA65
D13A92F67E852DB3FA36EEA39B8FF07CEC6D1BB14DD55B3F675BA045A8D89AC5
8B77200A09C675E45379536014257E6989B76A91534C2564B0516C18C9EB0B1A
F91990316CB14F474E9D6CC7C8FBF86B398FECB416D63179BBC92DD260217381
05BCED3E94CECEB2E6E552D1F7E25591F3DD0B4729E5749A10ED277E3544B849
78D99D4DFA915826D135D2D8A3BCE3C8EA00C9494343F320DBF68ED46DD1CBDA
D4DB071036F3CB39292A174434E5623D3B09A0C314D0D84700A7EE0FDE16C59C
1DD2E8EFDDDBA23BBC2A519331838DD137333F556C0B64A99038D69D48D7AE40
9B547ED9F6FC39C8C2A31BCFA14D5CEAC61084FD0D683AFED2AF2CA96F46F2E7
1D2DA1D8D60C3087762D3264A399447AAF980AD5A22E4C49A366DE4C183E1AC3
D95226C13EB523AD09BF71DC2DAE65DD92C168F5AAABF3E48C1DDFD721BF63F1
6B3D13DA2E85C78B828BCD6C278CEFFA767A9D8C6D62A36674FFBDF2A9D564CC
87FC8B259D35AA0847B7E91864EA6454603B4D73C88A007D17A3DB5A24E3D26F
03EAC8703F18A32B699A2FCA90DFB3DDD4F10D75A6D799F76209242EEE860730
4CEB7A9D8594FA224C2E5D6E74E26BBB7CEE5215A715DFC25D4FDC601AD9217C
220985CEC6EF4AD74B91D1F1EA50C4ABB5780B1CA1A60D457800393A82355529
6D5D24902420BF6DA181D242229BCB7F71972C3472F6C0FE90E4A21BF4E62D07
B765
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 23867906 17900936 1000 600 600
(/home/fenarius/Travail/Cours/NSITerminale/docs/Annales/Corriges/Sources/22-NSIM1J1.dvi)
@start /Fa 22[42 115[47 34 35 31 47 1[46 5[21 3[42 1[41
47 44 19[81 8[66 68[{ enclmec ReEncodeFont }14 83.022
/LMSans10-Bold rf /Fb 137[25 1[25 7[21 2[13 3[23 3[25
18[34 78[{ enclmec ReEncodeFont }7 41.511 /LMRomanCaps10-Regular
rf /Fc 22[20 111[20 5[17 15 2[22 23 1[11 2[11 3[20 23
20 1[21 18[31 1[24 5[25 4[29 7[22 22 4[22 22 22 22 22
12 15 3[17 17 40[{ enclmec ReEncodeFont }27 41.511 /LMSans8-Regular
rf /Fd 143[44 2[44 7[44 38[44 1[44 12[44 47[{ enclmec ReEncodeFont }6
83.022 /LMMono10-Regular rf /Fe 22[37 8[40 105[38 43
30 32 28 1[43 42 43 66 20 41 1[20 2[25 37 43 37 43 40
17[61 1[73 45 6[50 60 14[42 1[42 42 42 42 1[23 6[23 39[{
 enclmec ReEncodeFont }32 83.022 /LMSans10-Regular rf
/Ff 22[52 123[93 4[60 4[52 1[56 13[65 83[{ enclmec ReEncodeFont }6
119.552 /LMSans12-Regular rf /Fg 188[84 17[66 49[{
 enclmec ReEncodeFont }2 119.552 /LMSans10-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -525 -608 a
SDict begin H.S end
 -525 -608
a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation1) cvn /DEST pdfmark
end
 -525 -608 a -525
-608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608
a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -525 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1 TeXcolorgray -600 1668 3024 2268 v 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 2424 1668
a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 1345 1579 a

 1345 1579 a 1345
1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf2

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf1

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc



1345 1591 a
SDict begin H.S end
 1345 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1395 1529 a
SDict begin H.R end
 1395 1529 a 1395 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1395
1591 a 1395 1591 a
SDict begin H.S end
 1395 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1461 1529 a
SDict begin H.R end
 1461 1529 a 1461
1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoToPage>>/Subtype /Link H.B /ANN pdfmark end
 1461 1591 a 1461 1591 a
SDict begin H.S end
 1461 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1511 1529 a
SDict begin H.R end
 1511
1529 a 1511 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation2) cvn H.B /ANN pdfmark end
 1511 1591 a 1523 1579 a

 1523 1579
a 1523 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf4

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf3

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1523 1591 a
SDict begin H.S end
 1523 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1564 1529 a
SDict begin H.R end
 1564 1529 a 1564
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1564 1591 a 1564 1591 a
SDict begin H.S end
 1564 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1606 1529 a
SDict begin H.R end
 1606
1529 a 1606 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1606 1591 a 1606 1591 a
SDict begin H.S end
 1606 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1647 1529 a
SDict begin H.R end
 1647 1529 a 1647 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1647 1591 a 1647
1591 a
SDict begin H.S end
 1647 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1689 1529 a
SDict begin H.R end
 1689 1529 a 1689 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation2) cvn H.B /ANN pdfmark end
 1689
1591 a 1701 1579 a

 1701 1579 a 1701 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf6

 restore
 0.84 0.84 0.94
TeXcolorrgb
 save

 pgf5

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1701 1591 a
SDict begin H.S end
 1701
1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1742 1529 a
SDict begin H.R end
 1742 1529 a 1742 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1742 1591 a 1742
1591 a
SDict begin H.S end
 1742 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1784 1529 a
SDict begin H.R end
 1784 1529 a 1784 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1784
1591 a 1784 1591 a
SDict begin H.S end
 1784 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1825 1529 a
SDict begin H.R end
 1825 1529 a 1825
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1825 1591 a 1825 1591 a
SDict begin H.S end
 1825 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1867 1529 a
SDict begin H.R end
 1867
1529 a 1867 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1867 1591 a 1878 1579 a

 1878 1579
a 1878 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf8

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf7

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1878 1591 a
SDict begin H.S end
 1878 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1920 1529 a
SDict begin H.R end
 1920 1529 a 1920
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1920 1591 a 1920 1591 a
SDict begin H.S end
 1920 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1961 1529 a
SDict begin H.R end
 1961
1529 a 1961 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1961 1591 a 1961 1591 a
SDict begin H.S end
 1961 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2003 1529 a
SDict begin H.R end
 2003 1529 a 2003 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 2003 1591 a 2003
1591 a
SDict begin H.S end
 2003 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2044 1529 a
SDict begin H.R end
 2044 1529 a 2044 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 2044
1591 a 2056 1579 a

 2056 1579 a 2056 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf11

 restore

 newpath

 restore

 pgfc


 2056 1591
a
SDict begin H.S end
 2056 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2131 1529 a
SDict begin H.R end
 2131 1529 a 2131 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2131
1591 a 2131 1591 a
SDict begin H.S end
 2131 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2222 1529 a
SDict begin H.R end
 2222 1529 a 2222
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 2222 1591 a 2234 1579 a

 2234 1579 a 2234 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf12

 restore

 newpath

 restore

 pgfc


 2234 1591 a
SDict begin H.S end
 2234 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2292 1529 a
SDict begin H.R end
 2292 1529 a 2292
1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoBack>>/Subtype /Link H.B /ANN pdfmark end
 2292 1591 a 2292 1591 a
SDict begin H.S end
 2292 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2342 1529 a
SDict begin H.R end
 2342
1529 a 2342 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/Find>>/Subtype /Link H.B /ANN pdfmark end
 2342 1591 a 2342 1591 a
SDict begin H.S end
 2342 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2400 1529 a
SDict begin H.R end
 2400 1529 a 2400 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoForward>>/Subtype /Link H.B /ANN pdfmark end
 2400 1591 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray Black 0
TeXcolorgray -517 -517 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -517 -517 a -517 -517 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -517
-517 a -517 -517 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -517 -517 a -517 -517 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -517 -517
a -517 -517 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -517 -517 a -517 -517 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -517 -517 a -517
-517 a
SDict begin H.S end
 -517 -517 a -517 -517 a
SDict begin 12 H.A end
 -517 -517 a -517 -517
a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -517 -517 a -517 -517 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with Beamer class)/Author (F. Nativel)/Keywords () /DOCINFO
pdfmark end
 -517 -517 a -517 -517 a
SDict begin [ {Catalog} <</PageLabels<</Nums[0<</P(1)>>1<</P(2)>>2<</P(3)>>]>>>>
/PUT pdfmark end
 -517
-517 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -600 -287 3024 230
v 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray 1 TeXcolorgray
0 0 1 0 TeXcolorcmyk -500 -350 a Fg(C1)p 1 TeXcolorgray
-529 -458 208 5 v -529 -323 5 137 v -325 -323 V -529
-321 208 5 v 68 w Ff(Sch\351ma)p 1 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 1 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-170 36 4 100 v -3 6 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@PI
16 {InitRnode } /NodeScale {} def NewNode end  end
 -3 6 a 162 36 4 100 v -170 39
336 4 v -170 139 4 100 v 162 139 V -170 142 336 4 v -170
242 4 100 v 162 242 V -170 245 336 4 v -170 345 4 100
v 162 345 V -170 348 336 4 v -121 418 a Fe(D\351pa)n(rt)-338
517 y Fd(<p><em></em></p>)-467 617 y Fe(La)27 b(pile)h(est)f
(initialement)f(vide)p 943 36 4 100 v 1128 6 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@PI
16 {InitRnode } /NodeScale {} def NewNode end  end
 1128 6
a 1310 36 4 100 v 943 39 371 4 v 943 139 4 100 v 1310
139 V 943 142 371 4 v 943 242 4 100 v 1310 242 V 943
245 371 4 v 943 345 4 100 v 1063 315 a Fd(<p>)p 1310
345 V 943 348 371 4 v 993 418 a Fe(Etap)r(e)h(1)p 1 0 0
TeXcolorrgb 794 517 a Fd(<p>)p 0 TeXcolorgray(<em></em></p)o(>)617
617 y Fe(On)g(empile)g(une)h(balise)e(ouvrante)p -140
755 4 100 v 45 725 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@PI
16 {InitRnode } /NodeScale {} def NewNode end  end
 45 725 a 227 755 4 100 v -140 758
371 4 v -140 858 4 100 v 227 858 V -140 861 371 4 v -140
961 4 100 v -42 931 a Fd(<em>)p 227 961 V -140 964 371
4 v -140 1064 4 100 v -21 1034 a(<p>)p 227 1064 V -140
1067 371 4 v -91 1137 a Fe(Etap)r(e)i(2)-290 1236 y Fd(<p>)p
1 0 0 TeXcolorrgb(<em>)p 0 TeXcolorgray(</em></p>)-467
1336 y Fe(On)g(empile)f(une)g(balise)g(ouvrante)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.09999 0.09999 0.34999
TeXcolorrgb 0.09999 0.09999 0.34999 TeXcolorrgb -600
1751 1008 60 v 0.09999 0.09999 0.34999 TeXcolorrgb 0
TeXcolorgray 1 TeXcolorgray -340 1732 a Fc(F.)16 b Fb(Na)m(tivel)29
b Fc(\(Lyc\351e)14 b(No)o(rd\))p 0 TeXcolorgray 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 408 1751 V 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.S end

912 1732 a 1 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.R end
 912
1732 a 912 1732 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 912 1732 a 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7
TeXcolorrgb 1416 1751 1008 60 v 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 1 TeXcolorgray 821 w Fc(Ann\351e)g(scolaire)f(2018-2019)
p 1 TeXcolorgray 103 w(1)7 b(/)h(3)p 1 TeXcolorgray 0
TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -525
-608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation2) cvn /DEST pdfmark
end
 -525 -608 a -525 -608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525
-608 a -525 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -525 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 1345 1579 a


1345 1579 a 1345 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf2

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf1

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1345 1591 a
SDict begin H.S end
 1345 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1395 1529 a
SDict begin H.R end
 1395 1529 a 1395
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1395 1591 a 1395 1591 a
SDict begin H.S end
 1395 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1461 1529 a
SDict begin H.R end
 1461
1529 a 1461 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoToPage>>/Subtype /Link H.B /ANN pdfmark end
 1461 1591 a 1461 1591 a
SDict begin H.S end
 1461 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1511 1529 a
SDict begin H.R end
 1511 1529 a 1511 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1511 1591 a 1523
1579 a

 1523 1579 a 1523 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf4

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf3

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1523 1591 a
SDict begin H.S end
 1523 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1564 1529 a
SDict begin H.R end
 1564
1529 a 1564 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1564 1591 a 1564 1591 a
SDict begin H.S end
 1564 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1606 1529 a
SDict begin H.R end
 1606 1529 a 1606 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation2) cvn H.B /ANN pdfmark end
 1606 1591 a 1606
1591 a
SDict begin H.S end
 1606 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1647 1529 a
SDict begin H.R end
 1647 1529 a 1647 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation2) cvn H.B /ANN pdfmark end
 1647
1591 a 1647 1591 a
SDict begin H.S end
 1647 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1689 1529 a
SDict begin H.R end
 1689 1529 a 1689
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1689 1591 a 1701 1579 a

 1701 1579 a 1701 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf6

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf5

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc



1701 1591 a
SDict begin H.S end
 1701 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1742 1529 a
SDict begin H.R end
 1742 1529 a 1742 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1742
1591 a 1742 1591 a
SDict begin H.S end
 1742 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1784 1529 a
SDict begin H.R end
 1784 1529 a 1784
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1784 1591 a 1784 1591 a
SDict begin H.S end
 1784 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1825 1529 a
SDict begin H.R end
 1825
1529 a 1825 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1825 1591 a 1825 1591 a
SDict begin H.S end
 1825 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1867 1529 a
SDict begin H.R end
 1867 1529 a 1867 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1867 1591 a 1878
1579 a

 1878 1579 a 1878 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf8

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf7

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1878 1591 a
SDict begin H.S end
 1878 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1920 1529 a
SDict begin H.R end
 1920
1529 a 1920 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1920 1591 a 1920 1591 a
SDict begin H.S end
 1920 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1961 1529 a
SDict begin H.R end
 1961 1529 a 1961 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1961 1591 a 1961
1591 a
SDict begin H.S end
 1961 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2003 1529 a
SDict begin H.R end
 2003 1529 a 2003 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 2003
1591 a 2003 1591 a
SDict begin H.S end
 2003 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2044 1529 a
SDict begin H.R end
 2044 1529 a 2044
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 2044 1591 a 2056 1579 a

 2056 1579 a 2056 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf11

 restore

 newpath

 restore

 pgfc


 2056 1591 a
SDict begin H.S end
 2056 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2131 1529 a
SDict begin H.R end
 2131 1529 a 2131
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2131 1591 a 2131 1591 a
SDict begin H.S end
 2131 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2222 1529 a
SDict begin H.R end
 2222
1529 a 2222 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 2222 1591 a 2234 1579 a

 2234 1579
a 2234 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf12

 restore

 newpath

 restore

 pgfc


 2234 1591 a
SDict begin H.S end
 2234 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2292 1529 a
SDict begin H.R end
 2292
1529 a 2292 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoBack>>/Subtype /Link H.B /ANN pdfmark end
 2292 1591 a 2292 1591 a
SDict begin H.S end
 2292 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2342 1529 a
SDict begin H.R end
 2342 1529 a 2342 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/Find>>/Subtype /Link H.B /ANN pdfmark end
 2342 1591 a 2342
1591 a
SDict begin H.S end
 2342 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2400 1529 a
SDict begin H.R end
 2400 1529 a 2400 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoForward>>/Subtype /Link H.B /ANN pdfmark end
 2400
1591 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -600
-287 3024 230 v 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray
1 TeXcolorgray 0 0 1 0 TeXcolorcmyk -500 -350 a Fg(C1)p
1 TeXcolorgray -529 -458 208 5 v -529 -323 5 137 v -325
-323 V -529 -321 208 5 v 68 w Ff(Sch\351ma)p 1 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 350 36 4 100 v 536 6 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@PI
16 {InitRnode } /NodeScale {} def NewNode end  end
 536 6 a 718 36
4 100 v 350 39 371 4 v 350 139 4 100 v 718 139 V 350
142 371 4 v 350 242 4 100 v 718 242 V 350 245 371 4 v
350 345 4 100 v 470 315 a Fd(<p>)p 718 345 V 350 348
371 4 v 400 418 a Fe(Etap)r(e)28 b(3)201 517 y Fd(<p><em>)p
1 0 0 TeXcolorrgb(</em>)p 0 TeXcolorgray(</p>)-467 617
y Fe(On)g(d\351pile)e(ca)n(r)i(la)f(fermante)h(co)n(rresp)r(ond)f(\340)
h(l'ouvrante)f(empil\351e.)p 350 755 4 100 v 536 725
a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@PI
16 {InitRnode } /NodeScale {} def NewNode end  end
 536 725 a 718 755 4 100 v 350 758 371 4 v 350 858 4
100 v 718 858 V 350 861 371 4 v 350 961 4 100 v 718 961
V 350 964 371 4 v 350 1064 4 100 v 718 1064 V 350 1067
371 4 v 400 1137 a Fe(Etap)r(e)h(3)201 1236 y Fd(<p><em></em>)p
1 0 0 TeXcolorrgb(</p>)p 0 TeXcolorgray -467 1336 a Fe(On)g(d\351pile)e
(ca)n(r)i(la)f(fermante)h(co)n(rresp)r(ond)f(\340)h(l'ouvrante)f
(empil\351e.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb -600 1751 1008 60 v 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 1 TeXcolorgray -340 1732 a
Fc(F.)16 b Fb(Na)m(tivel)29 b Fc(\(Lyc\351e)14 b(No)o(rd\))p
0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb 0
TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 408 1751 V 0.15 0.15 0.525 TeXcolorrgb 0
TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.S end
 912 1732 a 1 TeXcolorgray
1 TeXcolorgray 912 1732 a
SDict begin H.R end
 912 1732 a 912 1732 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 912 1732
a 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb 1416
1751 1008 60 v 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
1 TeXcolorgray 821 w Fc(Ann\351e)g(scolaire)f(2018-2019)p
1 TeXcolorgray 103 w(2)7 b(/)h(3)p 1 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -525
-608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation3) cvn /DEST pdfmark
end
 -525 -608 a -525 -608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525
-608 a -525 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -525 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 1345 1579 a


1345 1579 a 1345 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf2

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf1

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1345 1591 a
SDict begin H.S end
 1345 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1395 1529 a
SDict begin H.R end
 1395 1529 a 1395
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation2) cvn H.B /ANN pdfmark end
 1395 1591 a 1395 1591 a
SDict begin H.S end
 1395 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1461 1529 a
SDict begin H.R end
 1461
1529 a 1461 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoToPage>>/Subtype /Link H.B /ANN pdfmark end
 1461 1591 a 1461 1591 a
SDict begin H.S end
 1461 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1511 1529 a
SDict begin H.R end
 1511 1529 a 1511 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1511 1591 a 1523
1579 a

 1523 1579 a 1523 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf4

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf3

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1523 1591 a
SDict begin H.S end
 1523 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1564 1529 a
SDict begin H.R end
 1564
1529 a 1564 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation2) cvn H.B /ANN pdfmark end
 1564 1591 a 1564 1591 a
SDict begin H.S end
 1564 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1606 1529 a
SDict begin H.R end
 1606 1529 a 1606 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1606 1591 a 1606
1591 a
SDict begin H.S end
 1606 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1647 1529 a
SDict begin H.R end
 1647 1529 a 1647 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1647
1591 a 1647 1591 a
SDict begin H.S end
 1647 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1689 1529 a
SDict begin H.R end
 1689 1529 a 1689
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1689 1591 a 1701 1579 a

 1701 1579 a 1701 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf6

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf5

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc



1701 1591 a
SDict begin H.S end
 1701 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1742 1529 a
SDict begin H.R end
 1742 1529 a 1742 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1742
1591 a 1742 1591 a
SDict begin H.S end
 1742 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1784 1529 a
SDict begin H.R end
 1784 1529 a 1784
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1784 1591 a 1784 1591 a
SDict begin H.S end
 1784 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1825 1529 a
SDict begin H.R end
 1825
1529 a 1825 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1825 1591 a 1825 1591 a
SDict begin H.S end
 1825 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1867 1529 a
SDict begin H.R end
 1867 1529 a 1867 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1867 1591 a 1878
1579 a

 1878 1579 a 1878 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf8

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf7

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1878 1591 a
SDict begin H.S end
 1878 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1920 1529 a
SDict begin H.R end
 1920
1529 a 1920 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1920 1591 a 1920 1591 a
SDict begin H.S end
 1920 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1961 1529 a
SDict begin H.R end
 1961 1529 a 1961 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1961 1591 a 1961
1591 a
SDict begin H.S end
 1961 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2003 1529 a
SDict begin H.R end
 2003 1529 a 2003 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 2003
1591 a 2003 1591 a
SDict begin H.S end
 2003 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2044 1529 a
SDict begin H.R end
 2044 1529 a 2044
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 2044 1591 a 2056 1579 a

 2056 1579 a 2056 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf11

 restore

 newpath

 restore

 pgfc


 2056 1591 a
SDict begin H.S end
 2056 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2131 1529 a
SDict begin H.R end
 2131 1529 a 2131
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2131 1591 a 2131 1591 a
SDict begin H.S end
 2131 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2222 1529 a
SDict begin H.R end
 2222
1529 a 2222 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 2222 1591 a 2234 1579 a

 2234 1579
a 2234 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf12

 restore

 newpath

 restore

 pgfc


 2234 1591 a
SDict begin H.S end
 2234 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2292 1529 a
SDict begin H.R end
 2292
1529 a 2292 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoBack>>/Subtype /Link H.B /ANN pdfmark end
 2292 1591 a 2292 1591 a
SDict begin H.S end
 2292 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2342 1529 a
SDict begin H.R end
 2342 1529 a 2342 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/Find>>/Subtype /Link H.B /ANN pdfmark end
 2342 1591 a 2342
1591 a
SDict begin H.S end
 2342 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2400 1529 a
SDict begin H.R end
 2400 1529 a 2400 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoForward>>/Subtype /Link H.B /ANN pdfmark end
 2400
1591 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -600
-287 3024 230 v 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray
1 TeXcolorgray 0 0 1 0 TeXcolorcmyk -500 -350 a Fg(C1)p
1 TeXcolorgray -529 -458 208 5 v -529 -323 5 137 v -325
-323 V -529 -321 208 5 v 68 w Ff(Sch\351ma)p 1 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -517 396 2467 4 v -517 535 4 140 v -464
494 a Fa(D\351bit)p 270 535 V 577 w Fe(100)26 b(kbps)p
683 535 V 102 w(500)g(kbps)p 1096 535 V 0 0 1 TeXcolorrgb
103 w(10)g(Mbps)p 0 TeXcolorgray 1500 535 V 103 w(100)g(Mpbs)p
1946 535 V -517 539 2467 4 v -517 678 4 140 v -464 636
a Fa(M\351trique)k(asso)s(ci\351e)p 270 678 V 0 0 1 TeXcolorrgb
175 w Fe(1000)p 0 TeXcolorgray 683 678 V 266 w(200)p
1096 678 V 304 w(10)p 1500 678 V 361 w(1)p 1946 678 V
-517 681 2467 4 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb -600 1751 1008 60 v 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 1 TeXcolorgray -340 1732 a
Fc(F.)16 b Fb(Na)m(tivel)29 b Fc(\(Lyc\351e)14 b(No)o(rd\))p
0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb 0
TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 408 1751 V 0.15 0.15 0.525 TeXcolorrgb 0
TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.S end
 912 1732 a 1 TeXcolorgray
1 TeXcolorgray 912 1732 a
SDict begin H.R end
 912 1732 a 912 1732 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 912 1732
a 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb 1416
1751 1008 60 v 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
1 TeXcolorgray 821 w Fc(Ann\351e)g(scolaire)f(2018-2019)p
1 TeXcolorgray 103 w(3)7 b(/)h(3)p 1 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
