%!PS-Adobe-2.0
%%Creator: dvips(k) 5.999 Copyright 2019 Radical Eye Software
%%Title: /home/fenarius/Travail/Cours/NSITerminale/docs/Annales/Corriges/21-EtrangerJ2.dvi
%%CreationDate: Thu Feb 24 14:17:54 2022
%%Pages: 7
%%PageOrder: Ascend
%%BoundingBox: 0 0 363 273
%%DocumentFonts: LMSans10-Bold LMSans12-Regular LMSans10-Regular
%%+ LMSans8-Regular LMRomanCaps10-Regular LMMathExtension10-Regular
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o
%+ /home/fenarius/Travail/Cours/NSITerminale/docs/Annales/Corriges/21-EtrangerJ2.ps
%+ /home/fenarius/Travail/Cours/NSITerminale/docs/Annales/Corriges/21-EtrangerJ2.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2022.02.24:1817
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 872 2018-12-21 20:39:31Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.30, 2018/12/17
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/Power { %  a^b   latest ghostscript don't allow -4^-3.1
  2 dict begin	% hold all local
  /b ED
  /a ED
  a 0 lt % prevent something like (-4)^(-3.1)=> 1/(-4)^3
    { b 0 lt 
      { a b cvi exp }
      { a b exp } ifelse 
    }
    { a 0 eq { 0 }{ a b exp } ifelse
    } ifelse
  end
} def
%
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup xGridOffset add y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup yGridOffset add x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 395 2017-03-21 09:24:38Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2018/12/16 $
% Version         : 0.65 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% $Id: pst-text.pro 891 2018-12-29 19:42:20Z herbert $
%
% PostScript header file pst-text.pro
% Version 1.02, 2018-12-28 (hv)
% For distribution, see pstricks.tex.
%
/tx@TextPathDict 45 dict def
tx@TextPathDict begin
%
% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def
%
/movetoproc { continue { @movetoproc } { pop pop } ifelse } def
%
/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def
%
/linetoproc { continue { @linetoproc } { pop pop } ifelse } def
%
/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def
%
/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def
%
% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def
%
/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def
%
/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def
%
%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint
    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
/warp {
    1 index
    1.4 mul
    cos 2 add
    mul
} def
/warpmove{
    2 index {
        newpath
    } if
    warp moveto
    pop false
} def
/warpline { warp lineto } def
/warpcurve {
    6 2 roll warp
    6 2 roll warp
    6 2 roll warp
    curveto
} def
/warpit {
    true
    { warpmove } { warpline } { warpcurve } { closepath } pathforall
    pop
} def
%
/circle {
    exch neg
    % .5 mul
    90 add
    dup cos 2 index mul
    3 1 roll
    sin mul
} bind def

/circmove{
    2 index { newpath } if
    circle moveto
    pop false
} bind def

/circline { circle lineto } bind def

/circcurve {
    6 2 roll circle
    6 2 roll circle
    6 2 roll circle
    curveto
} bind def

/circit { true { circmove } { circline } { circcurve } { closepath } pathforall pop } bind def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.03 2020/01/09
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 }
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% calculate the line coefficents Ax+By+C=0
%% x1 y1 x2 y2 -> A B C
/LineCoefABC {
  0 index 3 index sub % A=y2-y1
  4 index 3 index sub % B=x1-x2
  3 index 5 index mul 6 index 4 index mul sub % C=x2y1-x1y2
  7 3 roll pop pop pop pop
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% calculate the 2-order determinant
%% |a11 a12|
%% |a21 a22|
%% a11 a12, a21 a22 -> X
/DeterminantTwo {
  4 1 roll mul 3 1 roll mul exch sub
} def
%% calculate the 3-order determinant
%% |a11 a12 a13|
%% |a21 a22 a23|
%% |a31 a32 a33|
%%   8   7   6    5   4   3    2   1   0
%% a11 a12 a13, a21 a22 a23, a31 a32 a33 -> X
/DeterminantThree {
  % |a22 a23, a32 a33| * (-1)^(1+1)a11
  8 index abs 1E-5 lt { %a11=0
    0
  } {
    4 index 4 index 3 index 3 index DeterminantTwo
    9 index mul
  } ifelse
  % |a12 a13, a32 a33| * (-1)^(1+2)a21
  6 index abs 1E-5 lt { %a12=0
    0 sub
  } {
    8 index 8 index 4 index 4 index DeterminantTwo
    7 index mul sub
  } ifelse
  % |a12 a13, a22 a23| * (-1)^(1+3)a31
  3 index abs 1E-5 lt { %a13=0
    0 add
  } {
    8 index 8 index 7 index 7 index DeterminantTwo
    4 index mul add
  } ifelse
  10 1 roll pop pop pop pop pop pop pop pop pop
} def
%% calculate the 4-order determinant
%% |a11 a12 a13 a14|
%% |a21 a22 a23 a24|
%% |a31 a32 a33 a34|
%% |a41 a42 a43 a44|
%%  15  14  13  12   11  10   9   8    7   6   5   4    3   2   1   0
%% a11 a12 a13 a14, a21 a22 a23 a24, a31 a32 a33 a34, a41 a42 a43 a44 -> X
/DeterminantFour {
  % |a22 a23 a24, a32 a33 a34, a42 a43 a44| * (-1)^(1+1)a11
  15 index abs 1E-5 lt { %a11=0
    0
  } {
    10 index 10 index 10 index 9 index 9 index 9 index 8 index 8 index 8 index DeterminantThree
    16 index mul
  } ifelse
  % |a12 a13 a14, a32 a33 a34, a42 a43 a44| * (-1)^(1+2)a21
  12 index abs 1E-5 lt { %a21=0
    0 sub
  } {
    15 index 15 index 15 index 10 index 10 index 10 index 9 index 9 index 9 index DeterminantThree
    13 index mul sub
  } ifelse
  % |a12 a13 a14, a22 a23 a24, a42 a43 a44| * (-1)^(1+3)a31
  8 index abs 1E-5 lt { %a31=0
    0 add
  } {
    15 index 15 index 15 index 14 index 14 index 14 index 9 index 9 index 9 index DeterminantThree
    9 index mul add
  } ifelse
  % |a12 a13 a14, a22 a23 a24, a32 a33 a34| * (-1)^(1+4)a41
  4 index abs 1E-5 lt { %a41=0
    0 sub
  } {
    15 index 15 index 15 index 14 index 14 index 14 index 13 index 13 index 13 index DeterminantThree
    5 index mul sub
  } ifelse
  17 1 roll pop pop pop pop pop pop pop pop
  pop pop pop pop pop pop pop pop
} def
%% calculate the 5-order determinant
%% |a11 a12 a13 a14 a15|
%% |a21 a22 a23 a24 a25|
%% |a31 a32 a33 a34 a35|
%% |a41 a42 a43 a44 a45|
%% |a51 a52 a53 a54 a55|
%%  24  23  22  21  20   19  18  17  16  15   14  13  12  11  10    9   8   7   6   5    4   3   2   1   0
%% a11 a12 a13 a14 a15, a21 a22 a23 a24 a25, a31 a32 a33 a34 a35, a41 a42 a43 a44 a45, a51 a52 a53 a54 a55-> X
/DeterminantFive {
  % |a22 a23 a24 a25, a32 a33 a34 a35, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+1)a11
  24 index abs 1E-5 lt { %a11=0
    0
  } {
    18 index 18 index 18 index 18 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index 15 index 15 index 15 index 15 index DeterminantFour
    25 index mul
  } ifelse
  % |a12 a13 a14 a15, a32 a33 a34 a35, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+2)a21
  20 index abs 1E-5 lt { %a21=0
    0 sub
  } {
    24 index 24 index 24 index 24 index 18 index 18 index 18 index 18 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index DeterminantFour
    21 index mul sub
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+3)a31
  15 index abs 1E-5 lt { %a31=0
    0 add
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index DeterminantFour
    16 index mul add
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a32 a33 a34 a35, a52 a53 a54 a55| * (-1)^(1+4)a41
  10 index abs 1E-5 lt { %a41=0
    0 sub
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 22 index 22 index 22 index 22 index 16 index 16 index 16 index 16 index DeterminantFour
    11 index mul sub
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a32 a33 a34 a35, a42 a43 a44 a45| * (-1)^(1+5)a51
  5 index abs 1E-5 lt { %a51=0
    0 add
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 22 index 22 index 22 index 22 index 21 index 21 index 21 index 21 index DeterminantFour
    6 index mul add
  } ifelse
  26 1 roll pop pop pop pop pop pop pop pop pop pop
  pop pop pop pop pop pop pop pop pop pop
  pop pop pop pop pop
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 1990-2020 The LaTeX3 Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
true setglobal
/pdf.globaldict 4 dict def
false setglobal

/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict~
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathex.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathex[
/parenleftbig
/parenrightbig
/bracketleftbig
/bracketrightbig
/floorleftbig
/floorrightbig
/ceilingleftbig
/ceilingrightbig
/braceleftbig
/bracerightbig
/angbracketleftbig
/angbracketrightbig
/vextendsingle
/vextenddouble
/slashbig
/backslashbig
/parenleftBig
/parenrightBig
/parenleftbigg
/parenrightbigg
/bracketleftbigg
/bracketrightbigg
/floorleftbigg
/floorrightbigg
/ceilingleftbigg
/ceilingrightbigg
/braceleftbigg
/bracerightbigg
/angbracketleftbigg
/angbracketrightbigg
/slashbigg
/backslashbigg
/parenleftBigg
/parenrightBigg
/bracketleftBigg
/bracketrightBigg
/floorleftBigg
/floorrightBigg
/ceilingleftBigg
/ceilingrightBigg
/braceleftBigg
/bracerightBigg
/angbracketleftBigg
/angbracketrightBigg
/slashBigg
/backslashBigg
/slashBig
/backslashBig
/parenlefttp
/parenrighttp
/bracketlefttp
/bracketrighttp
/bracketleftbt
/bracketrightbt
/bracketleftex
/bracketrightex
/bracelefttp
/bracerighttp
/braceleftbt
/bracerightbt
/braceleftmid
/bracerightmid
/braceex
/arrowvertex
/parenleftbt
/parenrightbt
/parenleftex
/parenrightex
/angbracketleftBig
/angbracketrightBig
/unionsqtext
/unionsqdisplay
/contintegraltext
/contintegraldisplay
/circledottext
/circledotdisplay
/circleplustext
/circleplusdisplay
/circlemultiplytext
/circlemultiplydisplay
/summationtext
/producttext
/integraltext
/uniontext
/intersectiontext
/unionmultitext
/logicalandtext
/logicalortext
/summationdisplay
/productdisplay
/integraldisplay
/uniondisplay
/intersectiondisplay
/unionmultidisplay
/logicalanddisplay
/logicalordisplay
/coproducttext
/coproductdisplay
/hatwide
/hatwider
/hatwidest
/tildewide
/tildewider
/tildewidest
/bracketleftBig
/bracketrightBig
/floorleftBig
/floorrightBig
/ceilingleftBig
/ceilingrightBig
/braceleftBig
/bracerightBig
/radicalbig
/radicalBig
/radicalbigg
/radicalBigg
/radicalbt
/radicalvertex
/radicaltp
/arrowvertexdbl
/arrowtp
/arrowbt
/bracehtipdownleft
/bracehtipdownright
/bracehtipupleft
/bracehtipupright
/arrowdbltp
/arrowdblbt
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfHrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def}
bind def

 /pgfVrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto }
bind def} bind def

 /pgfArgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1
add def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff
div 2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index
14 index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke
4 -1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1rgb{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRrgb} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2rgb{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfRrgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1
add def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def
/pgfcircy pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
8 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index
6 index sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff {
3 index 3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360
arc closepath stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll 4 index add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add
def /pgfcircy pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark
exch pop }bind def

 /pgfHcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 moveto dup 6 index lineto } bind def}
bind def

 /pgfVcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 exch moveto dup 6 index exch lineto
} bind def} bind def

 /pgfAcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 2 mul
1 add def 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff
div 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div
pgfheight 12 index 12 index 12 index 12 index 18 index pgfdiff { 4
index 4 index 4 index 4 index setcmykcolor pgfdir stroke 5 -1 roll
9 index add 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6
index add 5 -1 roll .5 sub } repeat mark 19 1 roll cleartomark exch
pop }bind def

 /pgfR1cmyk{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRcmyk} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2cmyk{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setcmykcolor
fill pop}bind def

 /pgfRcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 11 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 11 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 10 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
10 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 3 index
8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 11 index 11
index 11 index 11 index 17 index pgfdiff { 4 index 4 index 4 index
4 index setcmykcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6 index
add 5 -1 roll 5 index add 5 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep
add def /pgfcircy pgfcircy pgfystep add def } repeat mark 18 1 roll
cleartomark exch pop }bind def

 /pgfHgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 moveto dup 3 index lineto } bind def}
bind def

 /pgfVgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 exch moveto dup 3 index exch lineto
} bind def} bind def

 /pgfAgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 2 mul
1 add def dup 2 index sub pgfdiff div pgfheight 3 index 6 index pgfdiff
{ 1 index setgray pgfdir stroke exch 3 index add exch .5 sub } repeat
mark 7 1 roll cleartomark exch pop }bind def

 /pgfR1gray{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRgray} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2gray{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setgray
fill pop}bind def

 /pgfRgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 5 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 5 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 4 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
4 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
dup 2 index sub pgfdiff div 2 index 5 index pgfdiff { 1 index setgray
pgfcircx pgfcircy 2 index 0 360 arc closepath stroke exch 2 index add
exch .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy pgfcircy
pgfystep add def } repeat mark 6 1 roll cleartomark exch pop }bind
def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def product (Ghostscript)
search {pop pop pop revision 927 gt}{pop false} ifelse{/BorderArrayPatch{}
def}{/BorderArrayPatch{[exch{dup dup type/integertype eq exch type/realtype
eq or{BPToDvips}if}forall]}def} ifelse /HyperBorder {1 PDFToDvips}
def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx pdf@lly pdf@urx
pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly exch def dup
DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx exch
def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto pgffill 16.0002 0.49998 moveto 18.00021 2.00002 lineto
16.0002 3.50003 lineto pgffill  grestore} bind def

 /pgf2{gsave exec 2.39105 3.38733 8.26909 0.79701 pgfe pgfstr  grestore}
bind def

 /pgf3{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill  grestore} bind def

 /pgf4{gsave exec 2.39105 3.38733 6.97394 0.0 pgfe 7.80008 2.40001
moveto 7.80008 3.20003 lineto 11.20012 3.20003 lineto 11.20012 0.8
lineto 10.4001 0.8 lineto 8.6001 3.20003 moveto 8.6001 4.00005 lineto
12.00015 4.00005 lineto 12.00015 1.60002 lineto 11.20012 1.60002 lineto
pgfstr  grestore} bind def

 /pgf5{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill 0.59776 pgfw 8.00009 4.00005 moveto 11.00012
4.00005 lineto 9.00009 2.00002 moveto 12.00015 2.00002 lineto 8.00009
1.0 moveto 11.00012 1.0 lineto 9.00009 0.0 moveto 12.00015 0.0 lineto
pgfstr  grestore} bind def

 /pgf6{gsave exec 0.59776 pgfw 9.00009 3.00003 moveto 12.00015 3.00003
lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill 0.59776 pgfw 8.00009 1.0 moveto 11.00012 1.0
lineto 9.00009 0.0 moveto 12.00015 0.0 lineto pgfstr  grestore} bind
def

 /pgf8{gsave exec 0.59776 pgfw 8.00009 4.00005 moveto 11.00012 4.00005
lineto 9.00009 3.00003 moveto 12.00015 3.00003 lineto 9.00009 2.00002
moveto 12.00015 2.00002 lineto pgfstr  grestore} bind def

 /pgf9{gsave exec 10.0001 -0.49998 moveto 10.0001 4.50003 lineto pgfstr
 grestore} bind def

 /pgf10{gsave exec 0.59776 pgfw 4.00005 4.00005 moveto 7.00008 4.00005
lineto 5.00005 3.00003 moveto 8.00009 3.00003 lineto 5.00005 2.00002
moveto 8.00009 2.00002 lineto 3.00003 1.0 moveto 7.00008 1.0 lineto
5.00005 0.0 moveto 8.00009 0.0 lineto 12.00015 3.00003 moveto 15.00018
3.00003 lineto 13.00015 2.00002 moveto 16.0002 2.00002 lineto 13.00015
1.0 moveto 16.0002 1.0 lineto pgfstr  grestore} bind def

 /pgf11{gsave exec 0.59776 pgfw 8.00009 4.00005 moveto 11.00012 4.00005
lineto 9.00009 3.00003 moveto 12.00015 3.00003 lineto 9.00009 2.00002
moveto 12.00015 2.00002 lineto 8.00009 1.0 moveto 11.00012 1.0 lineto
9.00009 0.0 moveto 12.00015 0.0 lineto pgfstr  grestore} bind def

 /pgf12{gsave exec 0.59776 pgfw 10.4001 1.60002 moveto 12.00015 0.0
lineto pgfstr 0.3985 pgfw 10.66016 2.49069 moveto 10.66016 3.15096
10.1249 3.68622 9.46463 3.68622 curveto 8.80435 3.68622 8.26909 3.15096
8.26909 2.49069 curveto 8.26909 1.83041 8.80435 1.29515 9.46463 1.29515
curveto 10.1249 1.29515 10.66016 1.83041 10.66016 2.49069 curveto closepath
9.46463 2.49069 moveto pgfstr 1 setlinecap 4.00005 0.0 moveto 5.08101
0.0 6.00006 0.9 6.00006 2.00002 curveto 6.00006 3.10002 5.10005 4.00005
4.00005 4.00005 curveto 2.90001 4.00005 2.00002 3.10002 2.00002 2.00002
curveto 3.20003 2.60002 moveto 2.00002 1.60002 lineto 0.8 2.60002 lineto
16.0002 0.0 moveto 14.90016 0.0 14.00017 0.9 14.00017 2.00002 curveto
14.00017 3.10002 14.90016 4.00005 16.0002 4.00005 curveto 17.1002 4.00005
18.00021 3.10002 18.00021 2.00002 curveto 19.20023 2.60002 moveto 18.00021
1.60002 lineto 16.8002 2.60002 lineto pgfstr  grestore} bind def

 /pgf13{gsave exec 1.5 0.49998 moveto 3.50003 2.00002 lineto 1.5 3.50003
lineto pgffill  grestore} bind def

 /pgf14{gsave exec 1.5 0.49998 moveto 3.50003 2.00002 lineto 1.5 3.50003
lineto 3.50003 0.49998 moveto 5.50005 2.00002 lineto 3.50003 3.50003
lineto pgffill  grestore} bind def

 /pgf15{gsave exec 3.50003 0.49998 moveto 1.5 2.00002 lineto 3.50003
3.50003 lineto pgffill  grestore} bind def

 /pgf16{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf17{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf18{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf19{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf20{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf21{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf22{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash
3.00003 0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto
-1.65689 3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689
-1.65689 -3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689
3.00003 0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc
pgfstr grestore newpath  grestore} bind def

 /pgf23{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMMathExtension10-Regular
%!PS-AdobeFont-1.0: LMMathExtension10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathExtension10-Regular known{/LMMathExtension10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathExtension10-Regular)readonly def
/FamilyName(LMMathExtension10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathExtension10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA967B9A7DF802734736F3D61073FD
8ED62BDFAF207E10687AEF931F44AD55F9C3DB174637A34D867219978D9D1BF9
C733804DA26B4CDAF23436F0F8EA2308CBE3665ADFAA59A240036663D9ED945E
8C22B3621360BE02DBDDCC3BFE082CF6230F8C83FA4B6357682B7A7DF35F166A
FD3F889D853655FEE984B52090BB8D6B7EF8DBF3B1D022B6586235B32899053B
0718E16BEE7E146A4753D6E3FD6C4B6BD9AAFC2AED5748E193D28CF6A8391414
41971E41C481638DBFBFDE2638B65D10FE5FCC35EBC520E3520F0A0EC8FDA853
597F3C2E2F60B8DFD431DB5B1796737BE979C821EEB58BCC28A92DD60EEF767E
E861765D087BCADB269D7374E766D4C2328E711F23B767CA5D47241039F33EE8
0DC9D02C1D4D91AA0E59962090F584084D29E26056AD0E2B1FC4C1257DF003B0
748DEEE2A30AE53AEA24FDC43AF62A66BADE0B3557F9F4CAFD659CF933472AB0
8922041D5D0DFC41603EE166FDAC7C89DA8D63EC1CD0E2E23E45C5C81A5663E5
C6952D28B285A1C349378D5D07B5BFD7D742DCE097383EF86C667BB651988158
47B4EEBB5E1C035CE74DBB3D3FC9D00DD3D28DC0853DDADFB3C7E642482047AA
87EF5639DA5CABBEEECB36123995B88946D1D7AF48D7C86E718E1153F8A4093F
79457700C6E57A6BB805A2386ADAD90E2DEF9354C8785D11DA504D44CB3B6118
C74E1B7A174BA2664E6F25EC8AB818169B1A250D9725677C72896D4CD4A15BC1
EBA98BA918D1ADFF45ABE8C162D93331FF301D17DC8998230B8C7918089C70D1
65F57CA3361018FF92DEFC60063E1A6926B7780A75CF71E1DBEECE8BB1295F24
4E7AB8080FD30DBECAF8DEBDC436B4AF98A2328B7EB946668117CC386E257083
7C0EDE2A2FF6EE7DEE7168B436A033249C8326F5ECEE6C952EFC6D271378AFA7
90A3AC4D2C99F23AD08C9753D7532D4B1BA3170AF923DDD58EBC8E8ACF16C2C3
5D2C311ADA85F37120427290A22C12FA0180082634A98BFBB545BD866989F977
51EF8DA88A9EE0308CE367332312FBDFBFE348E0BE63120324CB1857FEB4F8FE
BEF49AACE2AAAC7D3D317AAB1C982F262473EC95D9ED7B1C564626D9CB87AB7B
9379F8A02E912F859AE0B3F9CE0F253FB6800D5D6BB753CFB933FB9303AAAC57
3D7380FC3563D88AEDC9A339CF931828B48A6BEE434017BD459FCF89FA30E028
1A08AB3702602A019C2A4ED08E25C484868F0F35C5B1D5CCDA01DA9BEAA7E70B
4C0C5CB3807EFABFDCF9F836D14E174995D179680584434D8A5C8A4255456DEA
D95CFA482F221D218FE10A5CD04F1526CCE72033B37AA2D622516B67987197DD
3E233670D60B90AD71DB8AD9E5EEAD68F99F8E35E5A8BA66C0F8D4A12FE68966
302687121F7ED5E4ECF1BAE7DD332F3CCAC0F95045D7DB4EF20972682A7EB3C9
0C1B491F4D0BAC2BCB9672A361068498BE2118105D463A64B0FE96460D4BC7CA
3B9C00CA63FE6B7146C722968C11AFA6268A1D7409D629DC87AFA3BC3BA6C873
3B9B2C753FC189D834FFFC61E337DF86FC1BB235B2AD2B6949B5F991238A5F06
C0AE7242E52C697E4D4734A157A81887583CD40F4BBBA355736265C29F49BF89
73465A08227875D9EF36420BCCC0CC054D6EAEB04A7A93BF473EADCC4CE6859F
8A6F605F31FD1BA48075D9D2293EE6E9A67E8335D78185C9B9A7E801574059A9
194427EB21999F89795CFEEB01842DC6970495C05AE5A17290AC5A90B9AA6CF8
A414B689F0EEE11AEDEAAB90D7787A472D459E8081FAD0F18D237C8CBECC0822
66E6EB50B9F72B578E35DAD8E9EEE289E2BDD66C58A70E9FA9B34E2C4EE9090B
E26AAEBEFB702AA5BBB61F1BD68E45E3D19A618C4EF00A1B9F90406A6BC6C940
11A07B70AEA3D0F34C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRomanCaps10-Regular
%!PS-AdobeFont-1.0: LMRomanCaps10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRomanCaps10-Regular known{/LMRomanCaps10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRomanCaps10-Regular)readonly def
/FamilyName(LMRomanCaps10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRomanCaps10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-496 -290 1501 1100}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53E3095EF5AF4F01AA2B5C2934E5345
1D88D311DB46915432DD0F408112AADBDE54032868560673D08129A1793B6FDD
D1D82ACA35A8223DA18ED7A03094DE92156D5D0B42FF6C449A1823CEF7555FCA
B35573829AE5A55A1381600C734661125E28C2C51EAD103F3DD496F6EA7096EE
8FD3BEFA4FBD7391DF4FAAFA38FCC474FC632D8A8C890F5276629AC2552B74C5
3C8C4B1DF8FC58A3050CDF2357DD1F98E83C4D077AEE399C268ED59CDE9DFA68
BFE8629B52E8DC41DEEC0C9E84BDEA39B4AC552839755CBE2DC820864DC9612F
16D1A532150DE0137F647DAE154785D152CEE57AE3FF8F671B20EFA22C5711DC
B9F8AA784F222AE1183B01E2AAC6254D7994624D1B351DFF6CBF3B4F7B1DEC63
CCA90AEB60F15A33F727877927E80AC8722C27C584FB671FEB518D1DE33FAA48
3173C60B382AA1F0B22369BE368CBF749E7559509205B38DF4326DF6A6161C4F
E3553EE51C42032B00F69252E9043B7928B2824FCDB5189B3020CF1D596C59B2
135BC9D16D037D87C31B091D7C4DDDFAAB32D68F9C396CA3BF22BD6824BFE582
93520934A63EB6473935B1EB4801E3ED6475320DBFBA8C2F3F98F03DB06C3F05
B0B06847EA50E8220C87171F32F759EC361701793C97953550ECA6D4B28EC2FD
607D51FF237723D79DF208680711F2DAA6172AEBF28B736756CFE9D56EEF0156
FCC46EA96AFB2A804A3BEE06E0A59EC3652633189E85E68B5F3EFA7CBF91E3E1
D7472E66CCE86A28D2FE799AB043DA1C74EFBEB5C5AE6123A71702861463B56D
7BC98F38D9C0B29C25645142AD8BE57953956B838F815285B8802EE4BD0817BC
404C04D71B0FDFF6DC455B51B305A005DD7796527CD8561337EFB990C47DCC87
E2A042ECD49871111D71785275257C303761638CB0EF14492762F5A1CB7BD472
F0B01BB09FC6863455F33DE4BEF212E60A9021B94F42EE04735AF673E3D24A74
35BBA4EE640862CC2C49FD18BFD4A21FA259DED7A5F13C74E62BB9A4633098E0
15F6E5DD084E687F8909E2288265BB98D64189CEA29065AA87E8BB636C3FA965
32FA00F88F4C98217A140A3162D903EDE2880C3743AE61EA1D3E2DA8EFD0F95E
E88605CF6872260A0C808EB620E9F9156627EEF4B4F07CFF943A70AA730E2B56
3A5912AA256C9519F4F8A46E512BBA9F099FD0A4E11C873E88DFFCD25D0F0805
B0EA04ED10F3D442573A56648C90B3D8C4C44741A535D965E48F0F4AD114076E
79FD9D0DBBC50EDC121CA1ABABDCA567BB9D28CB3E5AE17F756273333E84F341
637A1BDB292EADD055C971FFA94B4E72EE284C44A9C294B2B18D9A2E50D90BEA
A161415478975E25D1E928C5867A495F88565BA02CEBBA62BBF3976782EE4B45
DF434B01660CFF3F89AB4FEF6BC7F7D7F83EED9F947931149B6CFA3CC38B537B
6C89BBCCE6C448AC5C61D17285F9E2E321C96C5501772C32C2B6183CA0BB5DEE
4B7C3C8F0D77EBB70D341E595B5A7BFE2B471EAC3CE6C0BB9A046AFF0D3CDE8F
81C142E70727135017B39A5A1AFBA562AA96BAD4D66958AA329DDE6CAB90B3FE
38E49F75EC083CE28D488E75BBF597DB49E3F42610D596C1D91A878EE680EB84
C857186645C467EC0164AB6086D2C2D95C1BA20D36E2E8C1494640BCF0294FF2
103926BD4D83104F9B660EFF434CCDDC96CC25E9F54CDC9E19D966D068DAEE4E
1255BF293797A1BD1FAAB9AF2BAB48057DE0E3C276E3A5117350E877FFF97EAE
242EFCE7ADE5DAB83C34AC97C66C21F4CE4812FA0F007C12820899207C35F3B0
14133645FB9F8E53A6E2A1CC08CED4D33CE9B69E7A5D0E31726EC3BF9FD98C0A
E5BA1BCF5166779F26081CE1DCF8FCBF985B41005EA0771D91D5727FB447795C
A639A5C9057E97FDC795EE6B7C39AF1AB0338BACA1A1E179F1AF0EABA623864E
553A210AE8C03A525E467DF8744A8B6DB57E04C99BF7F568041BF90B5EEC2B73
9A109B37B07E8A668E68D117A3E0C46B11617838874E7F840DAB45050FC413A5
037107717FB43013DA06FF41184DEF3526C06FD5BAB6F3763BD358D6931EEA4A
860E1A17079A59DEB9C7A4C0FC68AF583ECCBE6FE0329A031820D4D1DA9D11F0
2D650DFEAAD917E7F290E617903792223A2AA23AE7069154690EB370F940BAE2
395473B7C2F70EB4DF0E94468FBA1B6D5F1CCF350E3930ADAE5249B3D5CAE21B
281B22FAE6EE3AF85762C36421F291360670443326A44F1F4EA0E002D8B94CDA
144057B4D5F9FD416ADBAD209422879682A8D0D249CDBAB31345F45FCE24252E
D45316EA9E34A9EA03A6C950682BD7E72A81DC4FB2B9CCCA501761022009926B
5F55C9CB2855D5D049D3C73CBEF771A594437E6E1C6B0F15FB3102DB7A3DDCB5
3BF882D33E5A43EF201EC0B415DC701E8FE4FD3505B993F5CFDB502635117336
387D170AB42F95FFE8C79DD1C5CD4860749F82198FFFDAE1393586EFD3956EE1
0F7A3EC03DBC1045CDBCCCC3950C6C443E1EB25180C92F0640CE6A8AF3AE7EB1
81C2E4C11086C2ADDBAEFF30348287C9C3FA8B34A76654DD7AD692702C462BC8
6360DF3B3C743459AB088BEA49C5D06D6EB67124373543A2C18439DB2227247B
30A41C72B8836026F60961F8EA96BF0A4F3E778B9002DD7488DAD1A42BC257C3
C7149CB99114E73DDD3F9A78BBE152E1BAD8C1A22328682504131249C8468ADA
F74760105E07065AAB5CFCACB826EFB41D1A7A6F59DC8AFFD065CAD27B9EB202
0C908E91E81B07A92AD544D202816662873464594EBF58A0B38A156331EEAA0D
0BC24BB44DFFFCBF4181A86F0A4BD25C3921CD2BA8360AAD322C021122E962CD
756DE48DA93798FBDD034F4304D5EDBBA164DC9E9B3414D00E9F5B712394804B
D4BDA26FE7C2418EEB63B7E393108CADDA24C91C1962272359F2535FA1D1A508
FB5023D07D392FDDDE2AC0E0708B430846E137E6CA0B5436653A968FE24DF8D4
6D2003B45B60BB1B6D62DA735DA6689C2C03F196ADC11B27E608674E546D2074
A3AD2FDED543CBEB81B9271E5EDD5DEAA97BC86C948570063933291D78AB5298
EA92E13430C7CA1FC658FA031AAD0EA5B01D22253D6C26BF3F435E6A6E9147BC
1B68EA135225157DBB906F75C799F437E74F0E185AD518B7E446C30415CE5799
01D43D8E2B08A04783C5E1AB77A3E641BFCD7753EC20A9D8AED089AF77F0C5D8
96228A3AF8A96329A5F0EA14F929D5598F4437AB944A06B5EEC3343EB29A9271
70DB0EA31A11EE7634FD75CAEAA480F411AFB3A933234276082E17993B297043
B2F75674AA08FF419E5CBFB6407856406CC9C52353EAB3C79BAAEFD74B08910F
452C7FD271C1B9BACA52194DCABDB4284B77C573C5A7EEA60AC017A3CBD6BA59
A1AC2BACF1545011EA84CB75B2C5ED13C702870ECCCD60554EE8C5D4B9F2FB5A
92DA2D93B04417CC9240E9C692407250E7D47C97F9B3A11C8CB3EA31F589BDA6
00E115E70395E2E4C0A29284FD2C9A8740851EDC442490FAE8321683AE4A530F
EAC44A63E2B90731652CCDDBEEC58F573951454FE7AFA29CDDEF96E951AAA9B8
EEB3F9BD5F13210AEC71AED98317186244404D4812EB1E27A42058A387726A74
FD74B84CEABDA95CAA798540DFB193A897AEC52D74BB6747FB9CD5A633DF5375
2834D9E6147A844A7DC46DFC69EB7B63E6126545B566CA3099246CC6E5F85E04
5FE750DA4A9B403FD293CC4363897147A165FB658A4E7A74EE6C22C2737A8107
63C405C5DD41D7ADF7112DB70AEF68FF3B8773848FB918BD1D4D4963B96902F3
A84599D73EB3303D7B74883137EA5EEE14B739F60D45D102706C99D92E1CA501
846CC8AB6FB3AD6AC55575E66721F58FC39D634E3C68CB3E2E24D61819BC8515
9520ADC69ACA26ED5D96EF04C2AD0153759083DBE7DA9B89D877992A8DC821FB
5A141A58CC2A46228F2F642101F5B23CE1ED3A79F2C6006E04619B81578C0EA3
C3A72402DFB9B35C8E59BF582621648F48CC413EDED067EF9BEEEA1134788A6F
839F2C2FB22529A38153E830445FFF661BCCCA767DB0BCACA4693DF0370A9804
2E527BD65EC1E77D32A07DD7E1149715178A46263EFFFBE20CF045D1F128CA45
50BA9D6D6DA61B84D00CBC9FAE5924F8209ED49D597C20A0CAD1C2D3424E9CD5
8A179A2BB40AC54D2E45D206928BE43A964D2311F07753D0CE4ED2AD6198A473
F1F9EA821DEE99E27D331F0559477F0CF1D9731533BEFE67747FCBD3460F9E80
3E409065E158DA49560DBF9060489CEEBE735CE28EE4ABC81450157CB7DDACCB
72A0FB560345386569D9DEE8754EBA551B635693EC4FEEA9CDAE3564D5DB1DC8
0645A5DFBEDC32C58223FB032506BA87BA582862CCFE1FD43197B1C7953BD8F4
DA1AEDEC773D5C063965683DCBA5BAA51ED9F1F601F0F088C4C2859090964202
143D72C13B747461135CBEC72D82A7C1602B824629FA3F773B665ADFF0135A65
ACB5311765991CFE59744E7CC201895FC7C2415439EA0112F1804CEFA65F5653
92ECDDDC6641E651C4CAC35F163BC67A18CC18839FDC4EB001A723EE59734A18
EB12CD7C54DBA9F8C47428CFC2B96879AC6792E812426A33CD78A844120B5B67
120BA7884AE4336F3FEBD08B7B93B550CC6D1ED120AC16308B6DD2B9A8F686D6
AA020E49172C02DA888DE03EC12D4EA38E7D327F0F4C117F34AB17610F5D7F76
C207FAF88C8FAEF2476515A41387CA09174006C8F2125DB485D1F37C940A8F4B
3E4DCC91413C3273DAC2A3FD2C49E3C9AB8FF8EFC8DA34C873E57D38B01DF487
3772137582971F3249E6694A24DA005C84176455BA74C8A97447861732DFDA1A
5752B5222EDD9012B45CF0DF0644B2E5B7AE5DA72EFE54D294768DE021DDC1A7
C76EF77C6E740449BEE713B7E40F77F7F6EBB4BF933204D9E5E28D522591D17C
997D66D0491D2D29CFA7F4C88869E2D53DBAB54563CC5357F755C48E49F4F103
4A8645A68D436C42FAE21F2C158167C6BA509BED34E0B0DA099434D7FE957C3D
52C2AE0E9177DB0B86627B9DE43A7CAC25E8A1D8B592CDD4375AD01D63E8F687
46B8029C831A0871A8F9F2E264EC10133C444A86EF7C38608D246A1B4379C45A
7C34D82EBEACACC718F5905E864DD54CA062EA1FF406D9E2E42031876A1CFCE5
8D611A8435A8459CAAD2B618D4BF9115DAC5B425EC8BA4590DD3555C2E4BB601
97FBB232487FD786E57CA1229401BF634D445C93FDC157796BFA5502F105FB79
F31A554D8BF98B8303CFD661ABF9A72CA0629AA65989A7AA9AC8B6930AE574DD
D32FF4BD7C970D933C47EA4515043C418049903E3F36885AD45509FC3CF6F31E
975595338AAC667E1ACC0A3D0AF0B6A0995FA0FA6A1C7BF34A0E25EFB2AD7503
D23492E7E980B2C4324736378E0843451E4D9840AF87F800D3B6E0248AC51AEB
F052E92CDC3ADAD81E2D2AABE09DD98F5AE00F69DACA0535AC90368B31AB3110
CB4EB8D00DF6246BA012FA3416E1EAF822DCAA6C0C4142A552F0D97037FD695F
92137A8CEB212797BBE778DCDB2D0F6726BCF115DA15374CB688BB2F98BDC3B7
21DB34D4C6186E5CB2E597FE2055304950D905D6AFB4390B62A3173B522240F0
D3AB72588D98BAC8AEF2D4837251BBBF065C283B7C7B3BD08D7708CF72309950
D176CFAA1D155312586A9ADC136D9155C3C6ACBDEF8BA575387DD0D73162CDDD
96166F795921D90204DB9F3E3FBE084A2DECAA1964AD31D9D2F4743E73B73557
69B7ED30FCFA10238AB9E263F42C980A603B024C1844C08D06E40C58072E7D12
43257B02B8CAFF2AC2FB7868A7FC61E6AD2CF8C5CA6111D592F4184FABB849A3
676A8D175D44E71B9CEB49676700958F17D09D8B8D37746E5AB46052350D2D3D
6947F4B53D2B14FD50B4CEF4398D2D2BE7E7A3103A10B82E0E27702BF83306A0
C3A89D9AD2A517E03614C8349282F97AF2292BEEF24F886427E846C0BD15A807
62263CD8C96EAA02F137C2134A47241E3F15A881F6A2FE15BD745CE175B92169
7F9D9FF0803559FEA211098B4B45E88443AFB83F96DECD5E0B32C5EA329CB342
00253C789CF8F0CC740618BA5DCDAD4693F4E17363864CC8AB69FF9238E0B18A
F4114B94CDF5DADB44EAF5DB260D8B8BC3027ADFF7DBE2AD88CA3261C59CFC1E
C0418A91E44F1718D13CF485B3CAE0E01B327EE29107319D27F242A8681C2397
F448C46BA164AC7BE0C0A73FB423A2AD05E28D490FE15EBC6A6956477E8B7DAA
F1AE28A6B253A55B77C969975DADE58C1A863D53B67DFFDE2F48652558A2D707
BE5A2C968491730CC85A6FAC2CF9D670F1FB69EB4966334402F76388AD6AB9DB
661A04037C111998C99A0A09C9002478AA31E4240F13D73182F04410A11A88EB
D5278ACEC4A55F1A082D537B3C1EE890A6FD2ECD5F4D5DE99814AD4A07983923
64FE0BEFFF89A5599AA47087D62EBF48C20DCB99FD2BAE6853877991059EA431
7ACD1B3B44D9E5F789B7877ADFBD0F5BF0D86E0DC7B68A3F2D8B66E59BE53EDA
B3DA137D59CC6EFA0F579F8A1C5E4FFF0AF7FF5CCE31B93E4048CFBFCDADF56B
75CC3A9291183CA5F1FCD9BACF833A9D58F384DC27B11B3380AED6F7A6719B66
AA3E4CF7A10D86C2E63BB1BCEFB27E668CB9A72C46083DD42729C37C41DB7347
D16B9C41AAE346617AC1DA9EDB3A2ED55D49DDDEFA61EA1F01DAD0A1CEAB6B77
A4F4A47CB6269D49966E24FE51C7D95B1FBCC83587A2536500DAFBE0CA7772A5
89F8D9CDE0932B5D3A1819CB2732460837EDC62035D7D232AD000EDC4598F22B
950DDB38150538219C18735C6FE1823BC63C569503A4B5CBCCDFEEFC01872476
101D65E487A587BCA95243A1EB5BA0431C918A879828150795CF2BA78D4E55F1
FDBABB8BF813CB9DB27CB44AA47AA0D4E648240D872FB7614B5068382C766444
22AE18999FFE37981189CADA735CF09EBF4678CFABD1A6D3FBBF8357D4DC0524
BC6A4F583F56C127E3666DF8476D5A8A6CC0A5B1420DDB2B7E75B0A8C76AA6C9
98C9AD482CED7C243C9688323D96A3F96517CFF904BA26767486441050388419
88EAA2FE0155EA8DC3F8EA9DB943789A191542089E218EF40FB4942319C28B52
2ABAF817F506EF45F7262128F935F4893B87C2220034C6F979B5B3DE3BA5858C
38C9C1337A638C0E5C575727665665C88AD38E13EB02AC3AE5CF08B53BAB7FD1
3E263C2549247D8DF74C6863D43B0266C927FC0C7682845F3E4266B7D327312E
FB770916FBAA37015011999870F0AD19B5EB1B9D54BBE7593C45B8F41C203368
AB891AA0006AFDE458F28C88624B7CD1FEC7F9EF2C74697D12EF1AC78B34E566
672E71A0A5B53E6FEB67E477C72E6CDA1458BC8DB8E1DA62D42F448933905E64
F93DE35FB61FDFA5A4C78E426D6F68DFE42F76B1CF5F095DCFF46884A1AD7C81
AD55FEE036634EFB88A2B1ED19E37CF0B527D14F008E134FA0711FE40BC8A925
3E5027D8FE5FE873E98EEF621E059DF969C14E19E1CB4EB43B64E6957AEEF5C1
7D832383CC11E5D6419158E6A838BB3106F54CEB953F0C16D9F1CEF47274C469
0FA0620F50E5BB14A0F359C4C172951461E884747D6E5D29114039F59776D65F
0A6D9E5088AD245098A9CFAE5B44CB364AE68381B4DD8789E1D35D4AE06A0511
07EA4D90D3FFD25223604AF01B5F46C739DDC81B47978F0BDBD79F9A6A53DA20
0FB56DC483BBA3EEA535009B3A8AC750DA63EDE128761D164A9843955BBFEC72
13307B78378886F93C1C822EFA66A75E01A68758FD97C5928BB2B1DCDB63CA10
90BA2CDF850F9E1A5C5856D41D8FB730E048E0EA435515BF52FD453207213F3E
13FC83A36F2D86CBF4AAC4ABBFA39688BB222A81685006706434FFEF6D6EE0E7
0900D14EF927A2F0C3A8BE6E4CBC44070FC79D85C273074A7E31F7C63BC4DA2C
8E1C1CEA7000F63CA5BF75389D057C364EB8747A414F55FB4FDEB79A695E89B5
B2C3987863CB4B29ED6BC20B0687BF97346B111AAD8EDD835B26DEE73E360BA2
4603A6B42398895F1F95D5F0D0225D8EDA64581718ADF5FBD7277E57E9919BD1
0558E3A5022F158043BEB6A6820566EAD71325D69BF3460E9C3C7E0C0F1BB457
048ED47325A221E91DC93BC429BB517890A8F857C2F54BA01FAAC221D701C672
36E08C7A56288E339620A52776770935A6A193FA21A3DC25DEE1FF03955E5671
C075DD53A5A82FE7F773815B2AA555BB03CE19B2B72268C40F772CFA2CD7A598
A024222D413287F7481B9AC0E13B169DD71090499B415AD8AAFD99AB5DE2BBC1
1B40ABFB7CE655281EAE4F27B1E027C2A23E63378F5339306A9F79BF2523B16A
083F710C102E07B67194745D7159FCDBB10B6459273EFD03520F2483A9E6C0E5
665B54CFCA5BBE96B39E69D388D9229C1E361D6C47FF84A49AE0C70F71EA41B0
2E1DDF2DE8630CFC5F2C8AE1E5BCD78411D194A831BD263880153BECC873A9C7
1796A7807E2345AD02481ACECEE7243887DBA28E28217389829F4D31CECC14EB
7C948E6E6E104A080B9441E0BC3624493ED50AB68A0B22A779D7D816629D1E36
FBA83C5BD9BC2C57BCEA7F9A6886C9F13EC903E886DCB7291933374888A65847
44692F87A67A218BFBCC8896E57E4DF116E24E0B2C3DACF2BB4D4F11C5FE4243
E79E7B7164A60BC32326C2D36742C0D71D21C63AA4DEC82918F11F62984C5F85
3516C1419DF929D29EAF4490A01F57EEC3A27B18E547B77AB0DD203BA47E66E3
B8932462C277481778614D372B043761D928D66FCB9D760D3096B5CAB2A1DD50
A23E443D8A30572DD2A12550B2D61B5B8D3DA00ECDF9FEBE424C8D607EF6BABA
6D1482E9C494671BB7A2FFB0FFC63B7D9F12B2F4A61E66537C09C6F27C5348D0
4809C49896E18909ECD6892BFD2B0D73A84B6E682E463E69702266FBCF04AC9A
0CAB64076EB9EA884B2F5A13400556D1D07217CE900C16506F570143710E9AEE
87EB93711F2A49C15DD57EA42ECA4E6E8D58BC4A195405629408224D07020749
9DF2F43E7D52E442E951CEB1C926563979CAD433B91341797AC8D4E9842A2025
15A73ADB4AEAA456ACCF3FA9FD5C0D7DE2197E5C96CA1E77BBDA711E73F6CF45
F31613A24A30023BEA9A207E8E4E119B5356CED765F73F6935478D5133B9E761
4922209C25478E0A63F78F3460EDD4F64B4D2A5B3E660B614F62A53AB284FAE1
FEB947C50CE8BE18F24922B066F392E4321F75C42A86C70CC8E4AE8F6F84FC65
3EAE2D03CBEBEDA67F83FA8F1322A68097441DA3511D8FE63394AA5E6B7F441A
D12126999FA71ECFDD70607C4FFA2A1D6C138C8A750A892DDAEF50284D2CEADF
C997B78F9AF18E63822DA479E4279465A6CBD43EB5B5DB8B72E96306900A09C9
002478AA31E4240F13D73182F04410A119C72285F06F1773BAEB6FC8CD2EAC6F
0799C903D18C64FE378916128CCEBF8943967A33F856A40BA5B302782175203C
082BC703ED67F8956F3C757799D61A801701C34E5F0311D00A7FF64F31505AAE
C9170516D38C247C25CC98E436D6B0129745977065519D41FEA05DE277A2B681
6846BF7BEEBF9D323B549CAD581F17DB11717FE745194FD74DDFA29EF38C14A7
D31F074565A14EB60996DCAA0762F3C701390274F4A233B7C21EABC56271E0D2
6F4D8222E82DFAE6D7CBDB0C2F268BB8BFFF2897D51564ABBBFD16D44724C916
7C7F909DCEC3005810B42BD9CA1B33DDC4B3D69A6DDA20E104C5BAB68F3D943A
9B0E24B8327345DBD550F4D3A85FEB2007E09F408B6FB0408AEBF36BB9459C6F
41B3B4EE5B63571F18E7077F1990611E243FB8A327EFE9CBBBE8F9B76ABA9F6F
7335FDFC57213D5D25DAA9FF60D639DE068E6459B14ADFA9FA485D2B692C522B
F8E5FB4531330E02C9A8EBCD6C3AD71A1E40A4D3F1B93134816B1E636A2327F6
240BFF595E24EF8941707987E8E672F486552480FFE3D56EF1EC01FC6D827091
334762A700EE46CCFF0F8222069A239E9C090C056C50ED33CCDF1DC4CD54AF2B
27F3898D35DBACB95E33FD81D89FFDEA459395AEB1FD2A2313C4619C3924D6CB
4C7156FED518164901F83DF3BAA6A0ED3E1145BF13B94FD26442237EE2121C14
F116A1114838B333EF11ACBCEC26CB9945AA4F8F616FCC76E4B0D7BA8C76364C
F343FDCB3945F586BFB542B229FECFCD917788FCB6F16B6C1C40E3E00F45773D
C20480C8D6BB75756FFD8F5C7A6D66A69276CF920B7BEC2E368A095DC1E3A421
F0C532042E003906F07403A54AAA87A7CC1465CB48ABFD9A879E5B8A847E9323
2C034664E2C43DF499BE3810C38A4BA01A31B5C80138263B8E0DA1FCC4238D71
517DA16343332416C4BFE510F180C63CD039D399B1D9C4208BDE9F2A8208512E
1E9EB36A96421288D8A846DA9F3D3B8DC89359340E6D6E4BB80425136F59F84D
8B2D3548C5EA909142D33AE8B2BDCC9705D1EC8848293ECD9599CAADB700A176
76B96C607DC49759734D8F1EBBF10A7E363AFBA180CC2897C588A09FDB14647F
570BBEE55DC7F2AED3E75B7AAE70ADAA461BAE73B4CBBA029A5BD8AB7E658340
5263C510185BC34AAC67226177133AA7CD431BB67C5261595CA2A18E0FD97413
5F38D540014D38ED97AC4F6058C1B834BD195096C9A61145921EBA98A70B52C5
BCA89089361DA0D7AB8B979BD91DBF43FB52495F20DFBF159A58F3D4BCCF3638
857C25C73B78F5C35FF0DD1AE8036C3620836DA8BB5CE31BAA722DDB36BA5642
CE4110C57A3A4D95D4D5188EBD111ADAF13004B95BB6A1F91C919C28F67F64AA
534A2AF512C1F2BC5BEE9F21801512D2455DD4B94E0C5EF66E5F4252E5511A19
172AE7E16B6E84C13265E7A78843F80CD719C44633862B102690CA956190CC61
CEF424A54E62107D2ADA1C19405B9CB4C39694E52AAA56E56F82678A4327EB6C
A34EB5A6A8B1C41ECCB9418C1094CBAB96EE405DCF58E3A569DF07092225A683
511770EAC39ED55DADB32778CAE943CE6E928D5C8A44F0B691350DC0E4B38E4B
5B5868A34E643E6075C7A82C17F569049E4A119632C47683095845CE5281573D
CCA18F596C2A638DFA3A2A0E4088072A3C9E36431D9A9656D60135F7B7941CCD
EA0BC0168ADAE8A1716BCAB61A1FBE56DE145488C0306C6EE589C2E71F0433B9
B8200015BEE977FEA781C3B8034170F9FCF6324AECC2554A56897CBF7F8B7139
ADF77EC4DA414C2CC5424CBACBFF09AB4F4962A697CA30668A1809DD72B71A4B
BF6C618A4EE64F0673FBCDF58BAD19C9CFA9D528D104702E4AD8F19711F44C14
87A8A062B0E7D307423CF2852AD05690FE1912DDF6CFDCB995609788A176928B
EB2B6E6007ACE26260537E178406C35173ADA131F8880C15E753D7BF2E4BC089
2953EAD550817FB700822EB157C4BE8DE18B2AC08FBC05291063120165B4379B
1A4DC9D967DBF6AE8C59B9584224CD65C6361095861A84EA1B7A991DD837F2E3
96EA1B598CDC2B459A81B19A090AA25E8D0036616784228ACBA46F5DDF43D3CA
439B4506CCFE90F24ED9CA8B3498FEDD429B1B1B8550F2219E7EF9CC64983581
38BF2645040109A3D2D98CB563D4CEB5C030A7D2F6DBF55063AB7EEC2FC100F1
26DBD977068AC186C94D6BDC3E849EABF685A634431D9FCCDFCB4A1195C76A6A
D5138A35588B794EF9FE03CDD26508432F9ACEEC0C86CE8744277F5C32166AB5
39082917BFF7EF652D589681C60B99DD4F132248742876953526D119551A8B29
CCFE9D9B35C9A04CDB15B160C3E2B285BBCFE14C06C490185488510704D87E32
41AB1B0AE52F898A234931F910D5DFE85FE2218C80C58E34DF3EA0718B7C8E2D
6511B059092391D17C997D66D0491D2D29CFA7F4C88869E2D53DB8DE6F4258E1
A49C6B865B75EAA21C02F7007978FF715C0E3EF03E39BD49697D30B8BCE8B934
1D2DAA72F7FDE1FCA3BF72DB85657F4A3558D4585AD1918E86DAACB86231F261
EBA0BB60C59D40F48DF92AF2EB6EC67815D27BA9BB672751D8A658C45E07B955
8E776E94EC0991B31A4BE92420B6D9F5E6FA1855513B7131C7A04B00038E48F3
936442CB14BD2C5658C938BC685FADEC8C6514A728C83D7E00DFD4EDBF4044F0
E247D957956045B16131155F4296C5D97BC3D1F1C93A6E82767543FEF3277C1D
AC4869CFA865B49FAFAEE9506D2F10DEE673E177D6279ABFFF8E757851AA4497
5855AB9D1E3310DC01B08B5CAB5346609FCB048910F3D70211659CDBCE05F073
3AF96804623A11636472F5845AF507C8EBA6518215D75034119AF4A4A9D8A9F9
24028ED77937B477662CCCE77BADAA08B20B9392171DBF9964BBEC03013F324B
D4B1E3053E4E12EF73AD5B6DC764101CD4CBC3FC2A4F1010CC1DE442DDC48044
4449DB76A321ED1517E750F551AAC934621B52AC90EE56F9DEE0666C2484BBCE
C64AC7004C28C6681794C0E2CA89BB581FF57DDBFF7865063A2AFC57C76819BE
9B78D0F4DD3B3B23D69A58E2C82C1981EB8E18B5EE80058433952B6985256120
82298F0E6E36968C8C0932BA0E02AA42C71D9E27302A88E52BB8B1924F057B9A
498D69CCFBFE7E3062895E706E20DE8096399754FB32677CFC456E5CBE116BC3
DFC67B18E95621D03FAEE1831A15D5205891AF008F869D7AF5E4EF1989FD377E
9724F1BD2A06FC203245246BE57408FCC7B3586AEF5F4BDD49CBC31AA72B65C3
BBEF8EDD9B4EEC32CD7D3C7C2FEC51FE0DA9A33F1C12A392750F3D1D4FE99AF4
D9A1772129A3C3490B8B4529805E0E306E95001663F0EE156891E1537A7E03BD
98EE97FA23D768F48EA462E9C8ADE136814E40E9494038C8C4146D9E400A2CF7
0467645A2898C551E43963ACD7E7868CAA4488EE815D40E28CA54BDEF9122801
8A6DF526D5C66A9F11AEC07A100C7CCF00A1BBB7177AD139137E1E992023356C
5C546DEE5401E08A00FD38A70551FF9C8A68CEEEC3E24A8A8D78F1B9CA757727
B2A7D3A46798F5F975A2784717BCE6E4D0B66E0000BA7FDB864CFE04BD7CE607
0FC5EF576B1DE985AAAC8126AEABC40B64A430C0AA868759E4C0A2689D828D2B
468A3858BB337F0E6842EC5D9C0D5D2596ACBE7E4BB9B5198903BEE40A9F1FEE
2CE3375D67D77D11B92C07A9CE1FFEC4FD57B0891FBA2E75BD5D5D17618A9ADD
DA75ABA8C339C5AAB51AB884232E9D200A40A68E4799E5E842BFA51FFFCEAE9E
1A97661A47326B6308D41B37E844E66954DA9032B1333396FD545000E364E7E6
A79BD95977419E006D51A92C2CF0046A5F542DBC264C611E8BD569D4E7894668
52BDABAADD6B9E6E1B71655C46DE2F505615AB470D93AC31E7FC99288D9FB5EB
919A1D92B466676E57429E6BD74FFC6257A2E0CE1910FF41A7B70BE8A29332C5
DA24457DF7F2AFBA61F8B754C7582A8C089F5553B7617187C50EE0D0D7941F08
41112068656190221491CAE0922A3C733FB9D45F81757CFC8ED6BAB5630EDD86
4ECFE0D6959D5114EAAF1612C970CAA2C9472CA9736B50613961F9E542A99E1E
9EAB27BEF2BCF74FB40E6263AD649C32D00F99B504DD1602FBCC202CC8046C60
9E8D29EB8FCDA4F0323901508EC6D0D3A034E320755C9FBA42428460AC283786
C0E4C0F45DA2C8C78EE355C3B5C349CFAD8F885A3D4CA30C74613E0205AF23AA
2719BC14013E7859D68CDF0BDCFE954601924C473B761EA72FE8B82C2A961083
82D4DE8073A483A2C65E3AACDF4106A11D6366AF685F88D99F32705FFB5C3190
91904AA6F8C52B2F1E9E66AD9E7C3C3C96F6FD1D2A69856DE6ACF6E51395ED67
AD441581D7A43EC3324CFF3DAB7E17D9D291D0CF9CB9086D116D56152BCE3296
95FE8A830CCF318CF0DDD078FF2E319A37EB5CEFDBF36492D265A24D538031F5
D1B00F3C41E627B1DB9876EE658C50AB2BD9D2B92C897D83ABBA76105BFF7E79
29B8B36A0F3C3F8378B427A87086EA10A597E1623529F8734C0E096F1BCE149F
8B0F4C80FD9ED2073D21FF50B841774BC20AA8870AA9DB4ED19128C657C8098E
D5BB7691BBF8C1F6ED0358B085054144022BE6620E3BE3BCFF07C029D465A074
684244F63F8367906C7C4648EF33244ECEF4405FCD839685C2BD7D5FC1353416
8DDBA44083519C586F6BCA610DA67BCBB18285BD9C0C838711A76C5B5D57F356
EA414904DCBB1C1FF12E5BFED5253156E3A76B45CE938395E129746ACA103A34
C38A7E6808E1BA082060EE975BBEE0EE2360D53A6C2EB0393A21C2984E95892F
8AB221D586720A71FAFBE2C80951B24AAACDF129B2BB843A35372A2FAE18AFAC
C74586D3DD54067F7779D9DA069D7897314C617685D05AE401C710E8EC03A64D
8C462D8E458ED29A12F56A9D3FC1A5A59BB391F99ED1BC64F8850BD7F2551F3C
144EC0BFA8529787A6F7E7F29C2C9D31F4094F9E218E053ED37FBC0EB204AAD2
53FF338FEC59B284251A985F7377BEAA49275B5E62BC871BCFAE9AB64224D592
847AE57C85675CF04BFD1410B56E616F68C39FF5608FEAEC6E72A40B22AB733D
F071D6B92B62F165192F48C0198F2957A103CB2F0D1F55AA122628853277D256
C2107390CC3E2D2BBEB1220329E86A68680D1F9DA963B401CDD3C429BD4CC3F9
6584C065FAFEA3EEC98A137AEAE50529E1F15174DF4AE9067EC4E67725672D65
4D5081FCF2663644C985191135F0156722F0BF1DFACDE24649CA49CBA47F93F0
201678944115499724D8B9052FB4F6E0375B8F8640A75773638943DE96B8C4EA
EC254CBA1E05D8C31B9C3178133782ACD3465C5CA2D45C688F3CDDED343F64C6
CAC65D8218E75ECDA7292A0F2FBB4F6B9DA8379C3AADF23AB9DC687ACA989BF8
6F24F23F6F74F71AD0561F50EAD7CB37952D1A0E9F744FBE8041D1C3EDBAED08
9845046259EA79899713DD1E567F28531E7B25EEE41EAC3D35A3AAF9348E13F1
671DB099C4BA1079D778A6FA8FA13E04D067B55F84954495EA3D40E2620204AD
69A42D29B4D95429C7651244276269FA385532E9B57F1C2D2652933D4F316B85
7DD80D0BF6EC0333F920B9031F7626389BD3E392CFB2EEDE173452C0642741F3
C72D84A0DB18152D56A72ECE236FD3A3914574309A3384CE66C909B7040538B5
E7DE80B6DE055DC28C1B394FBCEA0BDDFC44213AD960278AA498A967D890C295
77ED868877C03C1100D8EBF3CECA4AADE5DCBB3F0CFEA4E8A5DAE149F6483523
881EDF02DAEDAE3EE928160342AE6170A01E13666A84DFEBC5A5DC04BFB1D49B
F5BEB4A8F19D264A7F4B1C259E4B1010AC355CD9D1DD0C6F18999CC47EB3AAC7
B89EEEB9E2F9CFC6BCDFD9A438C10C8C604E64AB2F9488EA7B1344329A6DE47F
D59BF4A2987AD80BF0054F72ED0CA0451E5D8A813AD6697E53A43ACACCADDACB
20AB6BFCBDD95D322B8478B7485BE9C86F055D7217D0F46FDC29D08D6CD71B9E
1DE1C50C1C3C85C14940A830DDD392F93F6CE1294B62411E6DF77D4A4A4D889F
D9D7A6AC1A896380F2762679E60FA6E763176E1B2512B04580233972D9211954
9CBE53B0896667EC7ED9C97F909B8B374E4975E93D9FD32DFA0AE84699D182CF
6C029A8E6564460CBE4D5EE06C24C4F502E4EB602446673621049928B01E78C6
FC5FC52B1CB9BBE02BB81F2886C558B9F2EB0504A2F8002B1B13E2A496759FF4
2496772170C511EE704B4308A3727F64393E392FB6E0369BEFA855C8CF4E76AE
27517A9B3ACEEE42F3101F44998749B33FFFB35AD715BB0DCDBB2D35B51730CB
8CC9D14A39917EA3055C85D171C0378299712D1177AA7469F470279E73A0EB1F
BE7B70C8CE0AE57426572795B0826AC0D3E445C98DBCFBB63EAE33B6E75C7E71
157123DE44DE684057683F923A2126FE2A788552F7A3483384B6E646EC0415CF
6D4002CD9FA8779392B0A780E97EEBD2450DDD1ABDBA993B98A90E50CBF66121
08A4F43DBE0FE09467C33DA6A1C61F02BC5847C65C187E5B23DEC4C625C286EB
9AC7E30F0BEE1991402F2BC62D606C038AF2B098A79351897E7B6222B6D73635
3AC4E3D4C203CC50342491D2F70A528226650D38258FE2EADA6E4E1D582F4723
F2143CD07E0E6958254B6D96C9E5485E26B07047B80849C0A77BEDA560ECAE3F
CD7FF41BA0AFCC480F261D7CE694477F749F82E5B4AFFE12BA90C032157C7688
7E325784917AE505A158C5B3D37C1041ECCA0BA811777B5019CCAC36997DFE14
2D7DD000A0E766DFE0F272E311047B6227781696AD545FBE5A80E2A32D7F8462
912966E9E97A67D036FCC3FC5375A979B78F473EE7AF6AFC189BF5E14FD0D21D
656B3EF50D47E923F43BEA1BE16CC04EB2A966CBF4FE707BC7472D56ED0C13A9
66448345074B1F2C00C537A79FFCBB1A784959B43E58965C260A89E7E3BB7ADE
BA9C882AAEE60A026DA25D51A46651A1EE03A2CA61DE42D78AEF016749873529
5CFFA292D5B7A1FADD93BD3CC207D8623EB59F6B3FDF302403A9C2D794743851
18652EB37CB7021F80792262A4D2F354389D1ADE3C1E4BA1EB8855BBFECA191D
4B80212DECEE21CB16BE0DD2A5B6AE12B959415091545A96B78F6F4DDB5CDAB0
611B3248836DD9E54650EE2D2F3EB92489594667525BAF1656DE0175464EE264
860B6E310854C80BEC744D529624024E35566FF0EF71D60ABD9581F43AFD7EE4
A7099844282972DDAB121A040D3D7CC97870F88C3874BD5C497F391141F2094F
8EAB4CC90B12E10F8AE6DC2081CC4C4860CBC1DC3427060C9118E755156C02A9
9A7EF38084D649289E4600F5A67256788F406EFD36886F531DB9D7ECA48701B5
D4511FF86644AE56F46392D5804039C0FF5C49D1AD996A67AB0914D83D859C06
AA049CA26AAE7F316592E7DE134F775A835D46A69D1C4BBD6B53124D7433EEB4
4C724ED69C8697D06A5246DF0C49444B5390076A43C82C91B982B19D7AA8B615
16F4BE3585A899E98988CAFF8DCCEBF494D5676912D5E868E3877779F910B174
AF933326ABB47935AC900487A2273F6AA2BF735C312FEA9A1AC7289E4B43B953
D2EC568761231C3119E073DB7DEED7DC4A04968B69F792644FA8B627CF923CFD
F8CAF8B9C8FB9AC27C8F2C2F86FEEE11AA06BBC0027C40E0F9DE9385F79D5989
98FCADE704A1035C780BD03AF71BAE6A930CD02B6C4D07D6D0998EA18EC7CBE2
73105CE6378A2ED913F14D20C272D14060533ADF2FAB44A60E6395AF687EC88E
429815282D632366039F37D3D55E93A63A397B46FBB2B6757DD564C0BF55E0AC
8EC66E031CE51B2D7D27AB41A21D646C236DDEEF1A23DA64A61F0DBF36B86A59
893F277DDD906E28FFFDFAD7E4B7610E6A108DE7F71F178FC7448D4C2E985072
E0811881511DDFA4A3C730DD7CF5C1E29104673D7270F35D580E8F3BA9BC94F1
31ED0110C946D421B42532E5BD4FE3D8B242EDF647251781ED6CE249DEDCA4A1
FC94E0ACCAB225D733E123302C0C9B054E97386886E8AB5D03167D702466832B
32DC035DFAF601E2EB6615E116FA9A44B8D0586FACDA34A0D0DC74662C3F4FA1
736A4D67CE0650766E29A79AD6ACAE003485A4C21B389F45F8022593DF513D31
54E07738A2E39D6AC9429F1A359112CA28BD92DC4EDA5C72C6F813D53F1E9C37
34B81C2CB5207702A9A0194F0DA8D335635EE2174E2DB99DAE9AF89BEE304763
BBA1AA81F9D74B24FA7EACEFBCAC72DA4AF7C3A7C06483A7FE49E9118C94F79A
DB280E5CC383595D57C51F4C969C464C1CB1712283C42A77AE7874BD4EE0AB63
64E2FA747EE9A89161F93F178D7A24AB2C747B80BDF0816DA99795CA28792796
8E85C3FE71046BF6F87A97CD03FB8CB1FA267164742287C9F05BAB96F90F2374
8B2DA4315C703763D6B35A4836A2AA71B39B7AF614B09A3D9FE54E8B1AADF323
785074E2F023CF26547355053A5B40A0BE90965C2C34C42797BA6CD6DB3BEC3E
2ECFC061F2F9BAAF636F17EB88960EA70F1F0F037DDF2061921A72E46589CC08
EA87EECFDF36B819B07306C00D700345CA2E6113E992D2BE44DD9B12DA394FF3
5F44EFD4D133019C4ADC916AA6F4F5FE8A642DA2E54F42220C01688C94717B2F
1204BBE9A32B02C569FE47B75784AF1D9300E4D8EC13C0B542DB50991CB26D44
DFA0957D4DD0665F0BB9EFD60F9D0ACCDE739B576500ADBDD6E0D981C2149AB5
368FF41481D6B8DE8662E73CAE558AC3FDD6C48D353FC68A77014365407D48C1
350E58ECA8C0532F762F64A11900664ED4E6D4DAFDF0C64F9446C356216312C5
F614AAEE0D8590A3A26854ED51C4A9A1C13E40363B10533A8BE1080729D86FEA
A2193FA6D6C34422C34643DA9557ADE417810A48AA2D73D0E0E9674BD4C83958
81C15ACFCEBD5772A959E2C99D13BA11BFAFF1112E2CCB84677CE03DA00972FD
3106F8FB5AEA60ACB194FB8FD49395A70058C942F80C2313118CDFEFF258E569
E39372E34E3FF5AD87298C696722D1D562D4A8478555769EC2C44150D849A0C7
D966B2EE653CDBDBE9C8F352887F8DB03D70F9E692F0A5A3160110CD4097E3E1
FFD0B18758DF9ADE231B76140270F0A05D53FD964DF5CB87A377ADBF202718B9
E47B1DB784435B7EDEA4BD19388DDF3C5B474F5374D80D469AED90BA08D8A04E
A2CF32810C68ABDAE536D95D46BCDAAFAA5A8301F7DDCD3BFE10B6C23F1C7ACA
39A6117CE4DB91E197AE348634BF44B2108CE10CCBFA1B838169A4577A9B225A
BF538D4B10A9C5FDC801B144AF82BBCCC3E63B027A4C3070D38586C67E8A16C5
60DBC0D4941CB6DF6A0D1E7492A6DE009C0F464678859A03070758C38629FC34
410FAEDB24E5DA8ABA2868658526B74727FCB164F21405F988059A1BCCE6038D
184DC74E2E186A664391B7B84E2281ABBAB44B8B81D92F63481CCEFBF4264ED8
900D17D9632421541DC60BB39BB060ED6495AE98F6798010F76FBF67CA47E5CE
09E60F0839874318C8389E298F554671CE327B099B0AB9BDB8192271B478CE0B
38151243D996CA5AEF4354211E3953CD7AD90239C1FFCA061A21652100B8E2F3
DCA6DAAB758BD7FA7D29C266129C91A2A5804ABE9DBD230FB37711C0E606B1CD
01AF00122F9A948F54FDFAC13A9C437607321D3E4C10059C1091823B03DC61BD
809BB14C7D4FD2C4E6057BE5F5C51A242002726250A2AB4E8AC7F70BCD0AEE3C
4CCE6E1793589423B942DFF7E8267BE5FCB0B209B090009718A49C6D7256EBE0
D843690DF3AF3420D94859E53AEFC9D1DD75BF4A02A4E2C44D18720A9F9D707C
9D341698A75314282E4770738AE96FBE5811DD097EB0065B1E01ABF5E2D8428D
248B16047FD72F0059E35DFEF5A8F444C41D300E540D53723F45F0E20277695C
CC2E54A25041A959AC738AB6CDEA6486B7EB9914CE42558ABC90B623AFF1FA2C
B3EE64202FB703CBE8249A14C37B54C54CD69DAD2A5C2183103109D6F82129B1
301EE091D9F7A4D345114235F4BA289528C04940A830DDD392F93F6CE1294B62
411E6DF77D4A4B7EEDDB6330756507D8BDB3F97266E6A31040AE138A8469E758
4D0670E527BC95332D13B3980549FA02073BC0A45FD5AD5AA0468323052D1205
BBE6E794D7FC7861CC42DCDDDD4A4A3EA5B0A1FA84E55ECA7617A4112459597B
716E81960CC0321BF3AC8193758B4610EF33F894F09C9ADB7C4531253BFAD318
0DBDF8DEA31BD5BB3282B15C22014FBA359AB5BFF346F5DDB0BD589A54893931
D3F46EC04582CAC86BBA5E5E515335B3ACA75A5A7E5F16E27E8CBF4128859E2E
97D48C02844AB8D43C84FB19D8B311E2E8146C7D3D076F43B3F9EA8A848D7E8D
0E219B61F71B5D50F4DFB79975EAD0E794E842C213CB237B187A7B54F41B5443
3526B5BCF13D2DF1472686B200B23FCE6AC13FAE056EA1B304C5FA713A88B4EB
663FD7959C6D491010F976D4C7EA2FA6C18E22DD503E8981DB670CF5CBD09E17
6E265CF148A20091BA8B06B993088E210C91279AAD5922A3546551F93A076B39
3E4219E0EF172C72ADE99EA91ED60447A31981F8F13BDB8CCAC4361557D938FC
4AEAEA9E88AA0FF61ED04C6C105F0258CE2084F898D7571091B18B212D48B43D
6007AF07A0FDB7C9FBC784A1C9E0506142709DA99718F36F909299F3C570E743
FBB19F4F841939609B3A3D2D388DA4DB9FFD25C55A4F377E53B352830FA336B8
CDA7B5752C68FC0637C661E3ECCBB47543C20271E2233F7FBDA8094346C06AF0
1FF1D4784AD33491DBFB17AA6A4C7C8B2518C12DD5F849263DA8B6B2C38E4741
21239515E3E3BC6B36475154CACD25A07C74FEAA2928802611B05C9CA0ECCDCD
40CE7AC49715D8BD0A6803D8B14E755118F43CE13E54945B0A6BCB5633B1D580
346D913BACDF1DA8EE9EDC8540FA56F817D5C135D554004829A6E4566D3C3D4F
50453B4C997ED2C8725BFB415A30E47844548A823BCD7D0D5F3A1B0B5789DB78
6BD92416107B1E59084B5F758E509DE66F112F49E63A16F60B6795CF0D93839A
E2FB6D0B74207F0434C9599D055D786DC25523AF3CDCD9D834D54D210461A17D
F138F3D9F5C7AF9CED4243271A1FE1B018462BEBE17138AA07373412B44023BA
4E204AF4BF3AD6DC4CF005D393672AF65F0D015C86E975DA6622238B837FDE02
71B310BDB076E1E5D2187136E1E88EEDCACC0DC5B4F3268A8831F3391A7B2A17
E1A8397AD1D30455CE9BCFB29BFE08071774366804FA232E4AE9688E40E61987
035623AB8DDEC101D55543FB93BA5928AAADEC03C130570142D6849BC5B3D044
5B30D984FBAF9F56E6FACF7C07F249FC058275A863D921A182DC7C205A93ADC9
40D3EDD5D675EE14CA60D33D1C57855BBEF5F5B024656B80578308ADA3B73C7D
92DFFA19F1A79AC9BDD3F2F88D9725FCEA44A75FEA44CE4C991729C5792E1052
A4216B17742ED304B2996DC77BEA528DD00039AA51261D5401AB2ABD3C25D5C9
A2FA8C392A82F8DC836C8E33A5B5A2FE1B6C18912CECB8E244A91E1AD8064357
046BF2F498400D6D7DC137A904C96EB7B3CA2E65F64E840DCF69234B15780303
EFD10F9B6887E40A5D78E6B1EF8305A4FCE9C00A5845D1C7E8F51710B4F1A4DB
D8E6BC200679470F5503B71479FD9AC22E7818EF7BA80719844ED6735C3EB876
E244D5CDFE745A089F2679B720C105764DA0F3744E683F88050A9CC76AD73A11
DD873632665A06A2D13141E35806D8F53E8F34D70DF5C324DEB566724FCB712F
E0BF7EC9416F02C2C3116926FBA26021B38D6E21AB7875CCA19E45CF37211113
56D1F3E208CC54E7684A70232F0EF82F448559F8CB85DD9909A74AD694DD99A2
3A6BF1BBDD51D96BA4A5207AF1044E917186B01F946EE08ECE7455EDEA610D0F
B69A58D32F41B39AF49EB624CAA6C346A08DBE65B1C054C0587AFB35100BC76C
C64E05B36DD4226A16A7822E6D523A4B3970F587F38A0E89A05611B3A13BD144
BDFA564DABA6CEAF8A444AA157E95381808E974D7CD402B571D2CD823D1E7014
31809B56C504BDB1B7D50B99310A0DAF0C020C04EF94D0D2D096B734CE3721C3
71C213B6AFA0E73C0622E2AA49C4DE54A05AFB1AA6C7CCFBD9F72150DE24DFA0
F0D5FF99461F3A9DA8509E7EE6AB98B4BB88F67796EF2B133E9F6AAE0CDA18F2
428EACE52EE14B5FE74DE6D3E114246049948C187FABF401324F9989DB792F77
814729157208E3B37B9CE3F1D0C616D951BA702DBBFC2C1B953BFC6CCA78DB0C
094BC82EC4F0BC92833AEBC6E11B70E1C0F3A18E54817F7BDD3895DF79E9BE61
9F55E9CEE03B1AAC8C7642DA07EF2F28988112405F80F2BC8A63F2CF41C075C4
DF19A0F0AD8A46F5BCC2BA12C4D68D803B840ACF32FFBFD9E8DC6ED9FA9FF379
C70C8E439578725B3F51746691838E600146F6C88E1BE994C9B91F45C562A5BE
309D5D926AE5C673625845E1981A3316F98A77F4D100499847E1102CC075FA12
10881D95D6EB2E7C492BC58C366F903F717C1A9A37719070DB1E340FB5AE3AB8
F380A19F5FDCDCFB687120DD2BE5305363019BEC0F407C2D4DA38EA432F0E7A6
D8221F23B7C33CFA77D83480566E36545DAB1BB0423C34755F88AD24878354F7
52B9EA1278E210D305677B9A4739C67ACF82AAC653B48D8D7589DAF8148D380D
77F8E7DE4DAE00D18C95C7E50A7AD744042B565746C211F30813630C7EE7DC31
054612907A0811E8EC4075D24EB0682E7602CC252BA8AC0287850F9073E30FAC
A80736C0BF828DC7E5A8F8F4569CBA4C2C3F91912C485C5DAC43C435E2F5527D
647EFABA9D63753FAB6F4BF4D7B35D01E3A198153B354914BA8E4C0BAC128B7D
4D61C2AA87093F0D9188350856B6E34E1109B826A3F23AEBD548E10C71A93759
6710EBCD5651DFA0566AF29195C653FA085F712258B8A1B9AABB8A860492155A
DDA8E704EC5CFDF86D3B00CA7934C295363D8ADB04340CB71315D89A0A06D4C8
C61AEF51A2BD2410FF027C40E0F9DE9385F79D598998FCADE704A100379B7D9E
02960F7C0D013CCE063154E006EC3DBFD9106F331F128C794D9D6EF7E18E8301
0405CAA3AF558B2772A5EB6C07862D3090AC8A81D8019BF968EE312103282494
D6472D885F3CFAD49B63B96DA5105CEC17F4DE04D7DB69822968706EB94D1720
FB2879E596D3A7EF942D50173D24763E96F2C385B9F9C34E0382F02EB8C8BF9D
3BACA0FAB8F42D90434A48E3F4993DDF5FDF93C9E21FAF162C920C27726380FB
D329D29ADDF290883487CA328A0102AF3247216D8F96EBD8D1EC18D48FEB29E9
68BEDA93F92B4398FA2E1D6CE1F398ACBABDB5DEEFFFF4DA29E095CCD0114C8B
49875196489903BAEB958166DA9C2088BF9C76C921024B55FC6D5DB5BCCCF772
26C214AE81832A9157AF1175AB47229D0F348EA969DF366D3E164E497528F422
DFFD3B72A168E84519D138C233FED4D468568036B06C33F7273ADF8875EA0E53
899CAA8CCD652C4D5F26A7E0A25B9C7C4F5C4199F13DACC7D8F943E964B009D7
64D79C3C26CF9EFBA94B4FBF6CFE9C75C0F505BE6261EB9A2CB750BE2E146ECB
DD16A1584F3EA2AB3D9A3783D8743C3597C357ABD25D6B8DCB78E81FB5B8D5C7
0217AA3648ADD641A983CA3BCD930955DFBE0DA8B9619E7108A8EAA94000C80C
AB2AD7ACA1D2D0827EFFDD05D4EDE9C2B589686F3F263BC002C8884F38F3BB6E
09768DA7EB3BC1496E363543F04DE5B6F6A9812C7757E990268FFAEFB175466B
422BCC69E8B69400CDE8AE2CF394292067CCAF4F4E32669BE217C096E518A781
20259FE222179A0B410CEF30DD249F2A5D23E5E47C9ECD23288E6C069F496C57
3ED18C446A9892616611F8E6172063E0FCB7C1518524619525DAD95ED33B70A2
CB2356886E9B27AFB10DB195E5EDDB1006AE12755599CF67E27E753AD25C1FC7
5E2D35E33B794FD8F19F03162747FB4086DE7B1C1C800BFD4F229399392038EF
1BF9E659792F783316889221A826EC20ACFEE1E14ED854D3DED0148890086099
5F1623CF43A1C00109AF4F59B91B71B9682CE60E17947EB7915938EEC8A66836
140F02D324C7B4B70BED56A8FF4C1A2EAAAFDAE8BBB5E8E952B17C07E69BBE73
C205BC659E191366CDCFD2BD52526414BE2E70272CE823A43FB0D77B53B2866E
7F21C96896DA4DEE11C94AB03CA1A32018C4B034272D9B8876DAF47EF08D2DB5
D2936909F3E8BA0936E751B73E754A73DF6685DE51FD6A9989881AC4465318DB
FF9E0E5E13435B4A830B5E77C42EE8E41CD5CA9BD0C6E714DAA34F8DC7594332
E895054E5FD3DF1EA44126CCC0345812AFE08FC784E7C4C4287D887EBAC1683A
8CE358ED73989053E0F420D2D4A09E9CFB29726F821A7787E5F817FB905AB350
D466B4D20EE18B679FC1AA857C307C4D2AB54597F47496C8889CF6CF6C6E377D
41AA9E983FF07D8B6356917744AFA6F67477386B69D3DE885AE1F8B52B0FC756
5D358E8D01FC5A9066DBE8E1FE86726B646E864416CF2B7E1E9366A136B9837C
80FB068B3D2290FDC35C286E35763A02A8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans8-Regular
%!PS-AdobeFont-1.0: LMSans8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans8-Regular known{/LMSans8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans8-Regular)readonly def
/FamilyName(LMSans8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMSans8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-446 -314 1510 1154}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123833081E024C973A102E5EBE9986
D95806FBDB9DD41BBEC9E98875643E43D499FFB2E48F58EF7FA59843B8CC092D
AFB67604D9EE4CF2B87CD20222F6DC988B80418F8EBCBA06EB7577DC5FD0473A
55FC62B9B4DBABB8776941636268C7D4F704AFF1C85927E2D0C03585B60D5DDC
D07A1FE61288043CFE477BEC3F1A0BB96666D44F8286474186BD74037C208527
135C090597DEC81C9F985DD84C889A3A32B3805B9A653C816C523D14F6215B89
5E57100A2E43AD20344D45AC8419E928E4DC97E1B1B2285602B23DF89E149B9C
975AAB575A17772D4BD861C8DA1CF693AC37BA57CC51B9CB825607CFDF41347B
D09648E797437823A12DA3ABDAED3E3E1042F4B4BCEC0A9CB2517C0047ECDBDA
507600F57BF0F93B33764E47B5572573253F1439C293C4CBD1F018FCF994A313
30701B46B9E83B3C16E17036EAF2F0072D5CCC8AB293EC15697C72C097565D80
BFDA02AD9357437E60FB57F31BD6E172895D0E1212674C1401A3CE2599E7CED3
EF0A11750E622958C887E58600672A1AF43AEEA1D9BDAF69147E613C610E127C
9C8190A5B3F5F9A3CBC6A9A61D1970F030ED0D623FD6AAE34DD12E7F12B00204
42C239808277550593ADE8004B53B5FC0BB124F58965745A82152F9860FA6FFF
94BFDF287A8FC265B6B0411ACFEFA520E402DA17AA6B6D0904D8DCB1A56E96FC
6A1C7300A4455F6FF98AA6226337D5FC699B1A0900F049453DCF3FCDC8A3E397
C011C9D2E55D0C2845297B4C50597F58C82B0348AC299172DD191715C1FC81E2
BA9F00D26B3D3098006622D2740A0EB0743B1ECEADE8F9697C7F782265A58C4B
7D8B174654EC7F3BB8ACCAD729170D100F5DAC4CB7CC0EEF74D662EEF94702E7
9237CDB6E3DAF2C65E5A10DDD52EB236C227C3DEAB315E5CE479878DD60BCA19
564DA461E2EC66ABD6E7B4952C21C2D3E37C7B97175C5668DB4C64CD1CC23F71
36DE0E644436C67784A3CCE2F3DA52F258B8AC9D36AD8E947AF7575525D2D645
28280D0A82181ABECDEF3E5DA19E8A35EE07FD469D9896154465BB482692E8C4
487E1F75227D65CF10942C271713B28F990E900C2180824BAFBDE4FB76939E77
31CD2798239CC4C94E6141CA7FACD96BDBFC373E1E1F87881FD7BC3A7B98F3ED
62AC3112B58FAB45215177C2805796FDC240A7FF9D029A572DE35D3D9D3E3E55
9A5B4CA4700A71D0510CEFD3175FA8E7A8D4B829F179558121181543EC7117EA
BA7B58E69FFCAD95AC5B40D03FA898F0FA2804E0B1CAB0DD9BF9D336F25E5799
BB341C0177F10D973EAFE7F7F8D6287C0468E3AE99C277EC2FAB34A2718D7725
67B5B1997AD2FE0801171A58B943DF0EA5AF5910F6315D432DAEC05785E0611D
82A36F9FC00D0C92F31E2C049463AE81F753E2F863AAF5E28673190638342D74
B1A09188847B2128EB8B139A5FB3EDF22037FCD51D6CF5DC1E2B1CED5D9B69AB
B37468777718103D87C1553A051391F0246769EF99A69AB490C07A9FDC54C2FB
1F6353EBDDC027D3925BD32D89219A778B3C4C1207108F3D4D7AC6BB7F5EBB84
447B363872C92410D15210568759D8B7156E36936C54269CD6C35E9351F86494
0B7F86BA9A04184607D4965C1E7FE952C244D78BCB7A908AACA1EECAE6A56A36
519311DDB3D1CB66837C2964A2DD0D34A23DDE404F43A166E2E533F1C050D35C
E4AEE92C35EE3913998BD3D92EC5CAC7416E4ECCE80BE54C77342B004590FC45
A1D4C5B764583A99748056B896A27FF97F4A510342C8A67BDDBD597BAA0DA4E1
0D0347ACAFBB9355D0219E14DC084DA2D384DF669B0CAA80B3AA3DA846129D2B
44DD121BBDDC1877EEE37B5263811E5D02B3A4043CA72EC2190940128A106C96
39482E44A972BF53BCDF199F90DF5B338501403614E907DECA0185FDAB99E820
7FFDABC084BCDFC2A202F15B5E590EE1A142E85E9BA72134CCC83B6EF7748016
4AFC42453ED4BC8C59DE0A5C01FE0E5F3EC7EE6E6540D5A2602E61D413E79CDD
37FDB07131FDC420EF525CC0B5377D3A005133233547EEDE16EAAC1024DFA2E1
61FB6367FDA5806161D31FB9F7B11D1F3A161B31F7072115A1E570389672933E
A7C28B31822AA9DC74A4F34B67C8E4CCE0AB011371A1F3477648500238C40EDA
C04F03C127444311964F88706BD4BF54A5A216F2EED84DCD4C7DDC79FA28FB84
5E4ACFCD0160136BEE30A0B65D1C13CCEB7B316717EE859D7C2DA83F003A1419
549400BCB01465B2BC0429162BE040639F2EE9C0FA967C9F3B8186EE2454E318
F5CC571A951409B0E69BB7A5EC360E6B5746DDE2AE0B93554896A1FF99CA74B2
F6A4FBC49A92A63B15B4ADC1954E28221A26376E65084861875878CCC3318BA5
C03CFF20A8F0B0A50A868AE1181D399378863E3AC6FD31927C8FBE090DFFAEFF
60864C43C514549F66AD6BB6C1DE871AD601B48C7E6DEFD5539B635B544499D4
0AA6D343664B19774783F390DE31F7AE1F58AE1F5CC02281429B33760498C875
EFE51D0A668FF731A43F7E85F640CFA5E7F8BDC7A6431CB3A1FC467F98A7E2F4
511DEB9FBAB2FEDC321C7114E3217EC749F520C8AEA79C2D61038BA7A2B491D4
96709CAE17E12419D4535D0FEE85D7AA225FD64BFD70D14D7134EDC9C2975B4A
DCD6D9099826F363FA838D3FFEC15DB13D437C2923BF8C7EC3D3B49DCC343774
6F41F7B93134816B1E636ADF252B3199602D5770362EA9F95EB9E16E2E20BF5E
4C75D7B9426F419A31BD9E3EEE0CF4B5284E68D50F372F115C1C884CCBD37CFA
A02E26CCD1364A359F341DBACF04FFFF38E09AE34EA6E079E1CE342FB6E639D0
54F35CB58668FCC0ACE612302C141ED991DC598699A436B29FBCD3611159DE04
06A8731BD8B65621A1271E4401498C671A7DFF442CD4E10F26C27616669DD6BE
3760BDC1B24B03D138396F36974458BFF106A479469C259BC3114723F4B3A4A8
21E38FC40779C826C9E160AA06F3C0B6861BC85CE9DF4CCBF875257FD719D237
283F6AE6A12B1CF5E83BA911DA58631DB3B240E1E7C624795434AF91E01B086E
E3E7B8F62F15899242629F16F6D74D78150FA93AF1CF2DCE2783D4B1B9284D48
5DD40BCDFCBB490A47B7AF7CB7E7ED91CB43236FBCC50D20C11C6929C93D3050
25BDB8485E39CC98CB7276D8FF902DFA75BC46D4F6DCA402066DFAC37A4B7391
6AB968204D34D67873A36235197721FC55311D39C41CA718F5FF28B9A09D8981
092DBEC6563E7F0586F5E3892618A1D6D53083CAD2C58319987C4D89484EE18F
CCE668886402A3CDD13A373A18A001810E42B57078E36F74D0302892D0309E79
BF38C72A3F14BDF4E46B0E95C35B6057FC352BBD43CB8103899EA8517AB8C187
37EC2FAABD1E501E480FE0BB79A2DC3F72DCCA2A8F59A0CF417AE9DE965FD79D
8348CE3C1F8B633847DE60058E64505B0A0326A9D87C65D63C14BB2F49ED2D36
9DE7A3DF53CEE6642084F107EA5399188AFEAC444757444D27BC22A90CB01EF6
5416294CAF223673F451FC750AAE0489CDBC0A6BFF8EF29877FA13D418CAED87
9EBB3821C26AB7FD7110CCEBF6F466633F2ABEAC7A7D0A1C3B49519CD63CE8E3
8A742078EF5DF4BCEFC85437AD30022986749142F92E2DC5B8DC0CD3FE27522E
90E14A5996A7EC21172CAA7C0761772ABD63608A121B7AA59D06B45104E76E38
46515C25C53DBF61FB3614B7856FA4FBE9DD385505F1A589CDC08A63016F79C7
D0EF0D2F67F347B370619420089D3E755785915CA903CA5DE95A37D9CEF904ED
EC7EBFB0E60995CF6457CF02D4471D1C6F941BBBA29A0CF844AECF49D237D1CA
B5305D25DAA9FF60D639DE068E6459B14ADFA9FA48565E637A6D15736C339C5B
FB43AF47577453FF94AE699E67F17FBA10C2EF19C1679C5AACA4F9EEB15E139F
8D31554F4EA2D4B57ED13A8A07C06F3A5AA580306C3CF5D7E61A400BDCD15EAD
BEDE3875523CDFFF0F357C53FB4FBAEB6078B410935DF7D6D506427189931EE1
EA6FC1C0132B5FC4AEF8D13649C25047D5A37CC808D695F62C5C29BB006DF06A
0987AE903B8BE25A7AB1FB7B901E2D1CE638FD0D280DBDB8E20C47C783235983
63BB9C7DEB8602373CA4D8C3ADC82B06160E798079A2011DDE2CC5C2432BC832
B65BEA5A7D0E8A5AA1A1D62DBDCA5EB57C81832D2CC5364AB5A96EFAF645645E
F6581D93BB225684B50FC56691BB3A1D226C2E035EE6CDDA7BDCD03276CC54E1
C9739E059F7BBC7ECEF86ED1E39D1EC954B803C19DD4F5B58C4D2012E04E630F
527812C59CB90DA35A18C332D3E31B2FD3B9986123AFC039BB9621EF468A5874
8D297E014DD5DFB9F1D5E9907E38EB0225F73608742AEF5FD2BA95D15B8AF2F4
2CB398D097D7FC83EAF094FB08A17E3605117888E6979D54550933FC4B7290C8
C71C097F48AB5C03B5D05789DC3A55C75248E4DB744F6E0C54E83C14066C3443
BB2378641424814F2BCF083E0B5BCC7BFF6D08F61C9F4105425E913F25E79B7C
E6E98897122200398D64538E2CEC6ED0EFDE808AC369ED17E1AC94F2BCCCB299
02003F0D71C080673C263D09152CCFA61FA12A5C83C65E57C40067AE6499663C
88B604B2A8F947700A630BFD6A5349A15070915528DF5683610586A8BEA497E8
67582A10D51CC2DFC870A1A7E340D504BE0FEABF24B5BC879E71489A1C26B150
D542CD076892BE8D05A41BD4C7DE97FB6680E90CDDAD63AFC6D0AA517B395597
AAD7F22D53E867AC6CA06033F543ED44CA2702A5374368C306ABE144F8DF7EB4
5DDACBAC1620BCE641230920C23A8013455A474088E27861E466EF78AB158F3D
371257512495CD7BB56C1FDEF96570BEA964AA4D708A58C78748BA48E0FD0918
9AA5FACC24EE7F3EF93DB5F7C99EE5F7A6321CBD12E8A831DAD661E6F37BABE5
749B762D30A924AC413F5208F59CCF307F6FD327BE64BCD5B5207541D34D0848
0F1A1CA16F2E2F888F2A0A5C9A1C1B39778132988F62AF56BB1C140022F502A9
484F2222BFD38455BA078A1A500CB006AA6A7D449A3D6C3AAB962CB9E16A2400
13CDB4F38DF570E3B1EA7631118E0F3FCD26977D99755C786C272911BE793505
937B4CF1E57A190FECA1C07F42C53E8733A85F5D17532C3680769277F5D48783
26B6ACB123477906B1BB4666A43C78C6AB5931B0AB096BED4EC0A60837CA6E51
7BAEE13C43176BAFB7DF0A157151F7625E63296E325E2C36D2B298E71A13607B
8DF12AABB2F4CCCFD8A87EC7D1C2007DD39E728C046BA482AA6199B185491196
BBDE507C51ECC8FD3D1247F6B05A5E7A47526378D488DE3096014750D11929E4
4C07D03436CB49F934EAD47B45692A4913B5FE0FBD0AB57A17600467AD35EA14
4FDD14ABADED3896F2C6874D6C2EAB7899B34350B2727E8682A7A697BE4DCCE5
6A822330D60CFF2873563D5F802355D5A6093CF3E6698EE25EF3356687DEF89B
F220A85907B8A7B5D6B23DA098980DA5E294616DF435DF8515DA06F529E3B69B
892D33E0E37B799A57B8009493929890EBB3F0C168479B6B7FEE90FB0BEF17F7
C10D58787200C749BA0DFA1F5945D6103A26FC69AA03ED308F28A23FE7A7DF7F
4EE6D268665F03468042550ED9739076EB30477D455C7DF2258FB0A9D8CEB247
7AB747178185C8D31BE95705278F9C877401916B4F4F4626A30647A49AABC499
A97CFF90F3A9BF8F1DEF1B58D658AEF260EC161B2D9589EE8C8334F0AEECF8F0
327884D3C7467A1598A876ED18B65ED8CF23F59A24691DDC6572F468AFA03E6D
F9B478441A86281E0C417CE93EC6C6403DF8A82E6EEA7D38726F2A1891340BF1
DA9F49EDA513D2FE128E86B3442888C9A7C62369E67BAEBC7F43467AEAB09329
04D307A292EF2BE0378196A107DAD0FB7702D8563D45928169754EFD6DAA3219
E5AF8DFD8B263DB066CF0312DF902AE802661C9154284A41B7D92BB818F87509
C421B42C9F91F41881A36A6DE3DCB6855B65AAA496EAE7245E1F1A6B012114F6
CC526A2939FAFB6C30A39AAE2040493803D47C96A2745580EDC957AC4291730A
81F81D0668C4624FD1A83AF7FCB128EEA482A28A5F2C651552B8E622B6373ACB
A6F0387CA03AAF347F7EF05FF02DF36EEBFE36A6E658BD6D9B72486CD5D51EDE
B31494A51282B53CEFEE5A5C18087F2C3B28BEAF58B3EDA565AE5E2B920DC304
A252193F1D935ED5268A6AC194D213A21E1A80092C9ABE53C544DE02DABFDC20
9098477C23747100158978ABC35805453F84CC5EEC991A5CDC8C304BEA4E129E
00BA3BD9CC0870FB6060AAF40EB540CD52B2F325EEDB5A9E09F469071BB0F203
F5D8ACB7A816056148F238FC6DEE80DF3654981CAADA75574B2BDED25383C0D6
03C74D3C8F83DB12FFA2FEC28A987FA54B40D369168093FF5CC9FE8D9AD16D04
DE108727FD7C001FC63284273053365758F50534E61D650001BE80A48A2B186C
059CF0788A7243C3044621CB3E65487B72A54E204D18C7B1C8A525B1CED15790
CF637B59BAD929E3E3E5272D09D42892ED6171B0E25FC7EA594E01E0E7CEE1D3
F46529854460A9934BCAC76B5E9D25F7C24968B44D1B4898E171ECADDAAED1A5
5A4848B35A67DD0F3AC45F63D36E2DD21A2C55D7B6A3523D21EFC5AD8E1B3DDE
7D3A3843FF1F59AFA01D067B1B42FC299C191427028465C03C4542134565813A
441931DA182401251F09576C023ED49E65228D3A164A0A1FAEC2997DB02A3B7C
A3B5D2C0A0C882584056D02CC030BE48814FFA0AA41F08AE0D5B36581F67AA1F
04A4C533EE8B901CFD0AF403EEBA2C528EE9D924474ACC5591E9EAAE5263EAD2
2035D15C1C27DAD9137238955795B8B5F0761CF5F602D773170B7EF67AC585D3
496A07180796B05E1C89F8BF758BD445EA221793B13197426A1A86E9150D3A1E
C4F892A2F092A3E459ADF4D9FCD676BB03B407AAF88101D7E9CC89CBAD30CD22
630DFF2CB459AB7EA91A802B34425BE1529AAAA008924CC6448D322774EC3C02
1801FC7A6AEF112861D3AE8C62D662FFAA0A6AE5778B2A1B72D012C9B0525B95
8DBCA7ABAD8BDF3E922245BAA2CF9289D68DEF6706FF9EF3D880BF399AE37F3F
10203F5066E2D80EF7C7866BAA8236C5BF1502696A2FC6C88A96AA853B4D07B9
843C09320EA8B0FBCED45414AD2285ABCE7D352FBDE6EB1E0CC3E472710DEF40
8694402960947DA3B6BF54DA82FFE9616C8C09E1B766F6B41E595F24356F8D6E
6EC6D1476CB07F262EDB90315692D6BE294BCEEA64B7B3BFDC1BC9F9BFC7D090
2E5F8BA2960305836E8B4BFB953AED79A1D0842455316E16C3790BA72034D7BE
9025BE2E1D13229265225EAE85E5CE593D4FFCD7265AEFE9BE36A4736FD9DE6A
B1CF0D1A2BEE1E1B87180B5989F1706873C9745324D3A9E409045548E26597DB
0D49B84BE1362D29F5236F5DE09FA698B4855DCBF33DD70D9AAE0959BE049D27
6DFD5A0255AEEBDDD9EF6F7B47172D7B52B098280239AE1C8C7740B1EEDC4406
ECCCCCB8F8A422F2E0E9E650C2A139B68C1936059511BE83E22175FD33DE7F72
80CD75755477CF92FEA77C09E60D39A89CBC3CBBBDB7BE088DE21D8EFD175AC6
DA8E033FF3DF0FDC7F4F675EE7545DE582C59264192CC13EA5A623CAAD1FA803
28613C1FF4337558AA398E37BF984F934C66986C2EE9A510A26445E92E1F61DD
CAF0E017BF689AFC47D623761A3ED8315D2ECF3E3E820C3CBF690D5A6D429976
5578EB49D43E97B871697F1DB6E55F2EBB231F88BFE9882F3847A9C25CEA0E14
4DCB9D160F1C260850F730290FE5BB84BCEE7BDA5DFC521AC793BD28FCA5B864
2474DCDFC2D704845030E50BEE73E6D0A48998527FAEA033B10548BDA983F9AC
F5A0B609037E464AB80316A44B5D596C6FD3C9EA23238F71836827211B879B06
52D79EDC835375ED3922C1A46B2ECFF8E401E4DE643F42A229ED49D981E5BAED
69E6FD488F2C81DDBB1ED0D13FD4BAF26C1556CA2427A5A872D17AFBBC17A93D
71F3A3D321500914B573868980ED73AE2039F97ACEFB9E01447A91BFAE343170
B89EE2BF37E5C449F405CE62F70C1C35A77C9A7468FBFD1B3A9AEB8BA48A087B
EA2DFF55CF5E3DE25AC0B17B49295A63A82ACEE79613DD66EA9EA94D956AF7AD
AF6F326950BCA6644C8B88EAAED6A1C6305348CD49837AB3BEB5FEE9A685CFA8
2CF91854D0CF8296ACB49EA77AFFD3DE828F7AED76D89B3C3DF7FD48646D6A81
2D934D815951E6C07887EB84556F43AEDEA439FBF139A16A55342D39E35DC859
A4FA50B834CFB828D7A0F80BCE62841431894AE002852A4462771ECB673D0994
9F54FEF7FD67F09A5FEE71762EE20D81B7386A394B9E0E22F31790506CB7E377
2EE21929A553000FFC3B3F8666517DF9D31A1DA111A7574DB1DB82B8242EDE7D
009471002316940BFA2E13E57C77C60697ED7FE698988CA7362221E3430AF0C2
0C4178A03A3D1129C1204E95D0F19C0E9A42DF896D987CCBD08EA5AC1920F4E3
95EB7A69DCE16AF779DB5A43817208ECFD4FEB93F67D4250619BFDDA4FE45BA4
5D2ACFB4A973030A9F3040C921F3B82D67AE5E767C5449E55D86C0382E7D2547
C9B47869DA6F735671291F976F3E32F9759ACC9DD14B661CC9D209B631F3FA28
B1C6B508BC555A7270F0032E465BABEDC57CCC60DA6B88BE7832F541FAB4B93F
604A39107E9AB6EFC28D52BAE71F9B2C84B57E5D2947B2D313480A405C62E9A6
320DF9C0BAD77D0BD2BF59C4723FBA2FC1A1AFA932B1485A15873D5DB7B41483
B8FFC69B77AFA35274588303F9E8178B4F60D5BEC708838D311CD7A6C78FC4A5
3F0DC10ED188D5D149F6FCAF365D4B5550BBD8EA3D1619BCE500F78A25F047F0
E31D8D407BF78624E191DBC2C225A3D3AF1E9AC96467841E1A749084C0602F13
B2F4140A0A7DE0827FA4C7BABAC4A17EB9CE2C7E3E02F715161E7C7DBCCC1400
71D3CB7FF4EFAC1D126E5AA128B5956F0EAAB791D2454DC254FBBBDC95998DEF
2EA825E3BB2AEEACC0F30BEE3A83D4DE05CB5C6CE7C221A2038461896FF0EBC2
2B776AF4E90EE833DFE14BBA53523C51904867D723EBAFB65A8EFFC4E2DFB76C
AEF16CD3EC1B045ABD80A941EE8FDA36A224FEF55B06A6036ADD54CDC87F9D25
876644D91C57E7A108FE694A8C7A1FA5C03B6E07436B6560B585404904438467
C435361B9EE2378B0B2365178CE4F951A26FD69D9EE7E7E6B3126A318F15B21E
CD20D872D27AC635EE760C253E9AD40B287CFCF642B945A85944A3496F6B59CC
5631C2A4D2D9DF6A1C45DD0AE3299C87A595D515F7D4A0689DF68098DC2A5596
CBD0C8B621DCDE8DC4B1CEE17957997FFB4B64B2B3B6619FDC7541557895E4FC
E53CD6F6133FF1AAC877B5D434222191CA0DDB4C5A22F0557CD847704791EB10
68D0C523DBB843CAF3638E4141805DCDB4DF615E2CB64980C415B399C2439C81
3A52C32FBAC82F0954D1DD57FEEEC115BD914914127C21227B34D001A98B9618
62B5BA481DA1E4DB4B8B29B62C4C8552D197D6C1D6693EA252427E636BB34CEF
62411D946740BE4BF01A7ACD72330ABC9E413D1DC2AC897AEF3762684C3BB8CF
107864C3D34C29F89C28469F25F8ED80EB84C857186645C467EC0164AB6086D2
C2D95C1C6325989E751E23C654F39EB341E94846AC98A5D88B2925F67F4A6812
0DDA56FC6E466A3CA47F0F2383A606DB68057830951C7BBC506AAAB6B13F7D2A
91DF1E449C5ED78BC1B687408F072FA391643405435A09C1257CFBA1E63CB1AF
A9A96D3518E5AD9ED32CDFF084D1C0E481D5FAB9502AC23422D42CA4924F5E28
5F62582DFB8EB1424849B6401B0A31F3DBDA75E9AC62446C061296402F1E39CE
2F06ADCF9E627826E83BEA4E4804C07814F63D431CB54DFEC01D96FBD7D07635
7FD85F26EEF6C10AAF906C63C5CA1B48AD00693D9EFD2E7C9C7E7DE32C607E26
BF04A36D7C12C8933140C27B847974C45A29C81422D998407CA843004121B41F
CCDC40A595ED01DD23FD8028A1166820E88818004EF131F442AE4D9899E053AF
FC9E9C776DE2A35FB230E200F53F9F47745C75D5E16333CEFD8A7107B96707A6
1E383F547C441F2A1F79CAD96F0936436795102F1FBDFC340AEB41FA28DA0954
A3A577DCB8B9929477AD466FA10496515D1B2C6C2C891E8AF681EEAAB72E5F3A
5976316C481FA61C447830C45B727194144093EA5553BCB27643E0A3FBA8A963
5A6BF3B46FD6A73D31AF122A7D4310010C92022EC485FDD0D66C0F9656E47E98
A214318EAB91191B962D64D333AA7F80FED4EFD79B47D31ACAB7921E974E0F02
509184B8AAB5C4ED535A8E130B46D343C66AC898D5B2FB643B0EB78717B81129
723250C28FBBEF78912DA351BA2D188CC57508D88C5CB019E68CCE94320A1DA7
8547788DEE235B4A7D8DAFE62DB82B33618DBB747C01C2E0B546E6394AFCCD24
2E3570319975E14D0C1646C27ACEFCB668DAB161FE43AD616D7AD9BB25EA61B8
AF242E4F8158C22CB79291780BE365DCAE0F0CFD1C1902CA2E7BEE11A9604C5F
20483BF096B274A94FCDDDD147440DC9B30E5C7A1E8F1ED2C309D5E087D02F91
522830B964C785ED8F3FDD94471BB51E4B64D22F086BAC9D8B8023CC4FA7BBDD
D581BCA5EF62FCCA87D072B134B925882C0340701F8576BBD83CD3D3CE2B0C8C
8A852D85C13C4547987AA3401693DA1774D23442252B8351066FA95D004D4CEC
42FF3EEF595654BEF13F6A7EDAFCD45B9E0A9745747E0B596BF8AFD9374011AF
BE3B5417B07D10B751B4D088DA033F71D05FB29B08D5DE5830B2D48BF66CF1ED
D53C5D71867CD90434D2C6361B3B701689825428B9A87CE2909E3E3C76FB633E
604B1EAD476C67F315108F0636CB0433F57B4949B3B5E1DC217E8A1FBD9B828B
8E5DDE1175DFB0BAF1054C5CC65BE7017223DEB980B829E667D37F9C39B7CCCC
686A7B59F013C89DAA23399562865AAA8287A17ACD02AB5DC75524C7EB2FB7E8
A6C648AD3BD40F08AD7E02EE031AFF10D76C63918195A0DF151A3E46F769CF46
4EBD3D2327A58BDF405005A944564E8874CA61C688D4AC6D4528315E36A4F877
F81D2C134C915727F3CFB454FD63BAF5C2219B711D84BCDAA9A1D9E03716BAFD
B69D73D013C0E1B8E8D0DB5687FE4F90B92C6B28808CEB9BD6EBA1FF78BFDFAE
49D3FE7B47F0B4C5BE36297E9DA5DB6ADA3CF140CA7E8892BBF6CCD42AE86AA2
22ACF21781FD2F0E5BA8A7C55D376D2C48FFEA0DFF87E92ED0E05F0A048F282E
9B25BD0A1D9EB5D0B1BC77C893768CA2199D3DD2384CD6557242B007FB4D6225
5763A11E23985D97BD969B0F07829155A82BCD7AFA4F58D4C3A568A727BB903E
5895DAB806191D9C10D53BC1299DF9F180BD54CB08E6E187971E7CE352431117
BFFC40EA594859CDCB490DFBB9D69BEA2F1149C89024DA3E3E029EC4BABA1111
86A0F38F642261843011FB3389DD944BC89D49C73A5021D490B3C706DC93C67F
A75D32FE86392406A81FCBA3C6139D58E9D69D1070F3E8DEE2AFBA3BDB6D1761
02853AF7D725E54A94A64DB2F9F8B3C1F4619DF24AE270B21F8359ADBC4EE51C
8CC67E31032FE0BCC6BD7AC258B8EAF72CABA3E1250718D10801CD45DF4C991F
C07B3C33D7C38593A8C8104DCBD8A0DFDA8F767240D2852E8CD8E088A3E1CF26
1967A11FA5B073A62AEFA198FF5739C688515774372A39F5BE217A815AE85C56
C97C347BE7F4E8B7E6EC288621C12EFFE5CE74ABA28C8C578549FF73FC7E9B83
9A4B1ACFEA93279C7247486D79A3B628783F8C14AE29342016D1C381E1215F08
49BBEB95D3FF126C527F9E8398B3FD21D1FE47D715C304B749B5A65638BE9A76
FFAB6CB3F7CEC1B38E56DAE68B3AC4370286D5F12B8B20BB176C287E049BC051
9F131F76399A5352F9CE5AC46876DC208DE48930FE5DEE8B672AEDDA136DF66C
6CF3EC9B7895B022D08517B0DB19E1EEE2999B2CDAC43B596193BA5C06EFAEA6
313E62E70EC9BEF8C4560FE621EEE4AB04EE89A019EB6E90DD5E9973BAC93A9F
5C3635D903C5B59737BBD6C22E537A1985F09FDEEC4396739CC47DAFDE1CBE7E
9D3597A3F5B4CA2CADD6114790FF8CF794DD0C8DEE0F0311BDB0D66E1D11B7C1
BB9A4C4400BD215E786A84C2D9D39894BB9FF0CA1CE56BD7DD7EF0CAB5263012
13E2E2F025B1B357E0B291A44BB29404D229C1ABDC2983D869A7146A097AAC9B
D5C067136E5D846F2E9EC0646B0DD0094704C02E2FB6C2147225CE41A71208B5
CDE5E910DEFDE2D16BFCDC6A8972B4FE5A42C716677E87A19109D6E62D45B5F4
8FF9CD1ADDF36646D0BD76281B8E58CE0A802E1766BE0B4D2862B136A8B40110
7F1201975B621E00C354605BF7C8D68DDB0A266ED36CA2008F3180825F99F6CE
67372ADFC8495B1941E759A7CA7E18FFACF320513D3154E07738A2E39D6AC942
9F1A3597CBF774FB98BB757ACE99FBA6A695301F5613B47C29CCE0812A9D877F
399CCEF8F3649C5C29291BE31C3427B416F89A16ADF045E0AF3C46E20A43273F
E8CE2AD4D56582CE320FADEE0AC1EDF4DC2F53ADE98A89615C0EA1371417B0E5
1060813E2A03CF83BB65562BC4B41F304C98FC91BE616BAD3706CFFDCC2D8F68
0069C15DAD44F8F7F79EFC8004A82327D7A0B0BEDED3AC554C1B87567CCC8520
6DFAEA3D407FCDE76E2A1D357B23A2DC111130AF46D4C198103AAE508B99B7CF
3B97EE414683897A495F88565BA2881ADFE23B36D9B12A032418B9321A056670
EEA02CD04ECE15FAA0DF5303BDF4C89757BD860D5479A701BBE6A9465E7C1D5C
BB3A4F47906A09156C93994992C526DACB09BF106AC063E2B8EEA19EC3ADE524
5DD627628FF2FB50BD990108D3846FE48A7B088541F51D307AA464B9E38822EB
E619598C6FB61C68169211790027B87A0F05703D34221E624A52ADE7D5B8692C
FD88E4601DF65D841186BFEF602D133F71BC14C97B575517B4B00BE05BC078C0
C8A6FCAE35A544507D1A684F383DEC7B38BE725F139E62E7910590CDA2A05529
C06412F1D6DCE02BC71F4B53C2BE5089E1852C2E9D5FA39E01B7C78B42E60DF7
4261F39F5C0173FCBFC0BA001385611FD22BE63354F32CE33EA574444A73D6EF
A3B584CAC2D68E11567ED38212B3328B5E526060A4443CF494BC172346F9A40D
E19A53CC5DD34E13BBF5D6C63449B06D5A95B27E07262C45E91C956E7041F488
C83EFD8C529015EDBCEAE09630268B9C72F0A1A8097B9CD62EF3C72F91FE513E
D34988E6B1A01C9D578535801699AE6245EEC1EF8CA78133ACFE9E8AD2AD69ED
D9C2BD9271F9827F0727B9F177290FFA6891DDA48F92D7A8056A52392BBE91D8
179C04AD4D93D2DD2B442740C4082E80901AE92293F255449F9CF357A13E596D
205FB7A4F7E840DD53DD32B07456FD4CB9D0E370FC13F87C4AC4EA7673552C9B
88B018CBA2B9076094B5B72571C1CC7D743A286BCF81AD611423F3A0E8C96D55
564CC5C93A6A961BAC2081B2DE6F71FFB5EE4E7EF2E296BDCF046B74CFF5281A
7F5D46783F88ED5E171E80361AC718CF7A8F2D41DAD28230E36F106D0581EAAA
EB4173E3CA3AFD9D65C06F84A291CBEAB880B16D7DE7352BF4ED7CF1FCE1920A
890F6AB64F6326C1262B4249BA9ACCED6B5C6B2FB989FFAAF363FBCD811050AD
49BEC1A5CCE7A2CE858C068ED009D8BE872C4E07B72F3DA93330C418776207ED
C1E5676F5FEC5AD00C0BE1E667023AC2EB96D1229DF24C29C86D4FFDE7437B78
DC51CB4B8F1F033AE186615FCB1CA29089EDFDD2985F86FDE63A687CED595D15
1920DC1269D70A0D895FACAA88BAFEEB7E3C8132122B802045C00FA6B866F496
9396C6BC9A75D2297C2159D2DFCA957BF343DC181AFB6440A9380B988CFBF05C
0DD48940DE2E3C8BFA5E893C327EAFBB2AE5D509660A4C9AAE3634F1BC14A0D9
565F06A8AD1239CEAF80A89C06707D66878FB25BAE7954BD4415294DD80AF758
F24A06602DEABCD681246D5BD70EDAF8F92AFC1924FF85BF0BD5547FBF0ACD89
0470A8F9DCF734EB854BE550341FD8148EBCF4482E9D977384311A11169AB412
475580FD13F889686967136E640758299A44237228F74126A18BBC64D02AC07D
343089338813E7AFA8DA247B761AD78677D0B75C42AEEE9A8F0620571F6C0B7C
B9B1E8265598648884BAD3933887466179094E1CD0629884C7B1F13EEC14C6DB
566FD3359BA43920252E422F9F054D68CB91DE641E71B90F845F7845A9A2364B
D94EDDDB45CE58783B46EE122EBBC1F3A1419789198116202901B611D9294AA5
AFBEF007D49A8A1C950D8D205796BEDAF0BD109D74278D05879F0CBBBB7941BB
85F9CBAA2D7E5D7AAF4BBB544B56EF4232A681C038E0CE5DDF43E82A82084198
B21E976F7FDA18A72D101385E586EA9A55523EC8C785172FFD5424A1242CD95C
BCF79CEBAF559F1E3990C6C56347386B1C0DE8CD7B51874703FB3F0DD7701947
D7D89B641200BB20571D7B571C7AAB6F2F74CF49A72E468931523F00200F656C
21442D13C7DAD018BA844429BD3B59745F4496EFF4E6B898ED0013F415772F87
97871DBEE7083D0EE44C61580F6BB672A9FBA24398DA0EF30A393D702AF96EF5
88289691959D5E5F4ED9D45ECAB28E06D6488E21C0815DDDFF3F5F2F0E813849
9B65CAE746E9EDE81B2FAA97197BACE5DA8D3742EB700043207D05602613AB48
29EF58D62DF6C4CD5658D8DEE558D56E1513ECFFE4B993617095E813169F6888
1E5062A25F890A9F08AEF0D8F9F4404D63C42F3D635DC9195EA582B588197FC2
661E7181897AAD031B618CB8BED3F5BE7F28A74ED59597CE1A2C03653896E079
40025DD68C11C8EF4BCA8CECEE1C77C14FDF9407926A6B3467A4AD5F0D63CABC
EC379CEF4E1179660F9ADFDC046B9F7C8C30323C7C016A867D0207BD48FE8067
168C4412FC80CDBA62F8B309A43D06AECE1F7B9FD3B3507445C572652E6188BE
A68B943FEDDEBE28D6279C57A3D81F2651263B4E8955B7B89B97D0573EEE70AE
911542BC73430C807677166EAE1D95B565CA6BA3AD2E14BA86B1F60CBD8B6BFD
6F91C1F91EF913AAECD09865679DE5E7CDFD746E2CB4104CEBF570C8EDF0185B
12D487814DFF47A847DFC88954D6E7686380BB5B7F802E421439B10EC8D2528B
A9801097BF3DAF8576E0FFE5B25EF343A4DDB910D61164D363E807B4B4CD5090
3AE0459070B2F5007CEC5F16F1CEEDFE0241704A66122055DBC4CA53D0F82AC3
089F2C51AFB51ABAE624EF50E7F23B3A4413A99C73B631A3146628D371C2210D
96D345D9ACBD552ABBAC94775E99689F9C6048B5C0A43070D397A81E38691366
D469A2B4A1C0BE2800F90C6187ED79DC4F1267F5070BB95F0EF502225FE7AA0E
E78B943B79CBA4AE311FF4612252D9EEC7DCCAC10D62BF85EAEAE51E4D7B7D66
B4481823B60F897D0A52BEF379A1F1FE5E41BDF8E59075D83082AB0165E1AD50
1AF122DA22C4CD306406B316B1705EB7C713DAF219EEFFF998B96AB3E3E182E2
9B819FD861E52B04E008C918DD96A7DAAA193CE2C271F8A7E2F7706FAD284308
BB94CF264A15A736793F0C6BEE7205C142EB44207A80A235EB98E859084C3AA7
A4238718DF367365E7BEBB26AE4CC063DDBEFD2F756AEEB809D7F298832B62DA
6AB4EB29DF3994A929D3FC55C12E99857D1CE11333FF9EC1DAE43EEA604CC500
26FD0FA59A0D93F91021E7A2A4339CE7B2A6260363C23854E958D05EC0626BD6
F367FD211F730A3865852D1A5B12F15CA11F3FF558FB0F071597ED353D861F38
8983E560AE31E321A14D78E952EEED8A2021B70EB9D471D1594AC915B4676F69
BDBD0776126ECE178036EE13425D8A10F2F289DBEA3B9DAD21E9C431EED035FA
6D456DAFB6C4040E640837330E3AAD079A9D62683A21EB0525A5EF81FAFD6999
AFDE5158AEBF878BFD7DC6F874F914003DFAC638272F8363B436C5B0F17FCD9E
0609AFD5408B750A7C0B3985DEC501C140978B00D40781366F0108EEF4CCFE4B
D2C8476C7DDE73CA99393E016DBE6D96D4977E52101776E5D397F11C9D295F5F
5AC69F3E71E5A536E50DC14F1F22085EA743F9C98587768C2816E4F17A5D8B4D
63AD365F820FE2A7FC7D4B5DAD9D90CFE0F8943ED1F0924FD66E0C5C61A99AD5
D3EB1D833359B4088C238CF22ECCBDBDB5A63297B06E72C8929D5202D6A34E1A
8737666D1659DDE8EE66FC30D70E339334EAF80831FB5CA338E60FB97E9B4C0A
2D50833E3CE505A453E6873DEAE140AFCDA4DEB5D18C998FD49490D271F08AD4
82E2BAC6FCCAA3DAC323CBE5BDBFF768C9661A027E078FA6B3EE66CD4E8CBD1B
1EF055DB4444823569F91B0E93743522D8EA094FA40376F7A3E2B9C25D7FB6C3
BE5A4F84C1F00DB06EB4EEAD88B774FFE73327383149B1372727D02A69287D3C
E5A78D6D8B6B5D592C219F52BF7F78928EF8D8528C0FF70B7213AE39B059C499
95CF0F73F172FD43D3681D9FD836B70930D0A2956FE6BDAD5E74A523CC1A055B
085C51E64CF72B4AD92A58658A653522C805402F4CF013408AD290A34B2C9CC0
F6E3881AEB9427D4104DE852A0D32733B6EA08A261F936EDE7E4745E67F5EEBB
AF20C4A64E42451F694443F304AA6A405D98D9DFD7A909C97A1BB17856AEADA8
EDA270C25A27BA38785CCF457BC0AD020D388D19E59EC812E389866E43ABAF25
7F0F1C0DEE6AA1A98C2693E5FFF8A418D20D93D4BD2501A30A61A4A906FE2794
525DE958B2C005BC3C75F49FEFE3278F08FDD23BF1D753C5480A7ADA9F3D899B
52E1872F216D49235790239F4D85A4C6BFE47C868308F3906BEEE44131B11B2B
14E145918C60627E06B99C73D440591249C8468ADAF74761C40956F60C29AB8B
417E2D6092F8BB70A2DD5DEDD4BF1B0FF8D1F59EBCE526B06B610DB1B028D29F
838A52A82DC168CFFB45E6E44703FC7AD68DBAA09BF4E38DCE8FA3B8C6425973
73C612E87B273DB68A4A83F1390445F181C210C203F8EE4E08FF5F8E5F427B7B
2627F63A2177C01135D99C0F144261391B4EDE0BCE9B255D18B359DF57F26A45
6E34EF002FA928E88DD50AFD9740758FD5FD25A2A344AB66411C98531B2CCBE9
FE78BC1AE4D42547866A138EC1501C46CB5B5152192E8D337A77D60A3BC6B31D
7EDC7909357DFB4C6FB6446FD6AE83EA4BACEEF02967ED173A46B3719D7280A9
0EA7038A2F6390BC183AD4A93A0B33EC688D5480FC928CAD26E5F020125E2F93
C83B8C1156E9E9885514E2A5093882805A678B1DE0EF6F3C9253EA898F62B619
4A7208D88EA329FAB54F5316E9FB7660EBCEACE5CBEB2D332CFDA72643FD7A9F
5D3CB30196B6E8C6DC5C92D22B24746CF5BD8FB685ADDF8ED61976E9422861FB
988C3588A50FAEE5703B147E5160430A4A70A43D0F9A4B71B95EA681BA63F4C6
F8AA9CAF99E451F8B606A0F4C3E3ADBA69560883B5A3B5834BC1A3099AF1EAB3
652298E6F6E87978C4908A37243FDD5D3D709E67CA767DC3D20929B797E1AF1E
95D492E499D890ADC76CA998B1F660EE79624901CC6C626FF4B045826E5621BD
2DCDCF75CE8FA3758BC1470287B86B5D222C2BF184F21E9A2564087DC36A4B18
890CFC9820CCC2FBBABC9D6D6DA61B84D00CBC9FAE5924F8209ED49D597996DF
0DCE81AD466D6DDE336D4B5F9F8395469839226BB19AC881C3D8E85B76FBB100
40F0DADEE5ACBDBB43307975F1B61098EA4DBDDA6D7C1033099BB4F81CECD8CF
532D17395D5C288EDDDE2609D60C074E62FCDF8BE2A05F102930043D6D984D21
E08349B8BE1F2C07632B519049D8AB55B916A3E13042CA78F2DDD02D8632B426
02CB3F762254B2B54A972B3583047D43D202EC047CC23B85CBE5F9EB42A6F342
8012077754BA3854A60A3676CE5D4DD494035C5AF7538DE81B5B4A7A4AC5F69B
87DF1F859F379DB78795CC31B01C879BB44632D8F9D8196B6AD193EA03949600
14969BD78FD57BCFE092F16FC59B70F3A2B3D403C90458CE63FE51E3FC086595
7D33A75FD9A282819EE18DD301AAA69044E56DCC291482EA4A2A2641F42A9581
F400113A3491F5E07CBA5CA3E34B94447EAC4F97490A7A695330AACB6D18A25A
78469D984799D13711B60B91D66D9A2D450A755AE49EF4A6A8E5940E3F45C4CA
BB8AC641DB1FDCB1155C3646DB8A861E46E024CB33FABEDCE5884443D5A08151
2395BBE9E6A0EECBC136559FF6EEC8949C19C52F175EAF3B7101AF39500AD4EC
FA4072E0401632AD04A6AFCE6DE6DDB95B399BA089183F63CE05BF9CE79BE1E7
075E3B289031F88B223896E9F72DFA530EDC774B5CF4BB6A1F73F9FA72DABD6F
0BE6DC0F4D0739019E61F6A96721D6E8D87B447AE6C7E5FE2A0F0D2491AB13FC
B507AB79FD0421C5C06B9D593027CAA3B44F43BD37E570D6EB12BBBAE986D793
03CA403DD10CC715CBD1BA0B0C2EF1860C2894497D79F8509C58DC51F5914825
ABDB71FAADB45F85B90C026CCE185EA9A33D0788677363D7A24CAE71C53E99A6
C68B84EB90563767D8EAC5711476373596FD03E57B1CA8E39FA995C1BA9675B6
2842A62135305EE39948429FB62ADDDCA6F84009470A7BF6EB039F4D5DC1D847
7988E9866A5B274B4010BAC5D3BBE5694204AE852E6BAA8F264F70046B42CA36
94DABD661B312D89212889A053C62AA1B3533B1B0B2B178F33BA78DF24F73468
72E84795059D0A12F0E53E2FB184846B76AB69AC3CF11F513BEF0C35FD178086
DC26964E6A5BFBC57DD17DE791890AB3D2AEDDA5AE93E7D9EA3096206A3AAF48
7403B7612F26C8A3AD9D1825E887D59ABA75B742EF3F56B0D0815CF27EEDF796
3908F764F326535CFBC2DDCF5DA974B2068488AE47A9F07EDB86BB75DFB6302F
00E8C57A6D4881E11AB9F1CC61D59D18A5ED3DC91E5E50CE59BF04C72EB674E5
C394D0DFA416FCA2D9350B12E3843B5F41C5F13E36F9D84B8B5C735AD3255479
B96DDEE53455F41AB052F11C588936C18427D2B6C648E57A4CADB9551D5B6876
F38487881D739ED33453CC07AEC23F393D0F3A6193A08272AD735FAC04FA8F9E
167389023CEBD2F0E3EB90F50FD11EAB33A9FEEA6D5E78373124E8BF78ABA7C5
0551A09B5971E038036776BD5C9CC6EC08DB9DEC5670442C353BFF3858929ADB
80BC40AA303BE66D798C443008E2AF1BEAEAA1AFB4E6D7DE9EB00ED82509E372
9E878F186171CDB17A26CB4FEE94D1CEDF1E2D29BB43864AB5B770A14C98A430
36FDE0CA3B9A1D56DABD05371F9479BFA4CAEC5CBAA9ABA85FF382082B46F42D
4E1672B2076DD7714172F788D2DDB7717CED7547ED1DA6E352AF39938C792F79
6BCEE60117510E471E0364EC98841F13E4B525245B82998D7AE8E03FD28732CB
57F2E95555F4EBC6F97D187D7F7BE345D5913F4342D0B05283E6E7B12E72F14A
A63B1276D2F90E34AF76A51E49D3987DE5A6D98BACA13BCDBD10C686B012534B
078982F2C051BFBC92187B119420B8F9D301A201142248276B7E4F8924750C83
61FDB1FA328EE691E827694FD82DFF58B3F2848D455ADAFA8F7470FB30A89336
BC2301C2B38FD9308BDC1A1B3482A99DC908977E1803732D18A9B4687989E55B
AAA158678817EEA2776F9766FCFA00A6EC2C658547487FC2B6844308370C416C
8EF5C892966ADC9AC306D01B6E24DBB2CFFBEF23E26DBFBDB5B9834EC15C047F
DCB4E0CC99AC20DC2E5257B388A5CC380114DB40B124C844BFFA3CA29E638C14
6738FA6E9251592A143E8D5A15C34253F4C792D6E68A76D073482CB1AD014C6E
6ACFB23F553379BC049C8004E21B98FD604CF5C95044FDE2392FAEE38BE1EB6D
086F2AB69CC3FB8EC558B9F2EB0504A2F8002B1B13E2A496759FF42498D6F0C0
E7EE52EC5A8A0AB9A574039A5B0B9E2065FB9340BE417CD2272ACF936CBC4892
BC05F7CBBF38C5C0BF3BEA2D1B94DAEE18FD20F24BBFB3A2C968EF269DA1E07F
49E44C149600B40429D6A683196C149DAEC4602CDEC5D185DA8A80553F052F97
988D4B276110BCA39FC105967BF0167A6CA229FADA3E22B5FC343BDBBCEDA329
8C2688F61C3849543D3C75088DD2EA623324F8A44CC397AAF86D736602AF9D37
4A8D11CB5F883B5FD6AE51F2F58F45A42010D14402EBEDFF0B144B1C9BD22D73
7956BCEBE9D850E8A6A969DE6310CE224B6C00F8F4F61938CB008A665FFFB236
54B08776938DFC3DCEEFBBAC6F7A9A0C4306CCAABC0774F8A63EEC0E36D1EDBE
356E1CA4AD1DB6D60587C3FF1A6C11283200B83A849EB440CC72217898F1FD13
F6E99935F9CF04F9DF5E6BAC30FB746A4B5EF1DD29199237B98DA402B1210A09
757E2EAA6F64B79F4BF63B9066FC8C4F9489862B400E0E99120970C824752B74
DABF9797722C3457AAFDAD14B12C4932F9A307656223A0A4D923EE322DA02235
B3E2611568F33694F29D4565CBE8D1F078AB85DECE08538B0A827D37C5F28D3B
F31C8D409F78A3BC521BF36014E7480A0BF30403B0D5A12EB60363E02B5DB4C7
2B0970A7146D2907F0A3DC00413FBCB24382F41601EE11E959AA023C4B88777F
963E2AD4501ACDFCE7D44C50E37EA53CAEC04BA1EBC8170F3D8EA9E707B012A0
5E141552F512490B431AF3387409061CBA627161F4678947F69B1C7A53E2783D
F6048CDFFE540404B069C3090C6371AF89BABB1812C1DE6E4B39EA1B4142BB7E
511BAA844037543D4F2FC9D6754C64ECC777E0DAF9AFCFE2D0846401116200FC
14F60F85935BDBDD072FF46F5501F72D30C84F70050BC6C478D178F2784B146F
E89B568E02827391F3D6AEB446DFDB4668287B5A6448EDBE3DFE358FDFBD2E8D
3B310F6ABEECF4995DC35D4634BBB437FFF8140083180968C55B9D9558CEEBD4
81435EDCF4C635BF416E8F6CD8A7495B816983023D5FED2EBFFFD4448D1D3B25
F885C022CE23AABF73EAFC089F48790B9A77DDAE957308D453C5CA162E6066F9
BEB7BB5277B5E9C2B0FAD7731F8267ED3AFA2C457425D9F5CA96E14C6764F239
C73B15AD5804B5E2F2691D5C4A9E9B01F7791116873208F4844D6D5BC5525D42
CB6F0B831BEEBFC973773983F7B1BDB3E7E59D61F6114EF8CD8DB7C66F385631
172CA0D99B052FE546EBD66CC19B13813684DC597FE5B9292AD9FFD3049799B0
B80D524058758DEA0F02D997C5A702B7E6453B167276AF02B276FC7CD41A1227
CEF71191B4E10B2C960A255630E14391A0DB7250747A37F566A821F0FBD6FCD5
60F71AF792338F843FA834038BD8FD798BDF37BA2FDF6BBD5877B63011372C7A
0C38F75835683515AF6C3758D4A8112C38B8015B1ABAB187D71D281DCC823E3F
DDFD11B81BD02950A787D6925FB87C05107F21FE51A43403E096FA40CBB9985C
43C06B19887EB52432705C8D574624E4C93BAFBEEB3876E775AF69608C3DFDF5
EC470447B71733F47E9F4A01460D7B717E5B236A1D2F28EB746C455B551B90E4
C1C49E48C17D7A9A46A0B07462D7CBC1CE8CCD1368EBE017B22E74B67D02E99F
BA476020C58A195A2C9B287C8EC3721FEBE01891C23DE35B305A88FE0396EBD4
6C873A04EEE243196626047B6C63252BC4963565E6CD7CDF73B837A99DAD5FE9
8DECDB043188968A9B76929EF19C41CAEF6BC22FCCE70DCA349A3EE317289716
A4A1BF794729638BEA65D82837A0A18F64BDC366E8E6ADF5E0A2439B10E4AB28
27AF80039A74BE55B9B20FD5764E40FB135040B06A1F682ECA451989F33C5660
5798057397CF37A614AA45343F495F7A00EECD393CC32275ACC6FE2E31C87558
7049CC0D176D9700F8F119353FCDE4457C970947067F3E2D7446429472A8A396
496EBC6F4CD2A18DF8FEA5707C5D23563DE1B39BF772E03B4EE939CFDC526FFD
8CF3BF727A7CE16C8342CA970B5A884BF71D31CB946519F23DAC95D04BD2FA90
BAD0E735C910C27387CA9A5B3A390C7084BA4E94246993CAF11E006D39A505D9
9CC421259EED08169BB62FC6E23A85E4222DFA1328A5AA79106C39A9F37367B0
B59CDE29040D2C8322610726AC88FCD51392D5F5EA23536914D2D3F4BA12DB58
378FF661D8E12C29E69331D7A9C4973E5560A8D8C16D86CB9766224D83461F05
8CA078DD88BF1367F02EE87A06ED33C0A27B299943E6BB075474AFAA47375944
0C054526E755B532072F9168C3D740FF728C7700462F77249774508D8549E9A6
8FC255DCDFC20968F5BDDFAFBD12B6CBF6D2490CB62E21AD61C1EF6DD64E28C7
FF355F2869C15FC46C6E3A19272FB11037A98B50885AE878DF1F74810C021277
0DCEBFAFAA1B98D450E7E0B9E69F5034BAD9E83EC17361A72416FC604A807C3A
CE44A458C5F5EF16964B626C1283D041023E5DE9B9EECADD56CD4CC027405258
104CF02DAA8B6FE4AEAC0FDC15AD5BBD2148CAC0F4C7A4217343013DF95623ED
6160DCE8652F0923B1F2BC4F3C1965BFEDB05601C21B626085A290BD73697E27
32AE63BD6330E9F8F368942C587E20B954CFE1E35C898331CCEAC7D83C47D364
AEF2449EA5006EE0729974CB5A815022C1110423C2A271108B20164F329D0ADB
031E76C4DE35D4086B18A528B6792A97C8D55275FF84CF2DDB410AE8F82B764B
6D17787BE8E7C363BFAE0AAECF1A14386D8BF75DC5B52949108F517DD82A3BFB
93B7DFE700423BE28197E54F81DAF3E56DDDBF983ECA9AE16A825AFAF7183E07
A5677D34F6E8F8D0B3B31D271DAB9FC9F25B6A0B973571BF164B8F7359C7D440
04E9A4B8CEA2A7EC1DF9A323B18B181C72BACF6788F373578081F3324152E464
B6680B949F92B5829CC506A3063006AEBFF930A57C86AAC7876C1BB1FB0AFB84
7E5A0DFC8E9928FB076940C1157F1E2406A3B7EE52CBE3C08439529322F4F90F
146507DAC0975D34410CE158403B4CFB644EE5CB0D532E5258360CB5B41A1AE0
925F6245EEF641A3D2B15E347DACBF2034A6D5386971F87EA9A7148AAA3DB2AE
62772CFD2FF2E3CFA8BB77F5BC1AEEC97D397250A683341F9E0325DD56067A81
CC679415B6351C123F5E7EA5D8682E0CA13DCC4D6455A2FB38DB66D8D4888DAB
8C3D47
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans10-Regular
%!PS-AdobeFont-1.0: LMSans10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans10-Regular known{/LMSans10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans10-Regular)readonly def
/FamilyName(LMSans10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMSans10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-420 -309 1431 1154}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFBD8A43517ED5F05168EBF9D3AFE
25EC2992AF87F286EB5CBCB7AB5454926B000DE86BC7DC7722EA9CC5AF351D71
F88C22A045179501515ECAEDA3F7CF9A23FF4ED29532BCC5A2D9C4566653DC0B
F99B58B303B412848BFDFCDC0BB4CB9FDF30F98236F5A2863FD3E28016CB2182
2E10F5EC6419BBDF2A9031E1EA217B147A06BABF1F87C9585634C5265AD31FFB
EB313C8110270894F41E54896FAE4A5E1A9B04BB8EE53CB5F143D8A3B77AC1B9
96AEFAEB5EA99D855A53026FDEE6A856D3616D7EA42379EC96B931867D9E55CE
3ECD8877C379F6C2FB63E92F146942350BF980AF3D7DE17DC4C2E4B304AFEFB6
F4A34CB06164596B7DF119147C59AA2A1A8D448EB219B2682388F94393CF4D74
532926ED5F2B9D281EF3324258F963D1A460D08DBF08127EE66D40C3C74B98AA
22B9AD6BB84113F84B085EFD4982BFBC507D1215DF109AC39E0B12230FD6DF02
C4B69CAB0B3375C9924071A89A799AFAAC3EE2010B8FC82E42BCBDF021C9DF72
D2D02FBD2CD3E161AF409AFC0828954F2BF56A15E1ABC0815ADB9C244B0AED7F
4B9A54CFA2A286FB4D9DE215B8B5879444B3E683FCAA95D0F1520A716BF2325E
E76716BB5C5DB5600A7CAD11F019AD5B3965B61494D228A3473256E4B8B22A6E
08F055AA199E8E9FB2B6F04B01BC31664D95FE7CAE16648E0344934054BCB06E
44A33F278B8A2215F77018BE752B8FBD6518461CCFAF61F07032398367B284D0
B0AAEF9509F632534C7084BEA8B52EFAF676C38D4A720D4078C0B3B525B7178D
9F85BD44B13272DA283BEA7AC239A3E1A0FEAFD3E9F7AEC9CE3296A054919E74
51FDCDA8344A2E134E285D682648203E81A5343EB6EB96FB42F1034835DD0440
3968C3E86CB7B20B53F9CF8FCB188D635FE58370AEB11453FE69A0DB8341039F
EA654B8FD7323E5536E130FA10100643C234CBDFB8E1CAF1E0C1D9073C3299A0
24F2E4D71EA82005EA002B65E904A046FE96653F266B625D332C961EB94026A1
3E2C52BF1DAEEC9F50E53B51DD597D57B61C96A427B9A6E85E6DCF6D389B34C8
24D359097AA8BA9219D082CE150C383C7A35A06B7C74B7991E1FCE71517AA0E4
AB9AB75715DD53E616CBD344CE7D714BEAE2710FA343A595982F0AB9BFDE1C2D
1749DC63457405359DC4DA4D31CD388EA7D4BFDA5D2D45C0B5F7B1FF17874AA7
CC620939F3BA8AA5ABC54265B68DE81582F0FA4728B81578FC2EB39C989C68DC
7DB84DEB6DA73092F21F04F718009DBA58BF4FFAE24907573C2C7A684F5B3391
8BCBDC61EB37D5A154996A65A1606C0E1387DD54F5C8BD071C4E9A73D2A62839
2368D68C28ED60CDCE0CD13F54F0F6F9B8AA15581085459FE250BBBC4D930258
426AE5F0EE8933D269E90877555B1E9AF694D44B85295968D0CB1FAD3420926C
4455FE7FCBE124CB47C28D01A91B690FA50680F1872B0C648C191F49B0445E4D
9172E116886714ACD5D2BB98B011650B2A5D8B881D6854DA373E852C74B1D27C
25684C3B97F38034E0EB09FFF000CD16DCD5ED06EC4F5E8A91F925D6B528BC0F
957029EF80058433952B698525612082298F0E6E36968C8EE2116E5F5C2F25A5
4FE587E55C037EDF4C9BC1D95C48519CD63CE8E38A742078EF5DF4BCEFC85437
AD3A71B378B00586F8A890443897F479F5C27BAC920128ED98716C9F052D6C66
D3FAEE0166ADE5F16BE5F1C91532AF97ED907BC5FAFBAAE31FCE73C77BFD275F
6CD467E0DF4748B39BBE76D32933BFB3185C3972FFB25E951D72E8991FD4F07A
583179EB3D1309D2476139B9C0B13F5F5D88044A8E852381042B9A9E06D1DBA5
5F7852F5F7B16EFE87751022CF6D25E63E154A5957C1DD70C8C4850AE8DAF010
FAC2791F4AEC22074469BF0D1D5EB1BE26422297188DB7566B42A4B0CB64B168
A75A8C17EE6E339E5C3279B78C4BF98B23BA5E8D514F2930E596BD6CB249A05F
229CDC2C7B3F4693D0354109D6F3AB7D037E509C5DA4A954235A57F0F59F8568
BBBE292FF30EBAF2055448995FEC91991A3408F0C60C9667C727E4FD346CB11D
121777114AD0F0B8E7F91BA5DA79D7AB6BB91A0A6D6FB96ED1A9AC8C200FA2A1
EF97E5B5E4C753FBF42C1F976B0446A60F14D9901CF49CB3C8DDA06F58DBB99B
72224350C95D74174569F2F4629141CF756FAC27DACC81D3B0B0BBD9CF1437D6
B136DFE42B145626CDD287909F4E902B163799F1FC77504661892F60E5A56033
3458DD227E64A710E38EBA2D3B88B585A260DC483EAF72E4A3209A990FF0F544
CE8C5C086BEC650C87AC6908D0C344FDD23379CBB77C99C5099E69C8798D2CDD
59871A304B16A39307CCE2C1B99B8FF8D5F1651E70F35D9809BA2C6B376D2F26
1E6F833FED1423463869E3095E39976A7C42D48B75DF9890529FBB3D24651664
E84B70E8BE4C1913F5F6C757234D7EDD3618CD33389BB0DEDB0E38DD52105687
59D8B715E4E8722259218D7B8DBAC9A24F299EFE32DBF5035ABCB18BD6822348
79B244046524BB9F8E875DB7725A364FECE2ED6242FB8B9DAD520733240F4CD7
902BE5CCE86EF8B6EFE0B7C4A247BFC3F91502FD8CF7147E1DCDE35ADAFF5F46
E7FE4EF1A550F5879209A77BE700EFF0280DC344D4320156E9721C0542A01A77
528E5B64EAC7FEE09C6B193C4E6E66142EF709DD59E26F95B8C6EA8C10AAD1B2
20F9934FBCB5253548337BE59B9CBDA3DCDF109071C2469B43DF46DBBA605A72
949C41999FA96E8674AEF974C204054B3D7DDAC862867E05A1E27832DAE605FF
0A2F3DF7D337D1BD5E55231BC8DE5ECAA91A388956E233994DE3021D1A17D151
131DF5557EF42876F76EB35EAA4DFC8050FA57A8606A02FE2D7F65FC9B12C8E0
531F33227904D8D26B8EF5C892966ADC9AC306D01B6E24DBB2CFFBEF210F21A8
2FC424B94677EA2E355EEF37BF2708AF88C299D7F4C4C26AD9BA2C961540D45D
3F9B39005F18A281CE193758345BF970811A70C55BE5D92123D613716CD80627
501DBE50DE2B82BA9F95D6FC8E3FC4F897456B01E45552BEAAFE36D39BF9FDD9
DC994C11AC11F9038B2B1B5F0771332BF0149A33BFB5B81AFC43E9A3003C3D0C
44B467BF7DF1420256F01DD65E1DECC56BAF8D3062CEF9A2B89179CDDF4EE044
2D2E487C9425C59EAF0DFC887D850F2AA08DEDC4A10C31769DC269295C3EE9FD
B766C581569CEA6C9A7DF4EFF9DA9D4652CE666141182F86363102B7283B8226
D02B1BEF02282E4D5FE171B76227228B81C8562EC8A6F38739EC6EE38A07160D
EB415DB6D6093CAA0AC2628860391ACC35650B8E39519B2B7A769B134A9B272E
29346B9758C5A3E0A4384749A7D88F3DD512B317108280D8DF30D8CA287A2B04
0C71F73D696782676AF611C0D7C1A57BDF5688D3CC1DD58604EE5D7F9BB49512
F51DF2FDA408E56DBB752A5AA4C61702A2CB7DB2800FC2D38F8437D0FAD3B909
E0DBDE91ECD2A4B570E70B8E61B2E9792E6510FD62D39C767E9C0B58AEEA746A
A0E2A42308F6E57C5B6791672C9B8A5FC6FED6A3EF2441AC1D593D720DBF66CD
B26297DDFE48B6FEA0D11600B36F1959E2434212777660DC2681FB94FA5A4898
A4431060C062A717CF0D53706C4E12C6F43EB5F1477E212ABB860126F5C86D1C
44139CB79AAEC6B78D8CF41DC6D30C3B8744042875AD434486947FD4F8B4083B
0D566B96C5079D12622D785CC2D5370ABB27D62DA72B95F14925EF5766F00C28
AB218EF1FCDAE565AA6B7DFF792E33459D996A28780E598137A6DBDCA5FC2604
AE70DAE50451FC90F48C5EFDF8A6D3A542E3F222155B582999E5E2ED391D6373
C103FCBDD935769AE28F1BB1EA4029C7C87BD0772247BDF624179D8827CA4664
F96F7003D7D0BD146838C6C52A33B45F9C7B9361F7C7F4EBB939F46ACCC9C5CC
BF102AC1A3D7B320B1368BD5DAEBAA9E03FA1E0AA50044A2E997DB689CE85F63
12A6A94F0B83CA6DED09D7AC9FEA3E44617753BBFFA3EDF0966D4A7F5B773267
F18C5E91B6CD62494A24FD1CC370B51C17E9FCC077BF2D626D2100D5784D8CE1
9198772CD7C7A5E984AC125945B02F5E350BA327DF3F4F721BB7149B674B3066
72481FC77B5C6D7843D0CD59C28E408A98FC92C81BEDEFC264408C6DB1AA2986
7BCF8BD9D7B010E29D1FE4523E35F76D248774FB0F3625D327174903E86F64F5
1F736877EF6935ECA18A5F86EDFFDAB7E6B5C878AE7264D6AC158960359E31A4
379AC573D700BEC3D2FB2285C715206297C097131AF3BF5CB92995154F57CCD2
5C7E61F2E942A14A3608841D8D93659EC8BF5392F8CA7FC323E6186A42046019
E11D040BB87BBB7ECA6B9ADE7AF606694CDDFE9C6DD15D99ED151912F966FCDD
07F7D3E3D2947353648C62BCFD951918E3C38FC184086E575002B13BABBE8D07
DC3F0C5D4B351948D03668F2A30A02C2E601831FAA6C3B62B1FECE5096ABE807
EC5D7BC4B552B128B7FB0CC33F27ACE5E765832AEC7925742D0DE266A8DCB1D7
44C660C00716A9BE748675E490856F69CF7ED1772F7CC3B20A15FFEF0CADFD97
40BC6D5E199EC3EE64D775198719E3D7E8C725C04969A9EF331F1E319DE545B9
2D3A3FF93A7CDBC0F9B0082FEDFD718FADDC1153D21A5C6AF7938C40C48F985E
C1325B394EC7A97412A29D535497FC6FAFF006765DF51E5FE8366CFD8EA4E169
65289FE28186AFEEC45CF8F5AB034EDF79DB19EFB6FB0433BCD7424BCAD824AD
77D8837021895B0135A65A71B1418AC11E31ABD7ABF79F18CC4063D04D61E522
8309347BCB3C08C522B5705D78441901F4B7ADD08B5B49122E8FB0D17159B13C
71A7CFF6F63E1B427EAB7A3CD677D7394877C88A417A449A88485A0EF2349E69
F7EF632E4A89ED435F4F843AEB0DE2D08746E18A701334816EE5C6B153BA55F1
94E998B6EC925AC28831C650AD81C2455D7C0DD3BB0AB14C9FC65A584CBD3C65
762DBD4011BF6D56A1F0B72D203A7C5FF3017508DF9821E560445B9F7B20FF4C
2C324A8AB1A87E7C92105FC83180766F2C5C9614AF82D00B6895632E14BA86B1
F60CBD89F373B6DFF0F66EC28CB8D9AD8BFA69E2E477BE97BB7EC975624BB8B2
DEADDD475CAF795663765031E331E892BFC773F55431F902C010DCD2B820343C
96F968FAA7B1E87DDFBBA48F652EF1C3AFCB19D0A0AA9B58CE598FFB9A2A6F88
8B13E52C9309AAFA56D6534045E522B942ADF981B1A73996DAEF61BAB889712E
B1595CA37FF9328AC1390CA3B0223A63BA100BB2B4714AB955DA07C374F20E59
FDF3B6206FCEDFED42B5D50FADDFB0278025522F64B5411EB34E5088794F6202
5380E1B1985AA631AA151879B37E3D5355B0E26711658E3636933A60C554B80B
5A7C85AB46A0294A75A62AA83295F8DC9FF20536F140D86E148E279FF563441C
51E317A1C20944C84C955F1A89A13DB1A0EFF4491899540B30F28B8406513C7C
1DB5FCB9950715F2AC6448573251000E28784DD4E38CE7E9E4B0438186E457FC
565E44F8F0808F26A82E25AD6B4176B3BE5B1A5ED6EF893FC514308BEB097A3C
1FF486AC03EDE9C9886993491692973EB657B77F40B56B481E6F3656414286A7
D1E170C47AE4059FE85CABBB066949A02C4E33FC6320B074E222B6426D8AF577
A5B7F2B019500E8FBE417B63D27A973743521EA5B0C41133C69AD75946DBF88F
D7043C7A287733031776912B98D449008C02ADD52593CDC063294A1C509A5A29
792615890E71699CD9BFAC8369332D8273DED975BD53607ED94253CB78FFAD6E
D43CAFFA0EAFB07C28E80FE1BE4890F4ABE1BE8433E01BCE926FA4D64ABB59B8
54532483B8ACFC184F8868FE130EC519ECA4A7C3C21E322AE6C2B6732D60633B
59C2DB9B5C8D9B2144A9749127C0F72AE27F55A17C4D92B28EE198325A11DF14
06AF1D0AE60BC2939C038A308187A55BBF29EF0CD6495A7D1F18FC4E184AB013
8C55F58EE5BE904971173E8A833359F48570AFB66310F41FD958247E93A01E67
F2ADB1429C4D93EEB6C7C34769FC0C6B40A6DA34531A21651E03B5EE5C4FB7CD
AF903BC5C04FD20F844723504C746D801C6BE04CDE0D28488DEAC62735D68D14
C38102BFD0E48771D4C7102E50ECFD9B5EB79E54571CCDD985665B84CE4B056D
177D9C8AB6DE487ABDCDC444008F7B2B756528F96C21EE5D4D358A267105EA41
CCBF269241C0DA67E5BEC040A958B14BB3D7821510CF1E0417FE9CE7E69DF74B
B4C645F9E7F3050BC3209BCEA05A7435A10F4DCAC96C9561A92FC09DBD657836
60B97F226A952C5164E68A44344BC4E6810FAD9BFD353ACAC81B88807B579BB6
A0C8F69CD919E311B6ADE903B475E4D3A524AD926D0C4684879CE4D5C2816F47
E2A9555C41EF397E66B5A87C5E297B9D70710F1A72D8C33185B6A1BBBA973272
0E93FEE80FCAD3FB4742BCDE9CF9635AF76BA5942E43D775066794A2DA0E2292
773DCB2823847EA18AECF20E578428AF5EDDE764B5DEB16554CAF3D09AB4E6C3
8D8FDB121C7C72D0E469F6BEC7D700AD997B92DD4FF88AB48BD33F1BA62F2F89
0933182CA7E70AFF5B14B02B75CBD0738E35DAD8E60CB65021C8242D03E3D85E
BB3BE1A6D4EBF7A9FDE0E889154424CF52CE85F8A8C30BC2D5148CAA77CF2E2B
FA2FABF4D4C4C6CBD815B95655FC8D6A14F7BE3E2111BF076963216560A52D57
507C8F16BC6DA689E34C8CA29576BCBF1F34CAE2D347A1E93586EB95FDD3D1DB
7157B218DA743AFC8C552BBFF0F845A2D4495714783E9CB13DA35C8D51F3D994
762E9918C422D1763BE8FDED2C513697ABCA71B934A2A15779591F6C524E5675
39F9755A15D141A455299F5D047CAFDD08829CE775C1F5D2A21749E61DE6CCE4
F3EC679E1C63E82438F466C44979327170A045E8AF97EE7D38869D666EC3E1BE
76A3D20B11E908D9C6195D8D3E9BDEFB663D035FC1C1B47AE6446BE3AF3FCBDE
28D0DC17365CDB51FA514CFA25E36C526E7549CA892D7D2DA9DB1F2B4C1EC7EF
C06189DC043B66DB60F40F602AB7752FFACDD5D83C5F73030E1DCD75A4130B81
E97C2A68A7E81BA2A8B8AC2CD1A5AEAB3ED00E7A4B3C78C5390A0D5FD35B09ED
C19545034B7E102887501BD1053C2B9B1397823EA37B2D0CC022026C6F264312
783A4569EDB65EF55B6718FE184DB3337DE9B927440CFD5B7ACCB41475AC3358
30B049460E0D2B3360BBFC834FB2735AC09B41DF9EC06E5026856BDD3C2C6906
652D4501E140EF3ED7A1B9C2E885C88F882E29F75B211B232ED1F6A1B37ED3F1
7DE0D82EF0E15DFECF3AAFB1CD1339FB5894E7A3752963AA6043403EF0142257
200E8F10D28EC176F81A2A2222B2117545EF265D6DD1B8B79D66F8BE7ECBC8A6
F5489B0C17900AF38B219AC85FD9DD09F60C7E4966B4FAEB0406B72F8FF605BD
06D53E3A21BCA396FF13CC82CF8F0F4E7F11D05DDD24B5181DAD9B48E6C6C167
0C8E1A30BFD43D91E853D20DF5CA848B8F7F77D5075DEFEC7426289F5DB72C87
2D87E0D06284B88FCBEB0923BF1295745386F481ED8E8C84C42315564A45841C
76735CAFCEA3775A2941761F9BEFC4C4F3F399B9DE9AC0FC281734C128793856
2B2203565FD277C13BD2342C13A68117196C4034B5A2C6FEA57D50A9ECF4529B
F907C0944488BA6E2806AE36278A89B090DF1B6C22465827E8A0B2CBC391DB3F
7B7E87BD9D405F2E29BF660674457A70F9D957E8311964CE351D3EA13DB52AC6
F6A1C3F8D5518EDBCCC670FED1174757C91B9211C59FA14CAB520B2E91EB1126
8DEAF39F0654D590E6E8AC9068E04A0D02620301ACA65A8CC12079C24C649478
843833534B15A834358E7CE59824E5308F85563A98DD44DB8CC9662BEA42B888
D2A7C73EECCEC90B036F773A35572FE436EFCFCB52AF37333761183D0C720073
C05A2F6D7CE4EF45440710DB2A280A18D8354E4A59B4F7FCEBC86BCD866CDB15
371B52FBACD2586F3D71442DBE3042A47EBE4BA1FFB274DCBD57CC16B87F75A3
3EFEF432A1E2A8E5FC47B8C07127CF6A07455FC54C21C91014C9D31B5743A9D4
FDDEEDCD0D7B909D0C76D10D5196DEF2A9C12CC2D82DC1358CF37157E929BFF0
34448EAE1F2DE0E580EDC77556593EC3120C95C4C9DF1F49D41B4604264A8057
0E47C61ABA654E2E61C5CD126C3761032C19EC723FC47C996EE356C7AB67298C
9FF511E8DE1A26089D383BDBBF27066BF0945704D404E9A2F1002341AC27750F
A1CF1A994E99B6446CDEE5F1EB91E8328FF2FAEA463F9B2AB7D175D54AA41E49
5C077DAAE47E6B8FB0144A861E53B3DFC6938E677AA6C8F9C33E90BD705474E6
FDFA990C996F1A54AD3939B5502C46DF4A11ACA54D221B44224932D25E0EB3AD
2B5267627FEF41D96344A05EEE4C43E2AE24657177613B19D0573BAC967DB056
85E1E2031A7EA3B7A971E76373B73D777A9AFAE6A7CD65C78EF74B4C57434FCE
E8FE6DE4D853093DA735DB67694569E8A3115B94FFCF389FF1EC00EC532870FD
72E532671CF9042E72CC4F32905C36121D5A26A64FE348622C6CDA9FAC1A26DB
F07A94A1AD611EFAEDCC9135C58F8F73D47D434DC4A4E0C28922A04A64AE823B
A1F14749B68E2B1CF93711A7442266BC5DF957C636987F2ED81971E9FC729AFC
1E778A3C062ECFD79474385118652EB37CB7021F80792262A4D2F53D861CF54B
828E5B0E2F7117C021D51E4F045880A3A4E04BB69EC10B0CCD7C0C2478EB2FEE
A0C69754128BFF2F8FAF8C3DC4948F45C5FEA6F70A400FF53C409C626E12243F
B8A327EFE9CBBBE8F9B76ABA9F6F7335FDFC572D827D600CFD6AF6115FFBCADC
EF0815E4F076F03E728C8CA0034DD0FED90BA80012FF3E87024C249F029FE16B
156CFFE2D1DE3A9C4D5F986B5B114CE454186605D72520FBFA2B95ECCF029A6B
18A512D30CEB0B6ADF80FE673A4622CF8D7EAED62367A97D15EF20362AF7068A
8FF08785351DA764DB623D1E0A59B9FE47D7D4D67C241A9A9A42D3B38B85B5BA
97376AF632DEE1A8C2B197CD7BD878EF99111BABBBEDB83B50CB2D6E44036DA3
DE4A682C0EB76C39EA6587B515F5CAD0858001D0F08DA33F10BC0B559E0B05E7
6D1C9A6F549FB0112435D63CC07065444C7C4BBF693BBDA6847EFBF89F46AD33
1AC05EF80BBE4F4905C482B190C7FEB04E13FC963C0478D72B621A284272E442
C543C1DCEA0E4B26651FD5FBA5684EEA18DAFD9320A14013C540DC0B2C7702F0
9131A46903CBA5F5E74D3ED8950B75AF0B6BEDFCF429BEAF8B3559A6C7326908
76A6AED1DBFDB74A53A95C411178CD0DEBA567B42E2C99CEF50C236C60474991
18755EE07CD09E659FE6E9DC461B68B397F4E6BE8EA28AFB7387999BECED091F
20E743D60D4F71F6CEC22A583406AA0C6AFF44BB559D33BC4638F601D167121F
2EE337886D0C1D801AE1CA524943DB29155D93CDC05BC0FE45B681C73C50BA9A
4298EF9872706B290B8C9EA925AFED9C9A2CBEDBDF0241D0B4721B91E3B18B10
A96E8ABB5CFD28CA18CD9013BD48748D78B7E1AE73774429620B2B32459D9938
61B7C4A6E89D476FD2FC56FCDBA6777B31BFB424421ED60479CE1DCD304BBEFE
E80BB9A0D23756B91AA55ADFF8F3104636462119C3AF991B3613B485BA2B63E2
5767C311C5BA8DF435BC210621851001B6A402E3A07D0F204A3B0AEDDC71D598
11D25FDA43865CAB8E8A20A9326D2B50BA2F5E12CD6D836AABD89D461F44F96A
1C9F166E156FE4037DD36BAD40F1C39ADF1F3636A28B7A4FC8E7CBA25E836254
733A9A1DE3328CBCB8FF1DED4C52CF83421208193D4F91B77B22E158BA172BE3
3861E18AAF3A48C72F9BD2AF5EE41814285EDEC18B272C7113B1118FD1A28039
796F5ABFB20CE24ED96E7EE72A3AD5AC654B29BE5FE1B944323CC083D9D5F0CC
23C7493D971C8AD739BCE83E999D3BAAFBA2577874822FA06852EBDFC8B36B51
05C35E34DE5861E0AE858C398D95179E007A6CFE211D8EE330FCD49CE071C373
7E44B9E00D437F3DDCFAF43190853610973983297A8BA83B0BAF12EF2385A7F4
9B1E37E04F3B91F292832C2695E79BFA462D7789C875F63317803335B1C08B9C
B270E509091C9F1E16BCE7D84470D352A66D8651341B0180318EA6F8F74453C8
2F5F25F7B0840362434E5810C493EEEC7F9BE98C8E56CF86C591B7091B2F7C51
1BEDC3CF77526FF59FFD601A6123A48DB340330B4EE55C975CF75029C5EEA309
C7949989491D813794B358F252BB5005EE6F47DE5D892813AF0BA074FBA25ED1
B984860123DB51D12DCC5FE6AE3B89F87E1159A1C86C53D90433C03F373B8956
556A2AC81C1A189519397F9544C94107DA1B4A6EE178FE71B207D088EE8EEEE8
150D3DA891517FEDF573F23AD2236AAE8F304FB73B311DEB09581B4DE31C200A
9607D74FC5F70CFFD833BFF3B749EBC45A95688575A4D2874AB2992B9433D889
83E7F30C1866D6836F5557F484D9733BEA25BAD1C1C0DE3AACA7EA3B97FDDBB0
2799805532216BB40CBA85C8FC81640A11BE0C3F9CF0F3B9E559727DD5308332
B7A224A2D758B69CDF906BF67DFAF2B0FBAE9B954327317EC6124784FF171362
B3551FF7356C84CF0F2434A53A387239C63030F3AD8162E7EDE66BE15496CCFC
0CFB4E67C936DF179D27F5145AC823813A9BA780C9FDE15F633A8BB669029856
DCDEE6F046C9253F3B443E5F62AF90BB92A259749D9FC1FA6F5AB1D724A9FA3C
784203B38F17312E05930693B782764422692D98FA836012F1BA77AE84F2265F
C094C1564E2626692F1C248D54C82E7BD9251160D5AC4D1168DC5C66DB2C1ADC
28A573914AC5222C889668A414680F9176A05F32B350E2CF46BA0E8D0120BF15
9B669E392D15131D86F9DBD898FE9EEAB4E3C8B1BCE22D4AEFBBA0F344D7EABE
7118F71AC742574049DCA5FC97FEC633F4D753F6CC0F03177916551AC63C78F5
07B5E2F6BA80448EB6D0B6A8684436C85634AEBDBA68AA132BEBBBE3B003C4C9
6BBCD4ACFCE875BCA9550E20DA7A3C9F839797A135916197A48D453611484DA2
93AAA762D863430063A0E77220CED0EF8DA2C258BB069706DD099D810D3A3984
8C4AECF40555C99ED63E70A93D3689E5D187D3DC9D80E7BC03A0FAFA64A7C5FE
D819BEB1AB8CC7457E4C23A2991E9515A7C59B4739743D0DF6AD46651518E5FC
8203F851BF811AAE848B8F7F77D5075DEE3F1D6911750F761F9907A438DDF450
6C6ADBAE868F880194C0BBEEFFFB52CFF48DC639DD9A89D4B210ADBC8CA4A254
31549FB6A4ED42741F9996D7BB1EC714A2F30FCE7E6FFA1AC28B04BF3DAC8F2D
D4026EFD3B57466FF0C33301FB89443353F1F032FF5D7F7C97A025067980736D
B81D421D3C8CF5D76D071D3748C32BF1C779E91314ACEE61D30AF8E103F301AD
9FF8FFCF4B8DD9CE727EBBBEE42C75EA7A1E22AAA8F03A4588EFBDF346148A60
B2EE49283186D67327CD487B978FD50D9BCA2508355C576FC7AB3C0B29796D2B
D1DE1D4B673B0D41B850D1C55B06B3B9CD4BDD4F35233B8E5A30A81849E456D0
85F3907DBC3C2CEE2DC1118746EEA119D9804673924FC20C12DA32A8204CE22B
0906EDEDFFC684F2CCE516A901673A41774ECFAE0BC6723E560B0FDAFB34E8AD
48A2E4BA5E649D9D6967AD053D7B484EF5E6955F9BBA365964A1216B11C66FC7
807A0CB53E4329544186F14A6519488060CE974FBDA4B3EF695BC512E973F473
6851AEBB3A3A4B2BE0F517E8BE682D617EE310A79C945126847769D6DFE822CC
DA7CF82CB2855CF7DFD25D8B7DEF7C80370B05A615D51A9DB64D82D53435C7BA
FD262DC7F7D015F4B8B6F93139EA35AB802943B5628BC95CEC4FBB62C5383C2D
C08DB367464FCC848329BCBE84245A4B5E96BA220B94F24D336A889395E771CE
C29602496D2F4CC300586460049ECA3DAD6839B597386E852EECBE1E315834B8
1230D5822007395A5D78C698C7366C1C453FD7CC6E94C52309E563B4B67142BF
A35136D3B2AAC51A09D6ED476BC3FE9C5496C007951F5121488E65B1863D78D9
0CFC8BD75245088FDD2A5DD508478746C3D7DE42BEB3812CBF0B0268264CD6AF
EC8BE1B2F7DC17BE3EFF5E55F5F9C14F6A3F9E71407C5E5EFE90F05AFD477D37
5CBEBFDAE508537974BF3881232B0564871058808E917F6E246839AB8EA72FEA
E7968DB232C4B17C585A4B755226B9EC25D31915DB1B2049FED519B6A6B5C553
A23C7C82C170052C027C1611FC07A49BCFE50275E46460F6DBAAB372244C8410
7B983B1A5ED3E0307A8821434DE576FD76BAB17EDB9E148BA2B3E84C4BC85A5A
7134D1476EFD851B9946FC8AB887D496FFDA14E1FC145CA2EF9B081B6BB189A9
C2C7D7E102DE000E4AA94A10592582EB727026217F39B7AED996C7D1240F92A3
F59AB66F6E01059DDE20FE764AE23563B8569DE5C8C13304AD703ED0D1E30273
EFCA8DB75D1C8E3514F938BB7A76683DA27E9CC736495C4785AEA94F67917DC8
5604DB4B0AC6A2D31157299A01895DDC8D2E141B3E4859826310476781777382
D05A089F2CEE01CEE86F4F28FCB5623DA1351D02D2E2E84E87654006B368FC55
5006B526AD5D4999C58A8A322A1480BDC6E00A077D915F42171C21DC64FC8823
72B89F392B8EC52A595488D01C3555CCC56D228E89727BB1AD0C3A7D8AD0B497
888CF835F79DF6BECE46D75AA536B1A9CD578A999A7AAB89F47A70CB4CA7B4FF
C22F7A7E68949D196638D1C64D3FEECA02FD2A145960E59ED76D7D489F5F53C7
3BC567E9BF2F27834951394B5CBF578CF75D9A9869D1612D582315DDC232DA30
6F6F29C43472FDCC1CB26D7B4D2566B8A7EFF2C9858336F527238ECDAF7D11D3
6E957231F91A6D921F3E14BE0FDD6D704EBF120A8984F890D097C6FF34D6C04E
68B30B1B1187EEEC041BFC60C86C5024A101714558EFFCA6A393125DB7C18D40
AE58FCA582E34747287C9AD9ACDC2D7CE9CDB11D3BC062C3361E2918C9C4C5DF
98AE8C45386A444CD4719ECEF422F4FAE80C8DA7D6F60E15221712804F499F3E
1E8A3E3086F95920DE5D481A0B20590E06BE0B5D38AF375DBC655C61FF49DBB3
7DA767BAE007827695119229863CCCDBE52C410C979549C7FCEE1F220DEF7CD6
F56354DFE69300CD6BDB06AAAA7942D7ECAF59DDCCB44754D45D2DAB9983A842
AFDB4A9588B2A62F130235C0BAE2D41513B3EB2851AAAC8A546B4885217F1330
0DB22A2827FDB757193E15DFAFE6BB907BB39512DBFEEC6712FB65EDCA5877D9
A809B8D18ACF4A63F91D2D86B3B27EA9E4764AC60ABFA9A7E5737B6C09DF6741
EEC4299B68A94A11613D9E1CF99E4B907403670902E5149571E2B69CE5CAABAA
D469EC733C4C57410956520F9C16708AAEE0D9AE34F107E520CA3D81EE426782
6FE289248292E4A1156B07DF315D44E5EEBEFA6CA9F978A6AF9D2C4DD127EF75
B11E546628DD2288F5EC9037C14B40537F79E3FA610812BDB518BB0CF047FDBB
AFA55BA1AF0308B744E331F4CF0612E8C66AA06F9C88B0A1A7FE8AB468D24EBE
47E83E53CCE24B9FCA5B558C2CC46FC2BE799C9F485827AB10332BFA0505B5EF
A4F5C59CED8274F7D8FF65DC9DB6BBDF97D2BB770E40A750069E7D8FA4C6BFE4
7C868308F3906BEEE44131B11B2B14E64B4443D95EEF33A162BDBD4D900E3D89
A19BECFC661B159A4944D83DA63531BD53A879D46734B46841A346D736C28796
92CBA4C67705AE6FC17FAE23706B32B06588385042E31788B80AF927C8FA40F1
93552BAA764A41DCB7D0012E452DBE459C3CC79AE1D2AF03ADBF5D625AFA2992
1CD81B2D4BAEAD9978D951090105299D23EB62DEF4F9334AD69821BD76724BF2
287063F60540A925906875584000ECDB89AB5D6B452D675561F3637B6CA28E0C
17D423D6AD5DF0722425A064DDEFEB21B515A0222B3DACB2F43A0B0E23678322
EBA23083B50C8BDDD550A7161D67A53165065BAD5B108A1E5285520D407DBAE6
44AC025A9B1EE04B9F0458912B40D549BC31987A2801778F393B238319C753BE
FA529F00CEDBCFA3F7542A6DE217D9C7DFBD913F9E0D09556CBFA808DF18744B
4A1A81BA043E14B70A50396A878775B27EA90E96B2433D2C1D371E05785960F1
C27AF66F1549268C24C93A52F86BCD6B9E50897FFFE5E3FF4D8E64CE7047AEEB
7FB1D3FE714BC12E50AA9D2DA979EA634C8BD5A7A63F994C5DE4E5788133076D
6374A9D0365A6C598CFA187FD3560A87209C10DA9C9F923875C33DC953A4F91C
42AB33048DC3607CFC86ABD966DB4BA43A6D2570A86AC1FBF87A1A305769DC38
547AAD86D040D9CF9C99B411BDE6788B1B2F128E7E0062E7DB234A9F98A8998C
1FB6CC6114F0562555A04553B64057A6E98D1747274D3532624B61A11A61F98E
E74BC9078AD56EB57ECB1A493AC719F4416422A75109FA64EEB0E9543BFAD518
A2F041B9D7CA9F84BDB219185B42731952D812918F76EC614BEA4B7793B63A76
E9B25318716BD59861F51B561DCC1151935BCFEA8BADD035545E909493D4E492
FC69C0A7367B612C8C2F1DE6369D13F15D202F8467293B7FFC72B6D9F5518E81
A6612CDD70EFCC77248DAC4E0D14CBF51192198C1BF273AB83ADCF6F99961DB2
281F99EF93041C02390654C982B9EB2736D453D66E3EAD617C93F431708ECDD8
6A455F8298F7B532647689F1F26D6AC1F670BB566F60CFBE750C6237D7EAA1F9
3BABB522A21B39676D07CB0674E58E8F61131FAD66CBCBFDB0A9960672831880
6B9EA9B02A52F5D0B40DAEA7F4FC7E64031095C8CE9DB2EC973F7C52E2A38BEA
BE7469AC757D4D2BED7F2DE0F9E8C0DEDE6F876A67C544FDD4A65861C14B61BB
2E3630FC1D9B1FFB3BFFAA6D0A20C0381ADF48E6B3FE0C1EA26A509F71696EFD
6AA65FE8DDCF6896665B6E39DE31F8383A1FF88A692FD0B75D393EABCD0F0D70
9F8277AE72AAF2BFC3631BC814DA29CD626BC3BA6764932FAF9687852454D474
027C43CED6CD52C4C23D2B59CDD3B8D90F198D30A53E201618C310FE4E932493
641FCA7896B300BEDD40C4E314A85FFCEC61581A4B4CED1CC44BB69DD41DE505
CB7B98912DAB236D183C46DCD920BFDC0E43AEE3EE3CAE13E0FC8A04EFF66FDD
B2710B091AA85ECCBF7320050EDA92CD3361C2AC17638689E052523D7558A09F
E3BDAB6A276456299EA698C1A77EDC8CB025B10C08A5B355BFF5CCFEB645AF07
A0CDFC782280B8E89C6A498386CCFEF70C0B25D2F5BE48B59F7A9AB3CB16DC87
2F6B934258E1FD83D2E3DD86FC86CBF6847B281E91E3B51548EB1C060009F04C
810CD2A4CA85076E85A632B73F3769F6EB3AD5A1FE45117A0C41ACBC43774A41
1037D9112650F77845B4EB6B7378DFBF36AFE522359CCE27AF0DCC70AD584FAD
5B5B1A5DCE841235DCAE82C541410A05818B0A158B7895BB24BFCF21A45C95F7
E64231E82C7943EA94DA0BC73701373BBB6375EA7AB2ED618FF5B101BA799F72
C084368760340748A5169CC1883221A173D464DB2042E085C3F897F0D4C1FE1D
B22785CD859C141735D280625C7569CC50862D22D7093F9B38B2CA62B971BD53
21F49F7BB4C7A793BF4ADAF64D0C28F79284C47A28B68CE1E44D715F7D85A627
AB3927AAB73E272A4C68009F7FC106B0C016446E877BCE976680AA5772CEE0AA
B8449EFD258C8DAA3A6A5732A7CB0A03B5BF04E87DF7760C0B265E6909113531
8B5BAE543C44CD9BA13ABA2B5CAB0B6342F1B4A3003688088F1F6DA3C387CAF4
816B6DA14E3A1B45E8AE40CC6AA36EC45DB45F30F52F8A78DE4738E560E21569
390FF2D6C117438A9502D3A182EE09DC1E30522C992B569FA7EB8908E0B8E34C
F58D98CDD40D836EBD27258E3735A4C6DFABCD6CF498FB3442183754AE0BA150
36D49C83F428992270E1039CAEE78B2D136545062399E8692E1FB75FED518F62
D40390A7C2E5682DA716B05A622D727473437C06B83385AC9411C3D47D893F2A
FEDC6E12D2503B4BBD0A86AACFEC7C2DCCD3DA0C9C8CCAF7CF80A45458700E48
82639A8CB4C5D60DABD954C9B423CD131C2E32402C587F96F66D4F130BF97752
DBB14F2BC3AD8C48F6D8A346D646974577270C9986D8D33311D6C0D79A0AA0AD
5C08E8B5732C5698F55854F35C9EE6DF9F545CFA3E0F3888D1F463F834BD8C22
5F65A13EA2D669A98777C0364411D36A6C3424D95859EA94B4F580B117F66F45
40093CF47DA04CDF96932EC7B6DF26F052F4709D89206921F4CF45F3A4F60E11
027DBFE4659DE867A6FBC09AC0DF7EE8E51C4BF64C8D607A6FC67B96958F64DB
E184D1BBF74E5896CD278549FA8181A8A46C1B52B980B61124B33B330EB3E043
72A38554FCF146A5BEDB973D60CE5887668C4ABF6452A0858FAE96768E4A9904
5ACA914DAD0EC8F1167B4972D76F75EAF78BD04489E0C2DE9BE82279CF541564
0D5F1DCE22B7229605912DFC4A9379E76128411F6F62DA2124572295D7FDF91A
1C3CBAE6B6F2583055770EFF67496C00AFD0E4B4C9307C12EE10779597A25E67
8DB4EE7B616DD99080BF7936644DCEC7843AC496C7EE85DB5413F53257F143B1
7D02D10EB84C189249BF0EAE8BDB05A6B27B6C63082606B8066D0315EE2C1356
7B53E2CD413C8FE45D47E1D403E1919854CBDA12C6089DF41522A177B375415D
9670B105429707D37B92C87ED6ED75E312637BB6B0A6B317F82EFBD6BDCF2F07
26272303516041120CD46FE9FBAE88D4E0832A0940DB1B807A00924FBC7A1644
1725EC0D85119EC4A5EC21778AC2EDCD34509E8B68DB14155EDE6BB2551A776F
B87A8E37A6F836D62244760137517898086EF96A9BA941C924571092EF5D23D7
8ED0AD5CCFF512ADC8FA2515B0381184464BEE09D1BD84D00D951D4CF9252A44
43EECCAF1E56E0F6DF10AECE1F7B9FD3B35074D85BDA9A615D5C32430455EA5D
9A010ADDBDAD28D36FCAADE15A574DE45CCD51AC707EC422BB0E85C1503FF644
C252CB4F4DA0DCC649087EA805D1ED57631ED27445868F200FDD1A0CA7CBC449
486BB49CFEAE1E16816525BC125805B932F9A760A878108BDCD8C1C1CB156573
502AE48B0275495A5FDA551309A7094040F2B528CD48CD2F8B92CAB744D01CD4
CF213FAFAA1E86BB937E35BE1811C42D851229D0720F34721A59954DB42742E3
4C5E8D96DADA48ED0887350DBBB4ACA8B654E3827BB71922BC9474D03BC93FED
60C90214BFE95974365DF26E91230B193B4B81FF539DEDB60DA16BCBEC74AE27
1326689E007EF544C2324DD24A7CC4288E476FB576B949B96DC704307340B671
CB454C2C618B67C59F988E2C8A5A6AF3CF47CA4CA870DBC71AA1E6F4E1E428AC
CECC6A74C01A82338E12FEEA865DF5CDC454CE628FADB2EF29053D95E79F53A2
1234F3DC2ED2ABFA3F1661074778EBB127FE93222659DB735F2A293159AD84AF
082B956F1452E737793B4930B2DFDB4E6C7F70B76CB486438D247D073EDDC451
8306F16F8D4FFAE416ADDD1143EF22050DB414CC61AFE9D26BFF842E08752064
C9D149D5AB137C122363DA52913DE8E26E48E8AF62FD65FB576024A490154CA7
D98345CC317216B6F631AD29EDE881A40FA3322E3A89516014AAE6B6581240F5
814D020B5E402EC28F0A93CBC716B66D34F2FCF253F7F0FBC5B4D7D3DEE02F5A
89BDE873A5A5A5F88F111054172447AC57A8B69B4DAAC8F3F414257B334B648E
11C3659B24D8FA804D52164DEA4CE44DA27815C6CAEEEAC922B825E57EB8AE40
DBB9F77F83BE2796146E427215C73BEEF20E828A46681B6BDCEA7C2AFB151F7D
B3788BD9FF8E30545E13A3ED367DDDA989A9101270D15AA6590DA4E9FFFDE23B
9AFBDC82C3CDE7694B878A2B5D561F97176033A7A3ABA468FA39B093E4EB12F1
744F0C101D3764B8BED3E225780F2D9BFB5AE2A951256F0DC437F527F4AFBBE2
E19A784B1D204DBD2A298E335A4AA381B8581DF3F8782E8DF8A323A6D6723DDF
3D748A2FEA66881BA68B9EAA5F6CFEADF175C1657C429720F10DCEBB1660BDB9
6C12F87065B34294764CA1676AA7739C5C2E9B72A67BA4B2572CDD9ED0870220
EB3399E9917C2AC48D77FC79A4B45830F7EA39548BE66A0BFAADFDA659B6FDB4
DF29E382788DBF938BEA36CCF55D43E7EF065F9B49EC9587706A533E49EF930E
E46DC69C7DF3E4052D614964EF63581EC2FF731D1E4F4A2D0A3C021C0A8D5A50
EB490A208BFC470AB52A34BBB207DC6C0B52D99ECCF89764E3718CF5AAD7E227
64158CCB84EAA176025BA9473610A41FA2317A4C2D8A8143A58F73F774021371
EDC57DCD18653DE577BF1807049FA904C1E2CBADC35CC868597733C80576D274
C172B957B2FF6F19FFCAF6627099C08DDE996F9D3B8A2E27BBB6A0EDA571EED8
BD7ECF7829B310429383B5497FF39E797D35A8D8A8E583D3B87C35933A35DF08
B512C2ADE2649A83453029710375D9F063B335EECF830F146463EFB2C43B2A6E
CD6224F253AE76ED68FCCB2D803879CDCAD48BC3022C50FFCE40AFD163F8B4B5
199B610EB41E9459D3CFFBB8F5C0596D7DCAE8455188E2741758394F26305B3F
670E67B8FE790851B16E71241433FEA5650A3E76A1131221DD7FC2E6AC04519A
8277B0D0ADF9ABE8E56BEE1A0B5CE4C0F54C84EAF17034BC949604D635C05878
F68F9C917A16AB20AEC7563535886E28292A422262C7177196283E714BAFDE7A
BDB9657BE6B244DCEA4F02B3C3507679D1788194202CB22A2D71B5522C635444
EAF3E1CB44503C9CB6A7625C916DA7303B363F0252EFDE115A2522842B634331
41C027DAEAF07F9BE1DA54BE91784B721065224C925E7F59379A6F3016246084
8153C749EF0DE6EC83878CE9C3969F85F392CD9862A325714D3FE8C3207815B4
7F21B132948ABBEE3856CAB40D3889C89810E51365D792CEE6336A2E51C1890B
955822AE0CA55B165DC0CFA446F7604ACDCA4BEEAE7FA7566551A6F3D8B6A8E5
F6D4A30E73C8888AD44C29C75FC575E5270DFDE3C3C3C3F9B01526D9D71A7498
4522CAFBAF6CD275B0FBD66B779C8609E85E4BCFE84319532B3AC9D62BD415A3
72A362436980B6D47AD18A9ED91BE5AB10A28CD21FA592A34F9B97D11BFE6142
3A5F5B24F70590413C9DDD7354C016D28FAA91548361B38A729CF1E6DF63A016
E06F9466C9CE3D5F6EB1C5D7524C125C86A63F7AF293CFCFEF26782C59DF2A8D
383A09280F36634BF9DFDB497504D825BB14B6C71F406733E7B606F18BB772EF
73E44DB20C6246849EDF70EF99B1C95A296106DE15CF1B4D7749129C2F439F0E
CD7AC315EEEA51C7B0A8DD0C05C2805E913FF4123DC1F6674B508B50A1B88998
0CCEFA92B850A3445514804C0D1084597F1E5486FD79F660C4DD1CA5DE0E5253
D461C07824578BA0079ADAAA937D6625C4CCA89CDF16DC6A00064D7077F2DEF4
95F3DAD5C26B0515BAB5DFF1928CBB888F0C20A0CCE499532A4F584E75004DCE
A3F4C904C19B7456A83B17083469EE367CC1FD852F6B35E8D6A897962EBECEDD
21DEF42A0ACB7358080BC7623C32C7B1D38819E09E5C6F0C74712B2D95BB6554
19ED5AE7BA60B9974A0A2C7449C76238BAD444D12820145A4C76D86C83882ED8
5FFB721A5FCBA3AC1C1F739F21FA81193C5C8E44E09048574455C2B8BA0F91B4
71DFB014037556D6E9C3326F8592F1A8E23E12340D6D938DEF5FB681D8538998
FAF4591A446A4E796BB892A8DEC94F00FB6B39F65E2A5BC63BA0302E1AC7E771
1B193C217309852707B51EA42C0BCBF43D12C109FA7F552932998C2CBFC7B152
5EC6AA4CC82EFC3050975CA531A5D7CE8C3DA18FCBCBC7839C0744DD5CE017FC
C070EFE541F05DF567351C971695F0EF665B905F4B03D3D574FCA702459085AF
0FB4A3861C67A4552C610497D442E859E3F88FC18115E0E968F153DC61DEEB72
73697AE8307A0F07ED74435A6FCF0C7E4C041BB3ABCC68CEAEE80B1BD2CA86E3
A21E12FD05D033B7BB01DD0B9469C910B7A7DB8DA7C0B1F1BC92D2D6D0711332
EB581CE1C6E0EFD9215B449BF6B5FA6D56A8B182BA094D5712E7D033481A552F
86C46751A5689967512AC84C42DFB2D9C47204DC6677AE0DD16D94EE5537FD24
4DF8D6AD68ECC29592EEF5AF14F2AB4058540133AACEEE3A261ABB0D6CAE418C
D749B4163ED9FC610427B11A67EE3E91D7A621CF27AFDDAFBBB386F92A8661CE
6E429DE0B3A612D6CDE03DDBE6E745CF367931F3C2300CCF5C434B6FF1BFA35B
B75A3141CD757D2D2A95344A9BC70F400C8112DE7DC2367527FCFBC3718FD6D3
2710364631E8E8DF511894E8900D7AC7A239479C61877B66CD0DF79C91233F5A
0A89EFB51BCCFCDE91850644CFEC05745208300C39813F788E173642CA4A1658
1287CA52C91C957F37ACD579854CD11DE5BD10066E0025917D1BDB7E9E37AD93
5833B94133FD5D157C679D3540CDB376F36CBFA9240A07421DD8A51DD552C292
68485D399717A3AE14F384B2D69C75A42B747BE93DD6A595DD600436E0BF5E8A
00CE3C9285996155732B50DCCC2B78551535EE5DA52B7AF5030F8AE148231411
64B0361529D811FE8DCF23C73C1F725870E1EDE2178EE0C0946B845F3F2D5F0B
F62B6497F6781F32893D64458139194EA386994A41063D2E2E868BBDABD12521
97880A1A242E8650BF0FE0D02980AECF04694B791BC6F10FDAA9EDEE9495FDFB
A62DA37C7309D66B908E8A014458D1F8290D5915969AF272C2205E542ED87378
91E67C65FA8F9EC9834A8D9C9B376D9B539BEDFBE4BF99F370E1AAD59C3ABA73
070F8B3C4799D6498B2F62BC7656361D068D9761757536A48FC7ADE554980182
5D973C8A6F4BB62A72EA85547426FB8DCA85CED8C179E8DA15A08BF24108CDCE
EDD003C61EF73480A4CBA019D4C4866C8289575DB1DE6054E882EE083ACF0B95
B9F10B01117601E0392FC12D4EC40EC00C947C89E380097BE5BD77A51994D7A7
0B3DFE83AA120EA654C068E4B12A37D0960B0EF0C116A96A4D934D0D15FA88CD
2ECD40C3C7740478F55C4D6DA862B50F90997989CE492D8848CDF727393E94DD
3DF00391AF696A2E581AC595954FC46EC0A0C5CCDFA25165223FB04C30D61441
B0D8380C6414DB97B3D34B2D59D4B2A379AE1347C5A1FE39542C9D91937A6E0F
AF7F415B3CCDE7AADBCF72697BCC9D14602275C0287AD45948B2225F0183BD48
1A526F5680F6A1727CBA3106A6BF5C8893C457CF577E82FF229A45F7F93FDE5D
6DC0252CA2E3EFEDE150916661FEF85C14B05421BCFC5DF8A50E6F0C48860C52
FEEFAA70B595334552B4A676A118B0167E8FC7306842562DA2C99510EE1BBDF3
5CB672FFB77E890A17ED14F2FE579CA55C5BBF59EA72036E19E10EF475F585B2
E615996C11BDC84BD9EA2524776745EE95527AA116CF31B971CAF5DBF65ECCD0
1FF04E658E44F23BEECB6E0DAB28979DCA9FF1E7B3A9E1899D032E61658CDD33
BE34ED09BB1BEF9525DBECFE5A994DA720B7C3E2C53CFAC71CF2763EF26955F5
809F8EF09A0175C5C1747D467FB498E88120CCCAF6A701DAC4FE7AEA6FF3F7F2
2A500C53429EF18C3D347430A1B8925501BF7FCD5CDE798B725558C8B741341F
24E8C339F174862A4BC3FE03C7D9738E03D9B5DE922234C3AB8B2DCC9D94BA8A
21751D1FF032610410865DC43C4E9819F846D9B60F92F2C3B62AEF7077B8FA5B
0B126BB87FF3DF515D63E547F9AD8CF4505C45A38D08DB2EA29D2C00B939B6AC
17FFA052985DAA45786E411F8AC6D254E74DC1322A9741056BFAB94251576B80
EB8FBB52909E97D788F5C8DC0E9814E3235B0C630DBB22E686D6BFC47B6586F5
2BAA60AD3772159ACAF8967883430B4EC67FA6ECA5A9E54448B512388D1CF765
ACDCA5950D6035DD2D0989FEB9866CE2EB3DD88426FB22EA87B5F38C119934FF
AA59ADD262C1B358E0D52FFB821C17B58701F3DC34532AF5DD8C8C9140E05481
1B3EA3F5219E94944D36E35F40969603A0C371B14621A2F0C3E12897B25691DE
E761FF14DE2471C7EBE744A55D65F3FB3C7726F68EA7F9EB544F4B83D25D0B9C
6EF72F6CA9EE71D716A24400838780D7C2198D16044BBA796678C9ED23D6194A
5CE794146C00F1E31DC3AD15631556A6C760A49679FEF8377A0078369178B57C
16A763CFC9BEEC276944BDEA255789EDE6B69399A1DEDDCEF664ECFD1D69262C
0EEF64A7622381ED566C918C355A7E402687546F246D8E681A3282F7FC211E10
1F5F89C1B76C61582F341E570DBBE34BE213E7DDC526F95192EEB731F6D39DA4
0442E67EF32A895735951A34D4BC0CEDF5E88B0303F5259CFC30E38AAE46D5DD
4ACD78335DC5F878639CEAE3E2E03FC534751C24EC1C8DBC315D549BEFC3F666
6785B281C06087C7308074735AAA3FD0AB6AEEAADB72DE788D21EA16D247D6D3
A4545BE3B5E6EDA99FB82D4F24883185E3C7F6A0EFB2930FE499F248E940EC06
39BEB7F11F2E56EA59E9C2459EEA57BC79FD821ADA931C653006BF67E0D0918F
99342104B207C338485DDEBAF95388BB7F6588A5E347A760B51AD1CFE2CCE12D
FC18BBDB6FD96D53CEB809BCEB184AF698665B8D35CAE3F78F40E9A45653BBAF
2A5DCA560DB5B8C52F4AEFBBA0F344D7EABE7118F71AC742574049DCA3094A9D
99F833D72AE088F54DC0BDD441EA5EB5A1FB8100CD692092402C43865262C004
10BBB31A89AD23AC7FA7E459A1023F9B8D3C9A53B4CF769C01D22D88A00E68A9
9FEA73FD346974FE59355ACB996BAF7CCF8E9071B1A5330B4892FCEC5A6398F2
75C8B92FD67915B1EE59C9A5A7938D08CE3F3A67A4C263F63D55D6424C5CE0D0
F6AD56640152A5010D25C836FAD8B8569DAEAE618717AE5BAE847C7D3D93177D
BCAB9C0F48855D71309A984566D9ECB58F8095D33B8396AE9B26342CC1D2A284
C37ECAFCBA2E54C16968D6B6BA19ED3CF567435DB54DE73544E80F8777A6B186
C8FD3838F5B823E14F44F36BEF5A07EAD837166627BCFFAD92E81D09228398FC
DA1106827D618DFA762A90DBF8A81AD82D0A95CE800AC28452FA2CD04488D639
D423941364192AA53E84DA5A4DE353373CD1D23D5C8E17CF1B43A482C44FE52E
57AF48D2375D21C8242D03E3D85EBB3BE1A6D4EBF7A9FDE0E88D656750B7FCD8
F9F4404D63C42FA73782218F74DE5C3A8EB13D3ECC701D275A4878C535AA80BB
06A429FAFE042B95362C5B793BC059ACEADE93FC725A6315AA0E7C4AC928F2EA
88AE5958686879FCB9B039E7FC13D79202C898ABF8814F6A2E740041BB122DBE
C4C3C3AC7708061FAC0F21DE18CC23D29A563527B15BCB9C8F162E7A48480D0F
5E55A0973254A9DEF9CE76A3526513FC15FDF323A7899A1BA694A320774FC770
32EC9E697E93BC968A3F78C8604FB03A0AF394E19A0E52BB46A9850AB9E8BE22
5001F0CB10F8DD82910F9A54F39A5C5BCFCB4F3C90BFB9F256F3160A370EBA37
75F42C837C0EED87D94F45B85F3948863924D5F3355F74426C952ABAA076116C
1C2D27B9DDC03BC852C5D7937B732B70597855C7964AD6F4FAEE9F0BEF5B482D
31C5F5B2960C0C2E0D427A713907A95EFE0C6285614326B0AD42A75AC7D156E1
A9561FF08925876B799D5665F1267A0E59B755AAB6CFF8C020774C1727855505
DB8C601A9283ABC20CF7377AEB8298F345143869EF2B04A9864399583A390DFB
EA6CA09E14D698AAFBABFD2A446D883DFAAE27BF42F6866AD831D631B7528CE9
74D946580324BF7F2B44615B72C931DAF6B19913DD94A095E4B2F57EF19D89A0
F276FAC37FD8E9C9BBB34D0EFD9E47A544920C2BE36820C331E72F069DD3739F
07C11830103B732C1027C39EDAB816E099B953AAD3CC8899C97BCA2F9CD2A091
C42D3CB1FBE7D0F8C9D1468B6713F82AE6092967D4E43179BFF1CD0F88340E81
D2D6F4ABCB7C7BE9202555EC74D7AA1ACCC5CA59C7DBA7BB788405E231757CD8
175965002910D112DF6341DFEE19BF4B5E695EAFAEC86A147A6E9968E8F5830F
47DE55985F7A7A96E9218C3731456C9077D697A0584AE0E07159996B79C2E679
5E23A23550F2FCACEE28D2EB500B38FCDB6DB1899AD7FE533332C2D90D8D8444
7816C50B3CF627BD0DDBD396B69DF25D060710DD4D960A54206920093FC68ACC
C79D98C7E850D5F09B14F78894CB754E19D48904F8ED72CF2BFCD65F31936566
4005C1EAA0748ED6957943CB68FF8C26CBA953C6B82258000B6D2C3C3A92E22A
524769AD886E9F2785D8F67A3D5B4CC33FC8232326E151781A640242A7F90319
90ECA662DE75C772FB11D019E52CE28C399FFB4E97C959F86718EAFB0BDE28FE
6166B7EF67D7F07880D404FCEFD735A30CB36BFBE64B379F8E71356A19C3C8F1
474288B024F03F0631861107E343BBC2EA1C394DE4149557455B2CFEA95027E1
DA5C10357563DFE608976BFFFD0F844E015232E6F9CD7C8D32D8B2B888BDE632
FACC6CBD3A5223FA723EFAA84FD6EA0745BDAE47BDD7E310F728678A726E9614
EE00A96A46F337A59C6A1617E7E4D1076EA86869FB6A6B9EDA0DC583D201356C
FBE7F32023270E16EF1B8897DF2D441998F18B3C14F8566166049B3B194B9ADB
AFA183E456920997E662D2ABAAD52B7786F474DB499E802565FBD5AC0ED259E0
B63F40DAFCB3256C828DB41788F1BC394EB03B033045B2D349C1E1613311107F
B3CD7B7694A64A95A41AAD21E8DF75159DAA5298D829FD335F3827C63BCF70C1
48A49FC064236B9340F43765E7A78843F80CD7B57E14DF5459E0A6BC2C76377E
2361A8F1515FC5A3606515A2BD4F6048E3C5F711ACB121E1FE2A443AC56D782F
9C00CB69862BB37F58DB3521C7AF9F234D291EB59728E32AE25257AD3ED6BA7F
318D512C3D1C76236AFE4DF593C7F6DB71FAF9766F1702746B420A8FE98AD94A
97AE0DFB1B1603105D9445D429266F567B132C71953DEBAC208C8272237FE1ED
4B9337EC9AC070D6957E926E3CFEF9838FD3C852A72A74EB608363E505946361
3DD3642FEB66E6B1B595C9461C121B684BFF38642B9C7508044B4CD160E676E3
00BC1494905267DA0427420FD87917A43837A742E6BC0DD381CFE39B1ABF2526
DA3FACFBD77625187480793FD7969798C718E4EC94398243103721E30DA61CB7
7511FA0787E85321CD0AA9688FFEAD35BC2E9C405FA52C6847A3A1C7323A0935
8C5704F69A894BFE483DBF0175E38ABC28ECA5E63308CF5F8E9E8997F036A3A8
F7868AC2FF5503345E4F4A6E7EFCB1F326CD845845D26F0DDF15552628A74F86
8BD4D2990F451421A0F85893CCA9C6D1FE5F15E5DBEF7CC0602182E2C3AB0FAE
963A6900A60205116AB7833F6D6B05C5DD21C104DFD1A03D3562088674E1A5EB
A0A9E423D61A898AB9A7EC2C3618A3D5FF6E2D868CAE978182462E04EB920555
F5593D1424A27BE1CC0264DD42584EB12B89196EB68D5F59E761B0D1621E16A8
19EEFAEAC7E0BB26189F7B6AE47857FD9F452BC2FAE1A7E139F44B075DD74BEF
C4AE0B9657A9A09A3BD8FE0CDFFB01A7C517E2267C0BA20C1573C6A2EB6D9A07
A13FB84E24D2615ACEF5999600A61F3C0B0DCC64D2C5A882ECD1A41CBF9326FE
6936271F8902F1D84193F734DAEE410D448CBE720D8CAD36D50E4D18176A2720
844B18549AE4B6C9C4C63AA9C42EF5308FA1C01ABE66D207B1B9F3D6E244C2EB
1096DB5C02E1AF43956360D95D5D7144897BF648A3C258C95A2A8EDBE8849EBB
220036537A2AF4BD6726BE199F2E24D41D8E4E82141BA943A9A26489C6E592CD
6DC305A236BB1633B441951AE4D8239C8B020A330E0F82D0E0CBFEA2B46E8D61
34F3B131E21D9E45BFA75FF0EC442E5777DE6EA5FCD0612E598D6E680442A497
794DB037FF2B47792F37440073CC4C3320AFFE4365875DA30915A7C570B2B164
F0B2B5ECDFAF2EF56B96AD13CB6D5F56D05FF73EDF3ED52554FC30D13BC5C604
7F831ADA61B11F5EC2A777B1D28F8CF0A14B7119455A653A09785355F5411841
0C3AE94403AF63A40DA97BA8D799E146F31180C9972627CFECB97467DCE9D171
DA79E74E58AAA8C0AEF2AF2E57814953D52B0A034A6ED16D16922B30479B5863
CF5E63CD74A6F5A05E86B95E507F008FE0235443EA58DED0B8D7F98D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans12-Regular
%!PS-AdobeFont-1.0: LMSans12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans12-Regular known{/LMSans12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans12-Regular)readonly def
/FamilyName(LMSans12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMSans12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-411 -308 1407 1154}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123833081E024C973A102D8F460BD9
75ADEB5A09536D6F3C9E0404C494A7531556EFD108E97E770410E56FEFC620A9
58A40E61E443EA13AB10BA1FFC9A8C5A0AE4B3A70B9DDA35CA4FAC9678E39054
2086BDBD692C89708EFFFA5F235831F7A839BBC56C877DB8F713A2D5393994A8
357B4DD54096FEC1724D57F143398862CA36F1C982DF09539CB8C9F0E7CBE7D2
13233BF5F8C425FABD2185591D3722ABE7F23FDC6700C38136752536882D7EF2
65AF1EBCE3D1D0DA11C2DBD4DE61169AD2010446EE632BF9DF6D929733846462
D10A17CDA1BF70BC1B45EF8BDF72CC5BF96901EE0E7FACDC309AD744B803E28D
170937F444782DBF1A9F10FFCA1E96428C339564080B955D616BB9A3E6C6A801
ADF0609EAF23845FC74ED07C0FD09827EA10884C9B6B900F3FC4C2DAA80823C3
52199CAB38314687E16B2402A698EF5C895BF425ED9B2499D4202D0A8D1216A4
E1187557EB50C8249AF9CC836B1B1D9B4A28CCE970EDAEB57538E662AF941CE0
53D88DB0B078DB739F022E2F92A79F2EB23F089A0E3199C3C2FAE7B93A66DB5C
F10E6763DAC5C342EFFB9104ECD0125C6E7D32D5CE68D11C2014A33EADEA70A8
03A83F22CAB36A7EE9AFD9569661D2B65FB216AB8D1FC7A52F1A471D48B5AA41
16746756E0A8DDE70884DB4D1DC78EFCC745E00B803C7496C6FFC65CAE5FF981
CF760C9E8224BB781DB61934E01B2E9197BB6702E6B1A57C454FA5DE2100267F
912D837CCD9A027E9A7B3BEEEBCC3AF72685CA319212891B6D217650738552E1
048F13CD46B6620DC526A8164D1FE7D9D20EBA6F65CF59CA7A611B1DACB00CFE
42BD5BAAF8E4C6076820DB48DEBAE7E5D36969EDD94FF0050D5F880823A40F9B
6601CF5E16B62AC684179510113589997DE43DAAF37144199ADF6D36E3DD98D5
D4B7A8437E6E7F9B01D636671DF223DB8FE2188D1505B5E82FDAF2671D468141
8E63895C1C7A4273E038B480FE61049ABCF2FE74ACA3475D594505629408224D
070207CC4E1855F6326AFE7AF5F4B0854963D365236AC309D47A2668C28A6FBB
8169F69C0D641428143181B7E1827E553A48C936C547CD0C79EBD545378913C1
E8BB064779C78D100FF516E0C93259F7DE3BF4B2B5FFC4C87D544EB1E5B45ACA
F787C842A25D792BA8EF152B0392DD7958F06FC41A77C8E75F715BFEA141E095
5872F63A26C470C8F9697FBA63800A37B6EDB5E58E81BCA267212F3D633FB84B
44F02B39F48375A7D75BC37FEB2784C1A15D68F407CA937D4D90887795B84C8A
54C899C531EFC61D7732019B86C11D799B79F33BB09CB6771F637E09486EACAA
CC508B9D267C79A91646478075E259EB8C971379458F91CD3F83B840B2E72336
283EB997E386B404E48B5B4511A96F0B373299C95C2D501F8A3EDA87ACC3D6E2
AC4D82E661E5A45CB902EF9E2617F7412DBE459C3CC79AE1D2AF03ADBF5D625A
FA29921EB9409CC94D3224E75B5764B9DFAA97EA454B7FA5E39585CD37431DFD
AF370FBC0313D946B09DCF303293ED9D5949D482127CA20F8DD56C8A500C6E34
DE1ABCFC79C06E69FC7987E3727EE06985E1559ADF6B988586E9D210CF36B6ED
E8ABE94C8BDDA908C412D1709F4B5EC0212C697D91FA63D6E5955CAA4FFE0F06
DD5F7604EE916A37FFEE337098C8B53B75ACBAA50F748688B6226EF1B9E6113A
1C31010A4BBD104C7E5AC057FA551EBBE8B2E16CCC5EFD174057C781DFD270EE
45E8CE8C60473C239DBA7010D3C9B6F79B12C6005B9831146AE55A893A5F9B7B
3709B544C8412F8BF64203D044ECC7FEEFA841B2274570DCE510E39D6CC4DB91
F9C3A7C06483A7FE49E9118C94F79ADB280E5CC38402C1E9F9DF9E9129E83B98
8B18A9BC4C44810607BFEFA00940B0624E52F21809704749F6D81E3B829D1441
8D9B930ECC63475BBB8CD1B142632FADD1D6C3D3AD841AD6A54680825267D023
FC3381A9A2CD89BABD30E5D617A93CDA0960657CC231C6F1D98278F2222ED6B4
77A7342D64AC059315DDAD1A2FA1F4E8CC696B00234513431B7D81D89117506F
0E89A63DFEBB88CE500AE7972C57A0BAA11AEEF6BC819027F403EBA7BE1C9AA1
AE684E1539E549972C97321FA0710759B6D079E0E3C276E3A5117350E877FFF9
7EAE242EFCE7AC3A5D542924F4BF5B4F3426C6C6E12E081339CDBD42CF9D106F
3BC09ED496BD9A79025A9683ABE4C7E6D2D4BDE30E5E1DC183CA471A63C5F45A
0225ED905D98ADC253FBB76D129DA851411F7D28F71BFD25F6FBAF766F159B03
5A561C376465F9331E5C7BDD1DA502ED79B2E8AF3DB3E40BE9E22D7346A518C7
B6B74768537CC669D8DC37769E59A5AC6BF061C79FEE265DBB5F0801EE2009B8
B1BB2CBC48AC2F425E8150E0A2C212DAC5B425EC8BA4590DD3555C2E4BB60197
FBB2324D6370D121761ABABD7B6678871BABF0D67EB829004D89767CF909DC12
49B2200374537635289B228121B5E3D7AF90313E70594EB5C354023BFA079124
08F171374EBEA72D599A27C0EED6598CEA99A13F659089458E3FFF42CE5D0AAB
28D29BA62C2BE02FC7C9FCC92C8C52D54E74329224C0D1AF05E482ED4FBBBCD1
5139DE92556B38F254A74BFFF2BEAAFB4F0EA0D1DA71F18A307061E7A19A3AF4
137889983657F78257CE77F79C2B2064115FCC2C0B048E62B50BF64A9A860C3B
91E456C1A83904F00C6F8129E347C6489FD4FC798ADAC7744A506E329C20D03E
5B00CC748B3EBD9A17525FB5101CDB4D94A4EBC6ED848E3EDAF5E6DDE7690BE3
C6CB2F55A12A0B8BBADA91A7C1C1A18789758287708E4FB86B2C028864FE5136
2683301207BC5711AF71E05D6548E39FA117B079C8302B574F7897D9F07AC262
0A4FB421D079F3741B296A58F0D5B4E47DECF584696F1F4AD63F015A117D2212
94A8AAEEC417AA6A4F842120B84252B3FA5AB67BD68C9727006876DC67F01E42
39B2702AAA0A8F27EC86192E30A5239A449B6A5399030B8ED5DC485BB8344458
6FAE57AEB962FA815982A2A9463279CFFDCB820EB0DD10EA298634FAF1FEBBAC
A5055336EA2E3A55F05E65D826D0748FD49BF7D3064DD668D016CD47C8D086A4
C9BA264829CBB9EC5EFFF31273BD8C22F12467B61057FC53C3BC05FB8E64B58A
3BB336E66A2071FFDB24D02862BE4DC8DFCF80A39E4CBD884D4994A7EC9407F5
280FE5690CC53C46F4BAD3A827D42FFA01150302010956C520A7F55F81FE2585
89761269DE4E4E4F911E68000E98D0ACD139BF6423C688F32BFA5256F93585A4
3DFF3C144EEE61D2894CAA4AD7BBB0F287460E60E88B89FFD651A00F8F45B3B0
8141DD5CDEB790D76C36E9CBCA5A906415083489A14C8EAE44E172D358E005C5
5B6413A9215AF9B9433AF21E8D84C50F750434191ECF16684185BEEA512B1FC5
5E137D23FE61B7D69D1EE483631D91DC81CF23FABAC0975AC960D4C07E4AB64B
360AF67CF350E769A7EB0E1B9BF5CD44BE1164638B6D952A9A16171880421569
23BD16CC0CB64264C3A44FEEDD179DB382F2181EC00A0208E0451F6B0CA3360A
D997EA5FD141D570451BADF0EBA854D9D2B0A27A20D8099642B28DE5BACD422A
27CC8CFA6819F92BF68422A2D6CDAF240C096EA124FDA5B87D97FEE3A170D269
A68FDC8BBD23B356B7A1488750A4D98DD79667371111222279FD4712E7CFB155
4FB459F06712270221C598B15D0E4A8C0DFE90BD2AB4370BF03E8058B5A0E097
E2F3DBA7F211C30A4DC08B2473442AB00336285F642D05A7B901F7AB8E77C6FB
72D7CB3D6953F1416C4D716827503C93150922D97E5DA774EBD006978CBDE78D
938FA99A616BBD1008CCD083D9C4180B08D53616B34C18DF8A379C2219317231
8686ED9E447F8E18556F50BC229E49B5D231FE5E26BAC879B6A7E1A6BEAC841C
F417C17343950F65DDD3206D4D9072461F746076EF9C47598585ED0C78B4D7E5
B9422B3CE88E98C241707FC2CDE157EC885EA0000B6E49EA8C144C8F1550F037
67A1D3A0AF7BCC25BFCEA010E023A2FB117C451A2415E08504F525DF166B4F58
7AE41977105175EF736828BE87991F755B2DBA4BD765F7A4F966BDDBC0507DA6
8296988817E8404FDE7B730558C056E1E29D254B3021D0E6CC6B1905140B6A49
6100C45E9108F029E68711C7E50370BAF7C1B52A067A884BEC6465A581489738
2EE7ECDDB8ED8DC1747380E0BF357209D6A4F4EE88E6634FF0A4AE92B580F02F
F2494CFF98E6ED9A01DC44BF13FDC091C45B8261D9FA08099BDCC0FBB35FE44D
C25B24CC704A0E31DB990EA9E24711FEBDC472571A6977855796EA22A64441FF
6949A8AE1753283BF2E9B0A86139AC1EB0C5870276265C795C55AE4E6C07855A
9BC2FBF17E8D546513FC15FDF323A7899A1BA694A320774FC7703576675ABD0F
0CEB9B96FE8BF57624B10D14CBF511921B60DC41B057ABDD59C5F5A07C0EB7A1
F1AE6D768B1763CC67595BA4880CE60BB7BE9A862223C5C6E41197EA826E100A
50ABDAA8951194774A8B20702D160C3450D2EE128ECCF8C27B8893041F84F2C6
DA434EA611EBCCDB60E4DDF1259F366FB11B9A9D5FBF66C5988D929182800618
56219C5847C0D82F0E866312D963E012DF0DD899911C7881228C82C0AFEB9A32
5D7CE7BF9AD7FC50473C92609CE1570BA2AB068CCE168552299361D62A2BC2C0
DDD57D65FAFBE78109CAB35AC2730A761CAAED96AFDADB8530E36B5B02D2FC02
738AA6FA7C4CC66C88F5BF25B6F0570AE15B9882BDC14A6567C19ABE55F81863
65B3090508338A531A7A874DFB11A5F1CA109CE8784A5B2BDC24F03B894B8051
2880391F89EC495EC8F05B5E06C7BD037EE34C9DAEE69D70D010C705403B359B
DAA5B9ADD109BB291933374888A6584744692F87A67A218BFBCC8B3F417DAB70
698F2052A9C6410448F075E158083B2BD43CA2D9ACE4C844CA4FF989A4D77F1E
20200387B025179C6C7BCBBB8D9714249A9A7C328D7FBACC31F8B5061C0CBC62
0D7CCAA0E331EB7AB0AF62CF9D5799030B8ED5DC485BB83444586FAE57AEB962
FA86448499C94A7162FA00F6E05E273B5DB89549315DD15FDBAD3DD5D71B748F
6814D308FDD1F2E214177FB453C94CDD629E4877DC526ACBDE6CC483A11B6093
8F0956B1B27F79F9C3C1353B559859C6B14B1960E18DAED68295A02CC27547BF
62ECB5E25A0AE928DA1E4073F2400FAA310695FD7B7BB37C48B7CC48D99DC9AA
79388C90BF6C7B559438F73AABBFA8010815AD83B7F79B4DD5F1392A2FE4AB32
A13A3DC4FAE0E34E485C31FB2952DAD2A611754147780ED76337619F86AF1FB6
373D0CEE6B46717917ED45A1E9807DE85363DF1E379460259D44CE01645BC787
3825FA54222D3F56DD91A409F5C00077A7B5F0C07240EB661511365081CC4B57
46D7DAA3C8C73B78F1F4A9842205E640375A9CAA5245667D057C95F2CA95993E
712629C891F2FC0CDFB18D8A4D2260DC93D7AC1107B3099C3D0F5BB813A1200D
EB0CEBAB8C20F82F494A32C35EA00D00CFC5CF8008EFBE21C38F9927527A4AAC
3AC93E098DC1B5EB22D5F83D6A295AB9E01BF45591DFC3BF8DAFE5401FA6479D
C0309A89C78837971855488EB554A6B562089EFBECCA2B2664527B384EB259A7
B19DC098BCF23767A1D3A0AF7BCC25BFCEA010E023A2FB117C451F2E69FDADB2
7871E711B7F00F668A0240AC9A7D179D09F52673BB21073D7A313CDC5FBCB16F
F1571FF48BB3F366A50E379B80399771B0B2912C8BE0428AC71A76D0CF3C64AD
63E04E8EBAC26CE3FE8DDE8F6C30A2362BC44739F4219854F51D3B81A2968A26
33D19D19CB2F9733D45747785C433D4E18A02ABA38F55742DC36E4FF07A5A09E
8C6792D3B1BA80063E3556AD68D0B2AE350504DC28336D492C4F6A7635B85ECF
70EF5733EDB26731D148A0DF7322C3FEEA48C6B4DFBDB48F7FFD497736E320C2
EA32FE2C326F29090704D06AA53B7559CCD26C3A1272CFA2C28FBBBC520AACBF
BDF74AED0B3575A19CFFBD20C3942823DFD0AA1DF822BB91C547733B18DBB01E
4B38BEB534701FC7128048CE8F2291AE97EF2C4B2446425BCE1E1D939E2B603A
03E917000E9803BBF7BBDAAEF0C88BA83CF4138AC7B430553ED3E8160E813F2C
217744EDDCB8CEA62AA27DA04D2DC9F3EB1838B3E3E370977998371DBAC5D3BB
E5694204AE852E6BAA8F264F70046B4730E9769D739C71DB7CF2DE13629464CB
5F4A1F760154BF1A88960FCE4C041E61B36E8A106BF35F9060144E812983C01D
2DCDA032E7D4C759CE994AD4BD0065D122E44FFE52EEFF539E3EF0CED8BAD13A
F40588675EF2B1413840E8D3E7146C9A060745B4F20C79A7038E473F435DCC8D
FED5B9071ACAB17EED41E81108B629E81060CE90ADF3FEE957603462E0F9C036
7151C840D11BF79397C17BE61B0803DE1A88EA79242103B3BC5F55E235A90201
A826568CF2C21EE1C72679204F116B2C354852A9E33D2440FD85E483A0A0BCE8
15E3F49E2D6E5CBA9F47D591269CD9D9B9600F500D06F042DAF6C658893DFBF0
DB8BEA767880B7064D05A6A2F57FDDAC9BB599A95E1F1CFD654ADAF5DE725EBF
17B214E686BC0E3B26CC627FEBDAB4FE37D8692A080EAA8ED098C052BFC0B40F
BFCA767F3B1EEA76B1520772E16580B0405EABD1DD34C94719878B9D613AF0C9
401D371E3543F0C4521DA28864D735B28426EFA3D588D038860AAB3B92A806EB
2F90AB0BE445530439E0E8AE43B43A1B6AA35114D0B8D5DBFA2F1CA5C3862939
0622627FCEDE6884228ACBA46F5DDF43D3CA439B4506CCFE90F24C7522498A17
C7ECFFAF85013B5C541204F798245660D391A59B4B308A8A510FF245BEC7B300
4A57E094DB56BE8EE394EBDC3D33C8B63F94DA672C9D042051FB5E063BE17504
EE916A37FFEE337098C8B53B75ACBAA50F7485D29433BBFECE063768C3B08BA6
47BC6CF4B18AFBCBAE3F8EA164B82D3C3FBF6D1C7B96B726329E0436DA0F2294
D48ABE642223D82A657245105757BE84B599C63F2C3858CDE5E43BBB6020F93B
FDE57FE531E829847D1672900092F211502AF427398B9E645141C6C9FD4CF7CD
176B5C217E6B32B701653742F669F54657753742042E992458F260D47645B8A7
18653D7665C79B220005CBEDC0A5E495CD52CF9919C19E9781EED303F8781D65
E8E779B5442C5AA2F385A84BB64B27DA576A7BD8350C28609799A8D59C3ABA73
070F8B3C4799D6498B2F62BC76563115F3E51FC473410F96B56B11B7BA4B3B0F
935D7B9F86B8D12D634ACA4FE2E0A3A7504E4A466962C44C451D307CCE78AC3A
DF0223DA6C547263340213128BC9D5A34CE24219818BC1F6FCDB8314C064230E
5FBC126CAEBF6CD39A86F5A809952F25B26C6557DD62C2B52388A1B7BBD57EE3
FD9780A42ED36A33E97F6D1A429EFC799DDB5074CD05055A705CC4D79163209A
2105EAC6577EA6EB46F5C9C061A44DE0154738DE06D361E0D9154FD2BB8D13EC
CFAF101CDED67042D64FF3624B53DB291BB2F6754CF1AFF83033522871198AB3
E954EDD88B5059BFBB42A9C79F4D9AE66BDDC633EF0ABF651BD35A09736BCACA
A7F29DF885D233DE4656E4CCC1AC1A5762BE48F5FA88A3ADE94F7113FD6D52BE
C23C21EC0C0FDE2375719E96291ADBDDD3E0EA1BC88E523099196F039EB567BF
B06BBFB8FA7D68D16395D93479B3BD866A4BF33913DEB54B4D0301CF72309950
D176CFAA1D155312586A9ADC136D921F396AEB0DCF37DFE3C79EDBE008780085
38C79938E28987AEDACA045F663A3C778D20B652D4C20EC662F2726199A62939
188C01706215B1223128DFF2F1BECFDC59BBB6448230C4611B33767D290398B0
7A09A94DBAE60D05D8768C7E3C3908B4D748B2F1FE882F22297B2A88B26D7CCB
0124DE9784FF7538DC0F88112C0E8D91E5330643C077FAC71FD55A5490C89142
F2844CB7E6352B01A120D5A0ADDFF4C3ECD7CC083D70252227836371FF83844D
7CF632B8E1AE26BA4CC08A38139660C9A3A2B130706BEB708B430846E137E6CA
0B5436653A968FE24DF8D02DC26A1AA148C5E9680DC50E67D95B2D0C57BC179F
1A765EFF7AFE7DC3807891D039AECEAC3F500A09579E6054F2B7EAE3FBE028D5
14C87A680A7A532F0E53AD0E8B1F1397A02EF8DBC323983FE3080CC0BE03329F
B9B40EF27EE622317120AE39713EEC28B51D1A2970F7C8A64547FA80B60089D4
C18F187D265E8494A80BDB1FCB3ECCBCDB4AF2E9B350DB04B85024823654FD33
D3C4D429D37C4CAF7A37864A8B18325C60CB9284367B49478A0E8DD61425787A
B6ACFF6967548E00ABF534D4380E4BBC02BB41017FF1B1FBA0F5D7D4B35D4E24
AC4A11F6D76800F3561044339C2037CF6834EB429617C33666A20F9454A3AAA5
63B6A59B12647827BC6F11BC2C3CD7CDEF8DF249E7926255FD030246AC687884
A3547DA00438951DDFA590B63A76E9B25318716BD59861F51B561DCC115192A1
E700979E292B3B57E1F7A9FBAE495A2A25D5A813D0A74F91FD7DFC6712CE7D2C
ACE19A749B192F87B72ACCB03DDE3CD408714E8E7C016ED719D6A4D045FA24AD
81E1AAADF851722AAC41B5ABF27FD6F447801DBE77B0098F6A9219BC87F66880
4CDB793530EF5B16FA667198C88057746CDC1EC49ED6114400F4724ECFF05FE0
BED47D963864DEA98B2691D0AF9A6EAEAB6297F1DE23785F7A30EF6B71A0E91D
39A856F11BE21F316D94ECBCAD9BD4E0ECC674B6BE583E3134464F5E6D442E7D
8B58020A028A1E226FCEB33E58A669E704123CC218A3E114BDEA9E08731EFF39
67B5A741B252F764BFBC18C29E0A119453CFD04FC736141F03DA35D68D91E93E
80203A62ADA5F3B76236524AA186982F47DA47525569C373B4B066BA74AEC150
52FE6AC212A20E02B86BE559E9AB16B32D0DF74EC475AC3C97FCC08A6E6797D9
D6D4D6794945B39D24804E5B935961125F4E43D88E7B92DCDCB3F560C5391915
6C4AD3607A91673A3DF62988DE97DA96C5C43CC63FBA4965079538C1F9087E6F
C665136B7ABFFE8DBF11827CAB1C331966C80787F35EAB3A94CCB98CF5733C7D
B75DA4EB3D39A3B9FDEF15DA1F1505CDD37755796CD5FD0793D7E8418BBACFC6
60D888697296B7CC6581024CE4DA29A54EA6E94CF68DC85C76FD06BA4B0915B9
EEBD5FE0CA05E9D6622174BDE3AB3916E34B9EAF5DEFC753A8023D4BDD17AA55
05268CA9DF32C3DAB7A37106D82AC8FF565002B13BABBE8D07DC3F0C5D4B3519
48D03668F1F26FDD83522D571226623E88BBEA686CCADB88397DB55F731E1C77
8CAB39F889A684F409BD672C3E6A26B4F2421D47D767D4558876E85ABB0B8396
FEE0C3327CFFED7F4CE855754BC800985A57640B2B6105B2D2C996F6D5724889
6469D83A6A168B34B0F1FF61A2D99F8C01DF70C9EB8B728581AA72EC3A00921D
30E42D3DAA179D9F9D728F290DCB8BC01CBF67436CEDBF502C4013C1C4FB9CD5
F09E057B1A71343DACC41CBCDC0E30F2E76DCB77221ED71F4119E6587FBB3C5D
950A578830C4D8725C47D095527498A7B5262D6F945FD708A4B04A9E22F5347D
E5CECCAB3F113FCCCA9588C7FB72643EAB8F6D8AEAD1DF4E56E92AA7E3D696B9
7D6C8D1A7E9F4CB2CE8882889DD629227B34D001A98B961862B5BA481DA1E4DB
4B8B29B883E85B6CB1AD69A9A97282E8DF9FA97A20E05E027CA299F61F1E92D2
7AEE0923C67DEE00878E5D449CB25E37E5B5348DB0B4782BA6D48AEE80D379CF
EE11E4F1CE43E0545BF465C1E966923DCD1D8AC4D0D2CC09E75AC1D3D6BC8E91
67970E1D356361BFAE3F7F5DF22D8F98C83A959665078867B4A024FC24B16AB6
474F370F7F61C6F76CE0067D2FF9093CBD6788A412D211A3EED9136B5B6C0F73
4A510548DE1788FF9C89DFBB823DF700E40C2E96411987BA74CE27B2C4557D4B
04E7F771105122A7F30AA68962E8A8CB29C6584BD23C0C34D077E4EEED50C049
23BAA32F2A94D9355ECCF69B6298116DF61E574345341D1114A3F53E9A4C8A79
6E104EC899AC0F12E39367ACA998EEC3BD084571DDF97E17A71DBE46014A352D
4B319133E9C9B38EF5D524E99EAD57A66C587F16F3B41280964BFF59B4AE356D
1DB3175DDC2A6AFD06EEE99509185F0BD9E6F5A06182C3B9844843B36660FB31
D933BF448907921383630F2C6D55F3188F2D11E04C8D23621F7BC8C90F4C4593
52F8149CF30339DAA54F8FA10295E55782D1960A12E9EC3C63D5CFFD2BC79127
EB92A645AA18733BD09F1D6E4B8F925E543869180F1374F8B233A668D08BC1B6
87408F072FA391643405435A09C1257CFAF86F446637D795510E5BFA475E8051
C73026B1B7D86F199033EB001C3B895E824DED43C96305B0D042E6D59F5DD763
FF359543D3E20D2F490B50F61445266E23D699CB6B1AF3199A54D8D459907D97
37C5E7929E55AF96F3C9D558B0EE52466D6DDE336D4B5F9F8395469839226C61
F3887B80F89660C0D86A22BE594113A00F62F7A579FD36FD6F1A44EF78C16719
0F3326BA35B2A0F95CD035417C7E909B751F4CDC6547F9D72805E61ABDFC1C57
0DE53DC2D114FA43CE0B06A5B8FB130A3936C4504264CFF7864B165777B02C59
38A3F19631D6133A8A826BEFAAC61EE108B826DE9F26DF59B2995B000E5AE2CE
32B6DF5ACF58BB905440E0ADF465AA599C0B0869BBBBD14E58B469F62197B850
88749F3CAFA40A6A3223D4CED495D4459AE15405AC35BD4A4795277C0923A994
7A2F28A8B889507B3DBB57536F1C9C507DFBBDC3D963E6BD121634970021DFBF
5BC78580A7EF7997467C254D74D5092242276E88FADC94A77124E291CB27BF10
E4EFC417FDB11F8C09C385119682F575CF89AEF4279EB1FB8F7531E5EC8814C7
6D0B673363D7DE151C78BB908A41CE91E857CCA6D5E8F941E8FAAFF32D168731
C03913C82AB96C6B723DD400922EF71403FAB37A820E7DF4E1CF4061D8C6D16E
DE5DD63C6EC51A967A23BE0879A268D2223BB036F4E838DC954C2DC09A14F2E6
98411F9F932836F6804E78DAEAFCF015DE9895482BE9AA96C29817AF06F4263C
6099B6D3B57E8D4806BB3A779935CB46463F4570CC1FCD2159FEFAADFD9A15AA
5610C82FE9B6F9C2CCBC0FF2E710146CB74494C551826A537FBE9B5F897B957C
DB27ABA4802F0AFBD6BA02D3036E3C56FDFD630C2E836FE1207E4025C49819CE
FBB990105C1DED1E18B1755EDCEBE41A6528A38D308552CC5598CEA91C8F135C
EA06C3251DD02D57D1F95EC6F09B8FA5F6FBA1D55BB33E7D9402419FC8772046
E7834B9A083C4CC2401ED331A25863D89A01934A2877AB1C390DE24773607EE2
AF66BA82F846986F1BB03C76288AAD42D9AB73076F309317F7FFBDABE56B4CB2
B291386861828F6251F206B9131C951D1ED4364A9CCE52DA5FCE0F492497BACB
4DB51595758AFDC9C644CC5BF23418D84B5F9009000B752CFA7E50A7F9679101
4712D9E9AA04AB2C81845DE64C387F3AE3EA8386A9CB5709CF8C33314FACAE00
6BA2064623902C8AC479EEEBB609EABEC64590D98EDD86421400B49D576FF925
E058C54966D1FAB8F2E593A48DA79B9A3E4E92BC5172E92EC43876E931BD9D26
DACB5E8A0242A332391A370DEFEA53140B7DA1DBFF84740FD5F88665537D3BF2
79D84C6A19318E7B08B2939078355D6C3F9302988FC5A01A6942F350865E1404
CADB8AE7A83015B55D0FA449D50FD590376AEC5039310EF1F4ACEA1A40014BA2
7BD58490D2410AD3DE649F4F521C20F6B6AF7E151F7AC33A81947FACD655C0E5
3963712A6EAD0F218DAD2781926594A4119E9DB10B9392171DBF9964BBEC0301
3F324BD4B1E3053E4CB8558AB5F9CB60A2B2B7D3726D4D06CAA2CB08BE179789
840B6D116064975734ED3E74E2B1EB9C3682C8040370715DF701C4B69733D488
CBCC996806C997D5326D7D902B8126FA929A433A9A8512116A026D2210B7D755
78FCAD8E3B32647A0292A81A5594A1C5ECFC0FC07EB30F735D4C7F124920F461
86D26BFE14AB944E0B3949BAB173449FD05F2D761B67600AEE88C2282BC39C57
1BD45057FD09085730695ADEFF88717E96BB4B92ED7DBAD6C2DC672BF913ED44
A41A2D1E513C41D87218C21F110ECD864BED08172CD2FFCE0794E4BA2AC19A86
0AC497B2126955553D214FA3C5F0785CDDBA06FAF7AB4D8D807961392FB22C4F
8680188E87C206189B65F6E5571E7997ABF7A447BDF55731E6B46680D9AADC30
E799BEDE4F80E5CF50E44B9D8319141D0F640E86C7C229F5140D0B98341339A5
470B4C89E24C9D72A3A8C9438B74A118064460F8A6CB7312AB9DC7B899657452
8FBC9C6EC91E83583ED5B0AFC5B2DD38B9368C03518848B57E30DCC022B26EEA
ED59B188DCF08F2838AEF8F97FA0DEED0186FB1B803E6AEE1742329536A3295C
3057BE4D15DB780E4255E9382562559FC325940A05FFEA0A7F504EE39404C4F5
E6D391A190FE062FB0791804130249FCEE06738CF090F81C43B24A9FCBD966FF
BF154149073B8A3EEB12EFB77E7AABC37F57BFA2BDD7C3FC7ED277D9A29A3B03
EA96BC30446FA34F89ED1837EEDA8A195AB6AD13AB3CCFEC63A901A9B3B9A5C5
F43471ED8A0FF52EEC38F483A86D33B8FECB35E69BE2380291D3CFA907F17A4C
84ED0BF61A99266AFE0BC2925DEC606B81AF6894363B2114294E66864446DAA5
CE2591121516153380E4E2A0CEA310D96BDFD883642BDB5552535A012790EEA2
3D08ADA7F66A3DC74D6126B8BC8E30EC6CA788E903A6CD768A42943CFA8377EB
3E3F4C64EDBD88EF2013AB4829EF58D62DF6C4CD5658D8DEE558D56E15105A75
F19B8F6AC9B8097F47863AC853E1ECE7258754BE931C5E199A16DA891583A755
330A5E5AD93F564C9A163A37AABE8921D306DD688EE37286AAE2DC22B56916C1
8B99C39E1F3FAF32B3527B9A9CF7FEE23F269EF4CEA57207AAB2B3D7D624218A
2888F4D7C9DA3B7B59CB40CC950CB577B025755BA04D5D03A83FE103DE7EB45D
DACBAC1620BCE641230920C23A80134558EEDDA22949ECB484E49E3CAEBB563D
7486F097CF267B9E0069E0916E6B555B31670C7044FACECC830BF9FC5B0C478C
740515971B4CE4375A1A9F1EC3D6148A1C850ACDD1D0D9287FA97D0495E28CB8
E2FE2A4CC0B9DE515A0FCB8C2C221C3E656F55B139CDD5C4C87B5870BFAECB14
6A3D451B69246E1B04069357CC21D8439789FD52FCBBBEAC636430D496E772B1
34E967A87C75DDB0CF6D217E3A78C1F0021E46CA77856A05A144DD0BC77CBFAC
40D1AAA281E4E34420D1FDC40E678BC42FB3835475F0982248D937A6C2DD7C23
20DC37841E76F57069E9178CABF3FA0FFB2587943DFDB4C6864CF1FC7152CC20
860755DBFF548AB5AB1461702C16DB6B9FC7A6BC09A67527FF79A7F4AE5AA240
9548C3FA691051689741CF3E4A01ED227D758B40E87EFB947F6EF31DCC61CDDF
C39A277182751A431DAB4869A982293003C83BC5371513272676E588988C3497
C382B1FBBDD8DCC67CF1CABC23E8D3B4E553780C34B0DF36A8825B776FAAEF16
2FA24EB17C99F24D3C9C200E954B4A6DA6617E3A56D72EF332FB941F40E88F79
AD6DFC8C619CE8FE1EEE3B9FE2203DC6C75B21643D462098578BCD5050EB47A9
F4313EDADA4845CD6C7ED47F7E9DB8862B0D4909282D49EAFCA976E2D25DC224
4AC1A3099AF1EAB3652298E6F6E87978C4908A3723071CF996F4AAB4425E9D7C
3C8193004DF6B0E24465256E71B09E123754F7752507DE77C8B35CA1A3F7D176
DEF397B4BC957F62A653018E98A03B7268517394AEC07E44659608CCA03A3BB2
6BB18234A5285B5517039417C84E049F52D3308C57734B39E016FDEDA848A63B
7CAD78C042BD6D696AE7B5E2FF38A99470D10F396AE89524456990D93AE476AB
15324149043E713261671835DDF1623638E4FD96E4063FB23B0C1334231CACE3
B876EACEA91560CA46C1C88BF1A9550F9DA16C9668315E9262C143A87AD4F3F0
A28C8C1833DFD60525A78B2A4BD7C5BD4223A7E16C5BF382CC68A690BF42586C
7D5DF306BD03A0A0B91406F90367E180A14170F7AC637F3015F91615A85167A1
4AF1A3A745549A2C8D8F6C93CCAF12CBC1C77C8FBDC5989A39D91E2C927FC0F9
D411C4599D9D6FC11694DED91997A19D95E52890888F7002E25E625DC477211A
C77F7C18D62E44A0351C8167558745A4772B854BA5FBC5BEAE9A4370CBCC6A3B
60E897A2A10ACC9590B7D186EDD915E90CD3285632D65C2CC0097A6CB98FBE4A
9FCAEC75025EC73938A6A532A13E23EF1CE928F9FD16A198E4B71C1FE2B17F94
079262A03A56BA2870165B332274F9BE188776367C085E58BA8F0F007B64C2D3
5B5C6CBEBDBD569AA32375DE4619505809407145D7148F40B8FA1D9F0DF623B9
E4772C1D183F91D837DAC94609659451F83DAA632978D0702FB53E7B56D103AD
819382A9EB1E201AD6F5253B4D30E256A366A29BE5ABE7879DB7FFB127700DFE
76E3B5B6601794E5B4C81CF3F7384A29702F0BA28FB2F1F5F450926CBC449C78
8B427ED303F7C710D50E8F3FB08F9EB235C3F1A53833DEEA43BE551A26129AFA
9DF18A8B9B31303F61A695B20B65DB5CC404B62D98C1FA975045EF40F4BE6FB5
15312A345FF18B169B121155CC0181DEEEF3D97094ED2C21EC501C3F05532012
6651F8DFCA0DF851F791B14D83F1DF955796BD15D834C53562765F13423A1CD0
068835D69B4651E206B397E2D6F3E1134D38039EC8C6A5E352C6081C7499C62B
1B92480E5963073189E7CAE9F2844D17BBDC178AFFB0DEB4493D2BEEDFEEBECE
C598CDB1BF77AC8209A2F49320A183B1D15498DD6EE56DDA47189AB457D95689
50DC3E2369571FD937E1FCB1AE7D1F4FD7BB0D32C0CC64B7D418705295AA7291
AFBEEC84B992D45A2680BAC63497C593C90728B12A4957FBDCA1E23E47BCF2C9
6A9C58E53950DB59E4322DC2975FE68D9DEA3C0DBCF7C332C1413109E975BFFF
1058EB7E1C2D93E4E93FC183B92C92EBB1C9D571BBF3740E786A7397A871DD11
FA1D78E5F78DF4E9B0FAFA718BCE5FB4FE432EFA11B131B70FD5A3D826575225
4AA7570340949EA4FBF43CED26FB01E8DC8A99D891001DCBBF4A1A12F4110057
9EA1129B3069A90C2B4CFBB3CB0475443ACB4B4CA279CA5CCDC91EFA8A83F96A
9DC950870C1B21E2186D8C4CA15E8E1CEE5EF7BBAE9CC424E277788953475AEB
85C963B6B554263002E358C322B2896A8BB113136337F88C41B0FEEE994CFAB9
F734AC514A3B200ED1151418051744E40FB9CFC34F1C31950A393F4F1720D251
60F42D9892372CCED4FA66BC0F8284D4124E5A355BB7F9168E861CDBFEE4CA4D
20882184FAC1670551CB5E0D692B3C9BDE4F85242AC48AC6197D9DA2FDE6A9CE
BCC633F3D38DBEA5BFEDC92435FB436F629EAD2AB3BF6C3781D123D7B13FA066
25BC7508ADAA2EF193AD1E8F143823BA37E501B80227AE0930DE6E4E027CF555
018F191F3C923F544E8CA05E597D82BF7E09FD39B4341967F54537ECCBC61816
D57CA516A4681C2397F448C46BA164AC7BE0C0A73FB423A2A81FFB75D05D0E3F
9E07539C80A599C7AA78251241B46E662B62589EE9832FC6295AF61B462F8DDA
EE658222A866BF4845736F9DEE02D06634547729442ECDC50C90989896D98814
A4E62E172C82D0B5EFE58F67669D0F2F88C5CC0B17ACD50C6D8989B3E8688D2A
74E9C9F9A5A8809002F08A289F9378231D5B159C63BEDBC8B663A9376E1F27CE
4207DEC332AC167E282459BDAF6F4C56D862C5FEFFF18F6046189BD0022AD86D
661BD0C1B7AAE7BA58D30C3FC4681906BD573C7A473787910AC263CAC0EAC7E3
C638FE124966C4632B7CB94C9DF7275990EBE5D704AD02616D034B3F80AD2AD5
D4E1DAE678029CC028DB4A9B94A891BFF21A5669B73153DF85531821C23E4DE1
D1F95F3954C8CEAA65BDBE9E0FA91DF22E6A4F66A29D45509E215C2ADFAF9C4E
D4EB6497E5FFC3F42F921D984F227E010F59376FB1AEB72D08E929E1630A7750
DE134BBF26AF490A8ED6384B821717860BBB643DD10E8CEC76F3A88D24AAFA39
C60EE153A0B74660FD4FE0ADF32F585728DD7DB751EC8C146E17EAAFC942F80C
2313118CDE3A07B15EE37DC5F4533724D785C22C645809C6B3B4B9FAF43E98E6
6BA3E83FC00043F27F1E73B67016A5054D9B90A3FE2052561C22720C0C78F40D
46FFD5B2E656036D9AA4A1EDDF6A0122789BF66501B14680A3B9650D6A4A0281
8B0A158B7895BB24BFCF21A45C95F7E64231E82A94D3F931EE74FD4C57FF541D
5C0C6801DEC72AA27D3F120053B7E9268CF93B9763BA70C77A82B01C2B1741EF
6F7AC4260AD77DB005D835B04DC328500DBE2E66A07307CA8A2F7A801C7AFACD
58F93FCD83DCF3EF58FE49BAA3C28FBBBC520AACBFBDF74AED0B3575A19CFFBD
25CA7A5AE8198367C7D54AC750206BDB71AA4324F87F4C78445DD4B94E0C5EF6
6E5F4252E5511A19172AE7E16C19F7B344148D1C44B49B3E6398E1051D1F8561
8EC5EF25303E22F493A53C3C1B37341F96F2F8FB4CD2BE21F98C4593954B4833
509E1FD137D8B823953AA248937D5C18D216E97039C5B076F16A3A6411A3D4BF
6AB784505D93BCAEEAE9CF1701F6DF625DB40083C9FDB6510619870C144864AF
6B9D3EA5F9A365966424B74C146E164A7503FE4992BED1A2323DAB45601994C6
7F6A07F238E7B76BE76F95B8C6EA8C10AAD1B220F9934FBCB525354832470FA4
22868CFCC8029513235C0286B76196E35049885D0EE7EFE008301D60083FB7E8
BDA75A112D1D27E922FBF1A86C9D14A277369E5A7AF7CB389BC5900C4305DF98
D59594162682F9947E1A097E36367B9D631483124BEF89BAE5DEAE4A2FE1EFEC
2DCFA57BB0D6E3DD6C027519DE25EBE4946011655C21E22D5420119C91515AC8
E880D53062C786EB15A5F0DEC6366D20DFACC9A51E37BFD99FB7E16817CD828E
6DB40B86A47A27C033E27BAACC78183B1E07277D77FCDF7E4E239BA6F6C7272B
77E36FF4156DD123FAB23AA37B36092D3F6CE83BE0B858CEE4CC140F09B9C2B6
36562C5C7CBD2D34994227FD7BC1FEE1B83BCB319FC0FE2D9A8CF214DC85B763
C354E8017B20D6DD0FE4D543A62F8ABE3B31E04FD876777454D4209923C06F18
C3A842411785C1C2709260CB18704C1D85948897108015B8187CA6C46B291E02
081BB5652A867C6AAFCEA866503D32708C76C30BBAAE0F953D5B8A1126A03DF4
5D0AD1FDAF194F7DCD648D8F14A5264B6277B27F417F17BB5F05E7989CBBC604
FFCA18F18485B0DDB33F35AE332022B997F022EDD90CD23378F9FD3F10F718FE
409769B91477249D08F7EC9005E5F4D03ECCDA8985D0123EE5F52612CB8123A4
FF2E590AD47310066954EDF3D6CB212FF2983C3FFA0E9045AB023E047EAB4365
22099C17BEE8EE8CCB1DA1A852152D4BB72DCA67ADF52AD54E547CB0F5938634
0C9F9ACF9B1510282836EE37A948B3BEFBF1EB66E2E910614F0C02936959E2CD
FCCBAB7D7B6183B075036DF7634B34983FEBFFFFBB7464003A1ACCCA304D23A1
BDC50F2DC6C818601D05AA8B2E289F1D18568DB64A9868E32D1914694E5FE055
9BB3918BC1A78DEE38FE96A5EE6334C12E55B24E5CA3AD0E78C5B2E39022E137
F808DCFF33D406320583193B6201E1F9F7FF4227AEAB1B276B793ACF6AED80A2
B715340059B49945C6D796F99D4B3778E50274F69BB81ABA1EEC1B49E1048648
E684BDD651A058F994B3221085A2C4867AB5F1194290CB61CB54B870B7C9C070
5374E0C8E16ECDAC535403EC370588601C9DC97722C444D33D66795ACC5DCCD5
FD186AE2E7F9C81FE8C4F9F1F2AE3B9560C9DF5FE69CDE045F576D9C446DD56E
CEEA07228F0B0DD1460715659DAC3E8F977C22150E9DC4D491B11A57871330BB
F116B7DA406DA85CA0B7C26E68F9E48691ED23DB0D3ABD8D6BDC79C164824B6E
3E3C3E69366B759B352F6AF5B85B3EB5F744202CA584A293F65B0EB3258C71CB
FE3F8C63E15A55ACA65DCC2D70D6682DDC8D06595AF02DE1AE13B66672A6FECD
532ABA4DAEF7AAE796B0550FD7BCCBDB2C2BD5BD8A16E33683A8AAF33E895719
63AD2AC7E77EB1A8AB0DB6CC37838A6472C601C215037E94AC894647530BA822
773DE75726823FCE87E1943876B8DC19F588791D546F74364A8EAC427B2E82FB
786FE8709499255A26F9ACD205A00D5C6228AA1D43F1C6F0E9EA338B23EAB1CE
A62AA27DA04D2DC9F3EB1838B3E3E37097799C0895D7BE2DB024F9A283E12327
A26FFA9F875020231CD40EF33EEA48ACCD58D8B69468E67AB377C6BD16D1193A
5F2AB98C19276A104C8770D3E62C7EEA9759D337AC9D703F951A63AFB753A6A3
C4DFF9BA53B2C6F34650E1D798751A0D375757D95AE364394FC25E6E0D02C684
0312A2E9B1E80979B7487BA2CB786018E20A5E0355AA35B0559FE3110CEABF5C
E69F5813A5220097640011752D3D74A080B1C200EA362277C7562AE7CF8E481A
ED2F46A095A3FE2052561C22720C0C78F40D46FFD5B2E65602B96B1998A08ADE
B2B51FD97C947F3CAF4A17CA0F8BE63AF7E43E4E692B8EDAB13CF5AC05D11A33
F2D53EE26FB400ED2A188680E41CEE552DF55A235EA7E738E9BFC05EA20F8F92
CC6F6F0883C1386E0668FF164EFBF2FAB76B6904D04CCC4B264DD76F31F017E0
7A31B99351BAC71E40DAF81E1F113DD4256BE6504185EAF8D48F2D1C7E3DBA36
13EA73BA2AAE3FCA5D2E78ABF50BCFF513171703AEED0A5A2C1C623A6D6615F2
4FED298A68097564AE72C413725A79EF90AD4FB0073FF142CFAF4290F2BEFA65
D13A92F67E852DB3FA36EEA39B8FF07CEC6D1BB14DD55B3F675BA045A8D89AC5
8B77200A09C675E45379536014257E6989B76A91534C2564B0516C18C9EB0B1A
F91990316CB14F474E9D6CC7C8FBF86B398FECB416D63179BBC92DD260217381
05BCED3E94CECEB2E6E552D1F7E25591F3DD0B4729E5749A10ED277E3544B849
78D99D4DFA915826D135D2D8A3BCE3C8EA00C9494343F320DBF68ED46DD1CBDA
D4DB071036F3CB39292A174434E5623D3B09A0C314D0D84700A7EE0FDE16C59C
1DD2E8EFDDDBA23BBC2A519331838DD137333F556C0B64A99038D69D48D7AE40
9B547ED9F6FC39C8C2A31BCFA14D5CEAC61084FD0D683AFED2AF2CA96F46F2E7
1D2DA1D8D60C3087762D3264A399447AAF980AD5A22E4C49A366DE4C183E1AC3
D95226C13EB523AD09BF71DC2DAE65DD92C168F5AAABF3E48C1DDFD721BF63F1
6B3D13DA2E85C78B828BCD6C278CEFFA767A9D8C6D62A36674FFBDF2A9D564CC
87FC8B259D35AA0847B7E91864EA6454603B4D73C88A007D17A3DB5A24E3D26F
03EAC8703F18A32B699A2FCA90DFB3DDD4F10D75A6D799F76209242EEE860730
4CEB7A9D8594FA224C2E5D6E74E26BBB7CEE5215A715DFC25D4FDC601AD9217C
220985CEC6EF4AD74B91D1F1EA50C4ABB5780B1CA1A60D457800393A82355529
6D5D24902420BF6DA181D242229BCB7F71972C3472F6C0FE90E4A21BF4E62D07
B765
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans10-Bold
%!PS-AdobeFont-1.0: LMSans10-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans10-Bold known{/LMSans10-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans10-Bold)readonly def
/FamilyName(LMSans10)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 83 def
end readonly def
/FontName /LMSans10-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-460 -297 1761 1134}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFA25B3D2E21970B61BEF6BD441C0
853BA8F00600E933C80C0916170925A5E999AE3F4523441CBE8209ED95298D28
7897FD39E60633B3341F7B1EE39A74B7CFCA379A6C2390E7C26A4B9C8C556F25
96A90868B428CDFF58080D414AFBA9B90E752A5C7F4EEF6EAED9684DCA7DB0CC
268AB1DF914EEFDF740F44F538F1E841659F02898565FE3B1F13BC87C5713FE4
FB373864385E506D1C0BB65A3CB8E10A78C20E5BE320989BC3E8C8E8E399FC24
E0BD4271E70E8D7A8F7683A4756AA988C5E78DEE26995F197F2360620656FEEA
739826F54E14481B446F1D7F68111FFA8C859137AB1F8E90583B98BFAF5C6329
59CCC441D095D44570B010FEFDC0DAA465ADDF3CBAB31B8A5E7672C9EEAEA7B7
A345AFB8889D3C53E0F9619B8F0C11FCFA80839B0574D91CE6AD50613E12BAA0
115864303556F3EBF5B786035121016A72100BD90BB46818BE2E8AA15252FA00
9F20B1F01EC0EC35CBF7D6C9684AF91F00880B4F0721698DD568E1B3D09641C0
58E5856E324DB2E378120A56ED141762775C5AB88AE8BB5B6B18158A7A9202E8
651774A479D4308E7F29052733CD2724314AF8C61999D544071407B7774A5610
C7A8F6EFB5792C23498F7D5347CABBA2DA469A957BF2BF33E8E3045016270416
4B71642412D880A7601B66C002B4EEA76041F2746847EC01F5EB5744F1EA82F4
163BE681F7F568158C214BBB58CF2BED8BA9B4030D081D755D41B0F8DE4AD0E1
F33A1CE6E38EBEE8CEC6203C2474727309D75E85A83DD36CA1A05A37C9D1FAF7
E1AD48F23A222889F92F15AE9C33A8B3E343774FA496C5BFD6D9C1328E16F748
4D6390CDDA8EA19D086DC2E49DAFC1535299AF0F42A16E89B2D395B183098334
286F4678662DDD87FE71DAC85B1BEA9546CDC788FE623C0EC28B6F1208F01B4C
5956B9402DCD2BA235EA01291DE436B80388FE6B31D225383E1054FDC6AF7600
608EF8DD116B8443675F86A09522E784197B8AF0E94FB9D58D648860A2C26A05
6498B7555DABF92B298EFA1344A2C5487F80442D8E6D4A3023139FAC780E9F5B
712394804BD39D2348F61E0B528F4873256714D01012B77A5E56B1C92DC7FC0F
ADFC71C5F898C408273388E448AA4D9519F85B14ACC1D796F99D4B3778E50274
F69BB81ABA1EEC1B49E0472E92EE0653382141E523A585E7CC5B063C4643CC84
4A757BEDCD054DE680D23B992D7F754479CD369719297616419BBC9881BB6CE7
6FAFC31BD5EC1A698AFBEE2418D5B8CA978D6AC89C5D7D115D20015326BBB45A
5A1E5C98CB559929FD0D5E8A13520FA7BDB2C711E3BBAF7CB7E7ED91CB43236F
BCC50D20C11C6929C93AAA213F8B058DC741C12B1EC9BF6BFB6BC306585A1667
7E78EEDC4B8B17CEC6B82F4CB8D2D71A37921E69DE0F04859B03FCEDCC765058
76A049DA9D644D232C7B91334762A700EE46CCFF0F8222069A239E9C090F9CC7
AEF418EF47ACD1255068A21969742C55D97F1EF3AE7EEFF90937C6FB7A0C27C5
6B44B37C97E610E7DEF4545EBC55591235C56A4CA40CB555A4BA1A2E780FD5BD
796ABA334160229587F4DC11F6EC986B036C55794A4DC92BF186068C71B851A7
F85B6333C19C91E6C9EAA9292428B9368284EDCDE7B6926FA86E4866511AF195
CF03E794D87502CD2BA63EAA5B1F9282216AAD543641E0F8A3E7314914C30754
9274C1929A4B7367C259A83EA0D92DF798FE51658E2648D8CEFB68D0B28B3B0E
1CFA30BAF3D8E649F28EA66D111E69BDE1C7C95D376D2C48FFEA0D825AA3CE8F
F2CDEAA920024C50D65665E065DADBF514DA09934CD93AFE8100037709DDE2E7
2E16C80CC9C0E7940FFA97F2BAAE7A9AE52B2BC3CFD181277D371765E3F5FE73
B7D1E30EEA5D377D3EC454B9E8E4E4B7897387234F730A1D2D567540E1F13D80
1C5535585729C06A53A8E6819D45D752A50B02C5AA368E0EA45AE3A0C9A76C32
0DDC3352FE0F2EBBB1972248F0E4BB8AE3948A408FAA0CB73C6CF5E6C128A31D
BF93F0566A59DF25AD24664C9C831F84B02AEC078CCEEB604BF5F39840266A3E
CAF4B9AEB821FCF47ED1D902DF005570FA47070FC79D841478CADE0EE48913BB
0C4CB09F2124ED1AD4B59F7861A8B9F4BC91A9DFC03C3F55166FC377E829EB5F
F4891F388983E560AE31E321A14D78E952EEED8A2021B8258A37008484F27750
EAEAE17A63DC636EE6CEAE50A934221765FE0CC6A3A745FEB2C1986547967107
503C32955BC90EE29DEB37DDF577BFA71B8A651C05E1D55C8CC5658531DF6FE3
FF0E539F1DD25B1C97541EFE4F5C2067E4206F8D4F3AF4B2C7D95E63DA3C2B2F
3F09AB7709626F52CC421949017016918F0AB2DB82DAB2FCE4B01FDE418380A1
6AEF2B0C50CAB47B186DEBAF6E9A2C69F153AE233488B2D41B812A11DD57D1B0
02B45B933534C0B4C51DDC50BE37BB6E42B8FCB00F6AE8FA7C6A8DFEF294B426
8517F1857924960FCF6A048C8AEAE9C9724A170FAC6BCF6A85AA31C1BE8F832F
7BA209A0A5D865E3A32F47B1EE818B18C981A546A36DFDA767967A43B3D1F3FC
4F591BFE0EA1D77FB7872B90950DE333A444BE5476340C4F274EF8D4394BDD17
AA5505268CA9DF32C3DAB7A37106D82ACF5DD9316A8E0CE4F32521B65F83F152
87234F09C3FBD9CE265B6A223D0ED3DA70C143CA4F4B21EBDB9E1DCACC031B2C
AF4126501FB9071E10C2DA4065A3082F0725C2E0322AD914573DD12540F02C2D
847365CB105542F9B02CEB5178A3F3C2F9D266CD2DF15E9CC37C64310B4681C5
8D18345EE64DC11A1319A075FF8711FFFC1662493942C21F78C831ADAF4E4061
1505FAEE80170CEA28F54B643A9BBE064D3B9237193F2BA024F5AB99E8207FFD
ABC084BCDFC2A202F15B5E590EE4CE5A27A0AA6E874293E89DC1292F3A57FD6F
3A111ECF2D6A40C4A95AA66BE98967F52A855DB02C498F136AEEDCF7E1E1A36E
82BCB10E5E51B131A7CE8E5023FAE9BBE4AC0AD95EBAE53E28EDB2678C3E34B4
13BFC96005A1999A95B5B8A42DE5BB1384878378F1C62D1E60A63F3A1388DF56
F8DF2224597766D01BD59A88FF2ACB9624AEB7824D5B0AE928DA1E4073F2400F
AD5466C50E41E94B66B5CE1ED0AD1ED3B185D5177C13CEFCD66025CFCA26CA60
70F3F138947E9552402C310FD42E81E47337DCAA2F7C8594264A6EA23E30B3AD
C0F3919739DB56F4522D02299507F5DF31CA0AF4D5443894775B2DF1F871924C
E2C0479EA8C8C337504ABBDA175BC6EE3758754FD6C8FD4018889D8E86926DBD
586A0FFF6BD2983A840B68D656FC15842D694DFE6AE0B5F37A43352667CAD340
C0D42D850BD31A8B4C79D08FD7B68352CACCA2D75D486446E7369DE48716A15C
1DB4324935F474EDCB620ADD71ABF4845AF9933A5AF485AFF1AB405004CA0DED
FF110AD9468A0E4A0820F81AC3AEBEB0996DEEE69DC68C138FB4F7E2F3EC19E4
7AE9E2B9BCE3ABE6EC68FFE98B8597A648022ABC49F5FDFCA8BE38549AE53F72
B85A6F03B58AEAC876572FE440D7EDC6EBCD2AF0D56D5CB3D90AE897FA3095FE
A499DC328054BF07CD1CA1159872E9A32735940BD3AD8C75262EF6C5B60BD81D
2770945D3D676612C77A23C8C3364DAD8E407319772C9B201C49BE3E38E08060
DB989AF3F538CF0D5D1234E2DB9A16B6B263605242F5BCBA9C0E5A09B0AB344A
F757886F30FB3AC53A51C4843802081696785BF15D76F545786E9E8871D12531
7E14B83714D18F84E5C4E50BC74E4F1E3D24763E96F2C385B9F9C34E0382F02E
B8C8BF921CD3914D1C0CAF2F2A8C3E8248880242AE015219D75E3C858A28BF72
B6F0779DFCCA2EC7F97C2795CC16E2C18E3A112F342B108DA6FBFDB214B31347
11BCDA381676C3926651F5B3F8666E369D50682A921BA05409A9AA8B6E77856A
3C6A7B37B39E92BBA5C42182D98EA16770B47D01CEA50E0D6555854323FE0032
0EE30A24BB155265E2EA7402BF17ECD71219A16E5A1B19A5CBCC9086AB4D09E3
59B41CF74AED5B75C01085EAAD720C96BA9839BB9028425F71EF541587018C30
EDF9198F1887BB13D0DC1902B31D1DC2CF9C9DF2B07BBE67E7D564D63141B1ED
A0E6FFD1D82CE4D084352E97F09699AA642FCAEB99606BC079F3230443D11313
D6EBB931956615A4CEBCCB7E1BDCE1C7CD54907F2ED4CB1E9D602AB9746BDC1B
A4A84F7B70846E33CE5F285F32FC4E501636113B251001F008DE01DF02DAEDAE
3EE92816034793A280F073E6670E32EFDF47A249652E266DFE7348AA4396CE93
D5063F7D87E6F759A29F32ADBF5D37B697E2B01DE1E902D53E24B71DD4F1CC13
482C48FD1456BB3B63DA7E4A3C59ED5565F2096BC24D7F12FC905E2D6DC010ED
5F06D14E4FB96F0F69193E868789380DC127C1A51D2CD81565EF1E13AA97507A
9841FE083B062CCDDB60B9A1C3E0FE565DDBD45AE467A782725D8B3E30CF0797
DF9A714165D136FC4F83699DEB28DC0008736A49D1FAA25CAA28B66BCCFC7855
461372B4CF5400F4B7BCF0DDE934373E145F340A6E7770D5A0915D4862F8867C
39DF1B394D2BB66A287D2BA92A6C662858584EBFBA53E8DDEFCD80DDD97C3713
D2D2751EBCDB6B4D935084759EDBCB44ABA49269C8F547DCD6E7B147D53DB0D8
DB88F2B4490016C23FDB7EEA6972691E6770B37A0E467B8708B0056727A640F6
E8A33CC915D2F836ECCCE234C13F17FB03853F28E77309B1D0E6185370CF1261
BD2325B000A6AF469200E5F7A3C35D2DAC2AD31A4A8FE8112B67C5D286DB3EF5
94D6D04687B8DA91E8858B8E533CDCA7E454973BA1235728AF9156CBD143BA26
2279BFFF61E504C08C38F06CF72D76D460EF34B60223FC6170F5DD66C1444DA6
D26976D77A35534B6390EDC2DCCDFC038A7C57FF6B6F5C882CDB6A03A7921BB9
F85B93AC64F9C82C455E037A4DEA33C89BE01AA3AFE8B3CBAB88C535BD22357F
9B16487A929DEFCF0103834714C42B1C0B53164C8FE73C9C77520327CCB89B0E
B07AE1EC07FD93D19F9C0A6B2B12B071BB90419EFA4512B1227E6D1174CC7D3D
57B60C9DF22A1434E7D661083C7F8D02F91CCD580EA19FC753FF3B8C81C618B4
7F60FA4ABE5032B7ABE1136C4AEB513AB5F50DCAD816D501A60C51FB1F38771C
27251A57EBFCAECEE3E2A12AA6B6DC66B2B18F6D030844DFDAE96D588C704EAB
A8A055F8A2E33E28344A7A9EC8F2CD1865F8FE99AD7ADAD0922C1BEAAAD9B337
968A02FCA013241B4D42210504E4254BC7510C4BDFDF53EB3D5F54D35F685E74
E502EA63AC05DEF56481C0395E893486EEFAEB6226F2D6775F15948A9D4DC82D
6F60D7DC6F7146540053F4B84AF763EECCA28D26DCDDEBA956D677C9E906B80D
0C908B6A3308B89B8E77CAA452289A98F10329E0F6661A5D69B3A9B39695AC4C
95D2B8073B0700F3CF51B4D76FCBF266295BE92A624BCE6EE9EEF09589FEAD41
4B7358C0256872F31FF228D50C61A38FD38C134DE8C2FBD4D94ADD48BCAF6733
5C61B7F2B2B654C70F5370E255761089559C972F241B85C3465B3C551DA08889
24FE68EAA0080CF4DFCACEE5513EAF3E903BAB38790E8729785643D17BB03343
2F3E62939E834B48B4D7F9A1ECD0120BCE1EE6302C0AC1C7CA421B81B6DDFEA5
6902F01DB81F7AD4C4556A6C66B986A873AFB901376427AC06A1EF338ECB6383
C6EBBFB2B61FE04B0B13B26BFA8A80D5650D815BC8AB200BFF20B2977882BF47
9DCAE546EF6551176B9A7E900D060011EA3A3DCB102E369C03C964E135A81A4A
96CFBDEFF4DE11AB022E33B2765DF15FC2A853F595DE7334E31E8BAEF4799FF6
8EDBBA8148EA7FE288BAE5898638982FF191687F723B02A05EA5F95D79F4447D
B12628C0F838AD7ED830886303207DF666D3E2E369E4D47ECED72963406AB794
26A14A17B3118E50A9D983FC7CC1EE9EB90AA437D14EA2377CFD4893E36CE80C
B6F9DB98327322342EEFC4AB610AAC8F27F0CB185D054422107B077BAC69AA8D
C1EC35AF2C3E12674A53B3A5554EA4B18CCFDE020B76AF50EFF43A273D7BD0EC
942FDC0F4BCE2FCAD37FC498AD7D881491C1D06444915B1694367AF88E699F74
37339478BE40C39D57DD280BEF8C3DC6FA34E9CDD920B0F7E2C38F138EE0922F
BDD3D7BC6E31AACF67DDE0217905ED11DF349F54153281472BA8FC18BDA7E4AE
474B2BCDB5FC24A7087B8D7CF10A370661D3203C86D3D32879A5F548ECF75B98
07C8A60296C2418A32FEA362D83933ACA7B1AE394824C03E2B60F67B07F837CB
3303A57193A074A75CD8BB734D2D090457DD2014C50B246A7DC70C99B7DBFADA
1E01B81749EE49A70F3841D9F4437F9AFEBA80E85A7302FFC4B5D0A21DD0C5C0
5D82EBEC804D15C0FEF51E81E63603AB1E9281C6109145BDF78DA02134990233
2707106BBB5D307960EC8264AEFB56A44965744053106BD5B5E99175BBC27E42
14EEC211161F1E96FAF30510796F922E69F5EA83BF870D345327A582968548D1
C5648CBE6BA93CEA0DE409F9A545C3287761E54228CC345D7C5AD72C7EB3C42A
A354022B2595A07CBF1BD05B68870AA4FE5CEAEFF2DCF0078332084E34C49210
5344559784EDCABE56305EF1BEE14C78D1107EBD32D2B3818E7FA41C0527DE43
6726C968CB7177A203D53DC8B5A858574BFE1E1A7B100DFE9725026694310E4C
81D9D739DF88C655165C148CA55C7A1E2EB9AC33218BCA18B0B8D728F5EB7AB0
D7C7210B0254209709127509854D16573B1A35137947B8D1D0BDC602B0A16D55
0B6CE0190281BA4CEBF16ACFA4FD94730CD97B18366C6192D003985BAB6E49DA
96211DF7CA971E36C849446C77F005D897D944251600E7A6B304DD76E08DDAF5
58FABD99D3015F6D8CCCF97174ABCF4EBF0228321EAEFB90C37D73638049850A
D019D2BFC45ADBA04637EFCBAAAA8A72683C54B45F81F355D9D19496D0F80477
B51B9B9877E7AB494E1AA44C47A3C883DEFDE65E02AA6E2C1D7FA918D72051DB
6CFBA44520B5B5689C875412D210DCBF1EB1C95BBFFA540EE5710E884911F452
C33B54F20DA0A9318C09C86A3CB60F8FF548AF36F41E219BCE7F18B0337447EE
38A02F76C2350AE180C2CE885D84F4D18B976210456F13FCD152FF9102718D0F
C57EC5B1B1485DE99814AD4A0798392364FE0BEFFF89A5599AA782354983D415
861028AADD851711FBFACD0470F350D9D227A5FB5B497F4632B1E1826CFE0467
96B89912BCD080A523A7B79DE04D5E3E9E29E2C6B2A27D0F7DE207770D439E52
D42C8B3806FA06180F1EFF5CEA5ACE58B452EB3620F58FFF4C5A60CCF5DD51CC
3DCE518DD210DB1E8D7A624A37B48C6DAFB92FC1F21A4EC7894E2A0D724C3F61
5F6B7EA884C1A171A7280E8FF4AC0D4C8A2199EFA8517B8C2E43E8716526220C
E629452D507C04521B40E2F0C4CB23306030744F3CBDFCC6BC3388641BCD7334
202357494F739C8C730BD62FE336E47CC8CA845F90A7341EBF10B71D8253E6F8
FA7AC8DD1F4DA7BB92EE841F520CDA6E9E32F903296B80F87B179719D6338755
9497E6D1CE847D45300282249B72ECEB7969E7C8D0538240EE7CEE083BD1CE64
1C8300C59704605BC49BA3C89C2AA19CC20F76FD420E7D6384152DF0CDEFD087
BAFFC6C93AF8FE338E70387B4F1BA2119C97F4733659F7942BD75F3D839477B4
EFD118CAAF66882758648D18517C9EBCAF62677E87399AB9DDA66D726EB07DA7
230653A5A96AC2CF1C5C0A71AB7E9A77A1671EE7D22F08424BAD2A76790BBB18
E9A73A3AC40F568487AF4A9A9C7DF8232322B09B2380C063A52D3CECC51DE9CD
71C657B199A800BBA9D7715DFC217D2B3A1FE9844CBA467A7CA919EB41D7E8BC
0BD4D3EA61170F94D3DF372F5698F8F36DB986C6C618AA75E527C04ED4016B8B
573BCC3B2FA7E676945E56923350BBAC0CF7CE13F17B3C048B898E7B9FD865F6
ACEBEE0048A023AF77116B70EAC3684F5FAFA68FDD22AD422869E28828137C70
6B0CC3E51C002C5FF185A72F8B21D6486CD41A80EC051E875DFC7859542BA952
A714D454416CB94A007509B3DEE24F99E9B2877B4D05F3AB9FE13C64C2287FF3
E9D5D12E3A2AE94355A2170325114C5985EED0B4F03E7872206B3DC4382D8860
9728B4DAB8CAC5EBDC7F940047AD1108ACEBBA1564A034FF2F3B60508154B089
81B62A2E9974E37699E431A9B3E3471C609BFFD6A27A96351DC61E31ABD7C655
BA5E53124F7FC666801C182AF99D4A8A3DEAE18E6D6DC105623C29DD9D16904A
62D35521EC38382AE500A61FCE8D612125A9132BBE333BF49BE67A05EF66329D
204C9A33DBCA5087D9E044FAEE66BA2446568997D1B64BE9282348E3069139B4
14FB4171EA645516FDB1ED0186D0B0D95FF70261749C498DA498FCBE33353764
3482346BCD751AC2AD65E979A31E979859ACBC25317F23C7C0DA714AD9D987DE
A45368072750CAD0C9ABC3F4923723A0CCC2D98CFA8E2EA9517AC5FF1A9E33AD
5279557411E0F7E6160CC2B113F5C9F44CFB38976D7D00609C36ABD1DF64C6AE
6FBCFBD9E9879DE2E51C85B3597B7E6E0D92F2C3B62AEF7077B8FA5B0B126BB8
7FF3DF515ADF3D241CB9D6C81C4D965F85EA14F4839C4D3ADAFAD4EDED5CD771
D0452943086457A0A9E830C0658485CA60FC2621D7082423D46EB801F8502449
684418493C3E014E1F6AA466F61345D046731E6DA80678EC9916BB64EF2B241D
783908AD56EECF4C09B41756481D7AF31066A1F0C47653783A51198028FF2C46
980F42821A0BC9D23F0242AA2C6DD59F4CB5511FBAE3C48B1B02C98798499DB4
76B5B41D4821DD03215A441D04F7C6F42E0BDB28F36F00955C1F1B0F125261DA
0D2F7312CE5B3F3A1DF65DD5455F539B3EB6425D06959A7011DAAED3FA80BF13
0776D5B1969AED96B7999229531B651E4C98B0BD07C1AA836460C3DF99FD8A37
EFDA8A3CCF56AD9EE9F5DC02440C00A2A06E998BC239F96D24325048BACC9ABD
A9206E3DA37E5F142C781072CFAF2D3371632319B253DBB329415C99D1F14379
5E2A0F0A30C13DF094D14F4872A439CC85576DC46136E789DFBB551AE2C28389
82303318BA6F1A5401AB2ABD3C25D5C9A2FA8C392A82F8DC836C8AFEE9C9D6BE
A0F10C0E78AEEF5C198B41FF65262A326E23437A72FED312680E7155F6CD439A
A96488958D2808FACE11273AEB78CCE20956F1F48D71825B795DCE25480A49C7
0D16F721EE8768AF0C5A6E66411D4612096425933BB94B7B4387ABEAB4935BD5
7F48DFDF2E1D79D468A8974B43A4D5ADA81C5EC47F92F95E3333FA6D055226A9
58D75A0A63D485FCC987A796F51CCB0F6C7F85853F17DDCE552712BD7DAFDE8A
CA844DD34A2EC1F5C5C77453535F3CED5BD186A7EEDA89531BB7870689AFA703
C1420E2A18B1EF60A4D042BB742B4C08754D9F00C2C9FE5B9C43CB0B9D921B4A
6980F6B22FE3C7B7CF6357CCA868737C58E5E0A5E1340670398319FEA4E9FF01
B22C0BAD4AF95C85DAB7A4BF4D13E49C8348AA90CBDC3D262B9FA9C0EAFC795E
E82FEC8FEA7C675B171F8128ACF24D34093FC721D2AB878551E230E37FE21382
B89450EF7B02AA325DC5A5B0D8ADB5563588D38C1151A012779EA95F6F1D8C29
68A3E83FC00043F27F1E73B67016A5054B29B3A0400380EA3BA460046252E2CE
AA182531481CAA126483CD370CE208AAC25A0E32F30EADF2050B71A79E27563B
DD4FBD95600E6C1AA3D680E83A730A4642CE4F87E46CCA80C618C1814F112E44
5F32C0970817BC4051479AF259E0895B44F511485B30A84709054F39D5251737
5B943E33FD627F1A45160CD3D048416BA31CC103BC3FCC24FB8371A04B262492
5CBEE7787D68CABBE011703744D8AD0BAFCF511263B3A79824A37390769F2EDD
568BE8045467FC5DA356DFF298F0E2BF9E46CBE6493F708D6BB8FE78D5C3354C
17511541D364CA8C1F2723231562151679BF791A6809164532D7CE3126709FF0
83B86840C3A9B27F2B44615B72C93110F53373C50E14657ED32A3833C87D3DA3
F5DB311E5672052E05C3A5CCB847F0663D9582AA6642773A62555FD57DCF1448
BEC02304B79469A72A3CC8C866B77F225EB04390858BFF70300B09A590091679
3412AEDD15191DDD1B6A3FCCE3EBB841B07B83627A20855A6BEFC921B4896D04
E61B913B6C4175C1CF0C09C86486F508AE91D36AB08E7214960AC4ED7666DEE0
302A3F923AEC792F34C5A9EE4A2883849E7CCA7D5FD80F35173EB83FD223EC7B
62C2AA656388145B7FEF555BCB1430713B988916487ACE0AAF272EAB35BE27FF
B45D0CC6E61277E23AE3D35A9206DB8F5959CDBAE2D0BBDFC8720511E9754F3D
3E68B5D7652489FAE2DBDDE5A18D23AB92E8A97C2CE2BCD216B45A7F12D8A7E2
D22809FD8FBEDD5EC891750D70F99C2645865C0356D3C5E1B156EB62E04FEA0A
55503F88BFDF011436D9D508891EDAB3B22BFF3FA494F5FBFA38486197A1CED5
292DB6B8E49D4469DC7E5A9141AD2C56C395D1B1542BDDF61B5A54BB13725B28
DE3AD77F1D2FD848EE14B51B2D985FA01E005DAF108ED84B38AE432E26D07AEA
271F903D7BCEECDB602A670CA6E94C8BCCF83DB0AC7B39632F0D44030F7584C7
1AFECE41946AE57589E52A9DAB9B4C13315F71C74E886762140314F3F2106069
D58578B215A96116C1F8FFD925675379569A1DB1723E07A385333CEAE7D0E18E
DC00A8415D70BD5463DC64D0B5DA5324939592A8CF830DEC524749A6C5C0F205
71C577ED03D63028C0AE37575A71EBB8954C3A90EEC264E6115950FC91D0DE9A
5D8E2E18762F7C3094CCD0E1DD07EFAFB9C0229B52E8C4381F8AA02414C2FF62
583D166455F7821A44C27B70F2C85EA632F544082BBDC9B77C55B4D4E68066D9
BD4156E9478D3251ACCC0EA722FC9DCF37794E7186404BB358D7E5031793A4E7
0219B6569340B59671BD93C1554B4F6421A437931A2EBD816C7AC81F42E9372D
E5AF66525EBA8965CF383F4F4AE6DA98D1611D05E59ED9BE07F63A4957485E52
C2815090CA3B1221A12F749E5C419161FC98D9B711D0DBFDE94205CA706005B3
B61C2C80341A9852E7F1E520E0F0F50C287A850CB8F474F37399F5CF0FFD880E
519D305B0313F71DCAE5B69DF9551D56E6DAA3D4B800D58CFC32379D202E9FE8
70D53EC343C11E633D4D471A4D7A6449D75188F3F600D5FE70576EA4213A5455
39CB2A58832AA92DA5F34F197E3EFBF17115F9A60F56F78D26B63043DA049792
55F46F985FB09548A5AF1AFEFFD5E8FC133B2DD91215E75E596E08D144D0801B
855207E8C79FE8C1E98BACBDDB68AF7CCF8E9071B7400D28CDCB4D31C8E5E6DB
585C2DD28B5C0305C968BF0DEA21415D8D35C6D0A1B3322114B056BD56EDF5FA
00BD071446DB6AC8045322CC1A97A9B09A310929427179385ABB10BAF0E8A484
D4D688683ED2B878504A44F08E943886E184BC32D3AEC992B620A98338F962CD
1669D18AC1550B19A610AC87D4D4B0A80797BE2BC7CA32B4541A0AED2F504EA1
F92B4D96DB412E5FDDF6355DBCCFF589C204206DDBDEE99048E6D8D3238AB7B1
66C4CD509A9C5A8B4911B8C82EA079623BA19E2CD19ACC174A587AC54A1344E4
14D0D88A66D6B4F56BEB9360478E29A020E377AC092A285AF9574D6391C93B97
13965E239269385ADD16BA311C9236501F2717DDAB52753B36705655AD44733D
2E25CD1E5BB0CD6685444271EA2BF01587CE8C9EC15E2A4FE2658D8835158A2B
E0E39E2553001E8333DA228AA2169A24F246F586326169BCD4B8508F98E9A4BD
BBA40702199AAF7F906A361BDAD5F0C921B6F044348C7853FB4FBAEB6078B410
935DF7D6D5064271899314F198A26AFBBBA1E86D352FF8A9BC757F9DD3565AC9
CBA3B272499B916012CECABF4989E9508EC480AD837EEC61E1635A6261D204B3
F0A74072A491F62A09D70000B1C715C36D91336AE0304148313B27E1641665CD
C62F480030A6745372290334969E9320AF8E7330A29CFEA10FB6367627ED3AD4
456E3A67BF5BB49920F6FE6620D69F58BA165C38AA49D69F2E0D329684551C90
12158313A8230985FC5EECBE80F4F0307AC6A1696E4EF84A749920A0F64992BE
D1A2323DAB45601994C67F6A07F238E7B098D636AE141331BE35D1D5308C927B
A3940B773F20E48EB70C8A5BED21A826EC20AC4384A8CFF8CECF07A5913189E5
4F54A88EFD2D990D55E3781E25465E34B0E51938AC3ECD62EBE43B473FEC1F76
DA6C55089AF3D95E3B850DE236D848BF0FCAB713EDBFE54E4BA5BA08543D80BF
EDEEF34B2C0D9BA404F1298C27D6C69CDD6E0F3F6DBD68716A5D86A42D4AC9B5
4C9D41E0DCB52E647555DB7172CB031B993103C259CF4C774C9505F9C992FEA3
471A971C242D395273D98D7A005395D8821E2A6B0A654C878C6FDF951D8F9ECE
F97273B7554C01E052854856272A3680A51EC039AF5DA58C53421D968C241C48
6AEFA942F68F6E8615BCD0E6CFFE077688C365888921E4560AACCC98CE06A8F0
9FE0D3E9AB19869F677B7E8B05981B519B5CE4E5D6AA1C6F813D68C3D0E18DEC
5682F646080A54225C2920E3BCEE9D09CA5C60F22B07F24A26DD84B9FB085ED3
41B449BAABADC34F4B6DBCBF48F54C949EFA278B3398FBBD0D4765CAD178A6F9
3C5217BD2547756D5A915EE69CDE1336040C536CCFF439BC8E43553D813DC1A9
B63695100CBFC23DA2F68B499386161B4BD1F94F022EDC64B06481A32733AD83
4B294F36E3BE132254C3B0A8DA1B30A710FDA8E19C96C0CF4B8DD9CE727EBBB4
FD0C1D5E62A860C77CDFC3849E58F278AF879D60E59EF98DE172104A59134C57
CD5CD0305BBF875D7087C38B676764F90484747EB6E236A366D8046477D04EBE
56E5F7EB5DEADE51BF7B714B972DCBF7D9C11B71CBDF3E2B0FEF648E977D3EC9
2D101BC75248B957A4A5B851435BDD511017E77DE30E4887C0E7B8F2A0D884F8
C09A5A6A8572B933865552B6B9F998FF85298CBBAC78BBA0A3D3FA6680A7C734
917A00C16F249A333A1F83E14DFB06C6292C65BE92FC109B2B38EF8C02F86120
E587F7F3E5E0860AAC284813B298DD1D7EF648B69F693C23EA484E50B737A121
5CD4D151B6435DA8D43A7D14F9806D2710B94EF62DC6AC474AC2F11808940D6E
9AFAA51EF6C23C32E9741DC2B9D578DAF502D940AEA08876BE071C01DD020E92
4DB6ABD954BFF51D758526655FA1A05A37C9CD769CAEA7484F17687D2F3900B9
524B578BCF2CA6C2E48A488A5EEBF43CA37A12B2E1CD2F18F2D5563CFAC92826
22CD698615EF49518B3ECB53EC320AAD6CECD064FBCA7B5F67BEECF4995DC35D
4691A78401D7453549879D9B14A6C73F8BD7A245A6DD826398954FBD5E7ABCC7
7B6ACC91D84775A03BD1F7B9955547F2B0BBA26006FD4C1AF44052F09F53B087
A3E5284B1C41859808C27C7DFF5ACB2AF407F6AAD2DE8B745EA3CF0414890044
719DE582F2E79B9BD4C929C8A03801A388315DE6EEBCAC80D4830C86A6D07647
3DA09D5EB6334E81FD2B536C53C1E6FF2C97ACABC52E9DB146BAA3A8A02B7C53
0BED308AC8702F80A9DE69E7B499C26BAEF2BAA95ED2BB89444613EF37B7A971
4834A884A4957B1168D1E1F46742DC29BB4F0E6D0A81386816EAF7CBD2677FCD
108F4166A65971EF3C4EB86B99949ECB190D3C92B459F86E2DF7096A631712F5
0EFF6DEC3B15060C553536AFA1AB550740F7286EC7CF1CAE3ED55EEF399CA17B
715C8A6DA4099DE692F23664DC71629D041E4669A05B6754EE7CE90EE8C3B030
2A0A8E141775ED7DA74734480B48D114719BD5B3596576BA928FF7D401437FAA
45A7875DE9FBE63BEFFEC23FB701CDD3C429BD4CC3F96584C065FAFEA3EEC98A
13787627BFCAD617463B1D8D5CB6770DBDDFD8C0EC2F403A5ABB10BAF0E8A484
D4D688683ED2B878504A44F089AECB8E941B1E7F573D8C0964194509C21E8560
0DCB77A933C1FFD3D1EF05061D80B5E3C87AC8A76D16591A313198D01BAE3BB5
6977F0E8D21158CD18F6523CF7B633C9D7DB81CFEC33DD7CE3D15A87D1A6367C
AEA1CC29DE4D3EBF8B5872580E379881BE02909D7E57B80AD9F00C6CF69E057B
1A71343DACC41CBCDC0E30F2E76DCB7724F4917A6F436B823B1A2FD914DDADEF
B5C5CA3A43E344994199A75DB103C3AE71702350D62048D1958D36E17019B49B
4770CEFB37B0EED373279A334CF98A4F749DB6B9EF49617809FB8B2F24322AB3
10F16A60F884A5889DE0D4695F0AD014E72156DDE45CAD34F29913BBF4ECFD83
ADAE0F66B2652B9E71D3AF022B675E9A48B8C3E765FD671669E0D271F30024C0
488C71FB30791F330A89AB1CD2ED6390ABE1CBB68FA80D3BE4430E9C9FFF5747
D196541BE96D98F0401D2545E9FACD008B4ADB50EB9F0238514DD6544595D1EA
952901FDD537C1B1EF54E133B020E19F93C37C5FC2502E459B18ED19CF7AABFC
7D45935CCA74EEE28CFA47054DC41A389203BFB3D601BC9A44CD13069FC4A80C
E9AAE79F064761AEBB2558EF18E945F06E37B435FF635B80BCC4B4912AC3076B
863D865D83AAD62E2B5202ADE986B4B00DFF04207C0D5E50634A4E01A6DBAC88
BF012B53F8D3262E9BA4F370699C8678DE73D14D8911F60949C075630D5E2991
2CD7E6362E52891A80DC3A55C75248E4DB744F6E0C54E83C14066C3446C36E7B
69063847180B6DCA83EB97A55FFB23788271A49C53225C2920E3BCEE9D09CA5C
60F22B07F24A26DD83F4F260444E08EA8214CD4647D62D216E540277D26CC543
C6623C7F03BCBCD562759C12B4BFEB798B4578ED88B2E29C613EB234EA2AC527
C5E0F43C29B797B00D04AF6B534A749ACFB3F74DEAF14979CA99648AC7971810
F7EB9D2F14ED40653C899AD3D26C369A7FCF5D2513062CD4155578F86FEB25C1
ACB394183F31D783711AE45C4D16119B366A8F2005ECCE7B2ED90343D23E006E
CB2828450D1E2F1B972B143DA98F5CF93DB14805DB66731CE36CE160FAFF76ED
5DFCAD3B0F3C59A4D52A0E0346357CE6DD0453682BB3519205D57BAC8E8D1035
C703855410DD289929090294676AAE3ECABB2F4E65F5271B585DF3C4E7D83D5A
2230B4673692A3A3E95A52591D79473418C511E7FBC75362064CBC02FE63B784
0E7374C5EA086FD894AFCA2AEFD997AD21C556376D21FB706D26251A2D61A98D
51B6F3880C38FB2349BE51D981A08AA153E57F9EF1220C9C272DCD31C53CD08A
BD163F8DE60A4579474A7060A9FBF7B5252C0274C581A2005CB515170BEC29F9
980E9E3155CB94633C9CA212ADDBDCBDDDA4E87A9BBE3EDE32DC8120E6304500
2D044B71370D2195B0745A347A57BCDD94A615D500276FBB0FBBB421B64622C3
5D16A5920E0BDE7C64BBC23EA554AAC9BA95BA57603A8EBA86FE7A0CADC3AECD
739C9C425D09CB50B4B4BE281C7CF009EC096036351451AE7425A26CDC319A31
BDE48D9A9E7142687362FC574EB79B143A4BC2515A46A3FCFA46CBBC2310AF7E
66F09F04BBC8B01F009D09BAD4E0AEE22CC4FCCC7A4BAC3D34E426D7D9D90823
6037C83A7097B9D57B97F5CD56CB80CC88111C9E1CC5A95D86E66763AF781294
F18B5E7ED330B352D98EA20DAD98F7031F94793F7B3A279F3291925B9A3579ED
72125D6388D077A2037B7D29EE7053D34AC69C2DBBB9FF00AE72F942042D778A
CE5C18720E3E3C72B08FB19807710498752E1CCFBE2DA0F3D2CAE3F2C028C5EF
249DA376F0F229976064291F05A2B5F750ED1A437DF6480BC21F9903195EA84D
4365B68DE81582F0FA4728B81578FC2EB39C989C6B500BD034F31C23B04EE90F
CB4484AB2053E8DD69A2E935DAC0C86D9C66ED01B85534A1E39BD5C20DE216B3
342CC9894D177FBBF1DA7D23111F9CE050A46D17DA14A9463282FCA08C17ADA3
3296FC68701C42E853DE286F4DFA25EC7F9E54E92E75E48291ABB565C1F8644C
D5D9F7EA30EA59334CFAF4EF43F7C72C787A33E70D3F3F47A37432E69B29DFA8
44C6B2085D6A445D1F877635AD15214DE56BDDA1E3D2DE9C549844667E28F6FF
56261B6FB1D404A73E92348FE74AE5B8CED1F61DE6B4F56754BB3FE1A443CD7E
8E17FCB8B4ED57D7C61B0C70972F86F6764A7B876F5A6555C04D0A86619FA462
49868CE8429DD6D77D99B505E6559BB8E9664CFA5CB68AA71040D5DC570C993C
158C2C2C11CF6126D1716B808D97E787F5BB19D90FAEF1596A2319473A95AB28
7043C5A32B1ECC192FE012F5BFF946CE8D7834A3410F5E6EC14CC8E473378982
8933DD55B109F616080F5BF29107A418F686DD276382DC118D0DB9EEFAF6FB97
D66CE67F532CFD2FF2ECFFD0197C5374FE3D6DE742A6980C8C55A9DD737F2069
BF9A73FFABD0D0D68492768C7F55E9952987100AFC0EC6E59B0B6301B1902F23
3736792B3CCAE73DEF3F7438ECBBA29A27CDF940B9C096DBBA4915FBF8489EDF
6E2BA563FA7F0397CD075EF9CD41082CCBF63E849C48835E14A9DFBDB4CA8582
DAF2809A41072FD817E7072D80C54B43991D4A47FA52E1221C072B8C983B8A83
BF9E6D88256C4BF012FFB59340D23E1BFE1487D82689119BB85672D5E84D3B54
28A9558234C569604441691CDCAC602029A2A38F7F2648E1819966BC2476D4AC
4E4347E74591994A23E99F51EBF66192E45DF1F3899D636D518807D02B5D5690
931A7FB96C757689A5139FB1A3D7983862931AAF085D2BD19712926E230DD02A
EAE6461EDD83AC935AF04BA71C9E0244FE096571F074F07CC1AAC1DF294CF839
120053B7E9268CF93B9763BA70C77A82B01C2B17403B9007DA39BA7C96926AA7
769E7702305CEF74EC07C79EE7E2D42213218F2ACBB2F5361C86BECDAEEEC705
F7A8823AA2943C05C912B7B60343A7DC7A3F6F1AEA9D874100526E18C29421DB
4FEFD57CD2B0B7721EAF2B21AB693B970F89B6BA6E8B05DDF2B538BC24B526EC
DC0AD8A2E4EF069977E88971C070FBAE2C25A7104589EF3882C85E8CA9ED2804
4819A5F8BB070D9D04A40BCC9D3AA321C8805B2C22BEA0036BF28FA9E0AE74E2
8C8F300E6FD6F33FD53BBC4E00115880F608DD3B6988EC6038D4B9612F8BC361
C35875B7CEB0AC221CC2F141AB6BD9951ABAD6FC67FE4434D11D412FBAF34855
004E5E47A0E5D6D2A513DCCE575B832D0844553EEA4738FEA3F244DEC95C3148
293B0952B0FD400FD469408790D6EFEC98821433C4170D36B73C2426864F0381
0F9FFB98F07CA6252C381A0EBD6B1C70BBF86966F7914282CC412D0F131CCF4F
800D0C3E8BD00B108257F92AE1869430C6DE57F026F2E9C82F572AE49002D43E
0BFC4D3E0EB2729F2C58CA851EA676D738B40DBAE7620F27C3A01F2DA8A5556C
FC8F4A9F067ECB8C163606C3851355ACA79EF5C5033D499C434C165785DC7B08
5956E2B31CBF164EF31284DC4C49E1D55DC081E8B58F2F29E19F7D715AD567F5
56BF4DB8239AB8431BBBAA5E86057757808322DF216865D48D428474F0A80A2E
23211930F1C5D7F231365BE2C51E7110DA3CBC1CFE349AED0167FEB6593EECBC
997193BEC71A63F7B741344010B345394F22199DE571B5E71F57DAD370E98E31
FD3021485E3D82A817866FE481DF6360BCC2154B652F0EBFBB4BAA62641F852A
26CBFC6A61A481F1AB43739F20CA3AF2491CCFE7D42ADC53F67BB32848114C36
F9E6A25F53AB0F25FCA6BB860E709684EA67590F1A83A39CCB7E05896DE70696
93EFC870CB86162614133E0E2C08646BE73DF766E216FCC9E0D3B13991A136BF
E6D2F33F2A6FCA03FB36EF8FFBBD71CEA57FFDEECE1C6223109832853C664B53
C4ECDF81B0004DBE82B86EAEDF5FA5A9342C085C5FD2C774FDCF4DB4D4997018
28FC22F723CE25814E30876470F16C5E8F87F74CFB89CC763954190E9D909671
965AC8849B3B885B7DAA70ADD8804FC5661CCCBA123B2C56BCA4F1724FD3C64E
1B66C4C9B7BBEF8C466E8E71908038D3C02B1F5E8293BE9BBFE63C5BBF46B92C
DE3C52068336290D74705098D4582CC07991334762A700EE46CCFF0F8222069A
239E9C090B5B26813D247827B40DC36A2CBA4A701C45942DB1C91D2734D2E252
BAE9299E709FD22DA1E8E2CD3FBD3C82D6B76DFC63797A999F4405E08A4737EF
3B38F974D988A0876FF8AFD9374011AFBE3B5417B07D10B751B4D088DD921DFE
4EDBB7A447DA4C99661BC83BBC77655DC7D7D3F0167239170D82A1EC5B2469B6
6B4160DA342B14BE2D13F07D54255AC3CE51E835850E61D153F982B67F7B706D
57B398D4C89F58C85445101468001F40721E8DADDADEF4778B3132C7499FE427
8E1D36A434FAC6E77F6A0FE97FBB5B18B8A9D20D1F534C56C075C97D92490662
D7A1C0F7540FA825DE6E0B910F0CAF88E6309CB00AA35C1A0B21DCC7556834DD
3F66EFC7134F543BF9748641D4D5D80CEB089401871C26C7DDFC5D5CBEEAE249
871AC12C29BAC09A81BDB082FA5134A367B198BF1D5888DAC7AF368CF215ECA5
3E73C0C347A0C47DE886A1E1F78EE7BB132ED56EB6794BBB90FBF34BBEAF282A
69007BF678CFE03C4A91948FCAE03F3DF3E6963455CFB22972CD65D3BF92BA1A
84845B61318A6BEABA06D2F8C0210A26195471815D47CD6A5B2ED1DC997146A2
2768AC82C7B98CFFC426634F3D05C8F61EE2068824B4AAE5F3D674ADA847CC76
266C3DC920559EE4F73496FDD2B58F8B140D41A726830A38C7B58AF68CFECB09
313F5745B02B4BB60BD80D11F86B65BB10B62593DEA56DBFF08DF61B80CF18E1
540FCFF3F25B87B75D65CDB23CB54D3C2666ABBD1D7FD20200638DF7E3599F62
B0286A83FE867DE833DA3E181D456AF64058A403CC63CA5572DE3BDD86015BEC
60CEE8ADEEEE96C2499E4D5C40DEEFB9EEC8853BB3E2BD7F6D6F4E5983D415EE
EE370D240B29E25042B9F624674250A728C5C04C53726596250661D7ED3F9424
B8B7E988273E4751A88881FD5D5E7CBA740B6A4A544179C5B3641C5EEA4D59F9
8C4B03FB77685A0AD426DC914790763AC5F9D7E3FA7FCA7E8558FF8EDE9B11BE
ECA6CEAEA814DF82F5AAB27AA9B071B8493902802AF4206253C2DB076270A01E
13666A84DFEBC5A5DC04BFB1D49BF5BEB55C2EC6CB22155A37D36FDC2843EDBD
271BEC306E1817DE0DEF648E977D3EC92D101BC75248B957A4A5B851453720ED
51B9123DA0DA1143CA9AA32E28424B735BDFEF4890D3FB68C544D8790143B7C8
FFDCBC8B95F1B879C6050DEA1FC1D27CC6A4A1E67DD67ED59060159FBFF46CEC
88DE74BE36312504D8F7F6AC051CE1ED882DB34E14C9620BD6760B31870D69C4
C15EEA09E1831354F7C4A66651C65182B961927DE098C08A66D1E33FF54A29BD
64A57DE26B5C3E7CAED86C85B5E190C5C8294E49F4B99C908E7CDDFBEF799995
98E57464E82D184CF76BE6CC53B06D531DB9D7ECA48701B5D4511FF86644AE56
F463938254323C21D8208CF7F2854D681BBF176A08D3C975EEFAD3F2EECA1995
94CF093FB8D49DAB28DA0EDB9463FC653F6F87D1A473A40A3EDF8B197CD2F369
9339E66CA645DE5D3CEF127DB53383AA2FFAC31D3058E6044EAFD51F58A33BEC
1D91D932FEA8A790C218DD6FCF27146065947DA7F7282FBD398422F52DD7D4F1
99BBD874DD442E19D532EACDC90C78A145838224866EA5C1299D94203D112A7E
BBD5193878AF0D3EE755BD5958FD3632E67037C4FCD495F7B532647689F1F213
6657C025AD24664C9A2A718813DDF7E2AFA021A6B5EB84E7D0850954AAFE86CB
5B340FEE679C2524FA0A0192DBC4C4BF0DFE03973BB79FEDACB514713586695C
0797C7900E8E6AC46A6B34ACEC55E337FB59EF89B24C28163F9270AA4C95CA0F
58CF6DA72A3CC8C866B77F225EB04390858BFF70300B0DE649301C641D45DA8F
0F3F695B404F351F8ED22F8D659FF4A30682892C8314CEC9BD005A5B0610214F
0A6CBB7F133E2BED41CE8DA5C50E9EDFB70047B6D2CFA4ECE8A9B0C865179B3F
AB830E1EAAC293AE37EE0993D38EEF5A9675B16D071E432931CD32FB8C360C24
FBFD400EB65F8FA53B5D5FCE9161F188077CC0963A83396A250BA5C883FB9B33
DB98E520A332422433D2DAEBE5ADF4585469D5191951C3EE46B13C8E08646484
B644D0C2556467A4104D101A5A0C0601758F644CA8B09B5C3E973F69EF7A9EDD
4C5A69890997C8243C404AF7E10F76CCFFABDDE4F773864DF886BE2C21FF7BB3
47D45455A0628C7EEF92A86664FA20D07AEF6DC4C3D25B0E6BA61F704CAA3FD5
136F8F3B0DFB89AA1D0FA3717BF3CD52E7FC86C8FBACFDBF66F347EE1D6DB954
61595C9938581921663D3F263122C3B1AE04709B28E38E80485BAC718F97F280
5DACC303CDD10D18F3D2433B05EF6B1F64A14FAA7DFCBA562AEBE8205F2653C6
08EEC3D845B12F3975C5EAFB917D9B85730A4930EF1E3E733292C806C80C8865
645C656072930E0A221BEE8B2CD455AF9B5F2A6343E45D28AF8C7B561500E9AD
B8BE5D338698293881FF237E9135E6C47FD08FD7B68352CACCA2D75D486446E7
369DE487175AE41C4352941A09AB5A195A605234B9D3F08D50F8EAC85B60354A
739F6DDBB748D0B86F21F9497121887FC181C644B1D6E9C29C2E65C25A7376AB
0951A98F668907097E2ABD9120750E6F5E40B38FAECD02D709420B4919855B84
28BDC73E408DF460EDA11739AF3788BABB313CA9B72AA3FBFBE9BB816B42EDF4
45E9984AD71187BE7D6EEB6EB3037ECFF18C13247D13EB838401FE050B089354
0293D5FAF5B4BBEC5416501276491B79153F8DF73AE8E2B9F5FDC218C305A5CF
3A81942435388ADD4BDCA2FB8AF83FDA1E8ACC3588B776A0F38DA32B37B3D6B8
75062F5638493156301A8EB7277801B6E41841E2DE908A2E4FF1752C33E6FDC9
67E75503D554FA90FE87FF6A567AAFE49C9CA1CDAECC0FFB2C3B2EF0396CBE6E
45181D6D03988E9727FE6F8AEF5969EFF87EA400501A3B3236EA1FCF0C423A86
C57CBAE8F9F82E65EDBCCB17469C401E02ACA6C99A0C9920CE6B42AAFBC28BF1
A25BB7E76BEDEEE6A8C24AB041F3C6E2B44AA95479E4E9813350499BBC1E06A5
D7D9D85748FD8B81BE6AC0D179D8120F9A17CF653245AA60D404B3187D0FEB65
CF565A912A654AD47D419099F0279F6755E232669B65A7A46A6161F9AABF5AD2
7361E68D79B52B6C9A96C1A40596F048A31C4E0CDA2A53AD5E8DEEA70B9D144D
3E1EE72343AD613C086D475CF100156741524F3B68C24FFB3540448715CC3EDF
AEA40FB98C1F251CB49EAE29A3AE0601DB63F00AEFA040E9F80D1180B1FCA1A7
5090DCBAE8DB96C15B1849DDEA817D05A4BD642DFAD8B91BF0B9EDAC69886326
6D7A83290DCB8BC01CBF67436CEDBF502C4013C1C4FB989C5C331622A8090D0C
2F709654C55A596B7D4F164FFC3952CF9F04A95ADF3F80F3C4CE59FAF9545125
1659F162B1EAA0489C6D09EA559B9E0DFCCA1A39673371E8005C2A8E32152AC6
76F9B1F252F8D0ED029E610CFDBA894C8C0F2BFB2C8381E13CB69A288CFB8408
890ECB590BDC976A8C93E809536E9087CCA809106A42A594173590DAC64E0738
6A0104CC5ED2C68B08B6321F881E98B4C5193E771E9A7D0B357E17E473AD9FF8
4AAEF7E144982C6DEAD461FE4C204A0A6D7BA9819C8F68CACFF439CA1A153479
7CA46AC19F1F91712B30A195D15523961A2724F5C33A8738A4105E394ACA6EAD
2890CE7643A5C44777DDAEFA56B27091598B2DFB77BC1215DA752B69298B3664
5A69B98423DDA04A18DF5410EEECE6E9471EB02F38BDE00115A21706BC3AE8F2
9C792E45583B16A84E1779CADECE0C75A70B6E70154AB80C5A40BEC0CA793789
74A281B8F074456303CAE324705BE0751CCDE651FB514D0FEFBBF1F53606B848
1ECD5FA685C54DECB92073CC036BA1DC8D789B86226E38B0DB3AFD1896686F8E
478603573F9FFDD42D1DA7BA6D125B96B6B314C7875FE456A79A38623745FC7B
C778B3765D421C915AECD756654DDB145511CECAF4267E9D378CDCD13B00F96C
45B113866881201429FDA949FE1F364C2F744079F5937E2988B08711D1C26A6F
7FC2E24FD64F7B74BEE205BB7E6DD226AB585C11A08A3E33D5F5D10E8177B9BD
F9B526C14065D013427D282B07510C3A6A9597B5C69D8E48C54F7809FC501981
0C4A106297F15E7E6E7B9E42790272E28447EB420D12CDF741FC2782257F20E4
430D54B93AAC4A0FE3595C5D7E2FE528C85539D2FB653AA5B93CF70C4EE4A172
4BED4905EDAA8A46A337EA53E0871270B7FF6F19FFCAF6627099C08DDE996F9D
3B8A2E27B9D4BB11A7D7613AA7C519BCE1182B6C30F93DD0D7DEAF262C2A42C0
2E3D1C41FD46552E7CA1B36B02C66505D08E17C2ACBF106156AA2D5B790AFDEF
FD04B04AB3469F34999A3BAB4047E252ADB05C6BB87648C7A4EE7A3FD4FAA95E
98C99D2E5C078B5199A8AA5AC678091C4C8B2CA6692F3F28B7794A9FE5A62A82
32106093EA39091D5B4204AD9BDD2B9ACFC3FF359CC8667D7887C9BDB503D1ED
64E643D728556B4481C7F77B18BBC1EEB43200DB0C6379BF1F5FAF474A0F2127
19A259549EF7BD5AEFFA0DF810DF1E0034DCFE58B45A71D4E9FDDFCB897B46D6
C40A3B4BAF0C4AFBAE8CFD73A596F7C7AF437B8AD4F2F652EDDFF165186D73C5
275BC9638D8A733D3E5905EB64725D9D9140ADD2348CA838B3A1CA68A22C5A51
34CB01D450721319B911DB91692758F1907EC08F5E8ADB0E9F7DAE0D0486B75F
E82E88EAA03F65077776C747047E336DD497E22194A490DCFBAF39159FB3A63B
24AA15B2D36ED7F45623D0AF7E21A589ECF73E8ABEC3C69594738E8945AAF2ED
1D90FDF92AC9F25075CE7D76366B5B28AD82661F75AC6C8238797C13451EF9C9
E21B9C60F64B2455C109DEEFDA4C340958D49A0C8B4E4459B7C691BF6A674655
823DB7D1D12E2435634CF69890D14A1FF76CDC75ADF83339A0A4E5F1AA194B2F
C8593DE970B2C883FA21B46E2BFF68C724446933E8927F3AACE64BE6623CC6A3
6CB5E9E1260F6699D945A611A7EA348DB3C86BE4B588DBB9FD75BB548E4988A5
80586486CB75E1C4E4C7A7C603456F2EBF2705ECCE7B2ED90343D23E006ECB28
2BEBD7D7CDFD1D6BEFB5B196144E026FD76EF7A00B67824026CD9C4CB0C0C97C
BCBFCC599720FC9CA0A2B44361747D6E81960CC0321BF3AC8193758B4610EF33
F894F278E517DA54270BFCBA2FF5C2064628045617B0D434CE813F69456FD365
BAE24F737E9FA5DBC1CBFBCFBB273936721273DC120969CAAF54CD5F89FD89D1
53C58F0D648A28014FC7DA1A9AB3C09DD30928904494416E3DF1D6CA3B527FB8
826F7F17E5F5D5C98C960B3F7873A164EEFCF23B39579CC1D94AD59B64A54DA9
FE4C01E4EBADFA3C5757BA5C9BA0897E711DFFF1EE6ABE33479FC9E093CAA18D
20F308C43A95299545F27EA902F484D7EF76D8BF50E4A992CBCA5E1285AA1067
D470813C4EE0034375EBCAA822840BC8FA3E02D9B520F7E8785DFEF225DBB69D
606219F17E801AF5F30613E7A2C3D32301ADBCFAACE88F804DAA2B51B443839D
49DE5CE537DF8352F46115C8B3E4679B46C25E44BE0A77A52F49B360BDC5FD87
44E86E19C9B1F9D62740A6C1E4ACA130DD76A67920DBB347FCCB3A3B7622E5A7
04402F59B2EFB224107BCE6BECF4A6FBC27D932CBB65408DEEBB298E1EA6E3E3
EEAF3528EB6CCBF43EE9C02CB6F255587300FD433C3B4D9FF294537074922108
1D1C75F39C3FDED02C7B5394E5358E70A516237FFD7A58EA0C7A39DEAAFF74F3
865CBD9DF5199EE51515D2BA0D44855014654D1A999CAD1A5E9DD35EE33E8DF3
662840E32409951CADA934F8896AA60376DD0865F7BC578D010289CAB665AEA6
C2A88BFA33BE22261AFA8B150CEF52C48C478EADF2E58D3CB1CA23A332D92C80
D89FAF2BD300218B879BE060706CA4081CEDEAAE4CA9986794B83227FD4117B2
7984A141A4B19E695FBC8D4D3C542F83821C56B4F44B70462F9975A6E314A365
BFA26DAFB54B00702F9DC177B9EA20E7A398A633DA1587E3728E345F81A68635
81C22A349B8AB7B3BDBC53EA79B2E8AF3DB3E40BE9E22D7346A518C7B6B74768
50EE3055DC42F2E66AAA8E40FB4F9A575B9C83CF9529AD5E622C5ECD72D3C635
376F88F28238E2BC34D15E5DF40E5B5AA30AF7284A186924F1D3A07710FB1D1A
1DAE107AFFB1C6759C04C3E507FCB495AAE4A10B6CA01ADAFDE9A3FB2169A90B
01F68B87DB15669D9DB11CC7D2A9C358C6CD7BE10F253C9FD64B2C102911B1A7
ECED04F404A73C533DE7E6939262620A5A94328781509A5C4F82A23E3FC8CEAE
6032E8B5A9B42CEFCC75626861C86A5F677E76C5FEDCC0700A44FB1C89313483
A9358BBE32587E7EC04F8876134E5B5D81C916E7AEAED0A847331E84A61E6731
69378F50886160BA2544847411195FD1A4B269D118F9CDA8DD4CE67BEA9D73F4
94DB70D53E7EA2561BAAA0451FEF267A774678018637FC87BFAA82B8D905D4CE
8F21DE9FA6E2578F9A146E90569E6551E81C3FFD0B1858C54E41C055
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 23867906 17900936 1000 600 600
(/home/fenarius/Travail/Cours/NSITerminale/docs/Annales/Corriges/21-EtrangerJ2.dvi)
@start /Fa 179[92 76[{ enclmmathex ReEncodeFont }1 83.022
/LMMathExtension10-Regular rf /Fb 137[25 1[25 7[21 2[13
3[23 3[25 18[34 78[{ enclmec ReEncodeFont }7 41.511
/LMRomanCaps10-Regular rf /Fc 22[20 111[20 2[20 23 16
17 15 2[22 23 1[11 1[12 11 1[22 1[20 23 20 23 21 18[31
1[24 5[25 4[29 7[22 22 22 22 22 22 22 22 22 22 22 12
15 3[17 17 40[{ enclmec ReEncodeFont }37 41.511 /LMSans8-Regular
rf /Fd 22[37 8[40 106[43 30 32 28 1[43 42 43 1[20 1[22
20 43 42 1[37 43 37 1[40 3[24 1[24 4[55 3[54 1[53 3[45
4[55 1[50 60 2[55 3[65 2[23 42 42 42 5[42 42 3[23 15[45
28[{ enclmec ReEncodeFont }37 83.022 /LMSans10-Regular
rf /Fe 22[52 123[93 4[60 4[52 1[56 13[65 83[{ enclmec ReEncodeFont }6
119.552 /LMSans12-Regular rf /Ff 188[84 17[66 49[{
 enclmec ReEncodeFont }2 119.552 /LMSans10-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -525 -608 a
SDict begin H.S end
 -525 -608
a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation1) cvn /DEST pdfmark
end
 -525 -608 a -525
-608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608
a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -525 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1 TeXcolorgray -600 1668 3024 2268 v 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 2424 1668
a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 1345 1579 a

 1345 1579 a 1345
1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf2

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf1

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc



1345 1591 a
SDict begin H.S end
 1345 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1395 1529 a
SDict begin H.R end
 1395 1529 a 1395 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1395
1591 a 1395 1591 a
SDict begin H.S end
 1395 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1461 1529 a
SDict begin H.R end
 1461 1529 a 1461
1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoToPage>>/Subtype /Link H.B /ANN pdfmark end
 1461 1591 a 1461 1591 a
SDict begin H.S end
 1461 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1511 1529 a
SDict begin H.R end
 1511
1529 a 1511 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation2) cvn H.B /ANN pdfmark end
 1511 1591 a 1523 1579 a

 1523 1579
a 1523 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf4

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf3

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1523 1591 a
SDict begin H.S end
 1523 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1564 1529 a
SDict begin H.R end
 1564 1529 a 1564
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1564 1591 a 1564 1591 a
SDict begin H.S end
 1564 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1606 1529 a
SDict begin H.R end
 1606
1529 a 1606 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1606 1591 a 1606 1591 a
SDict begin H.S end
 1606 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1647 1529 a
SDict begin H.R end
 1647 1529 a 1647 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1647 1591 a 1647
1591 a
SDict begin H.S end
 1647 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1689 1529 a
SDict begin H.R end
 1689 1529 a 1689 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation2) cvn H.B /ANN pdfmark end
 1689
1591 a 1701 1579 a

 1701 1579 a 1701 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf6

 restore
 0.84 0.84 0.94
TeXcolorrgb
 save

 pgf5

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1701 1591 a
SDict begin H.S end
 1701
1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1742 1529 a
SDict begin H.R end
 1742 1529 a 1742 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1742 1591 a 1742
1591 a
SDict begin H.S end
 1742 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1784 1529 a
SDict begin H.R end
 1784 1529 a 1784 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1784
1591 a 1784 1591 a
SDict begin H.S end
 1784 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1825 1529 a
SDict begin H.R end
 1825 1529 a 1825
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1825 1591 a 1825 1591 a
SDict begin H.S end
 1825 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1867 1529 a
SDict begin H.R end
 1867
1529 a 1867 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1867 1591 a 1878 1579 a

 1878 1579
a 1878 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf8

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf7

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1878 1591 a
SDict begin H.S end
 1878 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1920 1529 a
SDict begin H.R end
 1920 1529 a 1920
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1920 1591 a 1920 1591 a
SDict begin H.S end
 1920 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1961 1529 a
SDict begin H.R end
 1961
1529 a 1961 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1961 1591 a 1961 1591 a
SDict begin H.S end
 1961 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2003 1529 a
SDict begin H.R end
 2003 1529 a 2003 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2003 1591 a 2003
1591 a
SDict begin H.S end
 2003 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2044 1529 a
SDict begin H.R end
 2044 1529 a 2044 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2044
1591 a 2056 1579 a

 2056 1579 a 2056 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf11

 restore

 newpath

 restore

 pgfc


 2056 1591
a
SDict begin H.S end
 2056 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2131 1529 a
SDict begin H.R end
 2131 1529 a 2131 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2131
1591 a 2131 1591 a
SDict begin H.S end
 2131 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2222 1529 a
SDict begin H.R end
 2222 1529 a 2222
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2222 1591 a 2234 1579 a

 2234 1579 a 2234 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf12

 restore

 newpath

 restore

 pgfc


 2234 1591 a
SDict begin H.S end
 2234 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2292 1529 a
SDict begin H.R end
 2292 1529 a 2292
1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoBack>>/Subtype /Link H.B /ANN pdfmark end
 2292 1591 a 2292 1591 a
SDict begin H.S end
 2292 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2342 1529 a
SDict begin H.R end
 2342
1529 a 2342 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/Find>>/Subtype /Link H.B /ANN pdfmark end
 2342 1591 a 2342 1591 a
SDict begin H.S end
 2342 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2400 1529 a
SDict begin H.R end
 2400 1529 a 2400 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoForward>>/Subtype /Link H.B /ANN pdfmark end
 2400 1591 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray Black 0
TeXcolorgray -517 -517 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -517 -517 a -517 -517 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -517
-517 a -517 -517 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -517 -517 a -517 -517 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -517 -517
a -517 -517 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -517 -517 a -517 -517 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -517 -517 a -517
-517 a
SDict begin H.S end
 -517 -517 a -517 -517 a
SDict begin 12 H.A end
 -517 -517 a -517 -517
a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -517 -517 a -517 -517 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with Beamer class)/Author (F. Nativel)/Keywords () /DOCINFO
pdfmark end
 -517 -517 a -517 -517 a
SDict begin [ {Catalog} <</PageLabels<</Nums[0<</P(1)>>1<</P(2)>>2<</P(3)>>3<</P(4)>>4<</P(5)>>5<</P(6)>>]>>>>
/PUT pdfmark end
 -517
-517 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -600 -287 3024 230
v 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray 1 TeXcolorgray
0 0 1 0 TeXcolorcmyk -500 -350 a Ff(C1)p 1 TeXcolorgray
-529 -458 208 5 v -529 -323 5 137 v -325 -323 V -529
-321 208 5 v 68 w Fe(Sch\351ma)p 1 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 1 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-56 206 a Fd(Liste)27 b(:)h([)238 206 y
tx@Dict begin  tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@D
16 {InitRnode } /NodeScale {} def NewNode end  end
 238 206 a Fd(])p
-467 554 4 100 v -239 524 a
tx@Dict begin  tx@NodeDict begin {6.9445 0.0 6.66699 3.3335 3.47224
} false /N@SG 16 {InitRnode } /NodeScale {} def NewNode end  end
 -239 524 a Fd(A)p 41 554
4 100 v -467 557 512 4 v -467 657 4 100 v -238 627 a(R)p
41 657 V -467 660 512 4 v -467 760 4 100 v -241 730 a(D)p
41 760 V -467 763 512 4 v -467 863 4 100 v -239 833 a(V)p
41 863 V -467 866 512 4 v -417 936 a(Pile)f(Gauche)p
172 554 4 100 v 388 524 a
tx@Dict begin  tx@NodeDict begin {6.5555 0.0 5.0 2.5 3.27774 } false
/N@SD 16 {InitRnode } /NodeScale {} def NewNode end  end
 388 524 a Fd(7)p 642 554 4
100 v 172 557 474 4 v 172 657 4 100 v 388 627 a(8)p 642
657 V 172 660 474 4 v 172 760 4 100 v 388 730 a(9)p 642
760 V 172 763 474 4 v 172 863 4 100 v 367 833 a(10)p
642 863 V 172 866 474 4 v 222 936 a(Pile)g(Droite)-82
1035 y(Etat)g(initial)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb
0.09999 0.09999 0.34999 TeXcolorrgb -600 1751 1008 60
v 0.09999 0.09999 0.34999 TeXcolorrgb 0 TeXcolorgray
1 TeXcolorgray -340 1732 a Fc(F.)16 b Fb(Na)m(tivel)29
b Fc(\(Lyc\351e)14 b(No)o(rd\))p 0 TeXcolorgray 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 408 1751 V 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.S end

912 1732 a 1 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.R end
 912
1732 a 912 1732 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 912 1732 a 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7
TeXcolorrgb 1416 1751 1008 60 v 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 1 TeXcolorgray 821 w Fc(Ann\351e)g(scolaire)f(2018-2019)
p 1 TeXcolorgray 103 w(1)7 b(/)h(6)p 1 TeXcolorgray 0
TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -525
-608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation2) cvn /DEST pdfmark
end
 -525 -608 a -525 -608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525
-608 a -525 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -525 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 1345 1579 a


1345 1579 a 1345 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf2

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf1

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1345 1591 a
SDict begin H.S end
 1345 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1395 1529 a
SDict begin H.R end
 1395 1529 a 1395
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1395 1591 a 1395 1591 a
SDict begin H.S end
 1395 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1461 1529 a
SDict begin H.R end
 1461
1529 a 1461 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoToPage>>/Subtype /Link H.B /ANN pdfmark end
 1461 1591 a 1461 1591 a
SDict begin H.S end
 1461 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1511 1529 a
SDict begin H.R end
 1511 1529 a 1511 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1511 1591 a 1523
1579 a

 1523 1579 a 1523 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf4

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf3

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1523 1591 a
SDict begin H.S end
 1523 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1564 1529 a
SDict begin H.R end
 1564
1529 a 1564 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1564 1591 a 1564 1591 a
SDict begin H.S end
 1564 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1606 1529 a
SDict begin H.R end
 1606 1529 a 1606 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation2) cvn H.B /ANN pdfmark end
 1606 1591 a 1606
1591 a
SDict begin H.S end
 1606 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1647 1529 a
SDict begin H.R end
 1647 1529 a 1647 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation2) cvn H.B /ANN pdfmark end
 1647
1591 a 1647 1591 a
SDict begin H.S end
 1647 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1689 1529 a
SDict begin H.R end
 1689 1529 a 1689
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1689 1591 a 1701 1579 a

 1701 1579 a 1701 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf6

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf5

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc



1701 1591 a
SDict begin H.S end
 1701 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1742 1529 a
SDict begin H.R end
 1742 1529 a 1742 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1742
1591 a 1742 1591 a
SDict begin H.S end
 1742 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1784 1529 a
SDict begin H.R end
 1784 1529 a 1784
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1784 1591 a 1784 1591 a
SDict begin H.S end
 1784 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1825 1529 a
SDict begin H.R end
 1825
1529 a 1825 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1825 1591 a 1825 1591 a
SDict begin H.S end
 1825 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1867 1529 a
SDict begin H.R end
 1867 1529 a 1867 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1867 1591 a 1878
1579 a

 1878 1579 a 1878 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf8

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf7

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1878 1591 a
SDict begin H.S end
 1878 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1920 1529 a
SDict begin H.R end
 1920
1529 a 1920 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1920 1591 a 1920 1591 a
SDict begin H.S end
 1920 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1961 1529 a
SDict begin H.R end
 1961 1529 a 1961 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1961 1591 a 1961
1591 a
SDict begin H.S end
 1961 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2003 1529 a
SDict begin H.R end
 2003 1529 a 2003 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2003
1591 a 2003 1591 a
SDict begin H.S end
 2003 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2044 1529 a
SDict begin H.R end
 2044 1529 a 2044
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2044 1591 a 2056 1579 a

 2056 1579 a 2056 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf11

 restore

 newpath

 restore

 pgfc


 2056 1591 a
SDict begin H.S end
 2056 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2131 1529 a
SDict begin H.R end
 2131 1529 a 2131
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2131 1591 a 2131 1591 a
SDict begin H.S end
 2131 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2222 1529 a
SDict begin H.R end
 2222
1529 a 2222 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2222 1591 a 2234 1579 a

 2234 1579
a 2234 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf12

 restore

 newpath

 restore

 pgfc


 2234 1591 a
SDict begin H.S end
 2234 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2292 1529 a
SDict begin H.R end
 2292
1529 a 2292 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoBack>>/Subtype /Link H.B /ANN pdfmark end
 2292 1591 a 2292 1591 a
SDict begin H.S end
 2292 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2342 1529 a
SDict begin H.R end
 2342 1529 a 2342 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/Find>>/Subtype /Link H.B /ANN pdfmark end
 2342 1591 a 2342
1591 a
SDict begin H.S end
 2342 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2400 1529 a
SDict begin H.R end
 2400 1529 a 2400 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoForward>>/Subtype /Link H.B /ANN pdfmark end
 2400
1591 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -600
-287 3024 230 v 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray
1 TeXcolorgray 0 0 1 0 TeXcolorcmyk -500 -350 a Ff(C1)p
1 TeXcolorgray -529 -458 208 5 v -529 -323 5 137 v -325
-323 V -529 -321 208 5 v 68 w Fe(Sch\351ma)p 1 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 126 206 a Fd(Liste)27 b(:)h([)420 206
y
tx@Dict begin  tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@D
16 {InitRnode } /NodeScale {} def NewNode end  end
 420 206 a Fd(])p -467 554 4 100 v -239 524 a
tx@Dict begin  tx@NodeDict begin {6.9445 0.0 6.66699 3.3335 3.47224
} false /N@SG 16 {InitRnode } /NodeScale {} def NewNode end  end
 -239 524
a Fd(A)p 41 554 4 100 v -467 557 512 4 v -467 657 4 100
v -238 627 a(R)p 41 657 V -467 660 512 4 v -467 760 4
100 v -241 730 a(D)p 41 760 V -467 763 512 4 v -467 863
4 100 v -239 833 a(V)p 41 863 V -467 866 512 4 v -417
936 a(Pile)f(Gauche)p 354 554 4 100 v 570 524 a
tx@Dict begin  tx@NodeDict begin {6.5555 0.0 5.0 2.5 3.27774 } false
/N@SD 16 {InitRnode } /NodeScale {} def NewNode end  end
 570 524
a Fd(7)p 824 554 4 100 v 354 557 474 4 v 354 657 4 100
v 570 627 a(8)p 824 657 V 354 660 474 4 v 354 760 4 100
v 570 730 a(9)p 824 760 V 354 763 474 4 v 354 863 4 100
v 549 833 a(10)p 824 863 V 354 866 474 4 v 404 936 a(Pile)g(Droite)-467
1035 y(D\351piler)g(\340)h(gauche,)e(ajouter)i(\340)f(la)h(\034n)f(de)g
(la)h(liste)1115 622 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@SG /N@D InitNC { yB
yA sub xB xA sub Atan dup 8.  add /AngleA exch def 8.  sub 180 add
/AngleB exch def 0.67  0.67  GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1
sub Pyth 2 div dup 3 -1 roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0
def /ArmTypeB 0 def GetArmA GetArmB xA2 yA2 xA1 yA1 2 copy /y0 ED /x0
ED tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict begin ArrowB end
/y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy
y1 y0 sub 3 mul def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3
mul cy sub def /ax x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub
by sub def /getValues { ax t0 3 exp mul bx t0 t0 mul mul add cx t0
mul add x0 add ay t0 3 exp mul by t0 t0 mul mul add cy t0 mul add y0
add ax t 3 exp mul bx t t mul mul add cx t mul add x0 add ay t 3 exp
mul by t t mul mul add cy t mul add y0 add } def /getdL { getValues
3 -1 roll sub 3 1 roll sub Pyth } def /CurveLength { /u 0 def /du 0.01
def 0 100 { /t0 u def /u u du add def /t u def getdL add } repeat }
def /GetArrowPos { /ende 0.5  1 gt {ArrowPos}{ArrowPos CurveLength
mul} ifelse def /u 0 def /du 0.01 def /sum 0 def { /t0 u def /u u du
add def /t u def /sum getdL sum add def sum ende gt {exit} if } loop
u } def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
/ArrowPos 0.  def /loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1.
} ifelse def loopNo cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos
def /t0 t 0.95 mul def getValues ArrowInside pop pop pop pop } repeat
x1 y1 x2 y2 x3 y3 curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1
] cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def   } if end
 gsave 0.4 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore  grestore end
 1115 622 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb
0.09999 0.09999 0.34999 TeXcolorrgb -600 1751 1008 60
v 0.09999 0.09999 0.34999 TeXcolorrgb 0 TeXcolorgray
1 TeXcolorgray -340 1732 a Fc(F.)16 b Fb(Na)m(tivel)29
b Fc(\(Lyc\351e)14 b(No)o(rd\))p 0 TeXcolorgray 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 408 1751 V 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.S end

912 1732 a 1 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.R end
 912
1732 a 912 1732 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 912 1732 a 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7
TeXcolorrgb 1416 1751 1008 60 v 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 1 TeXcolorgray 821 w Fc(Ann\351e)g(scolaire)f(2018-2019)
p 1 TeXcolorgray 103 w(2)7 b(/)h(6)p 1 TeXcolorgray 0
TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -525
-608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation3) cvn /DEST pdfmark
end
 -525 -608 a -525 -608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525
-608 a -525 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -525 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 1345 1579 a


1345 1579 a 1345 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf2

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf1

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1345 1591 a
SDict begin H.S end
 1345 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1395 1529 a
SDict begin H.R end
 1395 1529 a 1395
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation2) cvn H.B /ANN pdfmark end
 1395 1591 a 1395 1591 a
SDict begin H.S end
 1395 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1461 1529 a
SDict begin H.R end
 1461
1529 a 1461 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoToPage>>/Subtype /Link H.B /ANN pdfmark end
 1461 1591 a 1461 1591 a
SDict begin H.S end
 1461 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1511 1529 a
SDict begin H.R end
 1511 1529 a 1511 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation4) cvn H.B /ANN pdfmark end
 1511 1591 a 1523
1579 a

 1523 1579 a 1523 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf4

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf3

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1523 1591 a
SDict begin H.S end
 1523 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1564 1529 a
SDict begin H.R end
 1564
1529 a 1564 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation2) cvn H.B /ANN pdfmark end
 1564 1591 a 1564 1591 a
SDict begin H.S end
 1564 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1606 1529 a
SDict begin H.R end
 1606 1529 a 1606 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1606 1591 a 1606
1591 a
SDict begin H.S end
 1606 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1647 1529 a
SDict begin H.R end
 1647 1529 a 1647 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1647
1591 a 1647 1591 a
SDict begin H.S end
 1647 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1689 1529 a
SDict begin H.R end
 1689 1529 a 1689
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation4) cvn H.B /ANN pdfmark end
 1689 1591 a 1701 1579 a

 1701 1579 a 1701 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf6

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf5

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc



1701 1591 a
SDict begin H.S end
 1701 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1742 1529 a
SDict begin H.R end
 1742 1529 a 1742 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1742
1591 a 1742 1591 a
SDict begin H.S end
 1742 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1784 1529 a
SDict begin H.R end
 1784 1529 a 1784
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1784 1591 a 1784 1591 a
SDict begin H.S end
 1784 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1825 1529 a
SDict begin H.R end
 1825
1529 a 1825 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1825 1591 a 1825 1591 a
SDict begin H.S end
 1825 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1867 1529 a
SDict begin H.R end
 1867 1529 a 1867 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1867 1591 a 1878
1579 a

 1878 1579 a 1878 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf8

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf7

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1878 1591 a
SDict begin H.S end
 1878 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1920 1529 a
SDict begin H.R end
 1920
1529 a 1920 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1920 1591 a 1920 1591 a
SDict begin H.S end
 1920 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1961 1529 a
SDict begin H.R end
 1961 1529 a 1961 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1961 1591 a 1961
1591 a
SDict begin H.S end
 1961 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2003 1529 a
SDict begin H.R end
 2003 1529 a 2003 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2003
1591 a 2003 1591 a
SDict begin H.S end
 2003 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2044 1529 a
SDict begin H.R end
 2044 1529 a 2044
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2044 1591 a 2056 1579 a

 2056 1579 a 2056 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf11

 restore

 newpath

 restore

 pgfc


 2056 1591 a
SDict begin H.S end
 2056 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2131 1529 a
SDict begin H.R end
 2131 1529 a 2131
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2131 1591 a 2131 1591 a
SDict begin H.S end
 2131 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2222 1529 a
SDict begin H.R end
 2222
1529 a 2222 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2222 1591 a 2234 1579 a

 2234 1579
a 2234 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf12

 restore

 newpath

 restore

 pgfc


 2234 1591 a
SDict begin H.S end
 2234 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2292 1529 a
SDict begin H.R end
 2292
1529 a 2292 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoBack>>/Subtype /Link H.B /ANN pdfmark end
 2292 1591 a 2292 1591 a
SDict begin H.S end
 2292 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2342 1529 a
SDict begin H.R end
 2342 1529 a 2342 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/Find>>/Subtype /Link H.B /ANN pdfmark end
 2342 1591 a 2342
1591 a
SDict begin H.S end
 2342 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2400 1529 a
SDict begin H.R end
 2400 1529 a 2400 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoForward>>/Subtype /Link H.B /ANN pdfmark end
 2400
1591 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -600
-287 3024 230 v 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray
1 TeXcolorgray 0 0 1 0 TeXcolorcmyk -500 -350 a Ff(C1)p
1 TeXcolorgray -529 -458 208 5 v -529 -323 5 137 v -325
-323 V -529 -321 208 5 v 68 w Fe(Sch\351ma)p 1 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 66 206 a Fd(Liste)27 b(:)h([A,)438 206
y
tx@Dict begin  tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@D
16 {InitRnode } /NodeScale {} def NewNode end  end
 438 206 a Fd(])p -467 554 4 100 v -211 524 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@SG
16 {InitRnode } /NodeScale {} def NewNode end  end
 -211 524
a 41 554 4 100 v -467 557 512 4 v -467 657 4 100 v -238
627 a Fd(R)p 41 657 V -467 660 512 4 v -467 760 4 100
v -241 730 a(D)p 41 760 V -467 763 512 4 v -467 863 4
100 v -239 833 a(V)p 41 863 V -467 866 512 4 v -417 936
a(Pile)f(Gauche)p 333 554 4 100 v 549 524 a
tx@Dict begin  tx@NodeDict begin {6.5555 0.0 5.0 2.5 3.27774 } false
/N@SD 16 {InitRnode } /NodeScale {} def NewNode end  end
 549 524 a
Fd(7)p 803 554 4 100 v 333 557 474 4 v 333 657 4 100
v 549 627 a(8)p 803 657 V 333 660 474 4 v 333 760 4 100
v 549 730 a(9)p 803 760 V 333 763 474 4 v 333 863 4 100
v 528 833 a(10)p 803 863 V 333 866 474 4 v 383 936 a(Pile)g(Droite)-467
1035 y(D\351piler)g(\340)h(droite,)f(ajouter)g(\340)h(la)f(\034n)g(de)h
(la)f(liste)1073 622 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@SD /N@D InitNC { yB
yA sub xB xA sub Atan dup 8.  add /AngleA exch def 8.  sub 180 add
/AngleB exch def 0.67  0.67  GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1
sub Pyth 2 div dup 3 -1 roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0
def /ArmTypeB 0 def GetArmA GetArmB xA2 yA2 xA1 yA1 2 copy /y0 ED /x0
ED tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict begin ArrowB end
/y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def /cy
y1 y0 sub 3 mul def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub 3
mul cy sub def /ax x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub
by sub def /getValues { ax t0 3 exp mul bx t0 t0 mul mul add cx t0
mul add x0 add ay t0 3 exp mul by t0 t0 mul mul add cy t0 mul add y0
add ax t 3 exp mul bx t t mul mul add cx t mul add x0 add ay t 3 exp
mul by t t mul mul add cy t mul add y0 add } def /getdL { getValues
3 -1 roll sub 3 1 roll sub Pyth } def /CurveLength { /u 0 def /du 0.01
def 0 100 { /t0 u def /u u du add def /t u def getdL add } repeat }
def /GetArrowPos { /ende 0.5  1 gt {ArrowPos}{ArrowPos CurveLength
mul} ifelse def /u 0 def /du 0.01 def /sum 0 def { /t0 u def /u u du
add def /t u def /sum getdL sum add def sum ende gt {exit} if } loop
u } def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
/ArrowPos 0.  def /loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1.
} ifelse def loopNo cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos
def /t0 t 0.95 mul def getValues ArrowInside pop pop pop pop } repeat
x1 y1 x2 y2 x3 y3 curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1
] cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def   } if end
 gsave 0.4 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore  grestore end
 1073 622 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb
0.09999 0.09999 0.34999 TeXcolorrgb -600 1751 1008 60
v 0.09999 0.09999 0.34999 TeXcolorrgb 0 TeXcolorgray
1 TeXcolorgray -340 1732 a Fc(F.)16 b Fb(Na)m(tivel)29
b Fc(\(Lyc\351e)14 b(No)o(rd\))p 0 TeXcolorgray 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 408 1751 V 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.S end

912 1732 a 1 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.R end
 912
1732 a 912 1732 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 912 1732 a 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7
TeXcolorrgb 1416 1751 1008 60 v 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 1 TeXcolorgray 821 w Fc(Ann\351e)g(scolaire)f(2018-2019)
p 1 TeXcolorgray 103 w(3)7 b(/)h(6)p 1 TeXcolorgray 0
TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -525
-608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation4) cvn /DEST pdfmark
end
 -525 -608 a -525 -608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525
-608 a -525 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 -525 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 1345 1579 a


1345 1579 a 1345 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf2

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf1

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1345 1591 a
SDict begin H.S end
 1345 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1395 1529 a
SDict begin H.R end
 1395 1529 a 1395
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1395 1591 a 1395 1591 a
SDict begin H.S end
 1395 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1461 1529 a
SDict begin H.R end
 1461
1529 a 1461 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoToPage>>/Subtype /Link H.B /ANN pdfmark end
 1461 1591 a 1461 1591 a
SDict begin H.S end
 1461 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1511 1529 a
SDict begin H.R end
 1511 1529 a 1511 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation5) cvn H.B /ANN pdfmark end
 1511 1591 a 1523
1579 a

 1523 1579 a 1523 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf4

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf3

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1523 1591 a
SDict begin H.S end
 1523 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1564 1529 a
SDict begin H.R end
 1564
1529 a 1564 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1564 1591 a 1564 1591 a
SDict begin H.S end
 1564 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1606 1529 a
SDict begin H.R end
 1606 1529 a 1606 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation4) cvn H.B /ANN pdfmark end
 1606 1591 a 1606
1591 a
SDict begin H.S end
 1606 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1647 1529 a
SDict begin H.R end
 1647 1529 a 1647 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation4) cvn H.B /ANN pdfmark end
 1647
1591 a 1647 1591 a
SDict begin H.S end
 1647 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1689 1529 a
SDict begin H.R end
 1689 1529 a 1689
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation5) cvn H.B /ANN pdfmark end
 1689 1591 a 1701 1579 a

 1701 1579 a 1701 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf6

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf5

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc



1701 1591 a
SDict begin H.S end
 1701 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1742 1529 a
SDict begin H.R end
 1742 1529 a 1742 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1742
1591 a 1742 1591 a
SDict begin H.S end
 1742 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1784 1529 a
SDict begin H.R end
 1784 1529 a 1784
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1784 1591 a 1784 1591 a
SDict begin H.S end
 1784 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1825 1529 a
SDict begin H.R end
 1825
1529 a 1825 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1825 1591 a 1825 1591 a
SDict begin H.S end
 1825 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1867 1529 a
SDict begin H.R end
 1867 1529 a 1867 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1867 1591 a 1878
1579 a

 1878 1579 a 1878 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf8

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf7

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1878 1591 a
SDict begin H.S end
 1878 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1920 1529 a
SDict begin H.R end
 1920
1529 a 1920 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1920 1591 a 1920 1591 a
SDict begin H.S end
 1920 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1961 1529 a
SDict begin H.R end
 1961 1529 a 1961 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1961 1591 a 1961
1591 a
SDict begin H.S end
 1961 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2003 1529 a
SDict begin H.R end
 2003 1529 a 2003 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2003
1591 a 2003 1591 a
SDict begin H.S end
 2003 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2044 1529 a
SDict begin H.R end
 2044 1529 a 2044
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2044 1591 a 2056 1579 a

 2056 1579 a 2056 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf11

 restore

 newpath

 restore

 pgfc


 2056 1591 a
SDict begin H.S end
 2056 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2131 1529 a
SDict begin H.R end
 2131 1529 a 2131
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2131 1591 a 2131 1591 a
SDict begin H.S end
 2131 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2222 1529 a
SDict begin H.R end
 2222
1529 a 2222 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2222 1591 a 2234 1579 a

 2234 1579
a 2234 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf12

 restore

 newpath

 restore

 pgfc


 2234 1591 a
SDict begin H.S end
 2234 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2292 1529 a
SDict begin H.R end
 2292
1529 a 2292 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoBack>>/Subtype /Link H.B /ANN pdfmark end
 2292 1591 a 2292 1591 a
SDict begin H.S end
 2292 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2342 1529 a
SDict begin H.R end
 2342 1529 a 2342 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/Find>>/Subtype /Link H.B /ANN pdfmark end
 2342 1591 a 2342
1591 a
SDict begin H.S end
 2342 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2400 1529 a
SDict begin H.R end
 2400 1529 a 2400 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoForward>>/Subtype /Link H.B /ANN pdfmark end
 2400
1591 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -600
-287 3024 230 v 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray
1 TeXcolorgray 0 0 1 0 TeXcolorcmyk -500 -350 a Ff(C1)p
1 TeXcolorgray -529 -458 208 5 v -529 -323 5 137 v -325
-323 V -529 -321 208 5 v 68 w Fe(Sch\351ma)p 1 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 41 206 a Fd(Liste)27 b(:)h([A,)g(7,)505
206 y
tx@Dict begin  tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@D
16 {InitRnode } /NodeScale {} def NewNode end  end
 505 206 a Fd(])p -467 554 4 100 v -211 524 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@SG
16 {InitRnode } /NodeScale {} def NewNode end  end
 -211
524 a 41 554 4 100 v -467 557 512 4 v -467 657 4 100
v -238 627 a Fd(R)p 41 657 V -467 660 512 4 v -467 760
4 100 v -241 730 a(D)p 41 760 V -467 763 512 4 v -467
863 4 100 v -239 833 a(V)p 41 863 V -467 866 512 4 v
-417 936 a(Pile)f(Gauche)p 354 554 4 100 v 591 524 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@SD
16 {InitRnode } /NodeScale {} def NewNode end  end

591 524 a 824 554 4 100 v 354 557 474 4 v 354 657 4 100
v 570 627 a Fd(8)p 824 657 V 354 660 474 4 v 354 760
4 100 v 570 730 a(9)p 824 760 V 354 763 474 4 v 354 863
4 100 v 549 833 a(10)p 824 863 V 354 866 474 4 v 404
936 a(Pile)g(Droite)-467 1035 y(D\351piler)g(\340)h(gauche,)e(ajouter)i
(\340)f(la)h(\034n)f(de)g(la)h(liste)1115 622 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW CLW
def tx@NodeDict begin -5.69046 0.0 neg 0.0 0.0 0 0 /N@SG /N@D InitNC
{ yB yA sub xB xA sub Atan dup 8.  add /AngleA exch def 8.  sub 180
add /AngleB exch def 0.67  0.67  GetEdgeA GetEdgeB xA1 xB1 sub yA1
yB1 sub Pyth 2 div dup 3 -1 roll mul /ArmA ED mul /ArmB ED /ArmTypeA
0 def /ArmTypeB 0 def GetArmA GetArmB xA2 yA2 xA1 yA1 2 copy /y0 ED
/x0 ED tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict begin ArrowB
end /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /cx x1 x0 sub 3 mul def
/cy y1 y0 sub 3 mul def /bx x2 x1 sub 3 mul cx sub def /by y2 y1 sub
3 mul cy sub def /ax x3 x0 sub cx sub bx sub def /ay y3 y0 sub cy sub
by sub def /getValues { ax t0 3 exp mul bx t0 t0 mul mul add cx t0
mul add x0 add ay t0 3 exp mul by t0 t0 mul mul add cy t0 mul add y0
add ax t 3 exp mul bx t t mul mul add cx t mul add x0 add ay t 3 exp
mul by t t mul mul add cy t mul add y0 add } def /getdL { getValues
3 -1 roll sub 3 1 roll sub Pyth } def /CurveLength { /u 0 def /du 0.01
def 0 100 { /t0 u def /u u du add def /t u def getdL add } repeat }
def /GetArrowPos { /ende 0.5  1 gt {ArrowPos}{ArrowPos CurveLength
mul} ifelse def /u 0 def /du 0.01 def /sum 0 def { /t0 u def /u u du
add def /t u def /sum getdL sum add def sum ende gt {exit} if } loop
u } def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
/ArrowPos 0.  def /loopNo 0.5  1 gt {CurveLength 0.5  div cvi }{ 1.
} ifelse def loopNo cvi { /ArrowPos ArrowPos dArrowPos add def /t GetArrowPos
def /t0 t 0.95 mul def getValues ArrowInside pop pop pop pop } repeat
x1 y1 x2 y2 x3 y3 curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1
] cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def   } if end
 gsave 0.4 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore  grestore end
 1115
622 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb -600 1751 1008 60 v 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 1 TeXcolorgray -340 1732 a
Fc(F.)16 b Fb(Na)m(tivel)29 b Fc(\(Lyc\351e)14 b(No)o(rd\))p
0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb 0
TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 408 1751 V 0.15 0.15 0.525 TeXcolorrgb 0
TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.S end
 912 1732 a 1 TeXcolorgray
1 TeXcolorgray 912 1732 a
SDict begin H.R end
 912 1732 a 912 1732 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 912 1732
a 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb 1416
1751 1008 60 v 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
1 TeXcolorgray 821 w Fc(Ann\351e)g(scolaire)f(2018-2019)p
1 TeXcolorgray 103 w(4)7 b(/)h(6)p 1 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -525
-608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation5) cvn /DEST pdfmark
end
 -525 -608 a -525 -608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525
-608 a -525 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 -525 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 1345 1579 a


1345 1579 a 1345 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf2

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf1

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1345 1591 a
SDict begin H.S end
 1345 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1395 1529 a
SDict begin H.R end
 1395 1529 a 1395
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation4) cvn H.B /ANN pdfmark end
 1395 1591 a 1395 1591 a
SDict begin H.S end
 1395 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1461 1529 a
SDict begin H.R end
 1461
1529 a 1461 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoToPage>>/Subtype /Link H.B /ANN pdfmark end
 1461 1591 a 1461 1591 a
SDict begin H.S end
 1461 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1511 1529 a
SDict begin H.R end
 1511 1529 a 1511 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1511 1591 a 1523
1579 a

 1523 1579 a 1523 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf4

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf3

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1523 1591 a
SDict begin H.S end
 1523 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1564 1529 a
SDict begin H.R end
 1564
1529 a 1564 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation4) cvn H.B /ANN pdfmark end
 1564 1591 a 1564 1591 a
SDict begin H.S end
 1564 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1606 1529 a
SDict begin H.R end
 1606 1529 a 1606 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation5) cvn H.B /ANN pdfmark end
 1606 1591 a 1606
1591 a
SDict begin H.S end
 1606 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1647 1529 a
SDict begin H.R end
 1647 1529 a 1647 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation5) cvn H.B /ANN pdfmark end
 1647
1591 a 1647 1591 a
SDict begin H.S end
 1647 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1689 1529 a
SDict begin H.R end
 1689 1529 a 1689
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1689 1591 a 1701 1579 a

 1701 1579 a 1701 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf6

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf5

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc



1701 1591 a
SDict begin H.S end
 1701 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1742 1529 a
SDict begin H.R end
 1742 1529 a 1742 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1742
1591 a 1742 1591 a
SDict begin H.S end
 1742 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1784 1529 a
SDict begin H.R end
 1784 1529 a 1784
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1784 1591 a 1784 1591 a
SDict begin H.S end
 1784 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1825 1529 a
SDict begin H.R end
 1825
1529 a 1825 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1825 1591 a 1825 1591 a
SDict begin H.S end
 1825 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1867 1529 a
SDict begin H.R end
 1867 1529 a 1867 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1867 1591 a 1878
1579 a

 1878 1579 a 1878 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf8

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf7

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1878 1591 a
SDict begin H.S end
 1878 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1920 1529 a
SDict begin H.R end
 1920
1529 a 1920 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1920 1591 a 1920 1591 a
SDict begin H.S end
 1920 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1961 1529 a
SDict begin H.R end
 1961 1529 a 1961 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1961 1591 a 1961
1591 a
SDict begin H.S end
 1961 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2003 1529 a
SDict begin H.R end
 2003 1529 a 2003 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2003
1591 a 2003 1591 a
SDict begin H.S end
 2003 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2044 1529 a
SDict begin H.R end
 2044 1529 a 2044
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2044 1591 a 2056 1579 a

 2056 1579 a 2056 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf11

 restore

 newpath

 restore

 pgfc


 2056 1591 a
SDict begin H.S end
 2056 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2131 1529 a
SDict begin H.R end
 2131 1529 a 2131
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2131 1591 a 2131 1591 a
SDict begin H.S end
 2131 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2222 1529 a
SDict begin H.R end
 2222
1529 a 2222 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2222 1591 a 2234 1579 a

 2234 1579
a 2234 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf12

 restore

 newpath

 restore

 pgfc


 2234 1591 a
SDict begin H.S end
 2234 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2292 1529 a
SDict begin H.R end
 2292
1529 a 2292 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoBack>>/Subtype /Link H.B /ANN pdfmark end
 2292 1591 a 2292 1591 a
SDict begin H.S end
 2292 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2342 1529 a
SDict begin H.R end
 2342 1529 a 2342 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/Find>>/Subtype /Link H.B /ANN pdfmark end
 2342 1591 a 2342
1591 a
SDict begin H.S end
 2342 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2400 1529 a
SDict begin H.R end
 2400 1529 a 2400 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoForward>>/Subtype /Link H.B /ANN pdfmark end
 2400
1591 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -600
-287 3024 230 v 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray
1 TeXcolorgray 0 0 1 0 TeXcolorcmyk -500 -350 a Ff(C1)p
1 TeXcolorgray -529 -458 208 5 v -529 -323 5 137 v -325
-323 V -529 -321 208 5 v 68 w Fe(Sch\351ma)p 1 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -176 434 a Fd(1)99 b(1)h(0)f(0)g(1)g(1)g(1)g(0)-467
471 y Fa(L)-176 534 y Fd(0)g(1)h(1)f(0)g(1)g(0)g(1)g(1)p
-517 596 1421 4 v -453 694 a(=)212 b(1)99 b(0)h(1)f(0)g(0)g(1)g(0)g(1)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.09999 0.09999 0.34999
TeXcolorrgb 0.09999 0.09999 0.34999 TeXcolorrgb -600
1751 1008 60 v 0.09999 0.09999 0.34999 TeXcolorrgb 0
TeXcolorgray 1 TeXcolorgray -340 1732 a Fc(F.)16 b Fb(Na)m(tivel)29
b Fc(\(Lyc\351e)14 b(No)o(rd\))p 0 TeXcolorgray 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 408 1751 V 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.S end

912 1732 a 1 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.R end
 912
1732 a 912 1732 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 912 1732 a 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7
TeXcolorrgb 1416 1751 1008 60 v 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 1 TeXcolorgray 821 w Fc(Ann\351e)g(scolaire)f(2018-2019)
p 1 TeXcolorgray 103 w(5)7 b(/)h(6)p 1 TeXcolorgray 0
TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -525
-608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation6) cvn /DEST pdfmark
end
 -525 -608 a -525 -608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525
-608 a -525 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 -525 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 1345 1579 a


1345 1579 a 1345 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf2

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf1

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1345 1591 a
SDict begin H.S end
 1345 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1395 1529 a
SDict begin H.R end
 1395 1529 a 1395
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation5) cvn H.B /ANN pdfmark end
 1395 1591 a 1395 1591 a
SDict begin H.S end
 1395 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1461 1529 a
SDict begin H.R end
 1461
1529 a 1461 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoToPage>>/Subtype /Link H.B /ANN pdfmark end
 1461 1591 a 1461 1591 a
SDict begin H.S end
 1461 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1511 1529 a
SDict begin H.R end
 1511 1529 a 1511 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1511 1591 a 1523
1579 a

 1523 1579 a 1523 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf4

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf3

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1523 1591 a
SDict begin H.S end
 1523 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1564 1529 a
SDict begin H.R end
 1564
1529 a 1564 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation5) cvn H.B /ANN pdfmark end
 1564 1591 a 1564 1591 a
SDict begin H.S end
 1564 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1606 1529 a
SDict begin H.R end
 1606 1529 a 1606 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1606 1591 a 1606
1591 a
SDict begin H.S end
 1606 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1647 1529 a
SDict begin H.R end
 1647 1529 a 1647 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1647
1591 a 1647 1591 a
SDict begin H.S end
 1647 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1689 1529 a
SDict begin H.R end
 1689 1529 a 1689
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1689 1591 a 1701 1579 a

 1701 1579 a 1701 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf6

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf5

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc



1701 1591 a
SDict begin H.S end
 1701 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1742 1529 a
SDict begin H.R end
 1742 1529 a 1742 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1742
1591 a 1742 1591 a
SDict begin H.S end
 1742 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1784 1529 a
SDict begin H.R end
 1784 1529 a 1784
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1784 1591 a 1784 1591 a
SDict begin H.S end
 1784 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1825 1529 a
SDict begin H.R end
 1825
1529 a 1825 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1825 1591 a 1825 1591 a
SDict begin H.S end
 1825 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1867 1529 a
SDict begin H.R end
 1867 1529 a 1867 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1867 1591 a 1878
1579 a

 1878 1579 a 1878 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf8

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf7

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1878 1591 a
SDict begin H.S end
 1878 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1920 1529 a
SDict begin H.R end
 1920
1529 a 1920 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1920 1591 a 1920 1591 a
SDict begin H.S end
 1920 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1961 1529 a
SDict begin H.R end
 1961 1529 a 1961 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1961 1591 a 1961
1591 a
SDict begin H.S end
 1961 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2003 1529 a
SDict begin H.R end
 2003 1529 a 2003 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2003
1591 a 2003 1591 a
SDict begin H.S end
 2003 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2044 1529 a
SDict begin H.R end
 2044 1529 a 2044
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2044 1591 a 2056 1579 a

 2056 1579 a 2056 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf11

 restore

 newpath

 restore

 pgfc


 2056 1591 a
SDict begin H.S end
 2056 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2131 1529 a
SDict begin H.R end
 2131 1529 a 2131
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2131 1591 a 2131 1591 a
SDict begin H.S end
 2131 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2222 1529 a
SDict begin H.R end
 2222
1529 a 2222 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2222 1591 a 2234 1579 a

 2234 1579
a 2234 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf12

 restore

 newpath

 restore

 pgfc


 2234 1591 a
SDict begin H.S end
 2234 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2292 1529 a
SDict begin H.R end
 2292
1529 a 2292 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoBack>>/Subtype /Link H.B /ANN pdfmark end
 2292 1591 a 2292 1591 a
SDict begin H.S end
 2292 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2342 1529 a
SDict begin H.R end
 2342 1529 a 2342 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/Find>>/Subtype /Link H.B /ANN pdfmark end
 2342 1591 a 2342
1591 a
SDict begin H.S end
 2342 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2400 1529 a
SDict begin H.R end
 2400 1529 a 2400 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoForward>>/Subtype /Link H.B /ANN pdfmark end
 2400
1591 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -600
-287 3024 230 v 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray
1 TeXcolorgray 0 0 1 0 TeXcolorcmyk -500 -350 a Ff(C1)p
1 TeXcolorgray -529 -458 208 5 v -529 -323 5 137 v -325
-323 V -529 -321 208 5 v 68 w Fe(Sch\351ma)p 1 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -517 479 2918 4 v -517 579 4 100 v -464
549 a Fc(bleu)p -338 579 V 102 w(bleu)p -160 579 V 101
w(bleu)p 19 579 V 102 w(bleu)p 198 579 V 102 w(bleu)p
376 579 V 101 w(blanc)p 576 579 V 102 w(blanc)p 776 579
V 102 w(blanc)p 976 579 V 102 w(blanc)p 1175 579 V 101
w(blanc)p 1375 579 V 102 w(rouge)p 1580 579 V 103 w(rouge)p
1784 579 V 102 w(rouge)p 1989 579 V 103 w(rouge)p 2193
579 V 102 w(rouge)p 2398 579 V -517 582 2918 4 v 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.09999 0.09999 0.34999
TeXcolorrgb 0.09999 0.09999 0.34999 TeXcolorrgb -600
1751 1008 60 v 0.09999 0.09999 0.34999 TeXcolorrgb 0
TeXcolorgray 1 TeXcolorgray -340 1732 a(F.)16 b Fb(Na)m(tivel)29
b Fc(\(Lyc\351e)14 b(No)o(rd\))p 0 TeXcolorgray 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 408 1751 V 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.S end

912 1732 a 1 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.R end
 912
1732 a 912 1732 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 912 1732 a 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7
TeXcolorrgb 1416 1751 1008 60 v 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 1 TeXcolorgray 821 w Fc(Ann\351e)g(scolaire)f(2018-2019)
p 1 TeXcolorgray 103 w(6)7 b(/)h(6)p 1 TeXcolorgray 0
TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -525
-608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation7) cvn /DEST pdfmark
end
 -525 -608 a -525 -608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525
-608 a -525 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.7) cvn /DEST pdfmark end
 -525 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 1345 1579 a


1345 1579 a 1345 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf2

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf1

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1345 1591 a
SDict begin H.S end
 1345 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1395 1529 a
SDict begin H.R end
 1395 1529 a 1395
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1395 1591 a 1395 1591 a
SDict begin H.S end
 1395 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1461 1529 a
SDict begin H.R end
 1461
1529 a 1461 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoToPage>>/Subtype /Link H.B /ANN pdfmark end
 1461 1591 a 1461 1591 a
SDict begin H.S end
 1461 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1511 1529 a
SDict begin H.R end
 1511 1529 a 1511 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1511 1591 a 1523
1579 a

 1523 1579 a 1523 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf4

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf3

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1523 1591 a
SDict begin H.S end
 1523 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1564 1529 a
SDict begin H.R end
 1564
1529 a 1564 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation5) cvn H.B /ANN pdfmark end
 1564 1591 a 1564 1591 a
SDict begin H.S end
 1564 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1606 1529 a
SDict begin H.R end
 1606 1529 a 1606 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1606 1591 a 1606
1591 a
SDict begin H.S end
 1606 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1647 1529 a
SDict begin H.R end
 1647 1529 a 1647 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1647
1591 a 1647 1591 a
SDict begin H.S end
 1647 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1689 1529 a
SDict begin H.R end
 1689 1529 a 1689
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1689 1591 a 1701 1579 a

 1701 1579 a 1701 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf6

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf5

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc



1701 1591 a
SDict begin H.S end
 1701 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1742 1529 a
SDict begin H.R end
 1742 1529 a 1742 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1742
1591 a 1742 1591 a
SDict begin H.S end
 1742 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1784 1529 a
SDict begin H.R end
 1784 1529 a 1784
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1784 1591 a 1784 1591 a
SDict begin H.S end
 1784 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1825 1529 a
SDict begin H.R end
 1825
1529 a 1825 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1825 1591 a 1825 1591 a
SDict begin H.S end
 1825 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1867 1529 a
SDict begin H.R end
 1867 1529 a 1867 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1867 1591 a 1878
1579 a

 1878 1579 a 1878 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf8

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf7

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1878 1591 a
SDict begin H.S end
 1878 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1920 1529 a
SDict begin H.R end
 1920
1529 a 1920 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1920 1591 a 1920 1591 a
SDict begin H.S end
 1920 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1961 1529 a
SDict begin H.R end
 1961 1529 a 1961 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1961 1591 a 1961
1591 a
SDict begin H.S end
 1961 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2003 1529 a
SDict begin H.R end
 2003 1529 a 2003 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2003
1591 a 2003 1591 a
SDict begin H.S end
 2003 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2044 1529 a
SDict begin H.R end
 2044 1529 a 2044
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2044 1591 a 2056 1579 a

 2056 1579 a 2056 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf11

 restore

 newpath

 restore

 pgfc


 2056 1591 a
SDict begin H.S end
 2056 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2131 1529 a
SDict begin H.R end
 2131 1529 a 2131
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2131 1591 a 2131 1591 a
SDict begin H.S end
 2131 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2222 1529 a
SDict begin H.R end
 2222
1529 a 2222 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2222 1591 a 2234 1579 a

 2234 1579
a 2234 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf12

 restore

 newpath

 restore

 pgfc


 2234 1591 a
SDict begin H.S end
 2234 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2292 1529 a
SDict begin H.R end
 2292
1529 a 2292 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoBack>>/Subtype /Link H.B /ANN pdfmark end
 2292 1591 a 2292 1591 a
SDict begin H.S end
 2292 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2342 1529 a
SDict begin H.R end
 2342 1529 a 2342 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/Find>>/Subtype /Link H.B /ANN pdfmark end
 2342 1591 a 2342
1591 a
SDict begin H.S end
 2342 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2400 1529 a
SDict begin H.R end
 2400 1529 a 2400 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoForward>>/Subtype /Link H.B /ANN pdfmark end
 2400
1591 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -600
-287 3024 230 v 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray
1 TeXcolorgray 0 0 1 0 TeXcolorcmyk -500 -350 a Ff(C1)p
1 TeXcolorgray -529 -458 208 5 v -529 -323 5 137 v -325
-323 V -529 -321 208 5 v 68 w Fe(Sch\351ma)p 1 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -517 479 2883 4 v -517 579 4 100 v -464
549 a Fc(vert)p -343 579 V 103 w(jaune)p -142 579 V 102
w(jaune)p 59 579 V 102 w(vert)p 233 579 V 103 w(jaune)p
434 579 V 102 w(jaune)p 635 579 V 102 w(vert)p 809 579
V 103 w(jaune)p 1010 579 V 102 w(jaune)p 1211 579 V 102
w(vert)p 1385 579 V 103 w(jaune)p 1586 579 V 102 w(jaune)p
1787 579 V 102 w(vert)p 1961 579 V 103 w(jaune)p 2162
579 V 102 w(jaune)p 2363 579 V -517 582 2883 4 v 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.09999 0.09999 0.34999
TeXcolorrgb 0.09999 0.09999 0.34999 TeXcolorrgb -600
1751 1008 60 v 0.09999 0.09999 0.34999 TeXcolorrgb 0
TeXcolorgray 1 TeXcolorgray -340 1732 a(F.)16 b Fb(Na)m(tivel)29
b Fc(\(Lyc\351e)14 b(No)o(rd\))p 0 TeXcolorgray 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 408 1751 V 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.S end

912 1732 a 1 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.R end
 912
1732 a 912 1732 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 912 1732 a 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7
TeXcolorrgb 1416 1751 1008 60 v 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 1 TeXcolorgray 821 w Fc(Ann\351e)g(scolaire)f(2018-2019)
p 1 TeXcolorgray 103 w(7)7 b(/)h(6)p 1 TeXcolorgray 0
TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
