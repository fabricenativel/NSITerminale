{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Cours de NSI en Terminale du lyc\u00e9e Hintermann-Aff\u00e9jee Liste des chapitres Titre Dur\u00e9e C0- R\u00e9visions 2 C1- R\u00e9cursivit\u00e9 2 C2- Introduction aux bases de donn\u00e9es et \u00e0 SQL 2 C3- Processus 1 C4- Diviser pour r\u00e9gner 1 C5- Notions de programmation orient\u00e9 objet 2 C6- Structures de donn\u00e9es lin\u00e9aires 2 C7- Syst\u00e8me sur puce 1 C8- Arbres 2 C9- Sch\u00e9ma relationnel d'une base de donn\u00e9es 2 C10- Algorithmes sur les arbres 2 C11- Graphes 2 C12- Protocoles de routage 2 C13- Recherche textuelle 2 C14- Calculabilit\u00e9, d\u00e9cidabilit\u00e9 2 C15- S\u00e9curisation des communications 2 Th\u00e8mes trait\u00e9s sur l'ann\u00e9e : Histoire de l'informatique Projet Syst\u00e8me d'exploitation Ce cours est construit pour \u00eatre utilis\u00e9 en classe , les \u00e9l\u00e8ves disposent d'un ordinateur fonctionnant sous Ubuntu . Applications Les applications suivants sont utilis\u00e9s dans le cours, leur compatibilit\u00e9 avec les syst\u00e8mes d'exploitation est indiqu\u00e9. Applications gnu /Linux Windows MacOS Python Jupyter Filius Gameshell","title":"Cours de NSI en Terminale du lyc\u00e9e Hintermann-Aff\u00e9jee"},{"location":"#cours-de-nsi-en-terminale-du-lycee-hintermann-affejee","text":"","title":"Cours de NSI en Terminale du lyc\u00e9e Hintermann-Aff\u00e9jee"},{"location":"#liste-des-chapitres","text":"Titre Dur\u00e9e C0- R\u00e9visions 2 C1- R\u00e9cursivit\u00e9 2 C2- Introduction aux bases de donn\u00e9es et \u00e0 SQL 2 C3- Processus 1 C4- Diviser pour r\u00e9gner 1 C5- Notions de programmation orient\u00e9 objet 2 C6- Structures de donn\u00e9es lin\u00e9aires 2 C7- Syst\u00e8me sur puce 1 C8- Arbres 2 C9- Sch\u00e9ma relationnel d'une base de donn\u00e9es 2 C10- Algorithmes sur les arbres 2 C11- Graphes 2 C12- Protocoles de routage 2 C13- Recherche textuelle 2 C14- Calculabilit\u00e9, d\u00e9cidabilit\u00e9 2 C15- S\u00e9curisation des communications 2","title":"Liste des chapitres"},{"location":"#themes-traites-sur-lannee","text":"","title":"Th\u00e8mes trait\u00e9s sur l'ann\u00e9e :"},{"location":"#histoire-de-linformatique","text":"","title":" &nbsp; Histoire de l'informatique"},{"location":"#projet","text":"","title":" &nbsp; Projet"},{"location":"#systeme-dexploitation","text":"Ce cours est construit pour \u00eatre utilis\u00e9 en classe , les \u00e9l\u00e8ves disposent d'un ordinateur fonctionnant sous Ubuntu .","title":"Syst\u00e8me d'exploitation"},{"location":"#applications","text":"Les applications suivants sont utilis\u00e9s dans le cours, leur compatibilit\u00e9 avec les syst\u00e8mes d'exploitation est indiqu\u00e9. Applications gnu /Linux Windows MacOS Python Jupyter Filius Gameshell","title":"Applications"},{"location":"modele_page/","text":"Macro Rendering Error KeyError : 'THEME' Traceback (most recent call last): File \"/home/fenarius/.local/lib/python3.8/site-packages/mkdocs_macros/plugin.py\", line 443, in render return md_template.render(**page_variables) File \"/usr/lib/python3/dist-packages/jinja2/asyncsupport.py\", line 76, in render return original_render(self, *args, **kwargs) File \"/usr/lib/python3/dist-packages/jinja2/environment.py\", line 1008, in render return self.environment.handle_exception(exc_info, True) File \"/usr/lib/python3/dist-packages/jinja2/environment.py\", line 780, in handle_exception reraise(exc_type, exc_value, tb) File \"/usr/lib/python3/dist-packages/jinja2/_compat.py\", line 37, in reraise raise value.with_traceback(tb) File \"<template>\", line 5, in <module> File \"/home/fenarius/Travail/Cours/NSITerminale/main.py\", line 85, in titre_chapitre ligne+=f\"<span style='float:right;'>{env.variables.icones[theme]}</span>\" KeyError: 'THEME'","title":"Modele page"},{"location":"modele_page/#macro-rendering-error","text":"KeyError : 'THEME' Traceback (most recent call last): File \"/home/fenarius/.local/lib/python3.8/site-packages/mkdocs_macros/plugin.py\", line 443, in render return md_template.render(**page_variables) File \"/usr/lib/python3/dist-packages/jinja2/asyncsupport.py\", line 76, in render return original_render(self, *args, **kwargs) File \"/usr/lib/python3/dist-packages/jinja2/environment.py\", line 1008, in render return self.environment.handle_exception(exc_info, True) File \"/usr/lib/python3/dist-packages/jinja2/environment.py\", line 780, in handle_exception reraise(exc_type, exc_value, tb) File \"/usr/lib/python3/dist-packages/jinja2/_compat.py\", line 37, in reraise raise value.with_traceback(tb) File \"<template>\", line 5, in <module> File \"/home/fenarius/Travail/Cours/NSITerminale/main.py\", line 85, in titre_chapitre ligne+=f\"<span style='float:right;'>{env.variables.icones[theme]}</span>\" KeyError: 'THEME'","title":"Macro Rendering Error"},{"location":"recursivite/","text":"C1 R\u00e9cursivit\u00e9 Activit\u00e9s Activit\u00e9 1 : A la d\u00e9couverte de la r\u00e9cursivit\u00e9 Ecrire un programme Python permettant de tracer la spirale de carr\u00e9 suivante sachant que : Le c\u00f4t\u00e9 du grand carr\u00e9 initial mesure 200 pixels Le coin inf\u00e9rieur gauche des carr\u00e9s est l'origine du rep\u00e8re A chaque \u00e9tape les carr\u00e9s tournent de 20\u00b0 A chaque \u00e9tape la c\u00f4t\u00e9 du carr\u00e9 diminue de 10% de sa longueur. On interrompt la construction lorsque la taille est inf\u00e9rieure ou \u00e9gale \u00e0 10 pixels Pour r\u00e9aliser le dessin ci-dessus vous avez probablement utilis\u00e9 une boucle, votre programme est dit it\u00e9ratif . Remarquons \u00e0 pr\u00e9sent que cette spirale peut se d\u00e9composer en un premier carr\u00e9 (en trait \u00e9pais ci dessous), suivi d'une spirale de carr\u00e9s (en gris et traits fin ci-dessous) : On pourrait donc d\u00e9finir qu'une spirale est constitu\u00e9 (compl\u00e9ter): d'un ..... et d'une ........... plus petite ! La particularit\u00e9 de ce type de d\u00e9finition est de faire appel \u00e0 elle-m\u00eame, on, dit qu'elle est r\u00e9cursive . Construction r\u00e9cursive d'une spirale. En utilisant la d\u00e9finition pr\u00e9c\u00e9dente, compl\u00e9ter le code de la fonction Python suivant : def spirale_recursive ( tortue , taille ): # Un carr\u00e9 carre ( tortue , taille ) # Et une spirale plus petite tortue . left ( .... ) taille = ....... spirale_recursive ( tortue , taille ) Quelle est la particularit\u00e9 de cette fonction ? Que se passe-t-il \u00e0 l'ex\u00e9cution ? Pourquoi ? Modifier la d\u00e9finition de cette fonction en introduisant la condition d'arr\u00eat ( taille<=10 ) Proposer une d\u00e9finition r\u00e9cursive d'un escalier, en d\u00e9duire une construction r\u00e9cursive de la figure suivante : Activit\u00e9 2 : D'autres exemples de r\u00e9cursivit\u00e9 Somme des n premiers entiers Ecrire une fonction python somme(n) it\u00e9rative qui calcule la somme des n premiers entiers. Par exemple somme(5) renvoie 15 puisque 1+2+3+4+5=15 . Compl\u00e9ter l'\u00e9galit\u00e9 math\u00e9matique suivante entre somme(n) et somme(n-1) : somme(n) = somme(n-1) + ... En d\u00e9duire une version it\u00e9rative de la fonction somme(n) \u00c9crire \u00e0 l'envers Compl\u00e9ter puis tester le code de la fonction Python ci-dessous qui prend en argument une chaine de caract\u00e8re et la renvoie \u00e9crite \u00e0 l'envers def envers ( chaine ): resultat = \"\" for caractere in ..... : resultat = ...... + resultat return ..... On d\u00e9compose une chaine en chaine = debut + dernier caract\u00e8re , compl\u00e9ter la d\u00e9finition r\u00e9cursive suivante : envers(chaine) = .......... + envers(.......) En d\u00e9duire une version r\u00e9cursive de la fonction envers Aide On pourra \u00e9crire au pr\u00e9alable une fonction debut(chaine) qui renvoie la chaine priv\u00e9e de son dernier caract\u00e8re. On rapelle que le dernier caract\u00e8re de chaine s'obtient avec chaine[-1] . Activit\u00e9 3 : Soulever le capot de la r\u00e9cursivit\u00e9 Se rendre sur le site Python tutor , un outil en ligne permettant de visualiser le fonctionnement d'un programme Python. Laisser les options par d\u00e9faut \u00e0 l'exception de inline primitives don't nest objects [default] ) \u00e0 remplacer par render all objects on the heap (Python/Java) comme ci-dessous : Entrer sur Python tutor le code de fonction somme(n) it\u00e9rative, qu'on teste avec n=5 : def somme ( n ): s = 0 for i in range ( n ): s += i return s test = somme ( 5 ) Suivre l'ex\u00e9cution pas \u00e0 pas du calcul. Faire de m\u00eame mais avec la fonction somme_recursive(n) : def somme_recursive ( n ): if n == 0 : return 0 else : return n + somme_recursive ( n - 1 ) test = somme_recursive ( 5 ) La figure suivante repr\u00e9sente une \u00e9tape de l'ex\u00e9cution. Comment expliquer que les entiers sont \"stock\u00e9s\" \u00e0 droite mais qu'aucun calcul n'a encore \u00e9t\u00e9 effectu\u00e9 ? La colonne de droite o\u00f9 sont stock\u00e9s les entiers s'appelle une pile , ( heap en anglais). La taille maximale de cette pile est la profondeur maximale de r\u00e9cursion ( recursion depth ). Quitter Python Tutor et tester la fonction somme_recursive avec une valeur \u00e9lev\u00e9e de n (par exemple n=3000 ). Que se passe-t-il ? Expliquer. La version it\u00e9rative est-elle concern\u00e9e par ce probl\u00e8me ? Cours Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices. Exercices Exercice 1 : Factorielle \u2009 En math\u00e9matiques, on appel factorielle d'un entier \\(n\\) et on \\(n!\\) le produit de cet entier par tous ceux qui le pr\u00e9c\u00e8dent \u00e0 l'exception de z\u00e9ro. On convient d'autre part que \\(0!=1\\) . Par exemple, \\(5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\\) . Programmer une version it\u00e9rative d'une fonction factorielle(n) qui renvoie factorielle de l'entier positif n pass\u00e9 en argument. Recopier et compl\u00e9ter : \\(n! = n\\times \\underbrace{(n-1) \\times \\dots \\times 1}_{...}\\) \\(n! = n \\times \\dots\\) En d\u00e9duire une version r\u00e9cursive de la fonction factorielle(n) . Exercice 2 : Analyser un programme r\u00e9cursif On consid\u00e8re la fonction mystere ci-dessous : def mystere ( liste ): if len ( liste ) == 1 : return liste [ 0 ] else : if liste [ 0 ] < liste [ 1 ]: liste . pop ( 1 ) else : liste . pop ( 0 ) return mystere ( liste ) Analyser ce programme, en d\u00e9duire le r\u00f4le de cette fonction. Aide Faire fonctionner \"\u00e0 la main\" ce programme sur une liste de petite taille, revoir le r\u00f4le de pop si n\u00e9cessaire. Donner une version it\u00e9rative de cette fonction Exercice 3 : Comprendre un programme r\u00e9cursif On donne le code incomplet d'une fonction r\u00e9cursive permettant de calculer le produit de deux entiers positifs a et b en effectuant uniquement des additions : def produit ( a , b ): if b ==... : return ... else : return ...+ produit ( ... , ... ) Compl\u00e9ter les \u00e9galit\u00e9s suivantes : \\(a \\times 0 = \\dots\\) \\(a \\times b = a + a \\times (\\dots \\dots)\\) Compl\u00e9ter le code de la fonction ci-dessus et la tester Que se passe-t-il si on choisit une valeur assez grande pour b , par exemple 5000 ? Pourquoi ? En est-il de m\u00eame pour de grandes valeurs de a ? Pourquoi ? Am\u00e9liorer le code de cette fonction de fa\u00e7on \u00e0 ce que le d\u00e9passement de pile de r\u00e9cursion n'arrive que lorsque a et b sont tous deux sup\u00e9rieurs \u00e0 la taille maximale. Exercice 4 : Additions et soustractions On suppose qu'on ne dispose que de deux op\u00e9rations : ajouter 1 ou retrancher 1. \u00c9crire \u00e0 l'aide de ces deux op\u00e9rations, une version it\u00e9rative de l'addition de deux entiers. M\u00eame question avec une version it\u00e9rative. Exercice 5 : Dessin r\u00e9cursif Dessiner une suite de carr\u00e9 imbriqu\u00e9s comme ci-dessous (la carr\u00e9 initial mesure 200 pixels et diminue de 20 pixels \u00e0 chaque carr\u00e9 suivant) Si vous aviez donn\u00e9 une version it\u00e9rative de ce dessin, en faire une version r\u00e9cursive et inversement. Exercice 6 : Comparaison de deux chaines de caract\u00e8res Ecrire de fa\u00e7on it\u00e9rative, une fonction compare(chaine1,chaine2) qui renvoie le nombre de fois o\u00f9 chaine1 et chaine2 ont le m\u00eame caract\u00e8re au m\u00eame emplacement. A titre d'exemples : compare(\"recursif\",\"iteratif\") renvoie 2, compare(\"Python\",\"Javascript\") renvoie 0. \u00c9crire cette m\u00eame fonction de fa\u00e7on r\u00e9cursive. Aide Vous aurez peut \u00eatre besoin d'une fonction reste(chaine) qui renvoie la chaine pass\u00e9e en param\u00e8tre priv\u00e9e de son premier \u00e9l\u00e9ment. Par exemple reste(\"python\") renvoie ython . Ecrire vous m\u00eame cette fonction, ou chercher comment utiliser les slices de Python. Exercice 7 : Recherche dichotomique dans un tableau tri\u00e9 \u2009 Rappeler l'algorithme de recherche dichotomique dans un tableau tri\u00e9 vu en classe de premi\u00e8re et donner son fonctionnement sur un exemple simple. Aide Voir cette page du cours de premi\u00e8re. Coder cet algorithme de fa\u00e7on it\u00e9rative Coder cet algorithme de fa\u00e7on r\u00e9cursive Exercice 8 : Flocon de Von Koch \u2009 La courbe de Koch est une figure qui se construit de mani\u00e8re r\u00e9cursive. Le cas de base (ordre 0) s'obtient en tra\u00e7ant un segment de longueur \\(l\\) . Le cas r\u00e9cursif d'ordre \\(n>0\\) s'obtient en effectuant les transformations suivantes : Etape Illustration Commentaire Partager le segment en trois morceaux de longueur \u00e9gale Construire un triangle \u00e9quilat\u00e9ral \u00e0 partir du segment du milieu Supprimer le segment du milieu On a \u00e9crit une fonction courbe_koch permettant de tracer \u00e0 l'aide du module turtle de Python la courbe de Koch en donnant en param\u00e8tre la longueur initiale du segment et l'ordre. On donne ci-dessous ce code incomplet : def courbe_koch ( tortue , longueur , ordre ): if ........ ........ else : ordre =........ longueur =........ courbe_koch ( tortue , longueur , ordre ) ................. courbe_koch ( tortue , longueur , ordre ) ................ courbe_koch ( tortue , longueur , ordre ) ................ courbe_koch ( tortue , longueur , ordre ) Compl\u00e9ter et tester ce code pour tracer une courbe de Koch d'ordre 4. Vous devriez obtenir une figure similaire \u00e0 celle repr\u00e9sent\u00e9e ci-dessous : En utilisant cette fonction construire le flocon de Koch , c'est \u00e0 dire la figure obtenu en construisant les courbe de Koch sur les trois c\u00f4t\u00e9s d'un triangle \u00e9quilat\u00e9ral. Le flocon de Koch est un exemple classique de courbe fractale , construire un autre exemple de fractale : le triangle de Sierpinski . Exercice 9 : Algorithme d'Euclide de calcul du pgcd \u2009 \u2009 Faites des recherches sur l'algorithme d'Euclide . Que permet de faire cet algorithme ? Faire fonctionner cet algorithme \u00e0 la main avec les valeurs suivantes en donnant les \u00e9tapes: \\(a=48\\) et \\(b=36\\) \\(a=13\\) et \\(b=9\\) Rappeler les instructions Python permettant d'obtenir le reste et le quotient d'une division euclidienne. Donner une impl\u00e9mentation it\u00e9rative de cet algorithme Donner une impl\u00e9mentation r\u00e9cursive de cet algorithme Exercice 10 : Algorithme d'Euclide de calcul du pgcd \u2009 La suite de Fibonnaci \\((f_n)\\) est d\u00e9finie par \\(f_0=0\\) , \\(f_1=1\\) et \\(f_{n}=f_{n-1}+f_{n-2}\\) pour tout \\(n\\geq2\\) . C'est \u00e0 dire que chaque terme de la suite est la somme des deux pr\u00e9c\u00e9dents. Calculer \u00e0 la main les premi\u00e8res valeurs de cette suite en compl\u00e9tant le tableau suivant : \\(n\\) 0 1 \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(f_n\\) 0 1 \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) Proposer une fonction recursive permettant de calculer les termes de cette suite. Recopier et compl\u00e9ter le sch\u00e9ma suivant qui montre les appels r\u00e9cursifs n\u00e9cessaires au calcul de \\(f_5\\) . graph TD f5[f5] --> f4[f4] f5 --> f3[f3] f4 --> f32[f3] f4 --> f2[...] f3 --> f33[...] f3 --> f34[...]","title":"C1-R\u00e9cursivit\u00e9"},{"location":"recursivite/#c1-recursivite","text":"","title":"C1 R\u00e9cursivit\u00e9 "},{"location":"recursivite/#activites","text":"","title":"Activit\u00e9s"},{"location":"recursivite/#activite-1-a-la-decouverte-de-la-recursivite","text":"Ecrire un programme Python permettant de tracer la spirale de carr\u00e9 suivante sachant que : Le c\u00f4t\u00e9 du grand carr\u00e9 initial mesure 200 pixels Le coin inf\u00e9rieur gauche des carr\u00e9s est l'origine du rep\u00e8re A chaque \u00e9tape les carr\u00e9s tournent de 20\u00b0 A chaque \u00e9tape la c\u00f4t\u00e9 du carr\u00e9 diminue de 10% de sa longueur. On interrompt la construction lorsque la taille est inf\u00e9rieure ou \u00e9gale \u00e0 10 pixels Pour r\u00e9aliser le dessin ci-dessus vous avez probablement utilis\u00e9 une boucle, votre programme est dit it\u00e9ratif . Remarquons \u00e0 pr\u00e9sent que cette spirale peut se d\u00e9composer en un premier carr\u00e9 (en trait \u00e9pais ci dessous), suivi d'une spirale de carr\u00e9s (en gris et traits fin ci-dessous) : On pourrait donc d\u00e9finir qu'une spirale est constitu\u00e9 (compl\u00e9ter): d'un ..... et d'une ........... plus petite ! La particularit\u00e9 de ce type de d\u00e9finition est de faire appel \u00e0 elle-m\u00eame, on, dit qu'elle est r\u00e9cursive . Construction r\u00e9cursive d'une spirale. En utilisant la d\u00e9finition pr\u00e9c\u00e9dente, compl\u00e9ter le code de la fonction Python suivant : def spirale_recursive ( tortue , taille ): # Un carr\u00e9 carre ( tortue , taille ) # Et une spirale plus petite tortue . left ( .... ) taille = ....... spirale_recursive ( tortue , taille ) Quelle est la particularit\u00e9 de cette fonction ? Que se passe-t-il \u00e0 l'ex\u00e9cution ? Pourquoi ? Modifier la d\u00e9finition de cette fonction en introduisant la condition d'arr\u00eat ( taille<=10 ) Proposer une d\u00e9finition r\u00e9cursive d'un escalier, en d\u00e9duire une construction r\u00e9cursive de la figure suivante :","title":"Activit\u00e9 1 : A la d\u00e9couverte de la r\u00e9cursivit\u00e9"},{"location":"recursivite/#activite-2-dautres-exemples-de-recursivite","text":"Somme des n premiers entiers Ecrire une fonction python somme(n) it\u00e9rative qui calcule la somme des n premiers entiers. Par exemple somme(5) renvoie 15 puisque 1+2+3+4+5=15 . Compl\u00e9ter l'\u00e9galit\u00e9 math\u00e9matique suivante entre somme(n) et somme(n-1) : somme(n) = somme(n-1) + ... En d\u00e9duire une version it\u00e9rative de la fonction somme(n) \u00c9crire \u00e0 l'envers Compl\u00e9ter puis tester le code de la fonction Python ci-dessous qui prend en argument une chaine de caract\u00e8re et la renvoie \u00e9crite \u00e0 l'envers def envers ( chaine ): resultat = \"\" for caractere in ..... : resultat = ...... + resultat return ..... On d\u00e9compose une chaine en chaine = debut + dernier caract\u00e8re , compl\u00e9ter la d\u00e9finition r\u00e9cursive suivante : envers(chaine) = .......... + envers(.......) En d\u00e9duire une version r\u00e9cursive de la fonction envers Aide On pourra \u00e9crire au pr\u00e9alable une fonction debut(chaine) qui renvoie la chaine priv\u00e9e de son dernier caract\u00e8re. On rapelle que le dernier caract\u00e8re de chaine s'obtient avec chaine[-1] .","title":"Activit\u00e9 2 : D'autres exemples de r\u00e9cursivit\u00e9"},{"location":"recursivite/#activite-3-soulever-le-capot-de-la-recursivite","text":"Se rendre sur le site Python tutor , un outil en ligne permettant de visualiser le fonctionnement d'un programme Python. Laisser les options par d\u00e9faut \u00e0 l'exception de inline primitives don't nest objects [default] ) \u00e0 remplacer par render all objects on the heap (Python/Java) comme ci-dessous : Entrer sur Python tutor le code de fonction somme(n) it\u00e9rative, qu'on teste avec n=5 : def somme ( n ): s = 0 for i in range ( n ): s += i return s test = somme ( 5 ) Suivre l'ex\u00e9cution pas \u00e0 pas du calcul. Faire de m\u00eame mais avec la fonction somme_recursive(n) : def somme_recursive ( n ): if n == 0 : return 0 else : return n + somme_recursive ( n - 1 ) test = somme_recursive ( 5 ) La figure suivante repr\u00e9sente une \u00e9tape de l'ex\u00e9cution. Comment expliquer que les entiers sont \"stock\u00e9s\" \u00e0 droite mais qu'aucun calcul n'a encore \u00e9t\u00e9 effectu\u00e9 ? La colonne de droite o\u00f9 sont stock\u00e9s les entiers s'appelle une pile , ( heap en anglais). La taille maximale de cette pile est la profondeur maximale de r\u00e9cursion ( recursion depth ). Quitter Python Tutor et tester la fonction somme_recursive avec une valeur \u00e9lev\u00e9e de n (par exemple n=3000 ). Que se passe-t-il ? Expliquer. La version it\u00e9rative est-elle concern\u00e9e par ce probl\u00e8me ?","title":"Activit\u00e9 3 : Soulever le capot de la r\u00e9cursivit\u00e9"},{"location":"recursivite/#cours","text":"Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices.","title":"Cours"},{"location":"recursivite/#exercices","text":"","title":"Exercices"},{"location":"recursivite/#exercice-1-factorielle","text":"En math\u00e9matiques, on appel factorielle d'un entier \\(n\\) et on \\(n!\\) le produit de cet entier par tous ceux qui le pr\u00e9c\u00e8dent \u00e0 l'exception de z\u00e9ro. On convient d'autre part que \\(0!=1\\) . Par exemple, \\(5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\\) . Programmer une version it\u00e9rative d'une fonction factorielle(n) qui renvoie factorielle de l'entier positif n pass\u00e9 en argument. Recopier et compl\u00e9ter : \\(n! = n\\times \\underbrace{(n-1) \\times \\dots \\times 1}_{...}\\) \\(n! = n \\times \\dots\\) En d\u00e9duire une version r\u00e9cursive de la fonction factorielle(n) .","title":"Exercice 1 : Factorielle&thinsp; "},{"location":"recursivite/#exercice-2-analyser-un-programme-recursif","text":"On consid\u00e8re la fonction mystere ci-dessous : def mystere ( liste ): if len ( liste ) == 1 : return liste [ 0 ] else : if liste [ 0 ] < liste [ 1 ]: liste . pop ( 1 ) else : liste . pop ( 0 ) return mystere ( liste ) Analyser ce programme, en d\u00e9duire le r\u00f4le de cette fonction. Aide Faire fonctionner \"\u00e0 la main\" ce programme sur une liste de petite taille, revoir le r\u00f4le de pop si n\u00e9cessaire. Donner une version it\u00e9rative de cette fonction","title":"Exercice 2 : Analyser un programme r\u00e9cursif"},{"location":"recursivite/#exercice-3-comprendre-un-programme-recursif","text":"On donne le code incomplet d'une fonction r\u00e9cursive permettant de calculer le produit de deux entiers positifs a et b en effectuant uniquement des additions : def produit ( a , b ): if b ==... : return ... else : return ...+ produit ( ... , ... ) Compl\u00e9ter les \u00e9galit\u00e9s suivantes : \\(a \\times 0 = \\dots\\) \\(a \\times b = a + a \\times (\\dots \\dots)\\) Compl\u00e9ter le code de la fonction ci-dessus et la tester Que se passe-t-il si on choisit une valeur assez grande pour b , par exemple 5000 ? Pourquoi ? En est-il de m\u00eame pour de grandes valeurs de a ? Pourquoi ? Am\u00e9liorer le code de cette fonction de fa\u00e7on \u00e0 ce que le d\u00e9passement de pile de r\u00e9cursion n'arrive que lorsque a et b sont tous deux sup\u00e9rieurs \u00e0 la taille maximale.","title":"Exercice 3 : Comprendre un programme r\u00e9cursif"},{"location":"recursivite/#exercice-4-additions-et-soustractions","text":"On suppose qu'on ne dispose que de deux op\u00e9rations : ajouter 1 ou retrancher 1. \u00c9crire \u00e0 l'aide de ces deux op\u00e9rations, une version it\u00e9rative de l'addition de deux entiers. M\u00eame question avec une version it\u00e9rative.","title":"Exercice 4 : Additions et soustractions"},{"location":"recursivite/#exercice-5-dessin-recursif","text":"Dessiner une suite de carr\u00e9 imbriqu\u00e9s comme ci-dessous (la carr\u00e9 initial mesure 200 pixels et diminue de 20 pixels \u00e0 chaque carr\u00e9 suivant) Si vous aviez donn\u00e9 une version it\u00e9rative de ce dessin, en faire une version r\u00e9cursive et inversement.","title":"Exercice 5 : Dessin r\u00e9cursif"},{"location":"recursivite/#exercice-6-comparaison-de-deux-chaines-de-caracteres","text":"Ecrire de fa\u00e7on it\u00e9rative, une fonction compare(chaine1,chaine2) qui renvoie le nombre de fois o\u00f9 chaine1 et chaine2 ont le m\u00eame caract\u00e8re au m\u00eame emplacement. A titre d'exemples : compare(\"recursif\",\"iteratif\") renvoie 2, compare(\"Python\",\"Javascript\") renvoie 0. \u00c9crire cette m\u00eame fonction de fa\u00e7on r\u00e9cursive. Aide Vous aurez peut \u00eatre besoin d'une fonction reste(chaine) qui renvoie la chaine pass\u00e9e en param\u00e8tre priv\u00e9e de son premier \u00e9l\u00e9ment. Par exemple reste(\"python\") renvoie ython . Ecrire vous m\u00eame cette fonction, ou chercher comment utiliser les slices de Python.","title":"Exercice 6 : Comparaison de deux chaines de caract\u00e8res"},{"location":"recursivite/#exercice-7-recherche-dichotomique-dans-un-tableau-trie","text":"Rappeler l'algorithme de recherche dichotomique dans un tableau tri\u00e9 vu en classe de premi\u00e8re et donner son fonctionnement sur un exemple simple. Aide Voir cette page du cours de premi\u00e8re. Coder cet algorithme de fa\u00e7on it\u00e9rative Coder cet algorithme de fa\u00e7on r\u00e9cursive","title":"Exercice 7 : Recherche dichotomique dans un tableau tri\u00e9&thinsp; "},{"location":"recursivite/#exercice-8-flocon-de-von-koch","text":"La courbe de Koch est une figure qui se construit de mani\u00e8re r\u00e9cursive. Le cas de base (ordre 0) s'obtient en tra\u00e7ant un segment de longueur \\(l\\) . Le cas r\u00e9cursif d'ordre \\(n>0\\) s'obtient en effectuant les transformations suivantes : Etape Illustration Commentaire Partager le segment en trois morceaux de longueur \u00e9gale Construire un triangle \u00e9quilat\u00e9ral \u00e0 partir du segment du milieu Supprimer le segment du milieu On a \u00e9crit une fonction courbe_koch permettant de tracer \u00e0 l'aide du module turtle de Python la courbe de Koch en donnant en param\u00e8tre la longueur initiale du segment et l'ordre. On donne ci-dessous ce code incomplet : def courbe_koch ( tortue , longueur , ordre ): if ........ ........ else : ordre =........ longueur =........ courbe_koch ( tortue , longueur , ordre ) ................. courbe_koch ( tortue , longueur , ordre ) ................ courbe_koch ( tortue , longueur , ordre ) ................ courbe_koch ( tortue , longueur , ordre ) Compl\u00e9ter et tester ce code pour tracer une courbe de Koch d'ordre 4. Vous devriez obtenir une figure similaire \u00e0 celle repr\u00e9sent\u00e9e ci-dessous : En utilisant cette fonction construire le flocon de Koch , c'est \u00e0 dire la figure obtenu en construisant les courbe de Koch sur les trois c\u00f4t\u00e9s d'un triangle \u00e9quilat\u00e9ral. Le flocon de Koch est un exemple classique de courbe fractale , construire un autre exemple de fractale : le triangle de Sierpinski .","title":"Exercice 8 : Flocon de Von Koch&thinsp; "},{"location":"recursivite/#exercice-9-algorithme-deuclide-de-calcul-du-pgcd","text":"Faites des recherches sur l'algorithme d'Euclide . Que permet de faire cet algorithme ? Faire fonctionner cet algorithme \u00e0 la main avec les valeurs suivantes en donnant les \u00e9tapes: \\(a=48\\) et \\(b=36\\) \\(a=13\\) et \\(b=9\\) Rappeler les instructions Python permettant d'obtenir le reste et le quotient d'une division euclidienne. Donner une impl\u00e9mentation it\u00e9rative de cet algorithme Donner une impl\u00e9mentation r\u00e9cursive de cet algorithme","title":"Exercice 9 : Algorithme d'Euclide de calcul du pgcd&thinsp; &thinsp; "},{"location":"recursivite/#exercice-10-algorithme-deuclide-de-calcul-du-pgcd","text":"La suite de Fibonnaci \\((f_n)\\) est d\u00e9finie par \\(f_0=0\\) , \\(f_1=1\\) et \\(f_{n}=f_{n-1}+f_{n-2}\\) pour tout \\(n\\geq2\\) . C'est \u00e0 dire que chaque terme de la suite est la somme des deux pr\u00e9c\u00e9dents. Calculer \u00e0 la main les premi\u00e8res valeurs de cette suite en compl\u00e9tant le tableau suivant : \\(n\\) 0 1 \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(f_n\\) 0 1 \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) Proposer une fonction recursive permettant de calculer les termes de cette suite. Recopier et compl\u00e9ter le sch\u00e9ma suivant qui montre les appels r\u00e9cursifs n\u00e9cessaires au calcul de \\(f_5\\) . graph TD f5[f5] --> f4[f4] f5 --> f3[f3] f4 --> f32[f3] f4 --> f2[...] f3 --> f33[...] f3 --> f34[...]","title":"Exercice 10 : Algorithme d'Euclide de calcul du pgcd&thinsp; "},{"location":"revisions/","text":"C0 R\u00e9visions Activit\u00e9s Activit\u00e9 1 : Ligne de commande Le but de cette activit\u00e9 est de red\u00e9couvrir les bases de la ligne de commande. On utilisera gameshell , un mini-jeu d'aventure o\u00f9 les commandes servent \u00e0 accomplir des missions. Installation de Gameshell : T\u00e9l\u00e9charger le fichier gameshell . Ouvrir l'explorateur de fichier. Cr\u00e9er un r\u00e9pertoire gameshell dans votre dossier personnel (en faisant un clic-droit et en s\u00e9lectionnant nouveau dossier ) Dans ce r\u00e9pertoire, copier le fichier gameshell que vous avez t\u00e9l\u00e9charg\u00e9. Faire un clic droit sur le fichier et dans l'onglet permission cocher la case ' Autoriser l'ex\u00e9cution du fichier comme un programme ', comme illustr\u00e9 ci-dessous : Faire un clic droit dans la fen\u00eatre de l'explorateur de fichier et s\u00e9lectionner \" ouvrir dans un terminal \" comme illustr\u00e9 ci-dessous : Dans le terminal taper : ./gameshell.sh Parall\u00e8lement \u00e0 l'ex\u00e9cution des missions : Noter les commandes que vous utilisez et leur signification Tenir \u00e0 jour un plan du monde dans lequel se d\u00e9roule le jeu Aide Pour la premi\u00e8re mission, vous devez donc noter le sens des commandes cd , ls et pwd et commencer le sch\u00e9ma suivant qui sera \u00e0 poursuivre tout au long des missions : graph TD A[Monde] --> B[Chateau] A --> C[Echoppe] A --> D[For\u00eat] A --> E[Jardin] A --> F[Montagne] L'installation de Gameshell, faite ci-dessus \u00e0 l'aide de l'interface graphique aurait pu \u00eatre r\u00e9alis\u00e9 en ligne de commande. Quelle commande permet de cr\u00e9er un r\u00e9pertoire gameshell dans votre dossier personnel (question 1.c ci-dessus) ? Quelle commande correspond \u00e0 la copie du fichier (question 1.d ci-dessus) ? Quelle commande correspond \u00e0 la modification des droits d'ex\u00e9cution (question 1.e ci-dessus) ? Activit\u00e9 2 : Module turtle de Python Le but de cette activit\u00e9 est de red\u00e9couvrir les bases de la programmation en python en utilisant le module turtle qui permet de dessiner \u00e0 l'aide d'une \" tortue \" (\u00e9quivalente \u00e0 un crayon) \u00e0 laquelle on donne des instructions (se d\u00e9placer, avancer, tourner, ...) de fa\u00e7on \u00e0 former le dessin d\u00e9sir\u00e9. Cette tortue se d\u00e9place sur un \u00e9cran (\u00e9quivalent au papier), dot\u00e9 d'un rep\u00e8re comme en math\u00e9matiques. Dessiner une grille de morpion On souhaite dessiner une grille du jeu de morpion comme ci-dessous (o\u00f9 le rep\u00e8re du papier est trac\u00e9 de fa\u00e7on \u00e0 conna\u00eetre les dimensions et positions des traits) : Recopier et executer le programme suivant : import turtle # Cr\u00e9ation du \"papier\" et du \"crayon\" crayon = turtle . Turtle () papier = turtle . Screen () # Taille, dimension et couleur pour le papier et le crayon papier . bgcolor ( \"beige\" ) papier . setup ( width = 500 , height = 500 ) crayon . color ( \"navy\" ) crayon . pensize ( 5 ) # Trac\u00e9 d'un trait avec les coordonn\u00e9es des extr\u00e9mit\u00e9s crayon . penup () crayon . goto ( - 50 , - 150 ) crayon . pendown () crayon . goto ( - 50 , 150 ) # Trac\u00e9 d'un trait en orientant et en faisant avancer la tortue crayon . penup () crayon . goto ( 50 , - 150 ) crayon . pendown () crayon . setheading ( 90 ) crayon . forward ( 300 ) # Attends un clic pour fermer la fen\u00eatre de dessin papier . exitonclick () Expliquer le r\u00f4le des instructions suivantes : pensize et color penup et pendown goto et forward setheading Aide Vous pouvez modifier les param\u00e8tres ou supprimer certaines instructions pour en voir l'effet sur le dessin. Aider vous aussi des commentaires. Compl\u00e9ter ce programme en tra\u00e7ant les deux traits horizontaux manquants afin de compl\u00e9ter le dessin de la grille de morpion. Dessiner en cercle au centre de la grille de morpion (de rayon 40, de couleur darkred avec un crayon d'\u00e9paisseur 7) de fa\u00e7on \u00e0 obtenir le dessin final suivant : Aide Utiliser circle(r) o\u00f9 r est le rayon du cercle \u00e0 tracer, on fera attention que le centre du cercle se situe toujours \u00e0 gauche de l'orientation de la tortue et \u00e0 une distance r comme repr\u00e9sent\u00e9 ci-dessous : Activit\u00e9 3 : De l'utilit\u00e9 des fonctions Attention Cette activit\u00e9 est la suite de la pr\u00e9c\u00e9dente, on doit donc d\u00e9j\u00e0 disposer d'un programme Python permettant de tracer la grille de morpion ainsi que le cercle central. M\u00eame si vous pouvez t\u00e9l\u00e9charger ce programme ici , il est fortement conseill\u00e9 d'avoir assimil\u00e9 les notions de l'activit\u00e9 pr\u00e9c\u00e9dente (trac\u00e9 des lignes et des cercles) avant de continuer. On propose d'\u00e9crire une fonction ligne permettant de tracer avec la tortue crayon un trait en donnant les coordonn\u00e9es x1 et y1 de l'origine et x2 et y2 de l'extr\u00e9mit\u00e9. Par quel mot cl\u00e9 commence la d\u00e9finition d'une fonction en Python ? Quels seront ici les arguments de la fonction ? Recopier et compl\u00e9ter le code de cette fonction : ... ligne ( .. , .. , .. , .. ): crayon .... () crayon .... ( .. , .. ) crayon ..... () crayon ..... ( .. , .. ) Ajouter une cha\u00eene de documentation \u00e0 cette fonction Faire le trac\u00e9 de la grille de morpion en vous aidant de cette fonction. Que peut-on dire par rapport \u00e0 version du programme qui n'utilisait pas de fonction ? En vous inspirant de l'exemple pr\u00e9c\u00e9dent, \u00e9crire une fonction ligne2 permettant de tracer un trait en donnant les coordonn\u00e9es x et y de son origine, ainsi que sa longueur l et sa direction d (sous la forme d'un angle). Aide On utilisera forward pour avancer de la longueur indiqu\u00e9e et setheading pour positionner la tortue avec l'orientation d\u00e9sir\u00e9e. Ecrire une fonction cercle permettant de tracer un cercle dont on donne les coordonn\u00e9es du centre x et y et le rayon r Ecrire une fonction croix qui permet de tracer une croix ( ) en donnant son centre et la longueur des branches. Activit\u00e9 4 : Une boucle pour r\u00e9p\u00e9ter On souhaite dessiner la grille suivante \u00e0 l'aide du module turtle de Python : On dispose d\u00e9j\u00e0 d'un d\u00e9but de programme qui d\u00e9finit les propri\u00e9t\u00e9s du papier et du crayon ainsi que la fonction ligne permettant de tracer une ligne en donnant les deux extr\u00e9mit\u00e9s (voir activit\u00e9s pr\u00e9c\u00e9dentes) : import turtle # Cr\u00e9ation du \"papier\" et du \"crayon\" crayon = turtle . Turtle () papier = turtle . Screen () # Taille, dimension et couleur pour le papier et le crayon papier . bgcolor ( \"beige\" ) papier . setup ( width = 500 , height = 500 ) crayon . color ( \"navy\" ) crayon . pensize ( 5 ) def ligne ( x1 , y1 , x2 , y2 ): crayon . penup () crayon . goto ( x1 , y1 ) crayon . pendown () crayon . goto ( x2 , y2 ) \u00c9crire les instructions permettant de tracer les lignes horizontales. Une (bien) meilleure solution V\u00e9rifier que les instructions suivantes permettent de tracer les lignes verticales : for abscisse in range ( - 200 , 250 , 50 ): ligne ( abscisse , - 200 , abscisse , 200 ) Quelles sont les valeurs prises successives prises par la variable abscisse dans le programme pr\u00e9c\u00e9dant ? Rappeler le r\u00f4le des param\u00e8tres de range Activit\u00e9 5 : Instructions conditionnelles On souhaite dessiner la figure suivante \u00e0 l'aide du module turtle de Python : Ecrire une fonction carre(x,y,c) qui trace le carr\u00e9 de c\u00f4t\u00e9 c dont le coin inf\u00e9rieur gauche a pour coordonn\u00e9es (x,y) . Ecrire une boucle \u00e0 l'aide d'une instruction for ... in range(....): de fa\u00e7on \u00e0 tracer la suite de carr\u00e9 bleu. Ajouter une instruction conditionnelle dans la boucle de fa\u00e7on \u00e0 ce que le septi\u00e8me carr\u00e9 soit trac\u00e9 en rouge et avec un crayon plus \u00e9pais comme sur la figure. Rappel On rappelle que la syntaxe d'une instruction conditionnelle est : if < condition > : < instructions1 > else : < instructions2 > Activit\u00e9 6 : Le probl\u00e8me de Josephus \u2009 Le but de l'activit\u00e9 est d'\u00e9crire un programme permettant de r\u00e9soudre le probl\u00e8me de Jos\u00e9phus en r\u00e9visant les listes de Python. On repr\u00e9sente un cercle de n soldats par la liste [1,2,...,n] Ecrire une fonction soldats(n) qui renvoie la liste [1,2,....,n] Verifier que n est bien un entier strictement positif \u00e0 l'aide d'instruction assert Ajouter une cha\u00eene documentation. Afin de rep\u00e9rer l'\u00e9p\u00e9e, on d\u00e9cide que le soldat qui la tient se situe toujours en premi\u00e8re position de la liste . Compl\u00e9ter l'\u00e9volution de la liste de soldat ci-dessous Etat de la liste Explications [ 1 , 2 ,3,4,5,6] 1 \u00e9limine 2 et passe l'\u00e9p\u00e9e \u00e0 3 qui passe donc en t\u00eate de liste [ 3 ,...,5,6,1] 3 \u00e9limine ... et passe l'\u00e9p\u00e9e \u00e0 ... qui passe donc en t\u00eate de liste [ ... , 6 ,1,3] ... \u00e9limine ... et passe l'\u00e9p\u00e9e \u00e0 ... qui passe donc en t\u00eate de liste [...,...,...] ..... [...,...] ..... [...] ..... Compl\u00e9ter l'algorithme suivant d'\u00e9volution de la liste et indiquer les instructions Python correspondantes (on d\u00e9signe par cercle la liste repr\u00e9sentant le cercle de soldats): Etapes Op\u00e9ration sur la liste Instructions Python .......... tueur=cercle.pop(0) Ajouter cet \u00e9l\u00e9ment en fin de liste ...... Supprimer le premier \u00e9l\u00e9ment ...... Quel est la condition d'arr\u00eat de l'algorithme ? Exprimer cette condition par un test en python sur cercle Programmer une fonction josephus(n) qui renvoie le soldat survivant pour un cercle de n soldats. Cours Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices. Exercices Exercice 1 : Les bases de la ligne de commande En utilisant uniquement la ligne de commande, cr\u00e9er l'arborescence suivante dans votre r\u00e9pertoire personnel : graph TD A[Cours] --> B[C0-R\u00e9visions] A[Cours] --> G[C1-R\u00e9cursivit\u00e9] B --> C[Exercices] B --> D[Activit\u00e9s] B --> E[Notes] B --> F[Python] Renommer le dossier Cours en NSI Cr\u00e9er un fichier vide exercice2.txt dans le dossier Exercices Exercice 2 : Quelques commandes Sans les tester , \u00e9crire dans le fichier exercice2.txt cr\u00e9e \u00e0 l'exercice pr\u00e9c\u00e9dent l'effet des commandes suivantes : cd ~ mkdir Partage chmod a+rwx Partage cd Partage touch hello.txt echo \"Salut tout le monde\" > hello.txt cat hello.txt Taper ces commandes pour v\u00e9rifier vos pr\u00e9cisions. Exercice 3 : Arborescence Rechercher l'aide de la commande tree , quel est l'effet de cette commande ? Afficher l'arborescence de votre r\u00e9pertoire personnel Afficher l'arborescence de la racine en limitant \u00e0 un la profondeur Rechercher sur le Web le r\u00f4le des dossiers suivants : /etc /home /dev /tmp Aide Pour les exercices avec turtle , on peut consulter la page de documentation officielle du module Exercice 4 : Figures g\u00e9om\u00e9triques avec Turtle Ecrire une fonction rectangle(x,y,l1,l2) qui trace le rectangle de dimensions l1 \\(\\times\\) l2 et dont le coin inf\u00e9rieur gauche \u00e0 pour coordonn\u00e9es x et y . On peut remplir une surface construite avec un crayon du module turtle : Sp\u00e9cifier une couleur de remplissage par exemple crayon.fillcolor(red) Au d\u00e9but du trac\u00e9 de la figure \u00e9crire l'instruction crayon.begin_fill() A la fin du trac\u00e9 de la figure \u00e9crire l'instruction crayon.end_fill() Modifier votre fonction rectangle de fa\u00e7on \u00e0 pouvoir tracer un rectangle rempli avec une couleur pass\u00e9e en param\u00e8tre. Exercice 5 : Quelques figures avec turtle Construire les figures suivantes (le rep\u00e8re est l\u00e0 pour vous aider et ne dois pas \u00eatre reproduit): L'escalier Cercles concentriques (les couleurs alternent entre blue et lightblue , le crayon a une \u00e9paisseur de 10, les cercles ont pour rayon 10,20,30, ...) Exercice 6 : Polygone r\u00e9gulier \u2009 Ecrire une fonction triangle_equilateral(c) qui trace un triangle \u00e9quilat\u00e9ral de c\u00f4te c \u00e0 partir de la position courante de la tortue. Ecrire une fonction carre(c) qui trace un carr\u00e9 de c\u00f4te c \u00e0 partir de la position courante de la tortue. Ecrire une fonction polygone_regulier(n,c) qui trace un polygone r\u00e9gulier de c\u00f4te c \u00e0 partir de la position courante de la tortue. Rappel Un polygone r\u00e9gulier est un polygone dont tous les c\u00f4t\u00e9s sont de la m\u00eame longueur et tous les angles sont \u00e9gaux. Les angles d'un polygone r\u00e9gulier \u00e0 \\(n\\) c\u00f4t\u00e9s mesurent \\(\\dfrac{360}{n}\\) Exercice 7 : Panneau de signalisation Ecrire un programme Python permettant de dessiner le panneau de signalisation de votre choix. Quelques exemples sont propos\u00e9s ci-dessous.","title":"C0-R\u00e9visions"},{"location":"revisions/#c0-revisions","text":"","title":"C0 R\u00e9visions "},{"location":"revisions/#activites","text":"","title":"Activit\u00e9s"},{"location":"revisions/#activite-1-ligne-de-commande","text":"Le but de cette activit\u00e9 est de red\u00e9couvrir les bases de la ligne de commande. On utilisera gameshell , un mini-jeu d'aventure o\u00f9 les commandes servent \u00e0 accomplir des missions. Installation de Gameshell : T\u00e9l\u00e9charger le fichier gameshell . Ouvrir l'explorateur de fichier. Cr\u00e9er un r\u00e9pertoire gameshell dans votre dossier personnel (en faisant un clic-droit et en s\u00e9lectionnant nouveau dossier ) Dans ce r\u00e9pertoire, copier le fichier gameshell que vous avez t\u00e9l\u00e9charg\u00e9. Faire un clic droit sur le fichier et dans l'onglet permission cocher la case ' Autoriser l'ex\u00e9cution du fichier comme un programme ', comme illustr\u00e9 ci-dessous : Faire un clic droit dans la fen\u00eatre de l'explorateur de fichier et s\u00e9lectionner \" ouvrir dans un terminal \" comme illustr\u00e9 ci-dessous : Dans le terminal taper : ./gameshell.sh Parall\u00e8lement \u00e0 l'ex\u00e9cution des missions : Noter les commandes que vous utilisez et leur signification Tenir \u00e0 jour un plan du monde dans lequel se d\u00e9roule le jeu Aide Pour la premi\u00e8re mission, vous devez donc noter le sens des commandes cd , ls et pwd et commencer le sch\u00e9ma suivant qui sera \u00e0 poursuivre tout au long des missions : graph TD A[Monde] --> B[Chateau] A --> C[Echoppe] A --> D[For\u00eat] A --> E[Jardin] A --> F[Montagne] L'installation de Gameshell, faite ci-dessus \u00e0 l'aide de l'interface graphique aurait pu \u00eatre r\u00e9alis\u00e9 en ligne de commande. Quelle commande permet de cr\u00e9er un r\u00e9pertoire gameshell dans votre dossier personnel (question 1.c ci-dessus) ? Quelle commande correspond \u00e0 la copie du fichier (question 1.d ci-dessus) ? Quelle commande correspond \u00e0 la modification des droits d'ex\u00e9cution (question 1.e ci-dessus) ?","title":"Activit\u00e9 1 : Ligne de commande"},{"location":"revisions/#activite-2-module-turtle-de-python","text":"Le but de cette activit\u00e9 est de red\u00e9couvrir les bases de la programmation en python en utilisant le module turtle qui permet de dessiner \u00e0 l'aide d'une \" tortue \" (\u00e9quivalente \u00e0 un crayon) \u00e0 laquelle on donne des instructions (se d\u00e9placer, avancer, tourner, ...) de fa\u00e7on \u00e0 former le dessin d\u00e9sir\u00e9. Cette tortue se d\u00e9place sur un \u00e9cran (\u00e9quivalent au papier), dot\u00e9 d'un rep\u00e8re comme en math\u00e9matiques. Dessiner une grille de morpion On souhaite dessiner une grille du jeu de morpion comme ci-dessous (o\u00f9 le rep\u00e8re du papier est trac\u00e9 de fa\u00e7on \u00e0 conna\u00eetre les dimensions et positions des traits) : Recopier et executer le programme suivant : import turtle # Cr\u00e9ation du \"papier\" et du \"crayon\" crayon = turtle . Turtle () papier = turtle . Screen () # Taille, dimension et couleur pour le papier et le crayon papier . bgcolor ( \"beige\" ) papier . setup ( width = 500 , height = 500 ) crayon . color ( \"navy\" ) crayon . pensize ( 5 ) # Trac\u00e9 d'un trait avec les coordonn\u00e9es des extr\u00e9mit\u00e9s crayon . penup () crayon . goto ( - 50 , - 150 ) crayon . pendown () crayon . goto ( - 50 , 150 ) # Trac\u00e9 d'un trait en orientant et en faisant avancer la tortue crayon . penup () crayon . goto ( 50 , - 150 ) crayon . pendown () crayon . setheading ( 90 ) crayon . forward ( 300 ) # Attends un clic pour fermer la fen\u00eatre de dessin papier . exitonclick () Expliquer le r\u00f4le des instructions suivantes : pensize et color penup et pendown goto et forward setheading Aide Vous pouvez modifier les param\u00e8tres ou supprimer certaines instructions pour en voir l'effet sur le dessin. Aider vous aussi des commentaires. Compl\u00e9ter ce programme en tra\u00e7ant les deux traits horizontaux manquants afin de compl\u00e9ter le dessin de la grille de morpion. Dessiner en cercle au centre de la grille de morpion (de rayon 40, de couleur darkred avec un crayon d'\u00e9paisseur 7) de fa\u00e7on \u00e0 obtenir le dessin final suivant : Aide Utiliser circle(r) o\u00f9 r est le rayon du cercle \u00e0 tracer, on fera attention que le centre du cercle se situe toujours \u00e0 gauche de l'orientation de la tortue et \u00e0 une distance r comme repr\u00e9sent\u00e9 ci-dessous :","title":"Activit\u00e9 2 : Module turtle de Python"},{"location":"revisions/#activite-3-de-lutilite-des-fonctions","text":"Attention Cette activit\u00e9 est la suite de la pr\u00e9c\u00e9dente, on doit donc d\u00e9j\u00e0 disposer d'un programme Python permettant de tracer la grille de morpion ainsi que le cercle central. M\u00eame si vous pouvez t\u00e9l\u00e9charger ce programme ici , il est fortement conseill\u00e9 d'avoir assimil\u00e9 les notions de l'activit\u00e9 pr\u00e9c\u00e9dente (trac\u00e9 des lignes et des cercles) avant de continuer. On propose d'\u00e9crire une fonction ligne permettant de tracer avec la tortue crayon un trait en donnant les coordonn\u00e9es x1 et y1 de l'origine et x2 et y2 de l'extr\u00e9mit\u00e9. Par quel mot cl\u00e9 commence la d\u00e9finition d'une fonction en Python ? Quels seront ici les arguments de la fonction ? Recopier et compl\u00e9ter le code de cette fonction : ... ligne ( .. , .. , .. , .. ): crayon .... () crayon .... ( .. , .. ) crayon ..... () crayon ..... ( .. , .. ) Ajouter une cha\u00eene de documentation \u00e0 cette fonction Faire le trac\u00e9 de la grille de morpion en vous aidant de cette fonction. Que peut-on dire par rapport \u00e0 version du programme qui n'utilisait pas de fonction ? En vous inspirant de l'exemple pr\u00e9c\u00e9dent, \u00e9crire une fonction ligne2 permettant de tracer un trait en donnant les coordonn\u00e9es x et y de son origine, ainsi que sa longueur l et sa direction d (sous la forme d'un angle). Aide On utilisera forward pour avancer de la longueur indiqu\u00e9e et setheading pour positionner la tortue avec l'orientation d\u00e9sir\u00e9e. Ecrire une fonction cercle permettant de tracer un cercle dont on donne les coordonn\u00e9es du centre x et y et le rayon r Ecrire une fonction croix qui permet de tracer une croix ( ) en donnant son centre et la longueur des branches.","title":"Activit\u00e9 3 : De l'utilit\u00e9 des fonctions"},{"location":"revisions/#activite-4-une-boucle-pour-repeter","text":"On souhaite dessiner la grille suivante \u00e0 l'aide du module turtle de Python : On dispose d\u00e9j\u00e0 d'un d\u00e9but de programme qui d\u00e9finit les propri\u00e9t\u00e9s du papier et du crayon ainsi que la fonction ligne permettant de tracer une ligne en donnant les deux extr\u00e9mit\u00e9s (voir activit\u00e9s pr\u00e9c\u00e9dentes) : import turtle # Cr\u00e9ation du \"papier\" et du \"crayon\" crayon = turtle . Turtle () papier = turtle . Screen () # Taille, dimension et couleur pour le papier et le crayon papier . bgcolor ( \"beige\" ) papier . setup ( width = 500 , height = 500 ) crayon . color ( \"navy\" ) crayon . pensize ( 5 ) def ligne ( x1 , y1 , x2 , y2 ): crayon . penup () crayon . goto ( x1 , y1 ) crayon . pendown () crayon . goto ( x2 , y2 ) \u00c9crire les instructions permettant de tracer les lignes horizontales. Une (bien) meilleure solution V\u00e9rifier que les instructions suivantes permettent de tracer les lignes verticales : for abscisse in range ( - 200 , 250 , 50 ): ligne ( abscisse , - 200 , abscisse , 200 ) Quelles sont les valeurs prises successives prises par la variable abscisse dans le programme pr\u00e9c\u00e9dant ? Rappeler le r\u00f4le des param\u00e8tres de range","title":"Activit\u00e9 4 : Une boucle pour r\u00e9p\u00e9ter"},{"location":"revisions/#activite-5-instructions-conditionnelles","text":"On souhaite dessiner la figure suivante \u00e0 l'aide du module turtle de Python : Ecrire une fonction carre(x,y,c) qui trace le carr\u00e9 de c\u00f4t\u00e9 c dont le coin inf\u00e9rieur gauche a pour coordonn\u00e9es (x,y) . Ecrire une boucle \u00e0 l'aide d'une instruction for ... in range(....): de fa\u00e7on \u00e0 tracer la suite de carr\u00e9 bleu. Ajouter une instruction conditionnelle dans la boucle de fa\u00e7on \u00e0 ce que le septi\u00e8me carr\u00e9 soit trac\u00e9 en rouge et avec un crayon plus \u00e9pais comme sur la figure. Rappel On rappelle que la syntaxe d'une instruction conditionnelle est : if < condition > : < instructions1 > else : < instructions2 >","title":"Activit\u00e9 5 : Instructions conditionnelles"},{"location":"revisions/#activite-6-le-probleme-de-josephus","text":"Le but de l'activit\u00e9 est d'\u00e9crire un programme permettant de r\u00e9soudre le probl\u00e8me de Jos\u00e9phus en r\u00e9visant les listes de Python. On repr\u00e9sente un cercle de n soldats par la liste [1,2,...,n] Ecrire une fonction soldats(n) qui renvoie la liste [1,2,....,n] Verifier que n est bien un entier strictement positif \u00e0 l'aide d'instruction assert Ajouter une cha\u00eene documentation. Afin de rep\u00e9rer l'\u00e9p\u00e9e, on d\u00e9cide que le soldat qui la tient se situe toujours en premi\u00e8re position de la liste . Compl\u00e9ter l'\u00e9volution de la liste de soldat ci-dessous Etat de la liste Explications [ 1 , 2 ,3,4,5,6] 1 \u00e9limine 2 et passe l'\u00e9p\u00e9e \u00e0 3 qui passe donc en t\u00eate de liste [ 3 ,...,5,6,1] 3 \u00e9limine ... et passe l'\u00e9p\u00e9e \u00e0 ... qui passe donc en t\u00eate de liste [ ... , 6 ,1,3] ... \u00e9limine ... et passe l'\u00e9p\u00e9e \u00e0 ... qui passe donc en t\u00eate de liste [...,...,...] ..... [...,...] ..... [...] ..... Compl\u00e9ter l'algorithme suivant d'\u00e9volution de la liste et indiquer les instructions Python correspondantes (on d\u00e9signe par cercle la liste repr\u00e9sentant le cercle de soldats): Etapes Op\u00e9ration sur la liste Instructions Python .......... tueur=cercle.pop(0) Ajouter cet \u00e9l\u00e9ment en fin de liste ...... Supprimer le premier \u00e9l\u00e9ment ...... Quel est la condition d'arr\u00eat de l'algorithme ? Exprimer cette condition par un test en python sur cercle Programmer une fonction josephus(n) qui renvoie le soldat survivant pour un cercle de n soldats.","title":"Activit\u00e9 6 : Le probl\u00e8me de Josephus&thinsp; "},{"location":"revisions/#cours","text":"Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices.","title":"Cours"},{"location":"revisions/#exercices","text":"","title":"Exercices"},{"location":"revisions/#exercice-1-les-bases-de-la-ligne-de-commande","text":"En utilisant uniquement la ligne de commande, cr\u00e9er l'arborescence suivante dans votre r\u00e9pertoire personnel : graph TD A[Cours] --> B[C0-R\u00e9visions] A[Cours] --> G[C1-R\u00e9cursivit\u00e9] B --> C[Exercices] B --> D[Activit\u00e9s] B --> E[Notes] B --> F[Python] Renommer le dossier Cours en NSI Cr\u00e9er un fichier vide exercice2.txt dans le dossier Exercices","title":"Exercice 1 : Les bases de la ligne de commande"},{"location":"revisions/#exercice-2-quelques-commandes","text":"Sans les tester , \u00e9crire dans le fichier exercice2.txt cr\u00e9e \u00e0 l'exercice pr\u00e9c\u00e9dent l'effet des commandes suivantes : cd ~ mkdir Partage chmod a+rwx Partage cd Partage touch hello.txt echo \"Salut tout le monde\" > hello.txt cat hello.txt Taper ces commandes pour v\u00e9rifier vos pr\u00e9cisions.","title":"Exercice 2 : Quelques commandes"},{"location":"revisions/#exercice-3-arborescence","text":"Rechercher l'aide de la commande tree , quel est l'effet de cette commande ? Afficher l'arborescence de votre r\u00e9pertoire personnel Afficher l'arborescence de la racine en limitant \u00e0 un la profondeur Rechercher sur le Web le r\u00f4le des dossiers suivants : /etc /home /dev /tmp Aide Pour les exercices avec turtle , on peut consulter la page de documentation officielle du module","title":"Exercice 3 : Arborescence"},{"location":"revisions/#exercice-4-figures-geometriques-avec-turtle","text":"Ecrire une fonction rectangle(x,y,l1,l2) qui trace le rectangle de dimensions l1 \\(\\times\\) l2 et dont le coin inf\u00e9rieur gauche \u00e0 pour coordonn\u00e9es x et y . On peut remplir une surface construite avec un crayon du module turtle : Sp\u00e9cifier une couleur de remplissage par exemple crayon.fillcolor(red) Au d\u00e9but du trac\u00e9 de la figure \u00e9crire l'instruction crayon.begin_fill() A la fin du trac\u00e9 de la figure \u00e9crire l'instruction crayon.end_fill() Modifier votre fonction rectangle de fa\u00e7on \u00e0 pouvoir tracer un rectangle rempli avec une couleur pass\u00e9e en param\u00e8tre.","title":"Exercice 4 : Figures g\u00e9om\u00e9triques avec Turtle"},{"location":"revisions/#exercice-5-quelques-figures-avec-turtle","text":"Construire les figures suivantes (le rep\u00e8re est l\u00e0 pour vous aider et ne dois pas \u00eatre reproduit): L'escalier Cercles concentriques (les couleurs alternent entre blue et lightblue , le crayon a une \u00e9paisseur de 10, les cercles ont pour rayon 10,20,30, ...)","title":"Exercice 5 : Quelques figures avec turtle"},{"location":"revisions/#exercice-6-polygone-regulier","text":"Ecrire une fonction triangle_equilateral(c) qui trace un triangle \u00e9quilat\u00e9ral de c\u00f4te c \u00e0 partir de la position courante de la tortue. Ecrire une fonction carre(c) qui trace un carr\u00e9 de c\u00f4te c \u00e0 partir de la position courante de la tortue. Ecrire une fonction polygone_regulier(n,c) qui trace un polygone r\u00e9gulier de c\u00f4te c \u00e0 partir de la position courante de la tortue. Rappel Un polygone r\u00e9gulier est un polygone dont tous les c\u00f4t\u00e9s sont de la m\u00eame longueur et tous les angles sont \u00e9gaux. Les angles d'un polygone r\u00e9gulier \u00e0 \\(n\\) c\u00f4t\u00e9s mesurent \\(\\dfrac{360}{n}\\)","title":"Exercice 6 : Polygone r\u00e9gulier&thinsp; "},{"location":"revisions/#exercice-7-panneau-de-signalisation","text":"Ecrire un programme Python permettant de dessiner le panneau de signalisation de votre choix. Quelques exemples sont propos\u00e9s ci-dessous.","title":"Exercice 7 : Panneau de signalisation"},{"location":"siteadmin/","text":"Scripts d'administration Gestion des qcm Partie barre de navigation du fichier mkdocs.yml : - \"C0-R\u00e9visions\" : revisions.md - \"C1-R\u00e9cursivit\u00e9\" : recursivite.md - \"C2-Introduction aux bases de donn\u00e9es et \u00e0 SQL\" : sql.md - \"C3-Processus\" : processus.md - \"C4-Diviser pour r\u00e9gner\" : diviser.md - \"C5-Notions de programmation orient\u00e9 objet\" : poo.md - \"C6-Structures de donn\u00e9es lin\u00e9aires\" : sl.md - \"C7-Syst\u00e8me sur puce\" : puces.md - \"C8-Arbres\" : arbres.md - \"C9-Sch\u00e9ma relationnel d'une base de donn\u00e9es\" : sgbd.md - \"C10-Algorithmes sur les arbres\" : algoarbre.md - \"C11-Graphes\" : graphes.md - \"C12-Protocoles de routage\" : routage.md - \"C13-Recherche textuelle\" : texte.md - \"C14-Calculabilit\u00e9, d\u00e9cidabilit\u00e9\" : calculabilite.md - \"C15-S\u00e9curisation des communications\" : cryptage.md","title":"Scripts d'administration"},{"location":"siteadmin/#scripts-dadministration","text":"","title":"Scripts d'administration"},{"location":"siteadmin/#gestion-des-qcm","text":"Partie barre de navigation du fichier mkdocs.yml : - \"C0-R\u00e9visions\" : revisions.md - \"C1-R\u00e9cursivit\u00e9\" : recursivite.md - \"C2-Introduction aux bases de donn\u00e9es et \u00e0 SQL\" : sql.md - \"C3-Processus\" : processus.md - \"C4-Diviser pour r\u00e9gner\" : diviser.md - \"C5-Notions de programmation orient\u00e9 objet\" : poo.md - \"C6-Structures de donn\u00e9es lin\u00e9aires\" : sl.md - \"C7-Syst\u00e8me sur puce\" : puces.md - \"C8-Arbres\" : arbres.md - \"C9-Sch\u00e9ma relationnel d'une base de donn\u00e9es\" : sgbd.md - \"C10-Algorithmes sur les arbres\" : algoarbre.md - \"C11-Graphes\" : graphes.md - \"C12-Protocoles de routage\" : routage.md - \"C13-Recherche textuelle\" : texte.md - \"C14-Calculabilit\u00e9, d\u00e9cidabilit\u00e9\" : calculabilite.md - \"C15-S\u00e9curisation des communications\" : cryptage.md","title":"Gestion des qcm"}]}