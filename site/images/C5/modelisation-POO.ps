%!PS-Adobe-2.0
%%Creator: dvips(k) 5.999 Copyright 2019 Radical Eye Software
%%Title: /home/fenarius/Travail/Cours/NSITerminale/docs/images/C5/modelisation-POO.dvi
%%CreationDate: Mon Aug 30 09:23:00 2021
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 363 273
%%DocumentFonts: CMSY10 NimbusSanL-Regu NimbusSanL-Bold
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o
%+ /home/fenarius/Travail/Cours/NSITerminale/docs/images/C5/modelisation-POO.ps
%+ /home/fenarius/Travail/Cours/NSITerminale/docs/images/C5/modelisation-POO.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2021.08.30:1323
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 872 2018-12-21 20:39:31Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.30, 2018/12/17
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/Power { %  a^b   latest ghostscript don't allow -4^-3.1
  2 dict begin	% hold all local
  /b ED
  /a ED
  a 0 lt % prevent something like (-4)^(-3.1)=> 1/(-4)^3
    { b 0 lt 
      { a b cvi exp }
      { a b exp } ifelse 
    }
    { a 0 eq { 0 }{ a b exp } ifelse
    } ifelse
  end
} def
%
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup xGridOffset add y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup yGridOffset add x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 395 2017-03-21 09:24:38Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2018/12/16 $
% Version         : 0.65 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% $Id: pst-text.pro 891 2018-12-29 19:42:20Z herbert $
%
% PostScript header file pst-text.pro
% Version 1.02, 2018-12-28 (hv)
% For distribution, see pstricks.tex.
%
/tx@TextPathDict 45 dict def
tx@TextPathDict begin
%
% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def
%
/movetoproc { continue { @movetoproc } { pop pop } ifelse } def
%
/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def
%
/linetoproc { continue { @linetoproc } { pop pop } ifelse } def
%
/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def
%
/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def
%
% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def
%
/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def
%
/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def
%
%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint
    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
/warp {
    1 index
    1.4 mul
    cos 2 add
    mul
} def
/warpmove{
    2 index {
        newpath
    } if
    warp moveto
    pop false
} def
/warpline { warp lineto } def
/warpcurve {
    6 2 roll warp
    6 2 roll warp
    6 2 roll warp
    curveto
} def
/warpit {
    true
    { warpmove } { warpline } { warpcurve } { closepath } pathforall
    pop
} def
%
/circle {
    exch neg
    % .5 mul
    90 add
    dup cos 2 index mul
    3 1 roll
    sin mul
} bind def

/circmove{
    2 index { newpath } if
    circle moveto
    pop false
} bind def

/circline { circle lineto } bind def

/circcurve {
    6 2 roll circle
    6 2 roll circle
    6 2 roll circle
    curveto
} bind def

/circit { true { circmove } { circline } { circcurve } { closepath } pathforall pop } bind def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.03 2020/01/09
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 }
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% calculate the line coefficents Ax+By+C=0
%% x1 y1 x2 y2 -> A B C
/LineCoefABC {
  0 index 3 index sub % A=y2-y1
  4 index 3 index sub % B=x1-x2
  3 index 5 index mul 6 index 4 index mul sub % C=x2y1-x1y2
  7 3 roll pop pop pop pop
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% calculate the 2-order determinant
%% |a11 a12|
%% |a21 a22|
%% a11 a12, a21 a22 -> X
/DeterminantTwo {
  4 1 roll mul 3 1 roll mul exch sub
} def
%% calculate the 3-order determinant
%% |a11 a12 a13|
%% |a21 a22 a23|
%% |a31 a32 a33|
%%   8   7   6    5   4   3    2   1   0
%% a11 a12 a13, a21 a22 a23, a31 a32 a33 -> X
/DeterminantThree {
  % |a22 a23, a32 a33| * (-1)^(1+1)a11
  8 index abs 1E-5 lt { %a11=0
    0
  } {
    4 index 4 index 3 index 3 index DeterminantTwo
    9 index mul
  } ifelse
  % |a12 a13, a32 a33| * (-1)^(1+2)a21
  6 index abs 1E-5 lt { %a12=0
    0 sub
  } {
    8 index 8 index 4 index 4 index DeterminantTwo
    7 index mul sub
  } ifelse
  % |a12 a13, a22 a23| * (-1)^(1+3)a31
  3 index abs 1E-5 lt { %a13=0
    0 add
  } {
    8 index 8 index 7 index 7 index DeterminantTwo
    4 index mul add
  } ifelse
  10 1 roll pop pop pop pop pop pop pop pop pop
} def
%% calculate the 4-order determinant
%% |a11 a12 a13 a14|
%% |a21 a22 a23 a24|
%% |a31 a32 a33 a34|
%% |a41 a42 a43 a44|
%%  15  14  13  12   11  10   9   8    7   6   5   4    3   2   1   0
%% a11 a12 a13 a14, a21 a22 a23 a24, a31 a32 a33 a34, a41 a42 a43 a44 -> X
/DeterminantFour {
  % |a22 a23 a24, a32 a33 a34, a42 a43 a44| * (-1)^(1+1)a11
  15 index abs 1E-5 lt { %a11=0
    0
  } {
    10 index 10 index 10 index 9 index 9 index 9 index 8 index 8 index 8 index DeterminantThree
    16 index mul
  } ifelse
  % |a12 a13 a14, a32 a33 a34, a42 a43 a44| * (-1)^(1+2)a21
  12 index abs 1E-5 lt { %a21=0
    0 sub
  } {
    15 index 15 index 15 index 10 index 10 index 10 index 9 index 9 index 9 index DeterminantThree
    13 index mul sub
  } ifelse
  % |a12 a13 a14, a22 a23 a24, a42 a43 a44| * (-1)^(1+3)a31
  8 index abs 1E-5 lt { %a31=0
    0 add
  } {
    15 index 15 index 15 index 14 index 14 index 14 index 9 index 9 index 9 index DeterminantThree
    9 index mul add
  } ifelse
  % |a12 a13 a14, a22 a23 a24, a32 a33 a34| * (-1)^(1+4)a41
  4 index abs 1E-5 lt { %a41=0
    0 sub
  } {
    15 index 15 index 15 index 14 index 14 index 14 index 13 index 13 index 13 index DeterminantThree
    5 index mul sub
  } ifelse
  17 1 roll pop pop pop pop pop pop pop pop
  pop pop pop pop pop pop pop pop
} def
%% calculate the 5-order determinant
%% |a11 a12 a13 a14 a15|
%% |a21 a22 a23 a24 a25|
%% |a31 a32 a33 a34 a35|
%% |a41 a42 a43 a44 a45|
%% |a51 a52 a53 a54 a55|
%%  24  23  22  21  20   19  18  17  16  15   14  13  12  11  10    9   8   7   6   5    4   3   2   1   0
%% a11 a12 a13 a14 a15, a21 a22 a23 a24 a25, a31 a32 a33 a34 a35, a41 a42 a43 a44 a45, a51 a52 a53 a54 a55-> X
/DeterminantFive {
  % |a22 a23 a24 a25, a32 a33 a34 a35, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+1)a11
  24 index abs 1E-5 lt { %a11=0
    0
  } {
    18 index 18 index 18 index 18 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index 15 index 15 index 15 index 15 index DeterminantFour
    25 index mul
  } ifelse
  % |a12 a13 a14 a15, a32 a33 a34 a35, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+2)a21
  20 index abs 1E-5 lt { %a21=0
    0 sub
  } {
    24 index 24 index 24 index 24 index 18 index 18 index 18 index 18 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index DeterminantFour
    21 index mul sub
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+3)a31
  15 index abs 1E-5 lt { %a31=0
    0 add
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index DeterminantFour
    16 index mul add
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a32 a33 a34 a35, a52 a53 a54 a55| * (-1)^(1+4)a41
  10 index abs 1E-5 lt { %a41=0
    0 sub
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 22 index 22 index 22 index 22 index 16 index 16 index 16 index 16 index DeterminantFour
    11 index mul sub
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a32 a33 a34 a35, a42 a43 a44 a45| * (-1)^(1+5)a51
  5 index abs 1E-5 lt { %a51=0
    0 add
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 22 index 22 index 22 index 22 index 21 index 21 index 21 index 21 index DeterminantFour
    6 index mul add
  } ifelse
  26 1 roll pop pop pop pop pop pop pop pop pop pop
  pop pop pop pop pop pop pop pop pop pop
  pop pop pop pop pop
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 1990-2020 The LaTeX3 Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
true setglobal
/pdf.globaldict 4 dict def
false setglobal

/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict~
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfHrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def}
bind def

 /pgfVrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto }
bind def} bind def

 /pgfArgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1
add def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff
div 2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index
14 index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke
4 -1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1rgb{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRrgb} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2rgb{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfRrgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1
add def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def
/pgfcircy pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
8 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index
6 index sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff {
3 index 3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360
arc closepath stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll 4 index add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add
def /pgfcircy pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark
exch pop }bind def

 /pgfHcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 moveto dup 6 index lineto } bind def}
bind def

 /pgfVcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 exch moveto dup 6 index exch lineto
} bind def} bind def

 /pgfAcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 2 mul
1 add def 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff
div 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div
pgfheight 12 index 12 index 12 index 12 index 18 index pgfdiff { 4
index 4 index 4 index 4 index setcmykcolor pgfdir stroke 5 -1 roll
9 index add 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6
index add 5 -1 roll .5 sub } repeat mark 19 1 roll cleartomark exch
pop }bind def

 /pgfR1cmyk{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRcmyk} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2cmyk{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setcmykcolor
fill pop}bind def

 /pgfRcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 11 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 11 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 10 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
10 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 3 index
8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 11 index 11
index 11 index 11 index 17 index pgfdiff { 4 index 4 index 4 index
4 index setcmykcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6 index
add 5 -1 roll 5 index add 5 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep
add def /pgfcircy pgfcircy pgfystep add def } repeat mark 18 1 roll
cleartomark exch pop }bind def

 /pgfHgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 moveto dup 3 index lineto } bind def}
bind def

 /pgfVgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 exch moveto dup 3 index exch lineto
} bind def} bind def

 /pgfAgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 2 mul
1 add def dup 2 index sub pgfdiff div pgfheight 3 index 6 index pgfdiff
{ 1 index setgray pgfdir stroke exch 3 index add exch .5 sub } repeat
mark 7 1 roll cleartomark exch pop }bind def

 /pgfR1gray{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRgray} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2gray{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setgray
fill pop}bind def

 /pgfRgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 5 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 5 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 4 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
4 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
dup 2 index sub pgfdiff div 2 index 5 index pgfdiff { 1 index setgray
pgfcircx pgfcircy 2 index 0 360 arc closepath stroke exch 2 index add
exch .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy pgfcircy
pgfystep add def } repeat mark 6 1 roll cleartomark exch pop }bind
def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def product (Ghostscript)
search {pop pop pop revision 927 gt}{pop false} ifelse{/BorderArrayPatch{}
def}{/BorderArrayPatch{[exch{dup dup type/integertype eq exch type/realtype
eq or{BPToDvips}if}forall]}def} ifelse /HyperBorder {1 PDFToDvips}
def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx pdf@lly pdf@urx
pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly exch def dup
DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx exch
def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto pgffill 16.0002 0.49998 moveto 18.00021 2.00002 lineto
16.0002 3.50003 lineto pgffill  grestore} bind def

 /pgf2{gsave exec 2.39105 3.38733 8.26909 0.79701 pgfe pgfstr  grestore}
bind def

 /pgf3{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill  grestore} bind def

 /pgf4{gsave exec 2.39105 3.38733 6.97394 0.0 pgfe 7.80008 2.40001
moveto 7.80008 3.20003 lineto 11.20012 3.20003 lineto 11.20012 0.8
lineto 10.4001 0.8 lineto 8.6001 3.20003 moveto 8.6001 4.00005 lineto
12.00015 4.00005 lineto 12.00015 1.60002 lineto 11.20012 1.60002 lineto
pgfstr  grestore} bind def

 /pgf5{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill 0.59776 pgfw 8.00009 4.00005 moveto 11.00012
4.00005 lineto 9.00009 2.00002 moveto 12.00015 2.00002 lineto 8.00009
1.0 moveto 11.00012 1.0 lineto 9.00009 0.0 moveto 12.00015 0.0 lineto
pgfstr  grestore} bind def

 /pgf6{gsave exec 0.59776 pgfw 9.00009 3.00003 moveto 12.00015 3.00003
lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill 0.59776 pgfw 8.00009 1.0 moveto 11.00012 1.0
lineto 9.00009 0.0 moveto 12.00015 0.0 lineto pgfstr  grestore} bind
def

 /pgf8{gsave exec 0.59776 pgfw 8.00009 4.00005 moveto 11.00012 4.00005
lineto 9.00009 3.00003 moveto 12.00015 3.00003 lineto 9.00009 2.00002
moveto 12.00015 2.00002 lineto pgfstr  grestore} bind def

 /pgf9{gsave exec 10.0001 -0.49998 moveto 10.0001 4.50003 lineto pgfstr
 grestore} bind def

 /pgf10{gsave exec 0.59776 pgfw 4.00005 4.00005 moveto 7.00008 4.00005
lineto 5.00005 3.00003 moveto 8.00009 3.00003 lineto 5.00005 2.00002
moveto 8.00009 2.00002 lineto 3.00003 1.0 moveto 7.00008 1.0 lineto
5.00005 0.0 moveto 8.00009 0.0 lineto 12.00015 3.00003 moveto 15.00018
3.00003 lineto 13.00015 2.00002 moveto 16.0002 2.00002 lineto 13.00015
1.0 moveto 16.0002 1.0 lineto pgfstr  grestore} bind def

 /pgf11{gsave exec 0.59776 pgfw 8.00009 4.00005 moveto 11.00012 4.00005
lineto 9.00009 3.00003 moveto 12.00015 3.00003 lineto 9.00009 2.00002
moveto 12.00015 2.00002 lineto 8.00009 1.0 moveto 11.00012 1.0 lineto
9.00009 0.0 moveto 12.00015 0.0 lineto pgfstr  grestore} bind def

 /pgf12{gsave exec 0.59776 pgfw 10.4001 1.60002 moveto 12.00015 0.0
lineto pgfstr 0.3985 pgfw 10.66016 2.49069 moveto 10.66016 3.15096
10.1249 3.68622 9.46463 3.68622 curveto 8.80435 3.68622 8.26909 3.15096
8.26909 2.49069 curveto 8.26909 1.83041 8.80435 1.29515 9.46463 1.29515
curveto 10.1249 1.29515 10.66016 1.83041 10.66016 2.49069 curveto closepath
9.46463 2.49069 moveto pgfstr 1 setlinecap 4.00005 0.0 moveto 5.08101
0.0 6.00006 0.9 6.00006 2.00002 curveto 6.00006 3.10002 5.10005 4.00005
4.00005 4.00005 curveto 2.90001 4.00005 2.00002 3.10002 2.00002 2.00002
curveto 3.20003 2.60002 moveto 2.00002 1.60002 lineto 0.8 2.60002 lineto
16.0002 0.0 moveto 14.90016 0.0 14.00017 0.9 14.00017 2.00002 curveto
14.00017 3.10002 14.90016 4.00005 16.0002 4.00005 curveto 17.1002 4.00005
18.00021 3.10002 18.00021 2.00002 curveto 19.20023 2.60002 moveto 18.00021
1.60002 lineto 16.8002 2.60002 lineto pgfstr  grestore} bind def

 /pgf13{gsave exec 1.5 0.49998 moveto 3.50003 2.00002 lineto 1.5 3.50003
lineto pgffill  grestore} bind def

 /pgf14{gsave exec 1.5 0.49998 moveto 3.50003 2.00002 lineto 1.5 3.50003
lineto 3.50003 0.49998 moveto 5.50005 2.00002 lineto 3.50003 3.50003
lineto pgffill  grestore} bind def

 /pgf15{gsave exec 3.50003 0.49998 moveto 1.5 2.00002 lineto 3.50003
3.50003 lineto pgffill  grestore} bind def
 
@fedspecial end
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748071
6B28CA5465E87196191BE975E7C827B443B92E15342609FB93598571C63AE16F
CB7CCF15B8921F38FDB6F24403EBD6D6BB66AB49962AD578E93B235E6180B4FD
4920794B3F976477A04AD21728815D3185C74C8A1DF224DD3EE5110C18BF691A
987AEFB1DA55E4EF631C48E3B2431BF959A66D710C206B8AE5E988B7929BEFDB
CAA93FCD07341EAB622A755FF5608562153DD6A09E462ADBE677E6F550F93921
299E8A99B0B72E990A1D84831236FB6E9D0A187FD36BFA9D85C9CB0414FA7B15
EC02E8C08C8A4F71226A952C5164E68A44344BC4E6810FAD9BFD3532A9A515AC
5D6B5F8B5A1402C2C4DC011B043066ED02AF0030ED0D0769FFA19112C97076BF
F950438DC37B172FADA65DBF0C00EBA9A358B189F80CAB3A55341E4AB7C1A7BE
4066E1E941A608D1ABEE882F8B8E7E3B735838A7FE08025B5CA3639451BFACB4
AC69B3D95585E8803E513A55775078E96DA847E26E1CBE7FEA4DA070E0B5E555
F04D0EA60DAF2448DE8A7987E71C4ACC71692EDD81534C0A6D2FB1348221ED2E
D5751C4769DDCA89E24477A4E54487C65650CD39A253D3CD1B9522F61655505F
37D6A182ACDF7D3B149A3214ECFB40BB188D37B7EF316D7ABDFC060FC2509959
B69B23BFD268AA69F8F47B089AA9AE9DB022E8B289995F7051F016B7B2742F08
5788D59758523EFDD22FBA8C1B5C69DC9941DEB2E1BD49C71652273015896711
7694133A3248571E032FA87046115B70830697DED9059EADFFD0447F982AC236
CD1803DCBE2D1C1D98F92564B809A3F2D5928AADB427FFDDC2873C914D912F5E
661CEDD9C2F2F38CAB6EF6DFB4498E76A6BF7273E8DE733781413695997EA920
8B9650CAF6F2FBC478AA32FF7BD76C2DC9C6E49D1CF8595DC99B94AB773C5A4C
993293549B22228CD9FA7E1EFFE0556695263DE00D9A0315A776185AE27922D8
714582C77482CEF6A61272A0188C1A2E8E9C02D093AF05CF2EFF9792C01AEBA7
B31D5FCF5FADC38FFCD02A88F58295A285BE306FB36316D235CFB90D94A8C047
695CDE536C61BE8AB89D792D6907A283245986A57EB7639DA2D7FC265E00B3B5
1C50338E69D9C160052293D3349640BD48E8CE78D81AF9A46AD10765EC16C5CB
9ECFCA7360E0F54AC6F27B3E968C32F4C209AAB55A36F6B6F08DE96684BFF33B
9F81D7076A122625C541D22FC79B4DE4F4115382B5D89A7AAB946AF713298848
B3689C7B5D8E47D0B0DE8321DF5864E91F5BD1F9E252095E3A3855205DFD8497
D3BB8E9F045654A2C4DEE0E6B465E2D1354B2FAC204E9DB51D024241AA47CFF3
565F70BFFB86BD29E637F19B1FDA6F5FDCA1A2DB50120894209DCBD35F4185EA
F8D48F2D1C7806B54452FBC5C4A8879C647F834D44BFC80B984BA0AA7FB77BBC
1AFE19165F8A1071DFD0C0AB2D56B0672598F605C22C33C714F1F9A8C8479CAC
2654B7C5977F09630EF4C1A3A0F29026B4F9645C5AF8EA555AD7C61094BB8195
5338AA302670351FA17FB8241CEB516A9F32A20B46EC5DA5CF35314AB1CB1ED3
DA1A8A7D610576CBFB3ECD5B169813364BB15886AC1EF4B856954716A21D8630
477D28F15D922D61D8BEB635FCCCC142A7137EC71A7A05EEB6BF6C4B007DB730
ED8B1100D2EEEAC2989B03FA738845913CD526E13DDD6314074BC0092EE92D49
2FEBAADAD34926DE786F241D531386B43066E07AD87BE6B374F8793BC37749D2
7C2C9E73B00423C2287EAD3EAC884655CF57D3A169C043630B25520F5991CB78
E8D8E8FD7A4AC9A59B7B6B7AE6DBAD5A189299AF30D28AC53BC5A7829B056985
2E3FB11B9A6AE97F41902105FC0E8CC42D19DC9B35D05AD0930B5A0A7C542BC9
EFB3870A2787347C4CE2C752D08669CEE0ABC7294E9C245B4317399A5832148E
1662ECC7A00671D312B8E085C7D7F23A2CE4A9BB0968F50375EF9C6BD0826731
498E0C4C8235E3DBBFC5B75E5AD61BA5B942047EEEA6EBE6FF80CB81A9A57448
C98A91CDD8434CDDB8AF2D14D6DCB21A695F526CC49031418116425CF626BC7B
77878691C6767BE0343A6B60CD3008D7C6CFD92C10FCC9BD3624B96417DC9DBC
7E2F2511FC0379A370528B9ED0C69571410D902361B1221A63D90F0C782B342D
3AB135EAB004B0A6D8C2D01ECF007C14AEAD2848B3F1CDBAC5AB2B68FCFA333B
08FA7733D2947FA9695AB6F510CA66EA23EA242C43C6C7C54C39851F8AE0C8F5
9DA8C2AB9D2457F242BD304D40108CEEDB3221CF9FAB4190676824365304E029
29B2A500D5A9C449A2F1690C9E6F3968FD95264A490B81DC4CAA8F44112D2358
8FF769EAA9461F7C89D911B45687BC9244212556D94E7FC79E81426C6A3C4B84
F36DA95D75536068F00ACDF4FF808E81920BFBDD4EFD7FE5C6EA62DD12EBDF74
EC6E62F8AD655B3F38330EA91C338E3DCF349BD512CD60000FF0397853690875
F5F18A89334FEF3FBAFEE5455CD21E749FB76AE3C317C2778B45D59AF2A4390E
2DF6E3246D3F34C70C8A90882B2679C273DEBFA04479C90809D3E6FF429D2114
99EBD6B72276F6DAED9828D1D08D36E863B93090AA906E94576E23C9FAE97945
B0D0FBA1F3A657EC42F2930DB3EF2C1D349BA7BB0EA852CADE3D6EBB8B698FEE
53AF7C502949A3FD7465CD27495F0B00DA4C30CD8F9E2175A60AEE96A4BA42AC
2BFB6386B6074B6F0419B92FAF77417265B895D58B176DC24F4C27A6E0940999
BEA8324F57D4C5B358BECE82FA557315513FC7EDDA6AB97C7AABFAC51EDDAE59
2349E815706C21DF4A0C8E5E078E9A4B30A4E40F8C7C7EFFF96E3691BBE27A0B
076158DC0C17C8F4A1141765EC86643306C07438212A53AB80143C6B509335E4
5B8640D1C1AC63A231D33791C67298A0736C4D0E4AC3B871F840007FC9B4095B
07D472A05167DAD59CA1A8F4515DB9F0B60B0B659B07E39B2191192F3056C6BA
5E0F46259AE1D3C14982DE02CB8BED74BEE8EC58067BB13C50DF68063476B26C
E010146BBEAF8161227A603FD62AE3F1F3BD77CE24C4FE6D5F0A5C071787484D
A3477FDD764686C774C5253F406C0BB1B0D4419CFD578EBD6A396ABA83AAF603
1E23854AE96CC30FE837C4998D3E0C667833F1EBC68EDC14884F96B92EF6654A
B57831BB4DF226EA693F83F26E2B6CE07A3D49DA0E7B0328D29C0AC22E9CE6ED
989099143E7D64ED97C8AFEF4854F4669DA34BBF27C0083AC430C4DEB8DAD3AF
D2A938CB5BEE556BC9CB76F06A08B875251EA8514AA20630C169AD15C9E0293D
DA2E3133D606DC9E56CE8FDD78D3223C156267F598D03487A34D84EFE0E71F4A
5D739D5B1F38344102A795D3E7E7750297DD334A601515B8AED65C8F2F545463
97976CB713776C329235BD4352D4C405279147E620F265752E8ACEA86E0D93E1
67C6D743640E59330C8437A73B0BFD0E7226B72A9E89423C6A62C65C6B790317
59ECC47FDF59537FC5FD06EBEDF8E4F67E09311595EFA26B13200E06D992AB3A
AEFEB0133534F2CE6AC2FC10B3C6B17D27656FACE6B7E43A4759DAA1DA2DF2EC
58BC16D9E3E59ACD99A68E9167E68973A9F17DDA2D6F1397F5BA92C2ECC64855
762663F0CA08540BB9750EFF80349A6920DA236DF38A665D804B67852D9EAE0C
348BF69CE9C7412B435DC41C4EEBF34477FBBAE7801905755C98DB08E7E9CAD3
2BE3F21F3482B89DA08A4D8EAB6CBCF7859B1EF8B0176C9BECF2198409FC13FA
D7B60663F35A4E7744AFB8D956293C5BF52D4FF96481BE983F49C6602925C8C1
99DFDA3858893D9200BA80F3F4073E5C51A7CC2CAC8F5381AD770F5E35D45684
11BA6FC498D0D8018A0FA5B40127225E3C9593638FCB03EC63264EBBEE6209E0
35AEB2C5A54BD90B64A3135CB34F0B0484F0A824BA72935445D512C43CB9C51A
E4EE268AFB88AC9A336F42CBAE18F5A8CE9D64C1B7F92EEC38F4655B577F1B3F
A8AA774A4623C15580A4A0DA9485DBC60D116169FE94157F99C7D0AA33058A50
07D86A6DD7344C470EA88C4041289038933FD2A07455306D6710ED73D2353B2F
0F919695466E7D696F74FBCAA7981C594F802FE08BDC8E8BEFDD3D2BCFB1F1FD
AF0F42F9D97018A9516ACB9B9431D497B6CE04E6656B8139191DC3117CE280A7
E51E5422F868DC7B132D0AE4042FD583FD795A4C3601A6286AE3A89E95C8CF03
FD60ACCA2B82ABC62F96C2A7A646F5B8630EE22AA17687148538294D252A4F83
0BC5C044CF92C9DCF28AD56BEE726E9706AA5AD5950CBFD7A6641EB7A5167B22
BF39608E15BCC45814178F54620EC33F45045459A9A74F337D9AFF24AA3F081F
2941449A0ADE47C39DF8A6437E6C3C594D7B39BC16075157DCEE51547469F907
D583ECC16D387DEBCDFE6FD0B6A7D950FEDC413F67229718BEFF36E0DCBDCE35
8F215964D2B8A5F348B50B3ED9E7840E0D952797FB590A0AC01C2C33DD668211
FDAD4137E652162B943579CF7C247F9799FFE4D693FA342CC2E743978AC676AE
5B935637B8713DC4EB0907B1BC9F8F9A2F8E3D9871642EAAE3944AA6F1E5D915
3E81D914C9A2CABD5B034D28A2CCC4BE4557148A4862A9AB2A8294C5E4E26492
A4897D6794294EC40EC0571C42409E379BEEB994A05065F4D850D7B785982E2D
D0D45D91840568C17FD353797BB517AC348F3222CC7144ACD961F6C4F3EA8689
A4F3378F19CCF322D5BDB227D7FDB1C6F2EC39E52B219597C3F782CE6EDD4F17
16D4ECFD9C3F9F02268FBD567F42E28DA407F04CFB75050D5D72EA89FBA509A6
773A091ED3E192A87BB4EA324082DD007E76C19C42F936140C35E40E0384B541
B6F49E2EE152E8A62D63BD393D7AC83073921F02357CB661960933BFDA9532F8
0D7F5B36101E277EDF488E44526D98056A139F7207B899C4B249D3341E6DBF69
AEABF8E3F6D8494D272AA8800F0282D0D26EA27E21A1B6174380BBED0453D79C
BB8AC7E16E4914F4C53DAF1631C3EC470C75BE3039A2EEB65C1C831740D4FBD5
25AB83006265F679F149055FFDA177ECF1FC49BE7C213B84673741F6EFA85786
0732D5D6B1181D41BE4B78F8306C972007BCF73139673E45CB569F70E3137C38
A27CCA51E550E02FB28764866F8931A7CE5A8EA483F38435ACCF98B9C883C692
BCA4714873933202C475123B7744D40D882EA08C5F8F66A0A0F3E1BD0C5895B2
95620A95485B43D6E2DDF077CB6F9F85224F534FD4B1C636A89C85D7EE0B61E2
3E2918C29A4F9D18A3F955FBDC3C4A2CB9346FA71F778F3E053123C956C4F0D0
EBB979F59D541AE2FAA7DE244050E1ACF800A2B28948EF46CF9E003368AAFF64
7F9A015B3FB0B3E320E827C88C77464EBC6EC22DE56378B56A9315B885D9725F
06D0DEDD84984CE6DB1598C4E4FC4237F32A21913C9370FD91996CB1419D7579
106205F0751F84A475DEAC2E5B35C7E094FA194C1B18AE5F68829C8372CA498C
D92E7C333753FBF072012C3C1897E7EC459B72D30EC0A00BB49589B7C85F085C
A49489B0824B1302D9F9DCCB672DDFC8B03312FB49C9A96609CE8DBF73FD505B
2F79FBE67C04D1463E2939A76453156D45F1C5C3A2B8CF1BBC1B7DA134676E24
6DD457A02E9356C3B239561CF273201045629A0A245151D91B5A564C63B347AF
79497A332E8A933403DBB52551AD283D1A108DC8299019C25E1680F80CE82AA4
86F0138E823695E00E45E02C54216DE54C71B8F3D8AB401281404A39C559F7D5
7BBCD08C43720770F70388394EE3E0056E4F4CED2A860B19993E6EEDA59F5DC7
55A6AF150BD60C9ED087B650CF24B3540786D04E7F579FC1F28FB8B7D6901DE0
0B8E3FC9EE35D790EAC553285047907779BC489D1E0338A519ACF0BAAE3AF588
128D80789063B0970D870BEF0C39739362CA35C634AC27668BA9C36B6A9CC5DA
3A5EAAD23E7EEB7EB766864CF75E481AD67477D7A6A91A5BE89F7C55768C84E7
A8737315BA7AA3F9503C2047CF1C7E98CCCFF3E58F5933F04C1D8139A265D416
F1E16108FCE7EFAB39DA13B5C80589870CE960378A5BACA08ABC8AEA157703BF
439D8BF844133085E56D363B4E99BCB6B4612E6DC05F8CC131095EC48E731125
C9E49BBA67CFDEF1D50ACD9BCDEB1DBBCDDA6B5037F003D043E5A03194620B49
57EEED850B34D3AD72DF192686600535625662842977B5C6CE77FD6F0D03A35C
BDB1C348A75044C868780AA967575C1E247628289D99764EEC97FFE9692FA939
437A71CDE646C6B3394E4F54E6AAFF97C86E05CB1AF8ACD4D07D4066303BA376
3267D9A9F8C866BB82757F90888B2353DE376591A699E0A23BDE80315FDCDBCD
FA2CCBB93255C833FB38137B28CB375FFCDAAE46BF396AB9431A2F14D6922846
D4D98CC7B3A53A44E766C4D796BE83B8C9F71161E6FFAF32AFFE74078EFEB796
1A8D92219EABCE57474AE8AA2FA59C47BB5DC40C03D9B1B6F8AF374C0082AF8C
0930B061F057020E3E0E19615EFA4A0B2325554CDA80624B44A2ACAA7D876397
2214E3BBAFDA48703BE939B9773E56C4AE6B47A7DBD2956FCC5476EB80F39787
DF5750BC9E86E07EBDF08B65999FA15BA2F6742BDFB7461D2D57B24C3CD96D00
11EC15CD7296438D65BF67CDB594C1DE3BC9EBBA89A15CA931315FCA212AEB45
7EB5CC51C160C0E5D0C9805C4D7B189B1EB09BF10478A3BE98EDF9CFF3A56FED
EDA91D06EF407632E6A5375F8C2BF8379B5580C03EF02A92ADE420A2680359B7
2DA78008BA578552D578EB11E60638C0802BDD1D35BEC2383963CB11D46D7BBF
40F6541D882193D05A9003DC2F556D0B153E2F8F3657262D05DA1EB815A5D0D5
23DBFC80AE17D1978E29F9F94D7A059FC88B8F818D5586FD16B0BB1BF13D0FB2
4599C150D2C02A0EE5154C6FC0D1C6DFF01385693ED1F12AC036BFE2063F0280
86ADC792FA359F8971364DF542EA97B0279E1DC9FF0D9E7AC90F139BA5FFE3C2
EB3267CA0323F76F4CD5D70633DF73FF283B44F857C705F3BEEFDCDCE1D2960C
2C7128BB270ED43D0B4FB10B58D7F70EEA4BF1D69569A08A4E2D520D99DB4999
39FD20054C3BCE04922EDA41831002054B7FD16C482B103886BAC968F58ED0E5
8D2F4F752E8FCE9620310250410C5F4E617140081C97D89B208FC43C6CDB3087
38F0C476DD111BD42599AA08DAF10B97AC367C0098268A14D8A164004A24D864
4B89ECC28A2EFE112BFE18AB80278D4A2E2FC93263C5EBFEB6792793717CFD11
BEF40A746751D511080801B47C72071BD900DAB1E5C11B2BE56D775677DAEC9E
2643D253964FFEF52235AC71C518923C9AABF476D5B919B1F383E68CA020AD41
0D2E6FD88EFC13F11AD46AF275FB2B672BEDB4BBAA4B546DAE731E3B4E2EF107
0E28026B4ABD1C949BBCC092354839DCDDF61BAA6A7E9B3439823EAEFC2A65A5
8739BED2559A5058FAC837137FBC7B415B981573D84B7D281004A92AFB60014B
CDE3E6280967FAA8BC7EC2EB093A788E23FCEA7779E8CCC69AA8AF93F5ED1482
169441591E9E03E0AA899845D33180D8357583C537DC3E40276743C792B670DE
FF63C413AF1E065B461B7BBEDAE733F8333954A9C5A259D2EDA2A3B54B1B5ECF
F6A5370DFCB4A1DE8D6744517839A22F35591817A8888659C14415A1D6E3E347
BEC609DC25D14C6F237E105E0E74DA38239F385B2DA3DD31F24563B181FB8FC7
06AA157237C1BADCD74E8D9A986F6F6D885DC5C9701FFFFBBF1652CC6DADF5B7
0A56F24E4480A577FC29439329DCE385B2E6B18031978B0CC20C206FC879F341
3D79675F8EBCBFB280F13355FB395254AD4A3AB9F5C3FFF5F8A87D3A0076FFD7
7CBFC4E62417FC9628E73963DECA82A7036CB39A7C1E7BB6D80D2DA9C3B082BA
CA351197A3D0E95904D35B42105A6F3CB636CC2537FB69006816EDBE50918E76
135F350E8ECA4F5FF5D553B1B6AF0C45F9107947A75852C247C00B64CA57F6FF
D0A581D92149026220D8B53CBD74F5F27BF72588D029D2582E42713FEAA26799
1F4A6BAC95D471ACB301F37182517B1D7C05E09F4BA9110E3A2CC7C7FF3963FB
3AA2EF3B8B6581A1496FAE45D992F42A8443CD8AD076A3B255A2B7C32AE4B09D
02993DB917C4F699F21A42ACD9B22130DBC8E9C4C5E2829F477622FD7875DE87
983C91A9E69E5AE31505BE8D2AE1862F00B859723C66B097306C59FFEE55097A
55576EA3F2F8E0C0DC85C4609ABFD1BE70674F115FDDC620884D27D6601DE51D
12C7998BE6895F9BAF0BA32B736CBAC26DF20089E35012076B85582DC55FF2E0
B3FA67D79E21FDE786FAF8F6C082325609148A34F12727F276F9D61CB57F90AF
1AEADC0F88DFCD21243C058518E63CC694A94CB3E154B42DE0E900A1EA0A95FD
ED9FF8BCA9884E15ACAC8A7E4E37455A85549F7D9C28BACAA3DF617F352F74EF
A6B1C2562C93FBCE819AFA1A85198E6F9FC8F22038FFC723D1618135E210B814
9B41B1F4D0C5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC1618694531
974C61927852E3D987DC8FE2904DFC7462FA98D86B27E6192C5CFA79AF1BF7E4
31E90DEB617ED5B7DA30AA1B750AD0340DE910BDF4F844DCEF584652EDF1C79B
CBFAA9A695DB48626D01013F6E77503E5B9F029FE0B019C7207B0558CBEFB9CF
4B1A53439CC169CE2C7707C9F199C8D54B4660E8F107D191B64D5C8A73459D92
72602F1E962D41213E6B67A65F2EEF198632CC739EEB8AF0C74E4B30DE0B7589
48C8B7B4234AF9D7C88310253484D7DB6DB798BFE2C0FC0A245F0358E4003E00
0A914212BA387D89E764B94AF73074469DCACBABC2031D1E1CF627EF6131A59C
B8548D2DDD50B72F99FD64C63AD02717FDDEAB86E06EACF7F5DA3BC32030E4E2
3C5E0E7E88EE54F083421685CE1D1A785AA70597CBD2D2F885F233A0A2554972
1103667E88138D473DCBFDA8573A5A93C7129FC3118662032D05CC768DB05E7B
70CD60190D52E1A8D0C140D9870C55B799710662B4FE3DB0EBA3B883E515D1C4
E5829166B8DBBB1DD94846295338E33E4F0549473B1E0C6CFE144177013B090E
062E01E63A95E4064CD4DC5903FA1BF5CC34C891A8CB59714CF5EA532AA886EC
057F20839E4DDED60F0FB0562CA09050F2086F0B643A4E89E630F99516B2597A
01764C5B0691B761FE3254E951B3259B2EEB4FE37395F229A63119C731B3FC8D
78A9E369F922CA6454BC150C77DF43E91706ADA1B5B7C7B719C10C5A1B5B3D53
FBB32AE780CC9D48C832833999E78819CC4FEBEAA9218C150D5B4262735A8217
4CBC15D95011AD5710653B6E7D7F5EF270A816607F248C5C1D5C56035A8FF8C5
72CFA84BDF4771ABB21235F26ACF6B9807513FDE450A04896A823C3529050AA9
60B9D932833D83FCB77307497AA5676C08828D7CF593CECFD951BF6DD21C394B
AC54E37D32E33AB25D55A1BBFA3E1FF9624DFC7A913FB67F661E0251CD156190
FC3B3561C0C632FC22AE3AD612DAD9059A3D7F3BD63827E28F17D57CEDE6733B
9A89343A3AD1D072E9FB6F4FD96BE01DD08C6AE89ED11A2258BB34CDE1A6B866
79411B5E93236FBA9FE882315994E7704F256531E5C82CAECA85AD7130689091
78D9A544430CFF9BCFB9246472A47BDB5479DD3F8EF8385B45D44B09A9615DCA
767BB4E6E77831309BF5ED9D8632C4BD136C89169D45718A88BABCB6FE0AF477
22E48B590F4D9D412F7DCF5ECC8387767F6F2806FDC4B192CF6530B8FFA0CFAA
2BCB8FAA7D00F97B90CBCAEB4AB5767307DC68AF2217C2CAECE4904813B0A01D
F8F876EDCC4F384055FD37C5757267BB361D551D1B385BD6E116AB4C51D88BB4
064EAEF09A276D4689E8631AFEA190368F182E8437E6B65EF516A9AD8CA4892D
103A1F8AC88267A1B6600190E9DDC6861D89D94E697F79D6C85FD95E498FA4F4
4A0E18C361AB32971DE549FFEB8FBB595C6EE6FFA12DAA8B8E45D531472249C8
FDCE5D2CF3A342C8C3E0EC7841BB92081CC71C6BAD6E8C7A2D807CD06926013E
42471E229C589A8FC997026C3EA14F20143C90ED66A6DC574243F63B1C1767A8
66F1F9B4B27B64CB3D44108172F4B790085D9F011420EFDB33F682C3FF18E73E
7FE245DC27410CF1220E3C10E2B44C05AF6A6C7DBAACB49CBEBD3391734CDCA6
773634155264287B2BE4DACA5692DB1534BB3387633A09B4EFC4B59C3BBD5115
42EEC0E9A6CC520FF3C45B5D1F4889E4A1C039D6CB696E39A66E89087CCEF846
74972C820FACA78A9D160B531605C233BD19F3DDC54F3DA89A38A4C935C8D6DD
B7A430B694598648D332020D18F7BCC1C6BFE73FDA5978F6EAF2AA24715FF2DD
B265C44F18FAB825ECFB750F1A32DD6B38F76BBFAA9AB9E3FDBE3B65729B79B2
04E643D52B1C06099A4518FD0BC54C4AF9019388BFCBF906BBF51728AE672449
25E83405FFF0D9EFC6E9298FF102B2893E7233593BFD738991C6FAB40B888C11
F4DC6A1EE18BFA33487AB2030E6F7A78D416D0AA3BEF0B0E3B765AA2F8BC7C49
48BE3CE1374DCDB5F59CB9C5F03D484267135B416FA205E241769A5E01131ED7
1705E2B161F7D660A3E4FC567A4731320CD27D3F9766CA4D62F52C523451A34D
5BCB6E46D845DDB9A3555ED375C1A5C8A5C5B1C20B74538540015D32C54A8EFD
16B477027B98860F148EE8ECCE37D413808381A6F2EF86E2824686D085BBED34
5F7E6EB57D050EF33E98E66BA3E83FC00043F27F1E73B67016A5054F7E57B843
A90C34D2B74537CAEBDF52C1C7FAA5117B56C87F9685ED49D86A5FBAF3E41B0F
3C4A5DD8B590DD235A5E32DA7BA7C540A68AF1A0B3BE75E98F6E712917BE7D4D
CC8E5F7C52AA8B092F03A7F6F958B74F4C184A7E64C964559856F03B8EF85867
862B8FFA7167A39E37833AFDB4BBADD7AFFF0D1623C49F3A52C4EDA18B7B6BE5
C494D3BCF0582B61029C9FB50CE54BE9BAD9B7508388DD936BB421867AE5AF3F
3B38BCAB834C9E0D06A6FB148FBFBFD8AA5752C845DEDC25045FFDC7FD0F0682
9558B22E9DBFF1CF4487E0A932F474ED91EFDF386E7DB94A0BA1123723667CAA
346973A0F5066F1FE1971379E49EBCC944634407025ADD94489BCBE0D1B74F8D
5C7EEDB6F83E59EC7A1AF42EE975797830468685029B20212BD221119B88B06E
588651018ED23D87BEEA079AB6118B9F770044636CABA978D374F0F1F9DD6257
49018A1EC116E0AD7561DACDDA40DD90E84A00E949B092FD773489F35CC2A6D3
8F2AA55F8547B590504B14064D160D67634E3B43200DF0C30A10765C1EA01E04
FE5478306D34D73715D7B5C66E6C13CF1791584B5223EED0991381BBF102A5FF
E96F8C6321EBF1CF4A0F8714D44724C9167C7F90E2CA613B420745E44E26D841
B7D86CD7532F7F770E92D09FC13A6048EE3B6120F9A48417BB1D0B81B6B95A0C
D3629A3F43E2D039F947B6C7D0844B08B0F3911541ACAF02B787E2F20C9C8D7A
6DC7DC8AB0D3C557685F5F2D3A9E30EDF258A4E5F19DEAEFF972EC51DF587669
9CBF0FC55AD1A79F858AE25A7B7D4DED551FE7A7451871C92C16A6D52C69496B
7CECF16B8CB91D0C994A686E5E182D930A2DC3691654340BE93B8E830DD059DF
7B4F90B6F9F596730F579E3A20E93A82997319E5509A60190E6C42C719470237
2E00E3ED7565083022A0F831125BD6A8BE42E2D0F3C4C6DDD3D8FD7F57043B19
B699E7E13EE63F72F352C961B04DBF4C5A7425B2C385145A11BA48C639025869
C4554CB795AF27A0848450C2E85B2048A8B84FA7AA5F4566CF88BC8BDEF8266E
A05A836E8911A13A9B6E7A0F6E54EEF9B38BD73121547AA7528316AEEB13219D
A6C56D6DE146A1AF844B267B7610A6D157EA3ADA7CF63EAE1CDEBEDBE34687DB
F7EC1ACECFF6C2490C6C463524FCFB9E4A5545FFEB9BE81630C673E4900ACD62
8933083F0AF06A07B39F8C8409CD1231C1AA22459EAB183A52F33D75BE549E5D
0558E8C4192A56C55C5BED047D4387C6E8FACDF70F4ECA4EC27770554DB296C7
9D660487525ED8D83655BE5D1F91FFBA4AA3EEE789F45AEB6483FF259E4824C0
3E2B60F67389EA6042687362FC574EB79BE4129A42C9C719887D62DF8EDCC6B7
AB68072231DF40DD3C1FA731E3F8AE2E624ADD5886996079341CB46AC8CCA89F
ED056BE9B0C4964AE88138CB39E3ED5CD771D0452943086457A0A9E830C06584
85CA6B9ED532709F7A5DC180608370FEA2F20521FBF91652D6695A099DC21D97
4400A8C21B7F5276925F997FC3481FF90D8B1EF78FB5AB4DC3CF3DE605BCDEB0
1AE01460A7938E3F656986B6381AB5CB9B495E4D94A6C7422C7A998B003D7731
B744EEB90EE8AC8AC3BCD5A7A2FCB9DEBB175953DFC8BE68B8FBF39A173FE50F
F4AEA9840AA9637C90DBED77EE14D3DEC82A1E46EF79FDC5CF1DF72D2275F385
7BFBB4FC95BDDA13779E0BD78A64FFD0D3CB917D952EF221D5DB5397BABFC5FA
D73A5F027C7C522DB185EAA176025BA94736E329E3B91EFC010FC099633E003B
09BB6C65EA0F8B2A7D997EFF71C0B00B95E9736DC1D00FDCFE73F47FB4D8D903
4DC1966A618AAC2A1C6CC7D2EAA301EFECFAD02C9022F72EA8BC2524FEA70E0D
F9012FACD981F955860B87896A8C0CD13DB53B2D19B35AE5E0F7CE45CBEF5D29
9477CB519257E2394BE347D5CADF769F3474F92DCD62034C5D6F1B0589098D51
1629C3956DCF2BCCCD219522E5A5F6736E1FEF95ADBBE87B29B3D6C4361DB05F
ED518F62D403902535D2C23C89858AFB926C1479B12E9B0EEC2A58A062AA5914
C582E0A0D4AAB8FCFA02225C20DBA1B93527F627AC79FC02F597C29F336F1847
64C6878CB7D4682CA6F3157CFF02660A40B416F0A1A4A42CBD7A5B1BF82ED643
D111A93E9A2F8772DE4027F4D77209EEF05456A370CC5001DFE8FDE4B7D29B3E
1ACDAFB833ED2E5B039EFC02996FD9F97B621F174AB176D508B97C48857692B2
1D5348E3F6FBFAF7313B1FA589C0DD6CACC00683C51441A4F2D840D0F744DECE
163E89A8F7728F68A9542CDA29AA7C0FE58EA7CDCFEDDBCA0AC8FB5A2E119D9C
FADA6E499F3D48E6074EDD0097FC4486D6394C6B8AE04FD06328B9E9D7D2AA75
21C65196A5B904C68928E1A67EE448881F5128043F0D9188350856B1FF377953
B46B9DC8744E250A9918488C65426DC0AFA391C3041534238AFEBBFF1216CF4C
9108462EC801166F538AB48C7CF874F792F72B7081B71C82293B2F20F8BA4634
4DD6C54DF0D0AD3EBF0E645D2E6488F4F6C71C7241CA2A7C72EC19B053DEC81A
3B4BDF044925AB86E28F8B0B5E4E1FC4C00D212D22E0146EDF01B6AEE8003CC8
74140DE04E73B4920A4D7BEDC5A8A5FC15FC69C3E845C74C51CDAB9DF7E408B2
9A89C87851535DF7DE285B6F583FE3EFC871F964007F876C7BBC8C48F3EA9A60
48CF6FF91897F2C9FF6462B6829C53F915FB9D71BA9C740631E360AA6DBA1E92
25D9707ACB8D102E5B84BAE8C5736FAD262C8A49FC53A9668BF2B19CB5450392
6FFEF2622CADBC1D85CB4D799E07C87CFB6B58E4B06499ED1208115DD2E0447E
1337015129B0668C66BF15174C8C7D5604DED821AE4C3F2E7FF6D2C0EFACAE5C
2230897C78126F3389DF9C6BA60552DBD6A302E670BC9F35823C1251B8EB2C2D
0F9B83E4F8D4B6C86024CAFEB621ACECFC8564C93CB2F610933B427F900F7C81
96129511F5420AB883F053CDA2C94DF1B23D6ACFB10B6F934E2807DA26F979E9
C9E48BFA8ADD6D1CE5B68B910874B868ED245858D3F0FB8BBC7AC106884400F0
759A0AD4465E2180A40A1C230F6CCF6A1B1CB756BF746757B9411E834BFF5729
557486A3C54532B07F88F5301D50F537D8A9958423C1F3426A431EC1B02BF092
A9101B9377C16AEBD6ACDAC5753367BFC0BBF100A2A96333CDBFFE8F2E131EC9
B9463386114F65046AF1FCEB0107BBA3B6FDFD750F5071C5BCB0473B13E245A7
EE829392C704A6FCE0D197031C6EC6AC10CF9A03580578C39A939E63D1FA9ABF
FFD36151E9CB3C081905562DF7EF0D48D0EAB20F41447F03E5E1628DCF5C0953
59A959414E3FDC68CFCFF3CC0B05224204FA756DEAC3F61C9DE965BE391CA70E
C45EF090159041C4F9EB1E73EC505AEEE31DD069AA8391D849C048DDF516C7B1
00648DA1972FD208B9288D2617EAE4CFE318E31CF1AF592ECE1B24F6B51B9C1D
E550D10B975063CBC211926778FF3D01246D75F5376C47340AF84225D9DF1C20
E2C445CC25F858E34B6DE930DA1278465F6457BA88DD0A31114450A1CF3163DD
B4C81BE1C0ED48EBBB690FA4C4992B6365E1A4F89A3C300472182205B20CA12E
01C3DCEEA8EB79752155C55BEAF986E4AC655E54F15BAF12453BEBB15E8EF7DE
08855D7857DD97118226376C6698E19F54748F936B03456F2CF71E08DF604B19
84ECB3204D7EE9CAF8556E4B352DCA17BD2F5FFBDE5F5B71375515AC21C40953
3687898840D1AF7BA4A2740D72D3A40A3C6855A94CC3A13925639BEF4B041A45
863D092B25F1FC5BC6B8F48CD16141D85AD57378DDAC11BC85B9F5C5D0AA1E3F
91ED48A44245765B4D51041CB70D4279C50B283CA8612044F695BF96D02FB419
CDEAA892B1515B4F6A312723407A5E2543EEE7D14825A25AAF5C7A8118058E35
F1210FF0D9220778C057B697F82B66A40C5371C0715618B3E6797606BCF39022
D7A1BF081F375C2C3418205782F9EEC0B2DDF7CEDBCC761AE5A04217C12E30AB
90740F0AB39B89474A9309FD374578FC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 41 /arrowdblright put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AE6ADA0192657E8078A1D27420093FEBA111333314658021B90DA4E7A8D4B829
F1795501020D5FF0AD25584C1D45486D3615B142B502A39D0AA7082BCD73762E
E20D81B7386AF0520A21AFDE0925BFC7FA81906EBA33E404F612DCBE7C5D7FFD
A8B85762C437F12A7C1C22405DD2A5F641A073A797A29CABF4417D8182718739
0E0C5BD332D09D213872B8C230C6B54DDFA55889D98CE965B92AC7978F2A4E73
A6407AEDAEE4C553E03A17C8F94A7AC54C8E4C2C1DFF252BC9EE66FC7A91ECEC
0F2D1B869823B2A39669D9BD053FE02B9BF9F9333CB7D162C9C88EB985F36F5B
FF3F886D6FD836E3A55F8E7F63EEC4840719DEB1430EA3734BE88CF5E37AE6BE
4E7EFEB9EFC1E17BEF2C7958181BFC14573A7D7A788A0DE7FC23080BDE46F42B
9EDF626A413589EAC7FA79F4CE667E20419A869D78692BFDCFFD4A94
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 23867906 17900936 1000 600 600
(/home/fenarius/Travail/Cours/NSITerminale/docs/images/C5/modelisation-POO.dvi)
@start /Fa 169[27 1[24 7[22 2[11 3[27 3[27 65[{
 TeXBase1Encoding ReEncodeFont }6 39.8505 /NimbusSanL-Regu
rf /Fb 22[28 111[25 5[25 17 2[28 28 1[11 2[11 3[28 28
25 1[28 18[36 1[28 5[30 4[33 7[28 28 5[28 28 28 14 14
17 3[17 17 40[{ TeXBase1Encoding ReEncodeFont }26 49.8132
/NimbusSanL-Regu rf /Fc 22[42 8[42 102[37 37 2[42 21
37 25 42 42 42 42 62 17 1[17 17 42 42 21 42 42 37 42
42 14[54 2[58 11[54 12[42 7[21 1[21 2[25 25 17 39[{
 TeXBase1Encoding ReEncodeFont }33 74.7198 /NimbusSanL-Regu
rf /Fd 138[51 25 45 30 2[51 51 1[20 6[51 1[45 1[51 20[51
5[56 2[66 21[30 45[{ TeXBase1Encoding ReEncodeFont }14
90.9091 /NimbusSanL-Regu rf /Fe 22[51 115[56 30 51 35
1[56 56 2[25 2[25 56 2[51 56 51 56 51 19[76 11[66 65[{
 TeXBase1Encoding ReEncodeFont }17 90.9091 /NimbusSanL-Bold
rf /Ff 22[37 116[18 33 3[37 37 1[15 2[15 4[37 33 1[37
19[55 3[18 73[{ TeXBase1Encoding ReEncodeFont }12 66.4176
/NimbusSanL-Regu rf /Fg 214[207 41[{}1 206.559 /CMSY10
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -517 -608 a
SDict begin H.S end
 -517 -608
a -517 -608 a
SDict begin H.R end
 -517 -608 a -517 -608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation1) cvn /DEST pdfmark
end
 -517 -608 a -517
-608 a
SDict begin H.S end
 -517 -608 a -517 -608 a
SDict begin H.R end
 -517 -608 a -517 -608
a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -517 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1 TeXcolorgray -600 1668 3024 2268 v 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 2424 1668
a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 1358 1554 a

 1358 1554 a 1358
1554 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf2

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf1

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc



1358 1566 a
SDict begin H.S end
 1358 1566 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1407 1504 a
SDict begin H.R end
 1407 1504 a 1407 1566 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1407
1566 a 1407 1566 a
SDict begin H.S end
 1407 1566 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1474 1504 a
SDict begin H.R end
 1474 1504 a 1474
1566 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoToPage>>/Subtype /Link H.B /ANN pdfmark end
 1474 1566 a 1474 1566 a
SDict begin H.S end
 1474 1566 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1524 1504 a
SDict begin H.R end
 1524
1504 a 1524 1566 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1524 1566 a 1533 1554 a

 1533 1554
a 1533 1554 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf4

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf3

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1533 1566 a
SDict begin H.S end
 1533 1566 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1574 1504 a
SDict begin H.R end
 1574 1504 a 1574
1566 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1574 1566 a 1574 1566 a
SDict begin H.S end
 1574 1566 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1616 1504 a
SDict begin H.R end
 1616
1504 a 1616 1566 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1616 1566 a 1616 1566 a
SDict begin H.S end
 1616 1566
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1657 1504 a
SDict begin H.R end
 1657 1504 a 1657 1566 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1657 1566 a 1657
1566 a
SDict begin H.S end
 1657 1566 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1699 1504 a
SDict begin H.R end
 1699 1504 a 1699 1566 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1699
1566 a 1708 1554 a

 1708 1554 a 1708 1554 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf6

 restore
 0.84 0.84 0.94
TeXcolorrgb
 save

 pgf5

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1708 1566 a
SDict begin H.S end
 1708
1566 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1750 1504 a
SDict begin H.R end
 1750 1504 a 1750 1566 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1750 1566 a 1750
1566 a
SDict begin H.S end
 1750 1566 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1791 1504 a
SDict begin H.R end
 1791 1504 a 1791 1566 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1791
1566 a 1791 1566 a
SDict begin H.S end
 1791 1566 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1833 1504 a
SDict begin H.R end
 1833 1504 a 1833
1566 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1833 1566 a 1833 1566 a
SDict begin H.S end
 1833 1566 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1874 1504 a
SDict begin H.R end
 1874
1504 a 1874 1566 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1874 1566 a 1883 1554 a

 1883 1554
a 1883 1554 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf8

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf7

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1883 1566 a
SDict begin H.S end
 1883 1566 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1925 1504 a
SDict begin H.R end
 1925 1504 a 1925
1566 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1925 1566 a 1925 1566 a
SDict begin H.S end
 1925 1566 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1966 1504 a
SDict begin H.R end
 1966
1504 a 1966 1566 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1966 1566 a 1966 1566 a
SDict begin H.S end
 1966 1566
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2008 1504 a
SDict begin H.R end
 2008 1504 a 2008 1566 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2008 1566 a 2008
1566 a
SDict begin H.S end
 2008 1566 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2049 1504 a
SDict begin H.R end
 2049 1504 a 2049 1566 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2049
1566 a 2059 1554 a

 2059 1554 a 2059 1554 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf11

 restore

 newpath

 restore

 pgfc


 2059 1566
a
SDict begin H.S end
 2059 1566 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2133 1504 a
SDict begin H.R end
 2133 1504 a 2133 1566 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2133
1566 a 2133 1566 a
SDict begin H.S end
 2133 1566 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2225 1504 a
SDict begin H.R end
 2225 1504 a 2225
1566 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2225 1566 a 2234 1554 a

 2234 1554 a 2234 1554
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf12

 restore

 newpath

 restore

 pgfc


 2234 1566 a
SDict begin H.S end
 2234 1566 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2292 1504 a
SDict begin H.R end
 2292 1504 a 2292
1566 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoBack>>/Subtype /Link H.B /ANN pdfmark end
 2292 1566 a 2292 1566 a
SDict begin H.S end
 2292 1566 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2342 1504 a
SDict begin H.R end
 2342
1504 a 2342 1566 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/Find>>/Subtype /Link H.B /ANN pdfmark end
 2342 1566 a 2342 1566 a
SDict begin H.S end
 2342 1566
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2400 1504 a
SDict begin H.R end
 2400 1504 a 2400 1566 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoForward>>/Subtype /Link H.B /ANN pdfmark end
 2400 1566 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray Black 0
TeXcolorgray -509 -517 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -509 -517 a -509 -517 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -509
-517 a -509 -517 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -509 -517 a -509 -517 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -509 -517
a -509 -517 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -509 -517 a -509 -517 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -509 -517 a -509
-517 a
SDict begin H.S end
 -509 -517 a -509 -517 a
SDict begin 13.6 H.A end
 -509 -517 a -509 -517
a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -509 -517 a -509 -517 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with Beamer class)/Author (F. Nativel)/Keywords () /DOCINFO
pdfmark end
 -509 -517 a -509 -517 a
SDict begin [ {Catalog} <</PageLabels<</Nums[0<</P(1)>>]>>>> /PUT pdfmark
end
 -509
-517 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -430 568 a @beginspecial 0 @llx 0 @lly 190
@urx 190 @ury 570 @rwi @setspecial
%%BeginDocument: des.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (des.eps)
%%CreationDate: (2020-10-06T19:10:17+04:00)
%%BoundingBox: -0 -0 190 190
%%HiResBoundingBox: 0 0 190 190
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 190 190
userdict begin
DisplayImage
0 0
190 190
12
190 190
0
0
E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E1EBF5E1EBF5E2ECF6E2ECF6E2ECF6
E2ECF6E1EBF5E1EBF5E2ECF6E2ECF6E2ECF6E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E2ECF6
E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E2ECF6E3EDF7
E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6
E3EBF6E3EBF6E2EAF5E2EAF5E3EBF6E3EBF6E3EBF6E2EAF5E2EAF5E2EAF5E3EBF6E3EBF6E3EBF6
E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5
E2EAF7E2EAF7E1E9F6E1E9F6E1E9F6E1E9F6E1E9F6E1E9F6E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6
E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6DFE8F7DFE8F7
DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6
DEE7F6DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DEE7F6DDE6F5DDE6F5DDE6F5
DEE7F6DEE7F6DEE7F6DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DEE7F8
DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8DDE6F7DDE6F7DDE6F7DDE6F7DCE5F6DCE5F6
DDE6F7DDE6F7DDE6F7DCE5F6DBE4F5DCE5F6DCE5F6DDE6F7E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6
E2ECF6E2ECF6E2ECF6E1EBF5E1EBF5E2ECF6E2ECF6E2ECF6E2ECF6E1EBF5E1EBF5E1EBF5E1EBF5
E2ECF6E2ECF6E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7
E3EDF7E2ECF6E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E2ECF6E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7
E2ECF6E2ECF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6
E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6
E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E2EAF7E2EAF7E1E9F6E1E9F6E1E9F6
E1E9F6E1E9F6E1E9F6E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6
E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7
DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DFE8F7DFE8F7DEE7F6DEE7F6
DEE7F6DEE7F6DDE6F5DDE6F5DEE7F6DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DDE6F5DEE7F6
DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8
DEE7F8DEE7F8DDE6F7DDE6F7DDE6F7DDE6F7DCE5F6DCE5F6DDE6F7DDE6F7DDE6F7DCE5F6DBE4F5
DCE5F6DCE5F6DDE6F7E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E1EBF5E1EBF5
E2ECF6E2ECF6E2ECF6E2ECF6E1EBF5E1EBF5E1EBF5E2ECF6E2ECF6E3EDF7E3EDF7E3EDF7E3EDF7
E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7
E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7
E2ECF6E2ECF6E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E3EBF6E3EBF6E3EBF6
E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E3EBF6
E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E3EBF6E3EBF6E3EBF6E2EAF5E2EAF5
E2EAF5E2EAF5E2EAF5E2EAF7E1E9F6E1E9F6E1E9F6E1E9F6E1E9F6E1E9F6E1E9F6E0EAF6E0EAF6
E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5
DFE9F5DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7
DFE8F7DFE8F7DFE8F7DEE7F6DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DEE7F6
DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5
DDE6F5DDE6F5DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8DDE6F7DDE6F7DDE6F7
DDE6F7DCE5F6DCE5F6DDE6F7DDE6F7DDE6F7DCE5F6DBE4F5DCE5F6DCE5F6DDE6F7E2ECF6E2ECF6
E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E1EBF5E1EBF5E2ECF6E2ECF6E2ECF6E2ECF6E1EBF5
E1EBF5E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6E1EBF5E1EBF5E3EDF7E3EDF7E3EDF7E3EDF7
E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7
E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6
E4ECF7E3EBF6E2EAF5E2EAF5E2EAF5E2EAF5E3EBF6E3EBF6E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5
E2EAF5E2EAF5E2EAF5E3EBF6E3EBF6E3EBF6E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E1E9F6E1E9F6
E1E9F6E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5
DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE8F7DFE8F7DFE8F7DFE8F7
DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7
DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6
DEE7F6DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DEE7F8DEE7F8DEE7F8
DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8DDE6F7DDE6F7DDE6F7DDE6F7DCE5F6DCE5F6DDE6F7DDE6F7
DDE6F7DCE5F6DBE4F5DBE4F5DCE5F6DDE6F7E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6
E2ECF6E1EBF5E1EBF5E2ECF6E2ECF6E2ECF6E2ECF6E1EBF5E1EBF5E3EDF7E3EDF7E3EDF7E3EDF7
E3EDF7E2ECF6E1EBF5E1EBF5E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7
E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7
E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6
E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E4ECF7E3EBF6E3EBF6E2EAF5E2EAF5
E2EAF5E3EBF6E3EBF6E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E3EBF6E2EAF5
E2EAF5E2EAF5E2EAF5E1E9F4E1E9F4E1E9F4E0E7F7E0E7F7E0E7F7E0E7F7DFE6F6DFE6F6E0E7F7
E0E7F7DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DFE9F5DFE9F5DFE9F5DFE9F5
DFE9F5DFE9F5DFE9F5DFE9F5DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7
DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DDE6F5DEE7F6DEE7F6DEE7F6
DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8
DDE6F7DDE6F7DDE6F7DDE6F7DCE5F6DCE5F6DDE6F7DDE6F7DDE6F7DCE5F6DBE4F5DBE4F5DCE5F6
DCE5F6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E1EBF5E1EBF5E2ECF6E2ECF6
E2ECF6E2ECF6E1EBF5E1EBF5E1EBF5E2ECF6E2ECF6E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7
E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6
E3EBF6E3EBF6E3EBF6E4ECF7E3EBF6E3EBF6E2EAF5E2EAF5E2EAF5E3EBF6E3EBF6E2EAF5E2EAF5
E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E1E9F4E1E9F4E1E9F4E0E8F3
E0E8F3DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE8F7
DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7E0E9F8DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7
DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5
DDE6F5DEE7F6DEE7F6DEE7F6DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5
DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8DDE6F7DDE6F7DDE6F7DDE6F7DCE5F6
DCE5F6DDE6F7DDE6F7DDE6F7DCE5F6DBE4F5DBE4F5DCE5F6DCE5F6E2ECF6E2ECF6E2ECF6E2ECF6
E2ECF6E2ECF6E2ECF6E2ECF6E1EBF5E1EBF5E2ECF6E2ECF6E2ECF6E2ECF6E1EBF5E1EBF5E1EBF5
E1EBF5E2ECF6E2ECF6E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7
E3EDF7E2ECF6E2ECF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6
E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5
E2EAF5E2EAF5E1E9F4E1E9F4E1E9F4E0E8F3E0E8F3E0E8F3DFE7F2DEE5F5DEE5F5DEE5F5DDE4F4
DDE4F4DDE4F4DEE5F5DEE5F5DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DEE8F4
DEE8F4DEE8F4DEE8F4DEE8F4DEE8F4DEE8F4DEE8F4DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7
DFE8F7DFE8F7E0E9F8E0E9F8E0E9F8DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7
DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DDE6F5
DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8
DEE7F8DEE7F8DEE7F8DDE6F7DDE6F7DDE6F7DDE6F7DCE5F6DCE5F6DDE6F7DDE6F7DDE6F7DCE5F6
DBE4F5DBE4F5DCE5F6DCE5F6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E1EBF5
E1EBF5E2ECF6E2ECF6E2ECF6E2ECF6E1EBF5E1EBF5E2ECF6E2ECF6E2ECF6E3EDF7E3EDF7E3EDF7
E3EDF7E2ECF6E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8
E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E3EBF6E3EBF6
E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6
E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E2EAF5E1E9F4E1E9F4E1E9F4E0E8F3
E0E8F3DFE7F2DFE7F2DFE7F2DEE5F5DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE6F5
DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DEE8F4DEE8F4DEE8F4DEE8F4DEE8F4DEE8F4
DEE8F4DEE8F4DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7E0E9F8E0E9F8E0E9F8
DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7
DEE7F6DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5
DDE6F5DDE6F5DDE6F5DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8DDE6F7DDE6F7
DDE6F7DDE6F7DCE5F6DCE5F6DDE6F7DDE6F7DDE6F7DCE5F6DBE4F5DBE4F5DCE5F6DCE5F6E1EBF5
E1EBF5E1EBF5E1EBF5E1EBF5E1EBF5E1EBF5E1EBF5E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6
E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4ECF7E4ECF7
E4ECF7E4ECF7E4ECF7E4ECF7E4ECF7E4ECF7E2EBF2E6EFF4E6EFF8E6E9F8EDE9FFEEE5FFE6E1F7
EAE9F9E1EEF6DFE9F2DDEAF3DEEFF7DFF1FBDDEEF8E0EAF6E4E7F6E2EBFCE2E8F8E7E6F8E8EAF9
E4ECF9DCEAF5D9EAF4DAECF6DAEBFBE8E7F9E5EBF9DCE8F4E7E9F8E3E9F5E7F0F5F7ECF4EBEEF7
EFEBFAEBE8FDDADFF3DBE1F1E6E3F4DDDFEED3E5EFE0DFF1DBE2F2D7E3F3D6DFEEE0E1F3E1E2F4
D7E3F1D5EDF7DDE4F6DDE6F7DDE6F7DDE6F7DDE6F7DBE7F7DBE7F7DCE8F8DFE8F7DFE8F7DFE8F7
DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7E0E9F8E0E9F8E0E9F8
DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6
DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F7DDE6F7DDE6F7DDE6F7DDE6F7DDE6F7DDE6F7
DDE6F7DCE5F6DCE5F6DCE5F6DCE5F6DCE5F6DBE4F5E1EBF5E1EBF5E1EBF5E1EBF5E1EBF5E1EBF5
E1EBF5E1EBF5E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E3EDF7E3EDF7E3EDF7
E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4ECF7E4ECF7E4ECF7E4ECF7E4ECF7E4ECF7E4ECF7
E4ECF7EDEFFCE1E8F2DCE9EFDCEAF3DEECF7E2EEFCE3F0F9E4F3F8DCE9F9E8EFFFEFECFFE8E4F3
E3E1EEE4E8F1E4EBF1E2E9EFE3EAE3E4EAE8E2EAEDDEE8F1DBE8F1DCE9F2DFE8EFE1E6ECECE0F4
F2F0FDE2E1E9E2DFE8D9CDD9CBAEC0BD8DA3B57F96C2808AAF868EC3ACB4E4D3DDE2DBE3DEE7EE
D5E3EED2D7EAD7E0EFD3DCEBD5DEEDDAE8F5D4E2EFD8E6F3E5EDFAD7DBE7DCE3F5DCE5F6DCE5F6
DDE6F7DDE6F7DBE7F7DCE8F8DCE8F8DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7
DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7E0E9F8E0E9F8E0E9F8DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7
DFE8F7DEE7F6DEE7F6DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DDE6F7DDE6F7DDE6F7DDE6F7DDE6F7DDE6F7DDE6F7DDE6F7DCE5F6DCE5F6DCE5F6DCE5F6
DCE5F6DCE5F6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6
E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4ECF7E4ECF7E4ECF7E4ECF7E4ECF7E4ECF7E4ECF7E4ECF7E6E9FCE1E9F6E3F0F6E1F3F7
DBECF3DEEDF4E1EFF2DDE8EAE1E8F8E4E6F5E9E6F7EAE9F7E8ECF7E3EDF6E1EEF6E2EFF5DFE6F9
DDE9F7DDECF1DFEFEEE9F3F4F3F0F7F3E0F3EDCFEBD5B5C2AC9396AF7B7DB66262B05751BD514E
C95150BE5E52CA474DC25155B65159B25560B9717CD3AFB9DFD4E2EDEAFFCDE1EAD7E0EFDCDFF2
D8DFF1D4E6F4D1E3EFD6DEEBE9E7F5DBE2F4DBE4F5DCE5F6DCE5F6DCE5F6DBE7F7DCE8F8DCE8F8
DEE7F6DEE7F6DEE7F6DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7
E0E9F8E0E9F8E0E9F8DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6DFE8F7DFE8F7
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F7DDE6F7DDE6F7DDE6F7
DDE6F7DDE6F7DDE6F7DDE6F7DCE5F6DCE5F6DCE5F6DCE5F6DCE5F6DCE5F6E2ECF6E2ECF6E2ECF6
E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6
E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7
E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4ECF7E4ECF7E4ECF7E4ECF7
E4ECF7E4ECF7E4ECF7E4ECF7DBEBFAE4F0FCE8EFF7E7EAF3E5E7F3EAE9F7F1EFFCECEAF5ECEFF8
E3EAF2DDEAF0DCF1F6D9F2F7D7EBF4DFE6F8EBE9FEF4EBFEF3E7FBECDAF2DEC0D8CFA0B4BD7F8C
B06569A65753BB4E54B85154B14140BC4644BC4F48B74745C14C54AF444EB8513EC65245C54C44
C55551BE5856BB6069B27282C9A7B8D4DBE5D8D6E4E3DBF0DBD7EED5DAEED7E4F5D3E1EEDAE4F0
DAE1F3DAE3F4DCE5F6DCE5F6DCE5F6DBE7F7DBE7F7DCE8F8DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7E0E9F8E0E9F8E0E9F8DFE8F7DFE8F7
DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DDE6F7DDE6F7DDE6F7DDE6F7DCE5F6DCE5F6DCE5F6DCE5F6DCE5F6
DCE5F6DCE5F6DCE5F6DCE5F6DCE5F6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6
E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7
E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7
E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4ECF7E4ECF7E4ECF7E4ECF7E4ECF7E4ECF7E4ECF7E4ECF7D8EFF7
E5F2FBE5E5F1EBE5F3EEEBFEE5E8FBE2E9F9E2EAF7E2ECF6E4EDF6E8ECF5ECEFF4F4EFF5F5E4EE
EDC8D9E0AFC4CC8BA1B77380A95A5DB1534BC35449CA544AC6514AC04F49A9464BC9545DBE454A
BC4740C1493BB84936AF4538C04849BE4F3EBB4335BD4537BE503FBA5040C75A55C15E63B86871
C08B9BE8C3D4DECDDFD9D6EBD9DBF2CFD4EAD6E1F3CFDFEFD9E0F2DAE3F4DBE4F5DCE5F6DCE5F6
DAE6F6DAE6F6DBE7F7DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7
DFE8F7DFE8F7DFE8F7E0E9F8E0E9F8E0E9F8DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7
DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F7
DDE6F7DDE6F7DCE5F6DCE5F6DCE5F6DCE5F6DCE5F6DCE5F6DCE5F6DCE5F6DCE5F6DCE5F6DCE5F6
E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6
E2ECF6E2ECF6E2ECF6E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4ECF7
E4ECF7E4ECF7E4ECF7E4ECF7E4ECF7E4ECF7E4ECF7DBEEF4E6EFF8E4E4F0EAECFBE6F2FFD7EAF8
D9F0F6DFF4F7F0EEFCEEDCECE9BFCDDB9CA7CA7B81BD6466BE5C5DC35B5CBB5143BC5147C55450
CE5254CB484DBF4341BA5043BD624DC58E65A6563BAE5D48A95B44A54A35C07862F5C7B7915E5B
AB493CA74A3BB24B3CC4463AD44E42CE5447C14E47C34F4FC55563AE616BD9B6BDDAD4E0C9CADC
D9DAEFD4D6EDD5DCEFD7DEF0D7E0F1D9E2F3DBE4F5DBE4F5D9E5F5D9E5F5DAE6F6DDE6F5DDE6F5
DDE6F5DEE7F6DEE7F6DEE7F6DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7E0E9F8E0E9F8
E0E9F8E0E9F8DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F7DDE6F7DDE6F7DCE5F6DCE5F6DCE5F6
DCE5F6DCE5F6DDE6F7DCE5F6DCE5F6DCE5F6DCE5F6DCE5F6E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7
E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4ECF7E4ECF7E4ECF7E4ECF7E4ECF7E4ECF7
E4ECF7E4ECF7E6EFF8E9EDF8E3E6F5E1EDFBDBEEFCE3F2F9F4F2F3E5D3D1C7868AB36268AD4448
BF4544D4504BD75347D34F40D24E3FCC4A4AC54C44C14D40C24C3EC34840C04A48C15A5DC36D70
FFDED4F1E0D8D2D4C9E0D8CBD5B1A3A07062FFE6DAEFD6D1D3BF9EF3D6B8F1B49FC75F52CB4B3E
CA4C3DCA5043D3574DC64B43BE5752A35B5EC49AA4DFCAD9D1CADCD4D5E9CCCFE2D3DAECD4DDEE
D6DFF0D8E1F2D9E2F3D8E4F4D9E5F5D9E5F5DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DFE8F7
DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7E0E9F8E0E9F8E0E9F8E0E9F8E0E9F8E0E9F8DFE8F7
DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DDE6F7DDE6F7DDE6F7DCE5F6DCE5F6DCE5F6DBE4F5DBE4F5DDE6F7DDE6F7DDE6F7
DCE5F6DCE5F6DCE5F6E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6
E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4ECF7E4ECF7E4ECF7E4ECF7E4ECF7E4ECF7E4ECF7E4ECF7E5E7F3E8EAF7E3EBF8
DFEFFEDDEBF6F5EBF3F0C2C5A75B5BBC362AC3372AC93A2ACC3E2ACD422DCA462FCB4834CC4937
D5403CCD443AC4493AC7493ACD473CCE453DC8483FC04A40B66164D7B4B0E8D0D0D3A2A6A55A5E
A24649BC7879E5DBD19D5F50A6594FB46056A85243C2614ED05F4DD56452C86550C86442CF6450
BC5252AE5865CC9CACD1C3D2B9BFCBCAD8E3D0D7E9D1DAEBD4DDEED6DFF0D8E1F2D7E3F3D8E4F4
D9E5F5DCE5F4DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7
DFE8F7E0E9F8E0E9F8E0E9F8E0E9F8E0E9F8E0E9F8DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6
DEE7F6DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F7DDE6F7DCE5F6
DCE5F6DCE5F6DCE5F6DBE4F5DBE4F5DDE6F7DDE6F7DDE6F7DCE5F6DCE5F6DCE5F6E3EDF7E3EDF7
E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E3EDF7E3EDF7E3EDF7E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8
E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8
E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8DEF0FCF1DFF5E3EDF6E3F1FAE5E7F4EAE1E4BB665FC6331F
C1301FBB3414C8391BBE2E16C63518D73F18DC4928D13A31C83A26CD402CC83D2ACB4230CA4234
C44033CA483BC54336D44242C54B48A54E47CC938AE6BEB4DDBBAFB59183DAB6A6DABDB5A85A50
D25A4AD8614BD56854C7594CD46456CF654FCB634ACC6554D7645FD35A51C96D62CBA0B3C5C0D7
BDC8B8CCC9DCD0CFE1D3D6E9D3DAEDD4DCEFD7DFF2D9E2F3D9E2F3DBE4F5DCE5F6DCE5F6DDE6F5
DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DFE8F7
DFE8F7DFE8F7E0E9F8E0E9F8E0E9F8E0E9F8DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6
DEE7F6DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DCE5F4DCE5F4DBE4F3DBE4F3DBE4F3
DCE5F6DCE5F6DCE5F6DCE5F6DCE5F6DBE4F5E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6
E2ECF6E2ECF6E2ECF6E2ECF6E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8
E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8
DFEFFCF5EAFBE3EDF6DEECF5ECECF8D6B9BBAD463FB4280FC83726D0734AD63E27CB3922C43A1D
D82E14CA401BD1371DC9341CC8331DC83521C73623C83929C93D2ECB3F32CD4336C3472BC64530
CD4640CF484EB8444FBB6C71CAA89FEBE6D3FFEAE3C68074C45945C9563BCC6046D56853DA6553
DB614AD3634BD15F47DE6457D75F51DE7E70BD8592C3ADC4BDBEB9C4C1D2C9C8D8CFD0E2D1D6E9
D3DAEDD5DDF0D7E0F1D8E1F2DAE3F4DBE4F5DCE5F6DCE5F4DCE5F4DDE6F5DEE7F6DEE7F6DEE7F6
DEE7F6DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DFE8F7DFE8F7DFE8F7E0E9F8E0E9F8E0E9F8
E0E9F8DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6DFE8F7DEE7F6DEE7F6DEE7F6
DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DDE6F5DDE6F5DDE6F5DCE5F4DCE5F4DCE5F4DBE4F3DBE4F3DCE5F6DCE5F6DCE5F6DCE5F6DCE5F6
DBE4F5E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E3EDF7E3EDF7
E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E5EDF8E5EDF8E5EDF8
E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8
E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E4F0FEE8E7F5E0EDF5E5F2FBF1ECF3
B77B7BBB3C33D45333B92C18D08A66E06152CB3F2EC43E25D9301DD03C18D63E0FD1361AC72B12
CA3018C32B14C32C17C83221C42E1FCB3828C33F28C13E2AC94539C13A36C53F40C74748C14E4B
B64B45B15C61B7564DBE4E36DF6846D96F48D17550DF7E5DE06F51D65943E16041E6654FDA6553
C5654FB3686CCCA0B7B8ABB5BDB7C5C2BECDC9C8D8CDD0E1D0D5E8D3DAECD5DEEFD6DFF0D9E2F3
DAE3F4DBE4F5DCE5F4DCE5F4DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DFE8F7DFE8F7DFE8F7DFE8F7
DFE8F7DEE7F6DFE8F7DFE8F7DFE8F7E0E9F8E0E9F8E0E9F8E0E9F8DFE8F7DFE8F7DFE8F7DFE8F7
DEE7F6DEE7F6DEE7F6DEE7F6DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5
DCE5F4DCE5F4DCE5F4DDE6F7DCE5F6DCE5F6DCE5F6DCE5F6DBE4F5E2ECF6E2ECF6E3EDF7E3EDF7
E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8
E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8
E5EDF8E5EDF8E5EDF8E0E7F7EAF4FDDDEAF2DEE8F2FAEBF0AD524FC33122EF734FBE3717D77C6A
F5B9AED3685ECF4B36D64830E33B20D54511DB3E1FD13415CD3214C82D11C42A10C42A12C0250F
C42C17CD2A1BCA2E1FD13D2FC6382AD14337CD3F31CE4233CE4734C44146C54B3CD45938DE5F34
E37446F59F6CDA8155DE704DE86752F56E4EDF5F46CB5E49B95B41C16A63DDA2B4B9A4B3B5ADB8
BCB6C2C3BFCEC8C7D7CCCFE0D0D5E8D4DBEDD5DEEFD8E1F2D9E2F3DBE4F5DCE5F4DCE5F4DCE5F4
DDE6F5DEE7F6DEE7F6DEE7F6DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7
E0E9F8E0E9F8E0E9F8E0E9F8DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6DFE8F7
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DCE5F4DDE6F7DCE5F6
DCE5F6DCE5F6DCE5F6DCE5F6E2ECF6E2ECF6E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7
E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8
E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E7EDFDDEF0F4
E2ECF5E3E9F7E9CACFB8463CD03821C1411ECA3C16D05456FCEDE8E5B0A8D96453CC5638E6412B
D54723DF4624DC4321D23919D2391ACE3418C62C10C82E14C72D13CC320CBB2500C5300FCA3419
CB331ECA3224CB372BC8382DCB3C2CDD5A3CE8693CF36D3AFC7F49FE935BF78B5AFE8058E06343
DE623CD36149BE5D4AC56A4FB45A4FCE909DAD97A4B3A8B0B8AEB7BEB6C3C2BECDC7C6D6CDD0E1
D1D8EAD4DDEED6DFF0D8E1F2DAE3F4DBE4F3DCE5F4DCE5F4DDE6F5DDE6F5DEE7F6DEE7F6DFE8F7
DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7E0E9F8E0E9F8E0E9F8E0E9F8DFE8F7
DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DDE6F7DDE6F7DDE6F7DCE5F6DCE5F6DCE5F6E2ECF6
E2ECF6E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7
E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8
E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8
E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8ECF2FFD4E9EAE3EBF6F3F0FFDCA9B0C94C3AD64624
B72B10C62C08BD3331E1C4C0F9E8DEDA8B7EC65C42D54D35DB4834DD4A29E04D2CD64322D84323
D23D1DC83112CC3516C52E0FD2240BCF2B0FCA3413C23410C03411C03413BE3211C83B1DE03F22
D53D18F36132F16029F97133FE8842E37631FE914EE67636C25A23BB5D43B75C4AA84A30B75E56
D399A7AF98A0AEA2A6B4A7AEBAAEB8BDB5C4C2BECFC8C9DBCED3E6D2D9EBD5DEEFD7E0F1D9E2F3
DBE4F3DBE4F3DCE5F4DCE5F4DDE6F5DEE7F6DEE7F6DEE7F6DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7
DFE8F7DFE8F7DFE8F7E0E9F8E0E9F8E0E9F8E0E9F8DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6
DEE7F6DEE7F6DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5
DDE6F5DDE6F7DDE6F7DDE6F7DCE5F6DCE5F6DCE5F6E2ECF6E2ECF6E3EDF7E3EDF7E3EDF7E3EDF7
E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8
E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8
E5EDF8E2E8F6E4F8F7E0E6F2EEE4FCD6929DCF5138C44117E34834CA2F13C1301FC5776AFFEEE0
ECC1B8CE7565CA563FD44632D7482ADD4C2FDC4B2ED84426D13D1FCD3818CC3516C73110BB331B
C3391DC53415C52B09DD3614DE3611D02A02D23105DC2F0DDF3210EF491FFE672EFF722AF57722
EA8422ED9F33FE9D2CF7A655FFBA97EE9682A9462FBD6768C38EA2AA9399AB9B9CB0A1A6B5A8B1
B9AEBCBEB7C7C5C4D6CACFE2CED5E7D4DDEED6DFF0D8E1F2DAE3F2DBE4F3DCE5F4DCE5F4DDE6F5
DEE7F6DEE7F6DEE7F6DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7E0E9F8E0E9F8
E0E9F8E0E9F8DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6DFE8F7DFE8F7DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DDE6F7DDE6F7DDE6F7DCE5F6
DCE5F6DCE5F6E2ECF6E2ECF6E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E5EDF8E5EDF8
E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8
E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E6EEFBDCF0EFE6ECF8F5E8FF
B16370CA4F30CA5122E03D2EC42F19C52C0DAC3A1FF8CEBEFCE7E2DC988FCE5B46CE462CD24228
D5452BDF4E33D74327D33E20D64121CF3918CF3918D9381CCA2B0DD93917D83512DA3311DB3714
DE401DD13816D23D13D6340EDF3E14ED581EF26013FF7617FD8B19F5A625F39905E3A23CCA8B5F
A0462EAB422CCB747DB17C98A68D91A79797AD9DA0B3A4ABB6AAB6BBB4C4C2C1D3C7CCDFCBD2E4
D3DCEDD5DEEFD8E1F2DAE3F2DBE4F3DCE5F4DCE5F4DCE5F4DEE7F6DEE7F6DEE7F6DFE8F7DFE8F7
DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7E0E9F8E0E9F8E0E9F8E0E9F8DFE8F7DFE8F7DFE8F7
DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5
DDE6F5DCE5F4DCE5F4DCE5F4DDE6F7DDE6F7DDE6F7DCE5F6DCE5F6DCE5F6E3EDF7E2ECF6E2ECF6
E2ECF6E3EDF7E4EEF8E3EDF7E2ECF6E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E3EDF9E3EDF7
E3EDF7E3EDF7E3EDF6E3EDF6E3EDF6E3EEF4E4ECF7E4ECF7E5EDF8E5EDF8E5EDF8E5EDF8E4ECF7
E4ECF7E5EEF7E5EDF8E5EDF8E5EDF8E5EDF8E5EDFAE5EDFAE5EDFAE4ECF7E4ECF7E4ECF7E5EDF8
E5EDF8E5EDF8E4ECF7E4ECF7E0EEF1E6EAF6E4E9FFECEBE7C35244C43E25DF5539D84E1DCE350B
C3340ACE402AD99886FFF4E7E9CDC2DD716EDE6455CE5135D94527D24823D34829DD3822D74021
B03C17AB391FB43C23B63925D03020D53B17D73F16DF3E22DE472ADE3516E63F15E33B17E23A16
E53E11EA4D06FC720FF8840DFF9A1AF4852BC84A0FBA300CB23114A94335C47E86A57D869D8883
A58F91AA9698AF9CA0B4A5AABAB0B8BCB9C4C2C4D1CBCEDDD2D5E8D5DAEDD9E0F2D9E2F3DAE3F4
DBE4F5DDE4F6DDE4F6DDE6F5DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DFE9F5DFE9F5
DFE9F5E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7
DFE8F7DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DCE5F4DCE5F4DBE4F3DBE4F3
DBE4F3DBE4F3DCE5F4DCE5F4DDE6F5E3EDF7E2ECF6E2ECF6E2ECF6E3EDF7E4EEF8E3EDF7E3EDF7
E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E5EDF8E5EDF8
E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8
E4EEF7E4EDF6E5EEF7E5EEF7E6EFF8E6EFF8E5EEF7E5EEF7E4EDF6E4ECF7E4ECF7E4ECF7E4ECF9
E4ECF9E4ECF9E4ECF9E4ECF9E4ECF7E4ECF7E4ECF7E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E0EBEF
E7E9F8EBECFFE0D2D1BB4635C3391FC73B20E85A2ADE4D21B72702D4442ACB5D4EEBE0CAFBE4DE
E1908CD65E4ECE5135DA4F38D44328D84126CA3926BB5A49DFB19AF1D6BBFAD6C6F3C4AACE8E73
B65646BF4635D14723E2431CE84121DB3D0DE13F18E94426E23D1DD8370BD94209D34C08DB5C15
DB621DBE370AB6290EB02F19B65145BC7A7EA07C809A867FA18B8DA69294AB989CAFA0A5B6ACB4
B8B5C0C0BFCDC8CBDAD0D3E6D4D9ECD8DFF1D9E2F3DAE3F4DBE4F5DDE4F6DDE4F6DDE6F5DDE6F5
DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DFE9F5DFE9F5DFE9F5E0EAF6E0EAF6E0EAF6E0EAF6
DFE9F5DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DDE6F5
DDE6F5DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DDE6F5DDE6F5DCE5F4DCE5F4DBE4F3DBE4F3DBE4F3DCE5F4DCE5F4DCE5F4DCE5F4
E3EDF7E3EDF7E2ECF6E3EDF7E3EDF7E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8
E5EDF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEFAE4EEFAE4EEFAE3EDF6E3EDF6E4EEF7E4EEF7
E4EEF7E4EEF7E3EDF6E3EDF6E4ECF9E4ECF9E4ECF9E4ECF9E4ECF9E4ECF9E4ECF9E4ECF9E4ECF7
E4ECF7E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E4EDF6E7E9F8EEE9FFD5B5B6BC412FCC3C21
BA2F12D54415E2542ECB3F1EC82E14D94833D5B096FFF7F3EAB7B4D86D5DD15B3FC44532D63D2F
CE3D28C46F5AFFE6DBFFFAF7F2F0E3EFF6EFFFF2E8F2F3E1FFF2E9D5A398CD654CE44326E14C22
DC4413D73B12DD3E20D8371BD43316D63815D53B17D03A17C63D0FB72609B42312AE2F1EC56557
AF726F9B787697837A9F8689A38D8FA89496AC9BA1B2A7AFB6B0BCBCBBC9C5C7D6CFD2E5D2D7EA
D7DEF0D8E1F2D9E2F3DBE4F5DDE4F6DDE4F6DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DFE9F5DFE9F5DFE9F5E0EAF6E0EAF6E0EAF6DFE9F5DFE9F5DFE8F7DFE8F7DFE8F7DFE8F7
DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5
DCE5F4DCE5F4DBE4F3DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7
E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EEF7E5EDF8E5EDF8E5EDF8
E5EDFAE5EDFAE5ECFCE4EBFBE2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E3EAFA
E3EAFAE3EAFAE3EBF8E4ECF9E4ECF9E4ECF9E4ECF9E4ECF7E4ECF7E5EDF8E5EDF8E5EDF8E5EDF8
E5EDF8E5EDF8E3EBF6E7EAF9EEE5F8CC9998BB3D24CF3E1FCA3F20BC2E00D1431FE2583BCA290D
DE4C27CC6956FAF1ECF2D8D7E2917EC35B40D15940D13B2DB14336E8DAC0F4F1E2DFA4A6B86C6C
C07071E0B6B8F6F9F2F6F3EAFFFCF3FBE4D4DE826DD64120EA5229D73D17D83B18D63815DD4119
E1461AE24616D23405C42F0EBB230BB42312AD3222CB7367A16A63967570977F7B9C8386A38A8D
A79194AA999FB1A4ADB4ACB7BBB9C7C6C5D5CDD0E3D1D6E9D5DCEED7E0F1D8E1F2DBE4F5DDE4F6
DDE4F6DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DFE8F7DFE8F7DFE9F5DFE9F5E0EAF6E0EAF6
E0EAF6E0EAF6DFE9F5DFE9F5DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6
DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DDE6F5DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4
DCE5F4DCE5F4DCE5F4E3EDF7E3EDF7E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7
E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E5EDF8E5EDF8E5EDF8E5EDF8
E5EDF8E5EDF8E5EDF8E5EDF8E5EEF7E5EEF7E5EDF8E5EDF8E4ECF9E4ECF9E4ECF9E4ECF9E3EAFA
E3EAFAE3EAFAE3EAFAE3EAFAE3EAFAE3EAFAE3EAFAE4EAF8E4EAF8E4EAF8E4EAF8E5EBF9E5EBF9
E5EBF9E5EBF9E4ECF7E4ECF7E4ECF7E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8DDE9F5E3EBF6F3E8F6
BD7372B83815CD3B14D04A25CF4312C93B17D44429D64623C33608C83525E8BBB8FFF8F1EAB5A5
EB8173D85B3BC53922DB928BF1FCECC29985C33B2FCF3B2DC72F22A94838D59188FFE4DBECF4E9
E3F7EEFFEFDEE98472E34E2ED83F1DDC401ADA4118DD481DDD4919E24A18D33802C82E0AC02707
B3250DB23E2FC7776C98685E947570967C7D9B8184A1888BA58F92AA979BAEA1AAB2AAB5BAB6C4
C5C4D4CCCFE2D0D5E8D4DBEDD6DFF0D8E1F2DAE3F4DDE4F6DDE4F6DDE6F5DDE6F5DDE6F5DEE7F6
DEE7F6DFE8F7DFE8F7DFE8F7DFE9F5DFE9F5E0EAF6E0EAF6E0EAF6E0EAF6DFE9F5DFE9F5DFE8F7
DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5
DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DDE6F5DDE6F5DDE6F5DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4E3EDF7E4EEF8
E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EEF7
E4EDF6E4EDF6E4ECF7E4ECF7E4ECF7E3EBF6E3EBF6E5EBF9E5EBF9E4EAF8E4EAF8E4EAF8E4EAF8
E4EAF8E4EAF8E3E9F5E3E9F5E3E9F5E4EAF6E4EAF8E4EAF8E4EAF8E4EAF8E3EBF6E3EBF6E4ECF7
E4ECF7E4ECF7E4ECF7E4ECF7E4ECF7E1EBF7E1EBF4F2E2ECB0534EC43F16D54113C23D12E0541F
D24A20CA3014C2441BC02D01C32911C96862FFF9EDF3D5CBD97170DF603FD34C2FB97A75ECE5DF
C06E59D63113D54119C53918D0461FC73B24C88479F1EEE9F2FCF3F5FFEFECCDC8DB5134D74627
D83F1DD9401ED84524D84728DF4A2AD63B1CC82C04BC2700AF290CBB5046B8716B956A6192756F
95787C9A7D7F9F8588A48B8FA89398AD9EA5B2A8B3BAB4C2C4C2D0CCCFE2CFD4E7D4DBEDD6DFF0
D8E1F2DAE3F4DDE4F6DDE4F6DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6DFE8F7DFE8F7DFE8F7DFE9F5
DFE9F5E0EAF6E0EAF6E0EAF6DFE9F5DFE9F5DFE9F5DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7
DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5
DDE6F5DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4E3EDF7E4EEF8E5EFF9E4EEF8E3EDF7E2ECF6E3EDF7
E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E5EDF8
E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E4EDF6E4EDF6E4EDF6E4EDF6E3ECF5E3ECF3
E3ECF3E3ECF3E6EAF3E6EAF3E5E9F2E4E8F1E4E8F1E4E8F1E4E8F1E5E9F2E2E9F1E2E9F1E2E9F1
E2E9F3E3E9F5E3E9F7E3E9F7E3E9F7E3EBF6E3EBF6E3EBF6E4ECF7E4ECF7E4ECF7E4ECF7E3EBF6
E5EBF9E2E9F1E5CED6B3403DD14416E64A19C03709D64611CF501DDD4D2ABE3A14CC3613BC2C0A
AF3424EEC0B3FAECE9D89292D96349C83E22D38A81E9DBD2C7806ED54A2BCD4A1EE04F34B53003
D94F2AB0342ADA9A9AEDF3E5E8FBE8EAD6D5DB634BDF593ED84426DA4525D7462BD5482DD8432B
D2361DC52B07B72500AC2C13C36160A46367936D6491746C94757A987B7D9F8284A48A8DA79096
AC9BA3B1A5B1B9B3C1C4C0CFCCCFE2CFD4E7D4DBEDD6DFF0D8E1F2DAE3F4DDE4F6DDE4F6DDE6F5
DDE6F5DDE6F5DEE7F6DFE8F7DFE8F7DFE8F7E0E9F8DFE9F5E0EAF6E0EAF6E0EAF6E0EAF6DFE9F5
DFE9F5DFE9F5DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6
DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DCE5F4DCE5F4DCE5F4
DCE5F4E3EDF7E4EEF8E5EFF9E4EEF8E3EDF7E2ECF6E3EDF7E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8E5EDF8
E5EDF8E5EDF8E4EDF6E4EDF6E3ECF5E3ECF3E3ECF3E3ECF3E2EBF0E2EBF0E5E8EDE4E7ECE4E7EC
E3E6EBE3E6EBE3E6EBE3E6EBE3E6EBE1E9ECE1E8EEE1E8EEE1E8F0E2E9F3E2E8F4E2E8F6E2E8F8
E2EAF5E2EAF5E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E3EBF6E4E6F5E7EAF1D9BCC1BB3B38CC3A09
EA4915D24517CB3802C0430DEF7244E54A2EC13210B62603AA3313CD7A72F7F5F6E5C8C0D06956
DE4E36C3755FF4F2DDF6D5C2BD503CCA4326CA2F1DD7422EC33E1FCE3D28A84A40F1E7DEFDF5F2
E6D0C2C65D4AD85E46D94E2FE4512FDD4E2CD74B28D6421CD53911C62D0EB32402A82D1BC96A72
9456618F6D648F7368937374987A7C9F8284A3898CA79096AC9BA3B0A4AEBAB2C1C4C0CFCCCFE2
D0D5E8D5DCEED6DFF0D8E1F2DAE3F4DDE4F6DDE4F6DDE6F5DDE6F5DDE6F5DEE7F6DFE8F7DFE8F7
E0E9F8E0E9F8E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6DFE9F5DFE9F5DFE9F5DFE8F7DFE8F7DFE8F7
DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6
DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DCE5F4DCE5F4DBE4F3E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7
E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EBFFE5EDFAE6EDF3E8ECF7E8EAFFE5E9FF
E4EBFDE3EDF6E8EBF4E6EDF5E5F0F6E1F0F7DEEFF6DFEEF3E2EDF1E4EDF2E8E9FBE6E6F2EDE9E8
EBE5D7ECE5C9EEE5BEEBDEB1F7E9B8F1E7A0F3E4A9F4E0ADF1E1A3F8F09DECE58DF0E39DF4E2B0
EFECA5E6E4ABECD9BBF8D9D6F2E3EADEEDF4D7EBF6DFE4F8E1EBF7E3EBF6E6E8FDE5E4FFE5E8F7
E4EEE6E2EDEFDCE8FFE8DAF1EDE3FBD09DA2C63022CB3709D53304D93E10BF3507B23023C6401B
E1601ED15321C9261DB2280EB4442EF3D4DCFCF0F2D1897BE5614AB74C38E2CCC1F7F7F5F1BAB5
B34A35D24732C03D21C43C22CB3127AE3932DED2B8E7FADEEAB8B7D66952D15D46E2614BD85036
D94C2EE04B2BDE4420D1310DC62B00AF2308B5443CB567678B5A568F6E65906F6897716E977B7A
9A8081A1888BA69196AA9BA2ADA5B0B7B3C1C0BFCFC9CEE1CFD4E7D4DBEDD6DFF0D7E0F1DAE3F2
DCE5F4DDE4F4DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6E0E7F7E1E8F8E0E8F5E0E8F5E0E8F5
E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F3E0E8F3E1E9F4E0E8F3E0E8F3E0E8F3DFE7F2DFE7F2
DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5
DDE6F5DDE6F5DCE5F4DCE5F4E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7
E3EDF7E3EDF7E3EDF6E4EDF6E5EDF8E6EDF7E6EDF5E5EEF5E3EDF6E1EEF7E4F0F0E4EFF3E4EEF7
E4EEFAE6ECFAE8EAF6E9E8EEE9E7EAEAEDB8E8EBB2EBECB0ECEDABF2F2ACEAEAA2E2E096DAD88E
EEEAA3FAF2A9F0E498F1E998F1EA99F1EC9AF9F1A0EEE192F1E78EF6EB92F4E194EAD296E1D1AD
E0E1CFE2EBEAE0E6F2DAE3F2DDE6EFE0E6F2E4E7F8E4E6F5E2E6EFE1E8F0E1E8F8E5EBF9E7E1EF
AF6D6EBD3D20BF370DC02F1CD27764E8CAA4DAC0AFC17D6AB54F27D54624BA2D11C12D07A62404
D69D94FFF4EBE3BAB4CC524DD43D2CAA5E46F3E9E0FFF3F1EEC9B6AF493BAA3B1FC4421EC8361F
A3342BFAE2D6FFF6EFCE8491D45F4BCC523DCE4733D0442BD6462BD74423CD3714D73A17C42C03
A82006C0534CAC60608959558F6E6591706995726E977B7A9A8081A1888BA69196A89BA2AEA6B1
B7B5C2C1C0D0C9CEE1CFD4E7D4DBEDD6DFF0D8E1F2DAE3F2DCE5F4DDE4F4DEE5F5DEE5F5DFE6F6
DFE6F6DFE6F6DFE6F6E0E7F7E1E8F8E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5
E0E8F3E0E8F3E1E9F4E0E8F3E0E8F3E0E8F3DFE7F2DFE7F2DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DCE5F4DCE5F4E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7
E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EFEDE3EDF6E4EDFC
E4EEF7E4F0EEE2F1ECE2F0F3E1EEFEDFF1F3E1EFFAE5EAFEEAE8FDEEE7EEEFE8D5EEE8B8ECE9A6
F3EEB6D8D5A0B9B588817D5A9D9884B9B2AA807778554E55706B41DED89AFAF3A5F1E9A0E0D89A
DDD49BEDE499FBF192FAE58AF9E07CF3DB6FE9D36DDFC87CDDC49CE1D2CBE7E6EEDEE4F2DDE3EF
DDE4ECDFE6ECE2E5F4E2E4FBE2E5F6E4E7ECD8D7E7F4E4EEBC4E4DBB3208C4360EAC3D36FFD6D5
EFE8CEF4EDDBFAE6DDC9927EC2311EC23A14C72E04C22D0DB64F40FAE4D9FFF9F3DE8685D73425
C64B29C18D77EFD7D7F5F4F0F3DCD4DAAD96B2704DAB5F47C3918AF9EEECFFE4E1BE6267CE543F
CD4C37D54A37DC4E36D14126D54425CA3716C42E0DC02B0AA4220CCB645F9D5757895C578D6C63
90716C947270977A7C9A8081A1888BA69397A99CA3AFA7B2B8B6C4C2C1D1CACFE2CFD4E7D4DBED
D6DFF0D8E1F2DAE3F2DCE5F4DDE4F4DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6E0E7F7E1E8F8
E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F3E0E8F3E1E9F4E0E8F3E0E8F3
E0E8F3DFE7F2DFE7F2DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DCE5F4DCE5F4E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EEF0E1EEF6E2EEFCE2EEFAE2EFF5E2F0F3E4EEF7E4EDFC
E1EBFFE3EAF4E8E9D9EDE9BCF2EAA9F0E99BECE594E9E291938E684F4B26C1BE9BD4D3B4C0BFA3
C9C7AE6A685168664F9D9378F3E9B8E4D997B9AE6CC7BA83EFE3A7FAEE9CF0E478FDE680F7D66F
F0D262ECD45AE3C251DCA958DBB284DECEB5E1E2E6E0E2F1DCE1F4DAE3ECDCE4EFE0E4FDE2E3F8
E1E2E6E0E3F2CEC9C5B93833C33004BC3807C99A80FCF5E3C17B62C4513EB68C7CF3E8D4BF4B3C
BA2102C42E0BB9240CC63329DAACAEF4F7E6F6CCBCC94D41D8573AB44227BB625EFBD3DBF2FBFA
FDFEF6F0E8DDFEF3EDFFFCFCF8EBE5BB8173B84735C14D34D3573FCD4630C93D24CD4024CD3E20
BE2D0ECA3517B12408AD3222C568639252508A615B8D6C638D706A927472977A7C997F809F898B
A69397A99CA5B0A8B3B9B7C5C1C3D2CBD0E3D0D5E8D5DCEED7E0F1D8E1F2DAE3F2DCE5F4DDE4F4
DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6E0E7F7E1E8F8E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5
E0E8F5E0E8F5E0E8F5E0E8F3E0E8F3E1E9F4E0E8F3E0E8F3E0E8F3DFE7F2DFE7F2DFE8F7DFE8F7
DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5
DDE6F5DCE5F4E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E3ECFBE2EFF8E2EFF8E2EEFCE4ECFFE6EBFEE7EBF4E8ECEBECECD4ECEAC1EEE9A7F3E992F3E88C
F2E694ECE1A1E7DDAABEBD9FBEBD9FB7B899B4B595B8B894B7B58E9F9A70D5CEA0FBF2BBF2E4A5
FBEBA0FBEC99F9EB92F2E57FFAEB74FFF26EF7E662F9DC66F1D05DE1C540DEB422E3A820DDA73A
CFAD54D8CCB6DFD4DCDFDBF4D6DCECD5DFE9DBE2F4DFE2F5DDDDE9EDD8EBC9A29BD03231DB3016
C32907CB9781FFECDFC14337E52C10CC7B68E9E2D0D3927ED4321DBB320EC23519C22B0EC15E63
FFF5DFF5E9D1C77665D85B45DD4C37D14538A64032C68C8AF2C4C4FFD7DBF8CED2D3A29E985042
B64D38CC4A32D96D50CB583BCF4F34D14A2DCD4225BC2F13BD2C11BA260CA4200BBB4B3DB1605C
8954508E67608C6B628B6C69947676947A7B997F829F898CA69397AA9DA6B1A9B6BBB9C7C3C4D6
CBD0E3D1D6E9D6DDEFD7E0F1D8E1F2DBE4F3DCE5F4DDE4F4DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6
DFE6F6E0E7F7E1E8F8E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F3E0E8F3
E1E9F4E0E8F3E0E8F3E0E8F3DFE7F2DFE7F2DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4ECFFE2EEFAE2EFF7E3EDF9E7EAFB
EBEAEFEEECD7F1EEC3F5F095F6EC95F7E895F6E498F7E49FF4E5A4F0E4A8EEE3ABE9EAB1C1C18B
BDBD89C8C896C8C592EFE8B4F5EAB4F8ECB2F6ED90EFE284FFF290FDED7EFCF171FEF365FFF15D
FCEB57F7E952F9E15BEECB55DCB333DDAA19E9AD19E6AC26D7A42ECFAD6EDBC0A3E1D0D6D9D7E5
D2D8E4D6DFE8DDDFEEDFDCEDE7E2E9C18674BB3327C53922C7361BAB5D53F6EBE9C68C81AC2D0D
8A3727E9D5CED6B09DB22007B52D05C53B14B93200C73329E5B5A9FFF9E9E6AC96DC6C56D25344
D45039D14D1DD44F3EC25745B94F42C24E41B34129CA573CD86048E87864E07855E3714FD95A3A
D14A2ADA4F30C23517B32308AC1A019F2415C560569D58538858548E69618D6B628A6B68947678
957B7C998083A08A8DA8959BAC9FA8B2ACB8BCBBC9C5C6D8CCD1E4D2D7EAD6DDEFD7E0F1D9E2F3
DBE4F3DCE5F4DDE4F4DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6E0E7F7E1E8F8E0E8F5E0E8F5
E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F3E0E8F3E1E9F4E0E8F3E0E8F3E0E8F3DFE7F2
DFE7F2DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5
DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF7E4EEF8E4EEFAE5ECF4EAECE1F1EEC5F6F0A6F9F091FBEC91FBEC8F
FBEB8CFBEB8CFAE98FF9E992F9E99BF7E99EF6E8A9F8EDABF3EBA3EFEA99F4EF94F7F088FBF27D
FAF075FFFD70FFFD6FFFF764F6ED52FFF852FFFC50FDF248FFF14AFEF049F4E03FEBC733E4B22B
E0AB29DDAC2BDEAB2EE2A62CD69D32DAAC57DABD93D7C9C6D3D1DFD4D6E2DAD8E3DFD9E7E9D7E5
B7503DD65B3CE26343C52B07B22E22D2B0B1FEF1EBE1B49FB5897CFFF1EAC28E83BB3417C22C07
B92501C14309C42306DA8379F5E4DCFFF1D9F4AA8DE18168D56945DC5424DD4D2BD15D36C64A28
D6412BCF4B32CA5939DE7557E48A67DE6948DE5F3FD84F2FCB3F1EBE3211BB3011BF3518AB2105
A73228C5686191544F855E5789675E8E6C638F6D6C94757A967C7F9A8184A28C8FA8979DADA2AA
B4AEBABFBECEC8C9DBCDD2E5D2D7EAD7DEF0D8E1F2D9E2F3DBE4F3DCE5F4DDE4F4DEE5F5DEE5F5
DFE6F6DFE6F6DFE6F6DFE6F6E0E7F7E1E8F8E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5
E0E8F5E0E8F3E0E8F3E1E9F4E0E8F3E0E8F3E0E8F3DFE7F2DFE7F2DFE8F7DFE8F7DFE8F7DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8
E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4F0ECE4EEF7
E4EBFDE7ECEFEDEFCAF4F1A0FAF37FFFF36DFCEF7CFDF080FEEF88FDED8BFCEC8AFBEC85FBED80
FDED7CFFED74FFF578FFFA77F5EF65FFFF6AF9F850FEFC47FEFB3EF4F93AFBFD37FBFA2EFFFF34
F8FA2AF9FB2EFFFD34FFF831FFF230F6E71CEFCF0BEAB50FDEAA22CEAA2FCEA529D79A1BE59C12
D89E20CFA956D0BAA5D3C8D9D2CEDDD5D0D7DAD0D9D8C5DBB33E2AF48F5BDF713ECA3B00BC2D03
D5AA99F3EDDFFBECE9F7EEDDF2FBE8AD5E59B52F12CA2006C72815B8320DBA2500A23320E8D0C4
F0FFEAFBDDBBFFB98DED865BF2664DE76243D06B41CE5938E25043CE5449DC7964E5815DEF8E59
D95638E05639D94829D74423BA2B09AC2303AA2506A82207B03F37BF68618D565187625A86645B
906B63936F6F947479987E819C8386A38D90A9989EAFA4ACB6B0BCC0BFCFCACBDDCDD2E5D2D7EA
D7DEF0D8E1F2D9E2F3DBE4F3DCE5F4DDE4F4DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6E0E7F7
E1E8F8E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F3E0E8F3E1E9F4E0E8F3
E0E8F3E0E8F3DFE7F2DFE7F2DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E4EBFBE5ECFC
E5EDFAE5EFF9E5EFF8E5EFF8E3F0F6E2EFF5DFF2F0E1EEFEE6ECF8F1ECD9FCF489FFF082FFF17A
FCF570FEF56AFDF179FDF181FEF576FEF768FEF864FEF864FEF862FAFD54F9FB42FDFB44FFFE51
FDFC4CFDFF3DFCFF36F8F838FFFF3BFDFF3AFBFE3FFCFE45FEFF49FEFF43FCFF36F8FC29FAFF1F
F7EE13F9DC16E5B912DBA922D9A22DCC9217D89C17D2970BE1972CE09A1ED19F4AD6C1B0C8C0D8
C9C3C7E0C6E9CFA49ED87E30FF871EE76227DE3812B84025F8E4E5D2BDBCA64731B86F68E8D9D4
DCC0ABA92C0ECB2411BB2610C42F05C33102B9230ACA7767F6EFDDFCEEE3F0B0A7E1826CEC805C
E56947CF5E3ED76952CC574DDD756CDB8470EE9172D3613DE55435DE4E34D94730D13A1DC32903
B82400AC280FA52D1FC165689D56548C5D578B665E8E6664906667926B6C98787995807D9C8889
A39094A79AA3B0A8B5B9B5C4C2C1D3CBCEDFCED5E7D2DBECD6DFF0D6E2F2D8E4F4DCE5F4DDE6F5
DDE4F4DEE8F4DEE8F4DEE8F4DEE8F4DFE9F5DFE9F5E0EAF6E0EAF6E0E8F3E0E8F3E0E8F3E0E8F3
E0E8F3E0E8F3E0E8F3E0E8F3E1E9F4E1E9F4E0E8F3E0E8F3E0E8F3E0E8F3DFE7F2DFE7F2DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DDE6F5DDE6F5DDE6F5E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7
E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E5EDFAE5EDFAE5EDFAE4EEF8E5EFF9E5EFF9E4EEF7
E2EFF7E2EFF5E3EDF7E8EBF0F2EFBCFCF188FFF275FFF278FCF573FFF768FFF768FEF866FDF85C
FCFA4DFCFD40FCFC42FCFB4BF6FD3EFBFD44FFFF55F9F651FFFF59FAFD4AFFFF51FEF953FAF752
FCF954FEFC59FFFF5FFEFE5EFDFC56FDFC4AFEFF42FAF63DFFF83AFAE220ECC90BE2B60BD0A010
C08C1CB98428BD8820C68328D18D12E3AC2ECA9D48DEB5BBCDBBC9C2C8BEC48B84F0C68CFD872D
FB5E17D94014A74B24F6F2D7C9A09AC42B19C53729CC8983FFE3DDAF5240BC2D0FB52A09C13712
D03C14B8270CA43426F1C5B8FEF8EAF6D2C6EF9988D66A4EE0684DD7654ACA5A46DA685DD16F62
E08E76D97B59DA623FF95B36DE4827C73B1AC03612B72D06B02705AF2C1AB43431BD696995564F
81594F816359886760916B6A9470709779799681809E8A8BA39298A99CA6B2AAB9BAB7C8C3C4D6
CDD0E3CFD6E8D2DBECD7E0F1D7E3F3D8E4F4DCE5F4DDE6F5DDE4F4DEE8F4DEE8F4DEE8F4DEE8F4
DFE9F5DFE9F5E0EAF6E0EAF6E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E1E9F4
E1E9F4E0E8F3E0E8F3E0E8F3E0E8F3DFE7F2DFE7F2DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7
E3EDF7E5EDFAE5EDFAE5EDFAE5EFFBE5EFFBE5EFFBE4EEF8E4EEF8E5EDFAE7ECF2EAEBD9F2F194
FBEF83FFF265FFF174FCF277FEF470FFF85FFEFC51FCFC46FBFD37F9FF27FBFF2FFCFE41FBFE57
FFFC65FFFA6CFFFF6FFDFE62FCFF6AFAF670FFF877FFFB64FFFC63FEFE62FFFF67FFFF64FBFC59
FDFC52FFFF4DFFF742FEF737F5E81DF6DC09E6BB00D8A412B6822E5A29005A3F12563116401C00
97762FD8B034CE8F5CDBA6ACD1C2BDA25346ED8E72FD6220E25505DD400DC33F26F0DFCBDDBCAD
AF2F12B7330D965543F9F3F7C38A7FB8320DC92B04D33118D13D1FBF3012B62717D1776EFCF3E4
F9F5E9F4BAAFEE9585D46A54E27360D56152DD6F62AF5441F8A789C05A34DA5630E04E1BDE4B1F
D63E19C62C0ABF2606C4371CC84A3CC04E4DB2635F8E524A815B4E81675A8469608E6F6C947573
9678789783829F8C8EA4959AAAA0A9B5AFBDBEBDCDC7C8DAD1D4E7D0D7E9D3DCEDD7E0F1D7E3F3
D8E4F4DBE4F3DCE5F4DDE4F4DEE8F4DEE8F4DEE8F4DEE8F4DFE9F5DFE9F5E0EAF6E0EAF6E0E8F3
E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E1E9F4E1E9F4E1E9F4E0E8F3E0E8F3E0E8F3
E0E8F3E0E8F3DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEFAE5EFFB
E5EEFDE4EEFAE4EEFAE4EEFAE8EBFAEAEAE8F0EDB8F7F27AFDEF74FFF363FFF36BFDF07DFCF078
FDF469FDFB51FBFC3CF9FE32FBFF38FEFF45FDFF4DFFFF6CFDFA6DFFFE68F9FC57F8FF5DF7FC6E
FEFF77FEFC69FFFF6BFFFE66FCFD63FCFD63FEFF66FEFF63FEFF5CFCFE55FFFF43FFFF3BFEFD29
FFF01AECBF00E8AC1AD79F427C4D1547391E5B3F314C2A2852300DC99F0FE3991CDD9364D8A6B1
B73327C33716E4480DE35314F44413C62F1CDBB9B8F9E7D9D38173974022C79D8DF9F2FAD3948D
BC2E0AD82F06DB3316CC4120D44421C0210BBD3E35EEC3BCF3F6EFF3E0DADCA7A1F19684E87E70
DD695CD96B5CCF755DD98060CE5834CD3716ED4518E1340CDC2909D92A0DCE2D10BF371DB44937
AE564A9F4E4B894842885C518A6A5D85695E8D706A9476749579789985879E8E91A4979EABA3AE
B6B4C2BFC0D2C9CCDFD1D6E9D1D8EAD4DDEED8E1F2D7E3F3D8E4F4DBE4F3DCE5F4DCE3F3DEE8F4
DEE8F4DEE8F4DEE8F4DFE9F5DFE9F5E0EAF6E0EAF6E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3
E0E8F3E0E8F3E1E9F4E1E9F4E1E9F4E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E7F7DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5
DDE6F5E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF7E4EEF8E4EEFAE5EEFDE5EEFDE4EEFAE4EEFAE4EEF8EBECF1
EFEAD7F5F092FAF170FEF167FFF16EFFF466FDF07EFBEF75FDF274FDF958FBFE33FAFE35FCFD57
FFFE66FFFF5CFFFE73FFFF74FCFB6BFFFF7AECEF84F9F9A1F9F987F9FB5CFDFC70FEFD6FFBFC70
F8F96FFAFA74FFFF78FFFF71FCFC68FDF958F7FC47F3F82AFFF11CFFD50FEEB109DDA419CA981D
9D7A36AF7C2BCE8E2DD28D28E9A401EFA302CC8819BF855FBF3721B42E08C63B02E95026EB5228
B7330DE18E88EAD9C5FDF1F1F4ECD7F5F9EBF8E6E4B35A48C32F09D5370AD33D0BD45029CC3A13
C22909B72B1AC16363FFE5E4FFFEF9F4DAD9F9A392E67F70FF8A79D1624EC86548C85B3CD24B2B
D03113DA2D0BD02603CC2707C72C0DB22708A2240DA83224B6433E9344478A4645905B558F675F
8867608D706C937776957B7C99868A9F9095A69BA3ADA7B3B9B8C6C1C4D5C8CDE0D0D7EAD2D9EB
D5DEEFD8E1F2D7E3F3D7E3F3DBE4F3DCE5F4DCE3F3DEE8F4DEE8F4DEE8F4DEE8F4DFE9F5DFE9F5
E0EAF6E0EAF6E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E1E9F4E1E9F4E1E9F4
E1E9F4E0E8F3E0E8F3E0E8F3E0E8F3E0E7F7E0E7F7E0E7F7DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF7
E4EEF8E5EFFBE5EFFBE5EFFBE5EDF8E5EEF7E5EEF5EBEBE1F0ECBCF7F175FEEF6EFEF165FEF076
FDF46BFCF07AFDF36DFFF572FDFA55FAFF2CFBFF36FEFC69FFFC76FEFF5CFAF96BFDFC70FEFD87
C6C37C3D3824908A7AF6F4AAFCFE76FAFB73FEFF77FEFF7BFDFE7EFCFD7EFDFE7CFEFF75FBFD6B
FFFF72F5FB51F4FB31FFFC22FFEE1BFBCB0FDFA803D19A02B98B13CE9836D9A02DE2A435D99F21
E1A92EE2A21ED6881B9A3500BB2C1EB52600C72902C82C13BE3803D15227D4785FDECACBF4EEDE
F2E0D4BA7168BD351BD7310BD02F03DE480DD24B1EDF4E22B72901B82B0FB93328D18377FFDFD2
F6CBC5DE7F6BD5624FCB4E38DE684EB94629A42208C43318D63D1EC42E13C83315C63518B02D11
94240C8A2B17903D2F95473D8750538654538E615E8C635F896863907270917778957C7F9B888E
A19299A89EA7AFADBABABDCCC2C7DAC8CFE2CFD6E9D3DAECD5DEEFD8E1F2D7E3F3D8E4F4DBE4F3
DCE5F4DDE4F4DEE8F4DEE8F4DEE8F4DEE8F4DFE9F5DFE9F5E0EAF6E0EAF6E0E8F3E0E8F3E0E8F3
E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E1E9F4E1E9F4E1E9F4E1E9F4E1E9F4E1E9F4E1E9F4E1E9F4
E0E7F7E0E7F7E0E7F7E0E7F7DFE6F6DFE6F6DFE6F6DFE6F6DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DDE6F5DDE6F5DDE6F5E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E2EFF5E4EEF7E5EFF9E5EFFBE4EEFAE5EEF7
E5EEF3E5EFF1E8EAD2F0EE99FAF06CFFEE6CFFF073FDF17BFBF178FBF070FEF46EFFF66BFDFB51
FAFF33FAFF43FFFD70FFFD76FDFF5CFFFF6AF9F963F9FA82929159706D66716E5DD6D789F6F974
FEFE86F7F680F3F381F8F88AFCFC8CFCFE83FBFE73FBFF68FDFF67F7F956FDFE4AFCFB2FF4EB14
F7DE10EFC511DAA205DEA41E8A601872521F69461E502F00836124DDA335F08F0ABF5C01C03925
C53918CA2802CE1E07D74611C83B03E63F1BB6312CB5432BB63B2CCD332BDA2B0ED52500DF3A0D
E3470CE14D1FD74A1FC13710B12100CD3915C03F1FC65C42B75344C34C36B02C15B3290DB23111
B73114B5230CB8260DAC2708C22F1FB2210EA11D0888220C5F220D3A251027301B223A24554A44
6A58547F66628465628A6C6A9175748F7679977E829C8B93A3969FAAA2ADB2B1BFBCC2D2C4CBDD
C9D1E4CED6E9D3DAECD5DEEFD8E1F2D7E3F3D8E4F4DBE4F3DDE6F5DEE5F5DEE8F4DEE8F4DEE8F4
DEE8F4DFE9F5DFE9F5E0EAF6E0EAF6E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3
E1E9F4E1E9F4E1E9F4E1E9F4E1E9F4E1E9F4E1E9F4E1E9F4E0E7F7E0E7F7E0E7F7E0E7F7DFE6F6
DFE6F6DFE6F6DFE6F6DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E2EFF5E2EFF7E5EFF9E5EFFBE5EFF9E5EEF5E5EFF1E4EEEFE8E9C9F0F080FBEE6B
FFEE68FFED7FFCF279F9EE82F9F16AFDF177FEF56AFBF94FF9FB40FBFD54FFFE75FFFE77FAFE63
FEF880F6F672E9EB7E40400C595A4A747553F5F8A7F6F686FDF7A3E8E391DED88AEAE79AF9F7A4
FDFB97FBFC84FEFF78FCFC68FFFF75FEF768FAFA4CFAFE2BF7F210F3D707EBBB01ED9B14B9883B
492600501E154B1C083B1B049D731FE89D1DD97D00AA3402CE341AC64317B73A02DE320AE43717
D24F09C73305BC3400C03105C82C15CE350BCF3801D53908E44911E9481ECB4218BD330EC12E02
D8460DE1410DDF3615C22B16AF240FB62109B11D00B42B09BA2B0DBA1F09AD1F079725018D1A05
9A32199241246033142720060E210E112C2315302B183023424C436B645C7B6862896F6E8E7676
8E75799C83899E8D95A598A1ACA6B2B3B5C2BFC5D5C5CDE0CAD2E5CFD7ECD3DAECD5DEEFD8E1F2
D7E3F3D8E4F4DCE5F4DDE6F5DEE5F5DEE8F4DEE8F4DEE8F4DEE8F4DFE9F5DFE9F5E0EAF6E0EAF6
E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E1E9F4E1E9F4E1E9F4E1E9F4E1E9F4
E1E9F4E1E9F4E1E9F4E0E7F7E0E7F7E0E7F7E0E7F7E0E7F7DFE6F6DFE6F6DFE6F6DFE8F7DFE8F7
DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EDF8E3F1F4E2F1F4
E1EFF8E4ECF9E8ECF7E7ECF2E4ECEFF6E989F9F671F4F17EF7F473FBF36AFAE97FFFF37FFCEF6C
FBF176FFF378FCF640F7FB2AFAFF62FAFF80F9FE6EFFFD6CFFFF71F2F26EB3AF5637301D716D6E
C2C888F9FC89F9F0898E94703B3D28413F324A49358E8E76DADBB3FBF9ACF8F580FBFC7CFDFE76
FEFF66FBFF52FDFE40FFF62BFBE515F5D300E2AE0DD39A15B77618A96922B6782FBC8020C6880D
DE9C10DE8E15C1570BAD2D12D24B1BC52A0BE0390FDA3515D8480CD23B0EBF3004C13409BF2A00
DE3D11D32E00CF3302DD4D18DB4C12D33F17CD2D17C21E03C63602D65E10F67D2CE0510BC4371C
BE220BC52912A91F03A3270DA22715972C1C94412F9B4641A5514F73423B14351A263123121911
151A1406281A032C260B332B3351495B605A76635F93737693757D98848F9F8F9AA69AA8ACA8B9
B9BCCFBAC1D4C6CEE1CAD3E4CFD8E9D3DBEED5DDF0D8E1F2DAE3F4DAE3F4DBE4F5DDE6F5DEE7F6
DDE6F5DEE7F6DEE7F6DFE8F7E0E9F8E0E9F8E0E9F8E0E9F8DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5
DFE9F5DFE9F5DFE9F5E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E1E9F4E0E8F3
E0E8F3DFE7F2DFE7F2DFE7F2E0E8F3E0E8F3DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EDF8E3F0F6E2F0F9E2EEFAE5EEF7E8ECF7E8EBF0E5ECDA
F9EA8DEDE4857E733BECE597EFE876F6E87FF5E671FAEC6FFCF276FFF474FEF842FBFF2FFCFF67
FBFF80FBFF6DFFFD6BF5F766EFEC8D4E461F5A534D625E45EEF196F3F379C8BF602B240A423725
443C29443D2BA6A19E979191DEDCACFEFF95FAFB7CFCFD75FBFE69FBFE57FDFF46FFFA32FFEB1A
FADD05ECBD0DE3AE14D09618CA9022D29B27D29C18D59903E0A201DF9802D36607B7270DD03C22
BE2513D13505DC4010D24100D63D13C22E06C3330EC02A05DA3610DB340ADD3C0EDE4615D24309
DD5E29AD3004AF2700C02F02EE632CDA4A16D1360AB32E03B4300AAF381AA13D269F4739A95950
A25B55874B439F4E4A95504B33150A345B4017271A1C291F2630280C221609250F00211006271E
304B46606C6C6F6D708C7C86988490A297A7A69DAEB8B4C5B7B8CAC5CADDC7CEE1D3DBEECDD5E8
D2DAEDD4DCEFD7E0F1D9E2F3DAE3F4DBE4F5DDE6F5DEE7F6DDE6F5DEE7F6DEE7F6DFE8F7E0E9F8
E0E9F8E0E9F8E0E9F8DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5E0E8F3E0E8F3
E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E1E9F4E0E8F3E0E8F3DFE7F2DFE7F2DFE7F2E0E8F3
E0E8F3DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E6EFF8E5EFF8E2EDFFE2EEFEE5F0F2E9EDF9E9EBEAE7EEBAF7EA7ACFC3793528189D9571F7F39C
F9F089F7ED72FEF470FCF370FFF36DFDF73FFCFF36FDFF6DFBFD7EFCFC68FFFB67FEFB76BCB77F
2C27233D3A29C4BF7DFFFC7FF9F86AF7F483BBB158C9C065FCF791E3E4878E8C65A4A0A1737254
E9EF8DFAFB7CFDFD79FCFE6DFAFE5FFCFF50FFFC39FFF21FFFE908F5CC10E8BA0CD9A60CD4A00F
D5A10FD5A004D89D00DE9E00DD9C00E38410BA3F15C13826BB2315D32F00ED4812CD3300E45223
C5380DBE320EB92906C92C09D02F05DC3B0DDB410FD44D16EC804F9D380EAC2E06E2461DE04117
BD2807B1230FAF2D0DA5361AA74A39AC5955A055598C4A4E8A484C9C555991504A582C23292615
00230A0A1A0D3C52450B1D11152218102303112710031D140726282544475C6F757979838A7C8B
9592A5A8A5B8B1AEC1BCBBCDCACBDDCBD0E4C7CDE3D0D8EDD2DAEDD4DCEFD7E0F1D9E2F3DAE3F4
DBE4F5DCE5F4DDE6F5DDE6F5DDE6F5DEE7F6DFE8F7DFE8F7E0E9F8E0E9F8E0E9F8DFE9F5DFE9F5
DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3
E0E8F3E1E9F4E0E8F3E0E8F3E0E8F3DFE7F2DFE7F2E0E8F3E0E8F3DFE8F7DFE8F7DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF8E4EEF8E4EBFFE4EDFEE5F1F1
E9EDF9ECEADEEBEF9AF9F175BBB470403A2C424031878459D8D294F0E788F7F272FAF46CFDF264
FCF73BFDFD39FEFD71FCFD7EFDFC66FFF865FAF482605C3746473F555821F8F489FAF263F9F65B
F5FA6CF7F57EFAF87FF3F56DEDF36FCFD3894844384B4A2EF3F7A3FBFB7FFEFE7AFEFF73FCFF68
FBFE57FDFC3FFFF521FFEF09FFDE16EFC70FE1B10FD8A410D09C0AD39C04DB9F03E19F02DE9A09
DB971AB16720AE4F31BE331CD72900EF3D0DCC280FCF4612B93505B22F05B92F0AC6340BCC3405
D73D0BDE4712C5461BED8061C55643AE210DDB3817D53D14A1280B973027AA4F4CA96960A67169
8F535391535486534F6C372F702F29573229281B0B13241105200D798078364E401536251B2D21
133011051B060B1C160B2323214042203E4073818A888795848AA0A1A6BAB3B4C6C3C2D4BEBDCF
CBCDE2CBD1E7D2DAF1D1D9ECD4DCEFD7E0F1D9E2F3DAE3F4DAE3F4DBE4F3DDE6F5DDE6F5DDE6F5
DEE7F6DFE8F7DFE8F7E0E9F8E0E9F8E0E9F8DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5
DFE9F5E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E1E9F4E0E8F3E0E8F3E0E8F3
E0E8F3E0E8F3DFE7F2DFE7F2DFE8F7DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DDE6F5DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E3F0F8E4EEFAE5EBFFE4EDFCE5F0F4EAECF8EEEACDF1EE83F2EE82B9B578
8A8B6B6063504C4849524646867A50F1EE85FCF66AFDF35DFEFA37FEFE3EFEFC75FEFF80FFFE68
FDF467C8C26A2A25124F5144B6BB69F6F171FFFC74FAF670F5FC7BF3FB8CE9EE88F5F792F2F697
B4B47E4A44364E482EF0EDAAFBFB7FFDFD79FEFF73FDFF6BFCFE5DFCFC44FEF722FEF206FFE80B
F5D40DEFC31AE7B522D7A319D69F11DEA210E09E09E59D15D39317B07A24A56647B55137C23507
CF3102C12415C03804C1380AB62B04B72702C42C03CD3204D73909E84B18C3371EE4664FA42715
BA2E21AE2213A93828A24B41B46A67BE71858D555E7545437B3B39914A467C433A78493F815049
3F392919220F1B3822172319B8B7B335463C103D290B2A1A0A3321072B1D05291D002212154C39
0C3C2E1D393A7F889794A4B4808B9D9AA1B3B2B5C6BEBFD3BFC1D6D0D6ECC7CFE6D0D8EBD3DBEE
D6DFF0D8E1F2D9E2F3DAE3F4DBE4F3DCE5F4DDE6F5DDE6F5DEE7F6DFE8F7DFE8F7DFE8F7E0E9F8
E0E9F8DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5E0E8F3E0E8F3E0E8F3E0E8F3
E0E8F3E0E8F3E0E8F3E0E8F3E1E9F4E1E9F4E1E9F4E0E8F3E0E8F3E0E8F3DFE7F2DFE7F2DFE8F7
DFE8F7DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E2EFF8E6EDFF
E6ECF8E5EEF5E4EDFEE8EBF0F1EBB7F7ED7AF4F486B0AF6EBDC37DC8CE905C55424B3C378F835B
F2F187FCF569FCF358FEFB34FCFD3DFBFB75FEFF81FDFD6BF4EB6A767233413833403D2CE1E587
FCFB7DFDF588F2EC94C2C27A8F936063643C4F4A2C433C22443E283A3515B1AC6CFBF794FAFA7E
FCFC76FEFD6DFEFE68FDFF5EFCFC46FDF822FEF506FDEA00F6D900F2CC11EABD1ADAAB13D5A20B
D9A008D99D01E39D0AE09214C97F2AA063509F6452AB5838B04416A82C14B8320CCD431FC02C0E
BD2405C12401CE3009D2340DDD3F1AC02920B13116B1401E922717AC4D55AA6174B97987B16F73
B15C6FA25B63975654A35853A0534D8D4E49875E5C533736212E1A0C1D0A0F301B2F362FD6D5D3
3340390B3C29143B29083028093B2F195D480559381D7350004529133B331E2F367486928496A2
8F9CAC969EB1AAB2C7B9BFD5C2C8DEC8CEE4CDD5E8D0D8EBD4DDEED7E0F1D8E1F2D9E2F3DAE3F2
DBE4F3DDE6F5DDE6F5DEE7F6DEE7F6DFE8F7DFE8F7DFE8F7E0E9F8DFE9F5DFE9F5DFE9F5DFE9F5
DFE9F5DFE9F5DFE9F5DFE9F5E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E1E9F4
E1E9F4E1E9F4E1E9F4E0E8F3E0E8F3DFE7F2DFE7F2DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E1EFFAE6ECFFE9EFEFE5EFEEE3EAFFE7EBECF2EEA4
FBEB7AF1F27D767233CECE76F4F688E8E189B8AC62DACF7FFAF97BFAF269FCF454FFFD2FFCFE3B
F9FB76FDFF84F8FB6CE7DE692E2C062D2413A09962F8F982F6F686D7D28E6C673D383212312A31
40372E5347374E412E534B24AEAD5BF1F378FFFF70FBFD80FCFD73FDFD67FDFE62FDFE5BFDFB46
FEF723FFF406FDEC00F5DD00EFCE03E8C008DCB303D6AA01D9A503D8A003D89D01E99811D5811E
A05D42966755A16B61A55E409F4A36972910AB341EA82310B52912B12408B52B0EB1290FB32C18
B8382FAB4433A55242BC7070C17F8DB27D8FA8737D9E5D6193575798615E91625A8E635A8C5D55
96696469554C22281A1C2814212C1C092F1A26372D808C88232E2A0531220C2E20153327002E21
01463305583E014D3106402A00261809241F2035387D91989DB0BE8E9FB38594ABA5B0C6B2BACD
C6CDDFC9D1E4CCD4E7D1DAEBD4DDEED7E0F1D8E1F2DAE3F2DBE4F3DDE6F5DDE6F5DEE7F6DEE7F6
DFE8F7DFE8F7DFE8F7DFE8F7DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5E0E8F3
E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E1E9F4E1E9F4E1E9F4E1E9F4E1E9F4E0E8F3
DFE7F2DFE7F2DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E1EFFAE6ECFFEAF1E9E5F0EAE2E7FFE6EBE7F3EF96FEE97EF3F0875E512EECE49CF3EE76
FAF170F7E96FFEF087FCF478FBF36AFEF655FFFF30FEFF3DFBFD78FFFF87F6FA6FE0D86B3C3B27
514922E4E074F4F75EE0E37C3F3C19322D1A6C6749B3B260DDDE69E3E462EEED79F7F98BF5FA7A
F9FD72F6F76FFEFF83FDFE72FDFE64FDFF5EFDFE5AFCFA45FDF622FEF206F9E709F4DB05EDCD00
E6C200DEB800D7AE00D5A401D49D05D0A204DA9708C57E02A765339F674E9E5F68A3645BAA6D6C
B96A59B25647A4382BB94432A9351CA83A21AD422EB54D40C86D5BBD7578C4849CBA7893B0717A
9F6D629365589F69679B6A65976461906866886B678E6666A06A6A472317343015272B1A282A1D
012813617D71415F551C26250B34260D281F1528140A2C1B03322821524C1239340B2A2208281B
002312091F1C243C3E6E869297ADC2899DB576859A969EB1AEB5C5C5CDE0C9D1E4CED7E8D3DCED
D6DFF0D8E1F2DAE3F2DCE5F4DDE6F5DDE6F5DEE7F6DEE7F6DFE8F7DFE8F7DFE8F7DFE8F7DFE9F5
DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3
E0E8F3E0E8F3E1E9F4E1E9F4E1E9F4E1E9F4E1E9F4E0E8F3DFE7F2DFE7F2DDE6F5DDE6F5DDE6F5
DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E7EDFBE6EFF4E4EDFCE2EFF7
E4EAFFECE9E4F6EE8CFDE978F2EF9061571AFBF3A0F6F171F5EB70FFEF7EFEED6BFFF566FEF461
FDF650F8F931F9FE42FFFF81FFFF90FBFC70F9F764E6D36CE8DD5FF8F663EFF16C868542858178
929288E4EBBFF2F491F0F080F6F372FDF76FFFF770FBF772FCFE77F7FE72FCFD75FEFF6FFDFF65
FBFF55FDFF46FFF932FFF118FDE805F3DF06EFD502E6C700DFBD00DCBA03CDA800D5AA0ECC9D09
D7980BCD9304C18A09A367339659549D685AA4716D9C6B64A47D80AE8488B68589B27B80AE7377
B2757ABB7E83C1868AB5888FAC7F84A275789D73749E75739E75739B73719A7272976A6DA17373
986C699C7975927B75584A41382E223128172821110F200D0722137586802C3C3B20413A0C382B
042A1D0035210134230F3E2E194136092D21133127092316061E110E1E110A2618143C346D9394
8AA5B08497A88196A789A3B092ACB9B5C5D5CFD1E6D1D2E6D5DAEDCFDBEBD3E0F1D9E4F6D5E5F5
D8E5F5DAE6F6DEE7F6DEE7F6DEE8F4DDE9F5DEEBF4E0E9F8E0E9F8E0E9F8E0E9F8E0E9F8E0E9F8
E0E9F8E0E9F8E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E1E9F4E1E9F4E0E8F3
E0E8F3E0E8F3E0E8F3DFE7F2DFE7F2DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E7EFFCE6EFF6E4EEFAE2EFF7E4EAFFEAE9E4F4ED92FDE978F4F37D
BEB661F9F18CF9F369F9F06FFEEF7AFBEC6BFFF164FEF365FEF945FAFD26F9FD46FDFE87FCFE90
F9FF76FAFC74FFF794F7F06BFBFD54F1F556A9A742534D2DC2B9BCA49FA5ACAA91DFDFA1FDFF94
F2F46CF5F768FEFC73FBFC72F9FC6FFBFD6CFCFF6DFCFF66FBFD54FBFA3EFFF426FEEC10F9E200
EAD000EACA06DBB304DDB40ED3AD04D2AC00CAA400C9A000D49C0BC99202B582039C6230A26962
9F6B5D986762A576709F7F84AE8B91BA959DBE969FBB919BB88F97B68B94B48990B28A92AD858D
A98287A88184A68282A48080A27E7EA17D7DA37E859F7B7FA17F7E997F7E847572362D2849453A
34302429281620331F021E0F5D706A283B391A3B34184236163A2E123D2A042D1D072B1D002013
0723170721140D251715301F0C2819052415052821284F4C668E9087A9B2A1BBCA9AABBD849BAB
A8C2CFA4BBC9BFD0E0CDD5E8D6DBEFD3DAEDD7E2F4D5E5F5D9E6F6DBE7F7DEE7F6DEE7F6DDE7F3
DCE8F4DDE9F5E0E9F8E0E9F8E0E9F8E0E9F8E0E9F8E0E9F8E0E9F8E0E9F8E0EAF6E0EAF6E0EAF6
E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E1E9F4E1E9F4E0E8F3E0E8F3E0E8F3E0E8F3DFE7F2DFE7F2
DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E4EEF8E4EEF8E4EEF8E5EFF9
E5EFF9E5EFF9E5EFF9E6F0FAE5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E7EFFC
E6EFF8E5EDFAE2EFF7E3EBFEE9EAE4F4ED9DFCEA7AF5F267FFF889F7EE75F9F263FDF46BFBED73
FDF06EFDF066FFF663FEFB3EF9FE1EFAFE47FFFC9DFDFCBBF9FE9AF9FF7EF5F76FFCFF66F7F852
FFFF55FEFF5BDDDD57908D3E5E5836807C799894937B7569D8D5A0FCFE93F8FB6CFCFD64FFFD6C
FBFF66FDFF69FEFE62FCF94CFDF52EFEEF16FBE305F4D800EDC808D8B100D2A702C99E02C99E02
CAA202CBA600C6A100CD9B04C49404B082089460319B66609D6E5C9C6D67A67974A3848AAC919A
B79FADBCA7B8BCA9BCBBA6B7B6A0ADB09AA6B1939DAF919BAE9098AE9196AD9094A98C90A88B8F
A98A909D818FA288919F8B8DA99B9B362D2EB2B1AFD0D2CD3A40362A311F0C210E243F30637871
1B302B17342F173B31143429122E22143024142B2125393017271D0E201410271714311D032C1A
082C1E0B2F23003024316A615F93918FAFBA9BAABFA2B7C889ABB783AEB795B7C3B4C5D7D6D8ED
D6D8EDD4DDEED5E2F2D7E4F4DAE6F6DCE5F4DCE5F4DDE6F5DCE8F4DDE9F5E0E9F8E0E9F8E0E9F8
E0E9F8E0E9F8E0E9F8E0E9F8E0E9F8E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6
E1E9F4E1E9F4E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3DFE7F2DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E6F0FAE6F0FAE5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E7F1FDE6EEF9E6ECF8E3EDF6E1EDFBE5ECE5
F1ECACFCEB7FF8F163FCF276F9F071FBF265FDF469F9EC6CFFF371FDF265FFF857FDF83AF8FA1A
FAFE37FFFFA0FFFAEAFBFACEF6FF8BFAFF86FCFF6EFFFF62FAF45EFAF460F7F459FFFF6DE0E25B
A8A95B514D2AA49A9B68614FDDDE8EF7FB73FFFF74FFFB71FBFF60FDFD5DFDF94FFFF734FFF217
FDE805F3D600EAC600D8AC01C89F00CFAA04C69F04C59C0CC2990DBB9609B49101C49900BC9305
A9810FA77A519566609A705AA1766FA47877A7868DAE929EB4A2B2B8ACC2B9B4CABAB5CBBBB2C3
BAAFBFB9A7B3B5A3AFB2A1ABB29EA7AF9BA4AE99A2AD98A1AE98A4AF9AA9A4949EBDB4B7615D5C
737172E2E4E3E8EEEA3E4A40253220091B0B6F85783B5049273C37344B45142D27142B234B5753
A5B4AFC2D1CCC8D3CFBDC3BF8B958D1B2F240F2E1E052F2109352404372400372000402F225B54
557C8397AEC09AAFC0A4C1CF759BA68FB3BF9DB9C7B7C6D9C5CADED9DAEED1DDEDD5E1F1D8E4F4
DAE3F4DBE4F3DCE5F4DCE8F6DCE8F6DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7
DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3
E0E8F3E0E8F3E0E8F3DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E4EEF8
E5EFF9E5EFF9E5EFF9E5EFF9E6F0FAE6F0FAE6F0FAE5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E3F1FAE7EDFDE8ECF8E5EDF8DEEFF7E3EEEAEFEAC0FAED87FFF575F2E76BFDF177
FFF371FEF26AFBEF69FFF46CFCF25DFFF845FFFA2DFAFA10F9FE1DFEFF6CFFFBC3FCF8D2FDFFB1
FBFF91F2F87CFCFA7FFFFC80FEF866FFFF54FDFC52FFFF6BF9F959F1EE6BBCBA55B5B553F8FB88
F6F873FAF772F9F377FDFE5AFCFB4BFDF532FFF116FEEA00F6DA00E7C300D8B001CEA300CCA617
BC9C25A88817BD9B1FBF9B11B18D03BB9913BB9400B9930C93700AC69D81A077759D796399736A
A67E7FAB838BB1919CB9A4B3BEB2C8BFBBD2C2BED5C3BED2C3BCCCC7BCCCC2B7C7BDB2C0BAB0BB
B9ADB9B6AAB6B6A8B7B6A8B7BCABBBBCB5BD919392323731D0D2CF6C716DC2CCC43A483B203320
1323167F8F85273A34394E493D4D4A14232082918EE3E8ECDDE9E9D0E0DFDEEAEADEE4E4EAF0F0
C5D8D444625A10382F073C2C00412800472C00382204392F18464655808792AEB992A8B6A6B9CA
8AA4B584A8B699B9C6C0CDDED0CDE2CFD8E9D4DDEED9E2F3D7E3F3D8E4F4DAE6F4DDE6F5DEE7F6
DEE7F6DEE7F6DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5
DFE9F5DFE9F5DFE9F5E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E6F0FA
E6F0FAE6F0FAE5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E1F2FAE7ECFFEBEBF7
E5EDFADEF1F7DFEFEFEBE9D2F9EC8EFFF17CFFF176FBEC75FEF076FFF266FFF363FFF361FDF451
FCF835FFFD1AFEFC0BFAFA0EF9FE25F8FD58FBFC96FFFEBAFFFEC7FBFC9FFAFC7DFDFE72FFFF77
FDFB6AFBFB5FFCFD5AF9F744FBF756FFFD6EF4F365FDFF69FAFB5FFFFF6BFFFC71FFFD4CFFF836
FFF019FDE602F7DA00EBC500D9B006CDA10CC7A000B5942D795E334E370EA38B33B3970FAF9000
C09D0FB79300AF8B109A761EA07968BA939691715AA28077A67F84AF888DB5949DBCA6B3C1B4C5
C4BCD1C5C2D7C9C4D8CBC6DACBC6DAC8C4D5C5C1D0C5BECEC4BDCDC1BACABFB8CABFB8CABFB4C4
C1C2C7333F3B323F3697A199383F38C3CFC5324436132E1B18281B6D7A71253A3329403A3B4A47
727C7BDFEBE9DEE3E7B1C3C366817C77908C9EACACDDE7E9E4F6F89DBAB8123B35074132034D36
004B31044330043A2D00322A0C453F517A7C98B0BAA9B1C4A1B2C487A9B58AB0BBACC2D0C1C2D7
CAD1E3D1D8EAD6DFF0D6E2F2D6E2F2D9E5F5DCE5F6DCE5F6DEE7F6DEE7F6DEE7F6DEE7F6DFE8F7
DFE8F7DFE8F7DFE8F7DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5E0E8F3E0E8F3
E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E6F0FAE6F0FAE6F0FAE5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E0F1F8E7ECFFEDEBF8E6EEFBDEF3F8DEEFF6EBE8E3F7EB97
FBEC77FFF872FBEC6FFBEB71FFF561FFF357FFF254FFF545FBF52DFFFB19FFF61AFDF21EFAFA10
F6FD1BF8FB4AFEFD71FAF8A5FFFFB2FFFFACFAFB93F8F982FFFF83FCF87AFDFA77FFFF60FCF863
F7F169FBF569FEFB60FFFF58FEFC51FBF94EFFF935FEF31FFDE706F7D600EAC201DCAF0CCFA211
C69C12C29E16987E3443352C251B1C7C6E41B29A30BF9D15BE9807B48F00B79220916D239D7671
9B787FA488729E7D76A9868DAE9196B39AA0BBA7B2C1B5C1C5BECEC8C5D8CCCADFCFCDE3CECBE0
CDCADDCCC9DCCCC9DACAC7D8C8C5D8C8C5DAC9C7DCD4D1E25D686C3047412E453B314039626D67
AABBB1152D1D0E341F14281C4151470F2B1F1A39310F221EAFBBB9D7E7E49FABA919372F022C20
0D352A17302CB4C2C3CCDEE2B1CBCC13463D0A4438064636003E2C034332044233054334034134
0F483F48707098AEB9AFC0D099B3C28DAAB89CB3C1A9B9C9C1C6D9C9D0E2D1DAEBD1DDEDD4E0F0
D7E3F3DBE4F5DAE3F4DDE6F5DEE7F6DEE7F6DEE7F6DEE7F6DFE8F7DFE8F7DFE8F7DFE9F5DFE9F5
DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3
E0E8F3E0E7F7DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E6F0FAE6F0FAE6F0FAE5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
DFF2F8E7ECFFEDEBF8E7EDFDDEF3F8DDEFF9E9E7ECF7EA9BFDEF74FCF161FFF46FFBEC6DFFFA60
FCF14AFFF24CFFF53CFBF52DFFF522FFED31FFEB38FFF628FAFA20F4F81FF2FA0FF2FD41F7FC6A
FCFF91FFFFA1F8FC9BFCFC9AFFFF89FDFD6BF1F761FEFF5DFAFF4AFFFF51FFFB62FDF660FEFA51
FCFB3EF7F01CF8EA0BF5DC00ECC500DEAC0BCE9C17C59817C39B15B6932D857230181702222423
2E2212A18448BA932ABC920CBB9409A78116A07A39A17A7B9B7783A18570A1827DA7868FA8939A
B09DA3B9ACB5C6BCC5CBC7D5CDCCDECCCEE3CCCEE5D2CFE4D2CFE4D2CFE2D0CFE1CDCCDECBC9DE
CDCEE3D2D3E8979AAB3C4D5433524C28463C253A33A7B6B163786F1A392904311A7B9385516258
1C3E300D3628162F29B2C2BFD5ECE671827A05291B053A26073A2707281FA4B7B5E5F9FA9EB8B9
17564B124A410E413A0C463A054A38004A36004331013C2A004133114940395F6290A8B4A7B8CA
A4B7C899B0C0A1BBC8B7BCCFC1C8DACBD4E5CDD9E9D1DDEDD6E2F2DAE2F5DAE2F5DDE6F5DDE6F5
DEE7F6DEE7F6DEE7F6DEE7F6DFE8F7DFE8F7DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5DFE9F5
DFE9F5E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E7F7E0E7F7DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E6F0FAE5EFF9E5EFF9E5EFF9E4EEF8E4EEF8DFF0FAE6EFF6ECECF4E9EBF8E4ECFF
E1EDF9E5EAE4EBE6D2F8F17CFAF365FDF265FEF164FCF54DFCF449FDF147FFF031FBF036FFF42C
F9EB26FCEB3BFFF042FAED2DF9F027F9F12EFFF21FFDF41DFFFC21FDFE34FAF867FEFAA1FFFEB4
F6FB9FFFFB76FFFD6CFAFC5BF7FB4EFBFC48FFFC41FFF638FDEF2CFAEA18EFD800F3C412E9B007
D3A200C59B22BE9926BB9324BB803A978B2955521F1D10072A2319504118B39330B6911EB79116
A48228997A4E987C709C7E7EA08385A88B8DAA9194B1989BB5A0A7BEAEBBC7BBCFCFC7DED0CEE4
D0D1E6D0D3E6D3D1E6D3D8EBCAD6E6C9D0E2D2D0E5D7D2E8CDCBE0BEC3D6495B5F3A5C5B264F49
21403A859892C0CDC61F3B2C093E24112615B2BCB43F504A133F32063B290A2E22AABDBBE3F5F5
CECECE333C390931260D382E646F71CFD7DAD0EDE99DBCB7557A731C3D360D4C3B00523B064A3D
09423900453300462F074129044531004C3C43515E8399A7B1BCD0A1B8C88ABDC1A5AEBFBEC1D2
C8C5D6C8CAD7CEDAE6D0E2F0D2E1F4DCE7FDDBE4F3DBE4F3DCE5F4DDE6F5DEE7F6DEE7F6DFE8F7
DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7E0EAF6E0EAF6E0EAF6E0EAF6
DFE9F5DFE9F5DEE8F4DEE8F4E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3DFE6F6
DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E6F0FAE5EFF9E5EFF9
E5EFF9E4EEF8E4EEF8DFF0FAE6EFF8ECECF4E8ECF8E2EEFEE0EEF9E5EBE9E9E7DAF6EC8DFAF26D
FFF361FFF25DFCF44BFBF142FCEF41FEEF32FAEC34F6E72AFCEC35FFEA47F6E03FF8E737FFF13F
F9E840FEEE36F9EB32F6EE29F8F51CF7F91CFAFD34FCFE52FCFD61FFFC6DFFFF66FFFF59FCFD47
FBFC36FFFA24FEF60FFBEF00EFDC00F8DB00E5B612CF9C0BCAA21CB69935AA923A947B399E784B
978C3D8F832F46340E13120E2325176D5823BE9C38B48C1BA27E329978599A7D799C7F81A08481
A78D8EAE949DB29EA0B7A6ACC1B3C0C9C0D3CECBE0D2D0E6D1D3E8D2D5E8DCD9EED1D4E7CDD4E6
D0D5E8D4D5E9C9CADECFD8E96C7E8C496566365653314E4A8D9D9CDFEAE65D6A6315362503381E
2E4334C4CFC72C413C134335003A26133C2E39504AD4E6E6D1EAE6CBE1DEA8B6B7C3CED0C8DADC
E0F4F5E0EFF4D0E2E6C6E6E3597672144E3F00503A1052460E463D01463400452E00472C043E2F
0E5B4B12584E399E906CA1A5AAB2C7ABB6CAAFBBCBA8AEBEBAB9C9CDCFDECED8E4C8D8E5D7E4F5
CDD8ECDBE4F3DBE4F3DCE5F4DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DFE8F7DFE8F7DFE8F7DFE8F7
DFE8F7DFE8F7DFE8F7DFE8F7DFE9F5E0EAF6E0EAF6E0EAF6DFE9F5DFE9F5DEE8F4DEE8F4E0E8F3
E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5
DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E6F0FAE5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E1EEFEE6EEF9
E9ECF3E5ECF4E1EDF9E0EEF9E3EDEFE6E8E5F4E6A7FAF075FFF456FFF251FDF147FBEE3FFCED3C
FDED36FDE83DFFED40FBE440F5DD3FFEE743FCE734F2DF2BFDE83FFCED30F9EC2EFBED35FFF13C
FFF231F5EE19F6F113FFFA1EFCF92EFEFD33FEFD31FCFA2BFCF721FFF313FDED02F9E600F5D300
DCB400CEA205C7A11AB49A39937F444D41193327272E1E0F746A359C86179F84371D1E0E091416
2F1F0FA3852BB08828A079409975699D7E84A08483A18881A89392B09AA7B4A5AABCAFB8C7BCCA
CCC8D9D0CEE3D1D3E8D1D6E9D3D8EBDAD8EDD4D5E9D4D5E9D3D4E8D3D6E9D2DBEC94ACB843656E
3F6864304D4B8C9C9CD3DCDB747A78283E32153C290C3C262F4435AEBFB714322A0C423400402C
023524102E26546666B4C8C7CAEFE8CDE2E3D7DEE4DAE9EECCD7DDD9E2EBD1F5F5D0EDEBCEE4E2
184A3E0855410A493E0C443B034836004730004634053F3104473603382E02614D3B93876D959D
A4B9CCA8B5C6A1A8BAB5B6C8BBBDCCBFC5D3CED7E6CEDAEAD8E0F3D8E1F0D9E2F1DBE4F3DCE5F4
DCE5F4DCE5F4DDE6F5DDE6F5DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7E0EAF6
E0EAF6E0EAF6E0EAF6DFE9F5DFE9F5DFE9F5DEE8F4E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3
E0E8F3E0E8F3DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E6F0FAE5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E2EEFEE5EDF8E6EDF3E3ECF1E0EFF6E1EFFAE3EDF7
E5E9F2F0E4BAF5ED7EFCF34CFEF142FEEE41FCED3CFBEA3AFDE93CFCE53DF1D937F8DF45FDE34E
FAE149FAE146F6DE46F9E050F5DD47FEE940FCE83BF7E03CFDE739FFF223FFF310FFF40FF5F300
F9F704FBF80BFCF60CFEF30EFFEB0EFBE00BF5D506E2B60FDCAB10C79D0DBCA23385713F39250D
241800100A0A2121172C2805A38724AC871D70652F0B0D004C3A12B09635AE85359D764D987474
A0828CA48B86A58F81AB9796B2A0B0B6ACB4BFB8C0C8C4D2CFCEE0D0D3E6D1D6EAD3DAECD4DBED
D0D9EAD5DCEED7DAEDD2D3E7D2D7EABBCBDA57757F4F787E406A667E9293D3E1E151615E3C5047
1338270837230E33216D8376607A711D453C06433300442F0037230B2F25172B2989ACA6C5E2DE
E0EAEC7383832150461E5349476E6BB6D8D7D2EAEACDDDDD315C520F5644114F420C453C034836
004531044132104D3D063F2C15282200271C0A44381C45475C8F92B1C4D3A8B5C5A4ABBBB8BBCA
B9BBCACDD0E1CDD3E3D3DAECD3DCEDD5DEEFD8E1F2DAE3F4DBE4F5DBE4F5DCE5F6DDE6F7DEE7F6
DEE7F6DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7E0E9F8DFE9F5DFE9F5E0EAF6E0EAF6E0EAF6DFE9F5
DFE9F5DFE9F5E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3DFE6F6DFE6F6DFE6F6
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E6F0FAE5EFF9E5EFF9E5EFF9E4EEF8
E4EEF8E5ECFCE6EEF9E5EEF5E2EDF1E1EEF6E2EFF8E3EDF9E2E9F9EBE6C8F0EB8FF7EF4FFDEE39
FEED3FFDEB3FFAE83CFAE440FFE746F7DD40F7DE44F6DF44EEDB41EDD946EFDD4BF2E14DF5DD45
F6E03CF5DE36F9E23CFFED36FDEC18F6E60AF9E717FCF012FDF111FDF20AFEF200FFF000FFE701
F7D504EBC403DFB509CB9A0FC49C2DA490512D1B05654C2495823D7F7A362220071D1C0083662A
BB911BB29327786115B59938B5992EA88244987557957576A0858CA79088A79686AD9E9BB1A3B0
B9B3BDC1BFCACCCBD9CFD2E3D0D5E8D2D9EBD4DDEED5DEEFCFE2F0D1DEEED7DCEFD4D7EAD8E1F2
7C8F9D5677804A7379416561BFCDCE485E5B1F483A224B390D412B033922122C1F84A09222463A
17493D03423100402A04452F032F203B4F4DD2EFEADCE8E87E938E144434085038005238216C57
356057D4E9ECE3F1F23860571358451353450C483E004435054A37004631074631043B2408321E
12342300160D14171E113E3B64828CA6C1CAA2B2BFA2AAB7B9B8C8C1C0D0CCCFDEC8CFDFD0D9EA
D4DDEED8E1F2DAE3F4DAE3F4DBE4F5DBE4F5DCE5F6DEE7F6DEE7F6DEE7F6DEE7F6DFE8F7DFE8F7
DFE8F7DFE8F7DFE9F5E0EAF6E0EAF6E0EAF6E0EAF6DFE9F5DFE9F5DFE9F5E0E8F3E0E8F3E0E8F3
E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E6F0FAE5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E6ECFAE6EEF9E4EEF7E1EEF6
E3EDF6E4EEF8E3EDF9E2E9F9E5E9D8E9E8B0F1E96AF7EB3DFCEA40FDE743FBE63DF8E23EF3D736
FAE041F0DC3FF0DF4BECDC63CEBD61BCAC54BFB34FE8D55FF1E15AF2E34CEEDC3EEEDC34F5E12A
F9E522FBE520FCE923FDEB1DFEEB12FDEB01FFEA00FBE000EFCB05E2B708CCA700CC9B1BBF9B45
64572B392F00BAA13AA48614A19026776C3E0D0C007B6239BF9316C59C0CBA9218B99410B39235
A07D5395775F947B779F898BA7948EAC9B93AFA3A3B3A9B4BCBCC8C4C6D3CED1E0D0D6E6D1D8EA
D4DDEED6DFF0D7E0EFD0E6F3D3E0F0D5DAEDD5DAEDCCDCEB627D885E838B40676E9EBCBAACB6B8
25463D225944194834063D26023E251731246A8E8018483A063E3102403100412C00462E0B3B2B
425953E1E9EBE6ECEC2D574902482E01422A105840115C45477B6ECCE6E7E4F2F351776C094E3B
0143350C4B40044B3B004332004E3500412A02311D072E1B002D1828664F153029002F22103C3B
618989A3C0C499A6AFB1B0BEBAB6C5C4C3D3CAD0DECED7E8D2DBECD7E0F1D9E2F3DAE3F4DAE3F4
DBE4F5DCE5F6DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DFE8F7DFE8F7DFE9F5DFE9F5E0EAF6
E0EAF6E0EAF6E0EAF6DFE9F5DFE9F5E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3
DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E6F0FAE5EFF9
E5EFF9E5EFF9E4EEF8E4EEF8E7EEF6E6EFF8E3F0F9E1EEF7E4EDF6E6EDF7E5EBF7E1E9F6E0EBED
E5E5DBEDE594F5E84EF9E642F8E447F7E53DF7E237FEE33CF3DC38EEDE41E9DB5E968648392622
2A19212E211833250A7A6E3ACBC064F2E660F3E345F3DE33F5DD23F4DA11F9E216FAE415FAE512
FAE407F9E000F4D604E8C10CDBAF12CCA50CCB992AAF8D462721005E5C11AF9413BE9426A88E2D
87733E191100887238C49C19C39E08C5A117BC9627A6814C977863947A6B98847DA29090A79798
AE9FA4B6AAB4B9B1BEC1C3D0CACDDCD0D6E6D2D9E9D3DCEDD6DFF0D9E0F2D9E0F0D3E0F0DAE1F3
D7DAEDD7DEF0A8BECB668B93537E84406D72829F9DCDD5D83054481249322143320B3A26003D24
244638659484114B3C0D4B3E0B4537064532004228083D2B334C46CDE5E5E1EFEF869995194234
0C45321C59471E493FB6C8C8BDDBDDBCCCCC1C4237105540094E3C07493B004231014433074A38
0B4B3A13342B142B23052F21359A78024631054F381D564D0B403869928EA1B4BAAAACB8B4ADBD
BBBAC8BEC4D0C7D0E1CCD5E6D2DBECD6DFF0D7E0F1D8E1F2DAE3F4DBE4F5DCE5F4DCE5F4DDE6F5
DDE6F5DDE6F5DEE7F6DEE7F6DEE7F6DFE9F5E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6DFE9F5
E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5
DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E6F0FAE5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E7EEF4
E5EFF8E3EFFBE1EDF9E4ECF7E8ECF5E6EAF5E1E9F4DBECFCE2E2FAEDE2B4F4E75DF6E446F5E047
F5E33BF5E530F7D943F8E143EEE13BE8E1528B8531221B00545033B4BA7CA7B46548491F393011
A09249F2E060F3DC38EDD116FEE117FAE113FCE219FCE219F9DF10F5DA05EECF02E0BC04D5AB07
C79D15C28F2499793C1F1B12615D2DB4932AB98934AA8E2D7F6A351E1200A4903ACAA41DBC9D11
B79F19B18D41A37D6A93766E947E739D8C84A59595AA99A3B2A1B3BCAFC1C0B8C7C6C9D8CED1E0
D3D9E9D4DBEDD5DEEFD8E1F2DBE2F2D9E0F0DADDF0DEDCF1DBD9EEDAE3F484A0AB59848A528387
3E6F733B5957CBD3D589AA9F194A352135290E33210042271F4B3A2A5D4C003F2E064638094134
023F2D004329083F2C19322CB2BFC5CFEFECD4EEEBB4C9C49EB9B2B1BFBFDFDFE7D1DEE4C7E6E8
495B5B234B4009513B024937014536034C3B04473600413310433A0C2625002A23437B6E277C65
1B463C0A523E024534104C401D4C44778F91A4A6B2ACA6B4AFADBBB8C0CBC0C9DAC5CEDFCDD6E7
D2DBECD5DEEFD6DFF0D9E2F3DBE4F5DCE5F4DCE5F4DCE5F4DDE6F5DDE6F5DDE6F5DEE7F6DEE7F6
DFE9F5DFE9F5E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3
E0E8F3E0E8F3E0E8F3DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E6F0FAE5EFF9E5EFF9E5EFF9E5EFF9E4EEF8
E3EDF7E2ECF6D6EEF0DFEDF6E8E7ECEFDFBDF4DD77F9E045F6E032F0DE36F1DC41F5DF3EECD837
E8DF46C2BE5D2C1F173B2C25D5CE76E5DA5EDFDB6D817D58292607ADAB47E9E045F0DD29F8DA3E
F0DB1EF3DC1EF5DD17F7DD0EF6D806EFCB03E1B808D5A70BD59414BE94248977392C23122C2200
9A8A35AE963E95744130261A605209BFA632CBA331C39828B8932BAE8E5597777A9980799B837F
A28C8EAD9AA0B0A3ADB2AAB7BBB9C7C6C8D7CCD1E4CFD4E7D3D8EBD6DDEFD7E0F1D9E2F3D8E4F4
D8E4F4DAE6F4D3DFEFD6DFF0DAE2F597A4B56C87924F7A803D75742E504F8DADA886AA9E1C4130
1D3E2D062F1F0339292660521953450B483903413202423100402F003F2E033D2E033C2B28433E
98AEACD8EAEEE2EFF7D6DFE8E5ECF4DDE6EBB3BDBE3254460F4535114E3F054C3E19746228816F
00493900564003533A0E382A11312600312124564B014335106E540B4030093824003320175041
21484398A3A9A39DA9B1AEB7AEB3B7BCBCC8C4C6D3CCCFE0CED5E7D3DBEED6DFF0D6DFF0D9E2F1
DCE3F5DDE4F6DEE5F7DEE5F5DEE5F5DEE5F5DFE6F6E0E7F7E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5
E0E8F5E0E8F5E0E8F5E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3DFE7F2DFE7F2
DFE7F2DEE6F1DEE6F1DEE6F1DEE6F1DEE6F1DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E6F0FAE6F0FAE6F0FAE5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E6F0FAE5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E3EDF7E2ECF6E1EAF9DDE8ECDEE6E8
E9E7DBF0E6A8F3E562F7E23BF9E139FFE73AF5D938F4DC48E0D36157521A262717252317353118
93843FBEBA70928F6C241B1C493F0EEDE060F1DA3FF7D939F2DC24F3DE23F6DD1EF6DC13F2D608
EBC905DEB606D3A708C99E1EB4981D9C8D382E230D21151F271918453828281809331F00B8A44B
C1A621BC9917C59C32B48F3EA282599A7C7C9C857F9F8A87A89495B09FA7B4A8B4B8B2C0C1C0CE
CBCDDCCFD4E7D2D7EAD5DCEED8DFF1D8E1F2D9E2F3D8E4F4D8E4F4D9E2F1DAE3F4D7E0F1D8E0F3
B7C4D56C8792547F853A7271305D5A21504829514619402E0E3E280A3B26002F1F2F6356104A3C
05423302403102423100402F003F2E03403005402E053A281144352B594F69928C6D948F476C65
254A42153B3010433214423503463500514000483B004F3F439C881A67551A54450C2C211A2F28
0A2B220A392F094B3D135C49003324093A250034211A5042133733889399A29CA6A59FA9ABAEB3
B7B5C2C0BFCDC6C9D8CAD0E0D1D8EAD3DCEDD5DEEFD9E2F3DCE3F5DCE3F5DDE4F6DEE5F5DEE5F5
DEE5F5DFE6F6E0E7F7E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F3E0E8F3
E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3DFE7F2DFE7F2DFE7F2DEE6F1DEE6F1DEE6F1DEE6F1
DEE6F1DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E5EFF9E5EFF9E5EFF9E5EFF9E6F0FAE6F0FA
E6F0FAE6F0FAE5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E6F0FAE5EFF9E5EFF9
E5EFF9E5EFF9E4EEF8E3EDF7E2ECF6EBE8FBE2E6F2D9E8EFDCEBEEE1EAD5E8E49BF1E05EF9DD3B
F1D92EF6DF37EDDB3DC0B4521811012B2D20A2AA6EA2AA576357311B1300272317291F27605424
E8DB5BEDD443FCE32FF2DF2BF4DF2CF4DE28F4DB1CF0D40EE7C605DAB504D0A604C09E22C2A227
B29632765F2B1F0E061F13151A14003A3400B5934BC4A437C7A81CBB9A15AE8B2FB49262917464
9F86829F8C88A69293B09DA1B4A7B0BBB0BEC0BCCACAC9D9CFD2E1D3D8EBD6DBEED8DFF1DAE1F3
DAE3F4DAE3F4DAE3F4D8E4F4DAE1F1DAE3F4D8E1F2D4DCEFCEDBEC829AA6567F853A7070285C58
104F442351441F4A37003D2109432A17372A5C82770A4235043E30013F3002423100412F003F2E
02423103422F00452D054B330447351555440B4A39003A2A003E2907452E04452F0D4637024735
004636064A3D044E3F00503E0045340D4A3A06392A19392E0D352A0F52413485720C5D4A004C38
0538250C412F05332613302C838A90938E95A9A4ABA3A2A7AFADB8B9B7C4C0C2CFC5C8D7CCD2E2
D1D8EAD4DBEDD8DFF1DBE2F4DCE3F5DDE4F6DDE4F4DEE5F5DEE5F5DFE6F6DFE6F6E0E8F5E0E8F5
E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3
E0E8F3DFE7F2DFE7F2DFE7F2DEE6F1DEE6F1DEE6F1DEE6F1DFE7F2DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E6F0FAE6F0FAE5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E5EFF9E4EEF8E3EDF7E2ECF6
E9E8F0E4E9FFDBEBFBD4EAE8D6E8E8E3E4DCEBE19CEFE053F3E44BF5E841E5DA30ECE36C524A25
27220E94944CE4E56DE6ED7B7B7B4526260E918F5CD9D75CE8DD45FCE259F1D833F1DD2EF3DF30
F4DD2DF3D920EDD211E4C606D9B403CFA802C79D15C59320C38F2CB78F378C72275C49048D7722
BBA132D0A62EC39A26C09B28B3922BA98A499F8270997F809D8A86A19192AB9B9EB3A6ADB9AFBA
BFB9C7C8C6D4D0D2E1D4D7E8D6DBEED7DEF0D9E0F2DBE2F4DBE4F5DBE4F5DBE4F5DBE4F5DDE4F4
DAE1F3DAE1F3D5DCEFD0DBEDADC3D05D848B3E70712159560C584B17493D1A4532004828003920
46574D738A820B4336053F3103403103433200423000412F00433100442F004530064B36044735
074A39084837064534054431003A25014530004933044736134F430E57460E524300362A034C39
083A2E0F3F2F10241B00281A2B6154053D32196855154D400E432F043424082C222B3F3D828689
9C979D9F969BA59FA3A9A6AFB4B1BCBCBAC7C0C2CFC9CCDBCED4E4D1D8EAD7DEF0D9E0F2DAE1F3
DCE3F5DDE4F4DDE4F4DEE5F5DEE5F5DFE6F6E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5
E0E8F5E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3DFE7F2DFE7F2DEE6F1DEE6F1
DEE6F1DEE6F1DFE7F2DFE7F2DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9E4EEF8E3EDF7E3EDF7E0EAF3E2EBFCE0EAF4DAE8E8D9E7F4
E0E4FDE8E7D3EBE996E9D856EFDD3DF4E240EDDD54D5CF61514D042E25007B6C4DA4A557726E4B
251A2076712FECE950E6D83AF0D746F4D94AF0DC2DF2DC30F2DB2BF1D71EEDD010E5C707DBB603
D3AA02DBAC16D49C25CE9730B78E1CB49722C1A43CC49931C58E19B98E03C39832B38B46A6854F
A78D6C927879A590999E8F8CA3969DADA2AAB8AEB9BDB7C5C2C1CFCCCEDDD3D6E7D4DAEAD6DDEF
D8DFF1DAE1F3DCE3F5DCE3F5DCE5F6DCE5F6DCE5F6E0E7F7DCE5F6DBE4F5D8DFF2CFDAECCCDFED
7C9DA6426E71275D5D0F5B4E174B3E123F2B0046250B3F28A1A8A152615A0E4639074133034031
02413000402F00423000433100422D04443402453406483A0A4E3F044736003828003D2D0D4836
03473200442E09493809413400402F0037260C4033003A29043D2E003320112218002E18063429
0B2B281B745E0A2D290A3F2B00291B1930285C65648A8A8C999397988F92A69A9EA7A2A9B1ACB3
B8B5BEBEBCC9C5C7D4CBCEDFD0D5E8D5DCEFD8DFF1D9E0F2DBE2F4DCE3F3DDE4F4DDE4F4DEE5F5
DFE6F6E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F3E0E8F3E0E8F3E0E8F3
E0E8F3E0E8F3E0E8F3E0E8F3DFE7F2DFE7F2DEE6F1DEE6F1DEE6F1DEE6F1DFE7F2DFE7F2DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9
E4EEF8E4EEF8E3EDF7DCEFFEDFEAECE3E7E6E5E7F3DFE5FDD9E2F3DCE5E4E6E8DAF2DA82F5DF4E
F7DC43F5DB50EDE44BE1E459908E41352F0D1F0C0E2214072B191988783AF6EA5AEBD833F9E433
EBD430F1DC29F1DA28F1D823F1D617EED109E9C704DEB702D5AA05C59905CB9F1CBE9517C6A520
BDA221B59325C5992ECB9721C49F2CA8803BA67E649E7C70977E799E89909F8E98A79998ABA1AA
B3ABB6BBB7C5C2C1CFC8C9DBCED4E4D4DAEAD5DCECD8DFF1D9E0F2DBE2F4DCE3F5DDE4F6DDE4F6
DEE5F7DDE6F7DCE5F4DFE8F9D9E2F3DAE1F4D5DDF0CFDFEEA5C1CC50757B2E5E5E0C5247124C3D
12463005442706301CB7C2BA394A420D4538073F32043E30013E2E003E2D00402F01413000402C
004030004635034D3C014B3A06513D064B39064635003D2C00432E01372703422F003E2A06392A
0F4633003B2604342400392300371F103221003B1D09392B0E332C32947B092E27002C1B0A2A1F
323D39848081908A8C8A84849A9091A69699A59EA5AFA8AFB5B0B7BAB7C0C3C1CEC8CAD9CCD1E4
D2D9ECD6DDEFD8DFF1DAE1F3DCE3F3DDE4F4DDE4F4DEE5F5DEE5F5E0E8F5E0E8F5E0E8F5E0E8F5
E0E8F5E0E8F5E0E8F5E0E8F5E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3DFE7F2
DEE6F1DEE6F1DEE6F1DEE6F1DFE7F2DFE7F2DFE7F2DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
E6F0FAE6F0FAE6F0FAE5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E3EDF7DEF0FCE1EBEA
E7E6EBE7E5FADEE6F9D5E4E7D6E1E5DEDFF4F7F1D9E6DA86ECD551FAE04FF2DF45E5DD3CF4F35D
DEDA55C2B664B3AA43C6BA54E7D95FE7D533FBE633F1DC27F3DF26F5DC27F2DA22F2D718F1D40A
F0D202ECC800E0B602D5A804D3A91FCAA41FBF9C1AC49F1DBF9620C89E3AAD8629AA8A2796763D
A07F5E99786F967A79988187A38F98A3949BACA19FB4ACB9B9B5C3C3C1CFC9CADCCDD2E5D1D8EA
D5DCEED8DFF1DAE1F3DBE2F4DCE3F5DDE4F6DEE5F7DEE5F7DEE5F7DFE6F8D9E5F3DCE8F8D8E4F4
D9E1F4D7DEF1D1DDEDC3D9E678969E325E5F1F5D52115641003E25083C25274837A5BCB2244238
0B4336073F32063E31033D2E003C2C003D2D01402F003E2B024939004734024D39004933014B34
00412C003D2B00392807402D09382800321F0B4B33002C1900311E00372006311E013624052F1B
0C2F1B0B3B23062A1C062E250F4D3E2F574F0939291C362D6B6A68887C7E8B8182918C89928686
AA9698A49BA0ADA4A9B4AAB2B8B1B9BFBCC7C6C5D5CBCEE1D0D5E9D5DCEED7DEF0DAE1F3DCE3F3
DCE3F3DDE4F4DEE5F5DEE5F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F3
E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3DEE6F1DEE6F1DEE6F1DEE6F1DEE6F1DFE7F2
DFE7F2DFE7F2DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E8F2FCE7F1FBE7F1FBE6F0FAE6F0FA
E5EFF9E5EFF9E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8
E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E3EDF7DCECEBE7EBF4EBE8FDE4E5F9DBEAF1D9EDEBDDE6EF
DEDAF3CCE1FCE3E8E1F0E589EED73CF6DC41FAE04BEFD936F6E03CEBE845EAE452EBE14EF2E251
F7E23BEED62BFADF48EFDD23F7DD24F4DB1EF2D611F2D404F3D100EDC800E2B500D6A604C89D10
C79E1EC79929C7922CC2822AB1772E976E3A8D744C90736B91746C957A739C8482A18C93A2919B
AC9DA0B4A9A5BBB5C3BFBDCBC8C7D7CFD2E3D2D9EBD3DCEDD6DFF0D9E0F2DAE3F4DBE4F5DDE6F7
DEE5F7DEE5F7DEE5F7DFE6F8DFE6F8DCEAF7D9E6F6DCE8F8DCE4F7D4DBEEDBE4F5CEE1EFA3BEC7
4D77761E574E06543C00492C07321E2844357395871A42370A4235084033094134063F30003A2B
013B2C013E2E003D2B084736034332074B3600452D04452F003B250639260A3927062F2100331E
002F1C043520003E2501371F082F1C05351F00321D103724002D10042E160E3F2A00412C093B30
074A382753444E615B8C83848B787A8E82828D85839B8F8FA18B8EA2999EABA2A7B1A8ADB5AEB6
BCB9C4C3C2D2C8CBDECED3E7D5DCEED7DEF0D9E0F2DBE2F2DCE3F3DDE4F4DDE4F4DEE5F5E0E8F5
E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3
E0E8F3E0E8F3DEE6F1DEE6F1DEE6F1DEE6F1DEE6F1DFE7F2DFE7F2DFE7F2DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8
E4EEF8E6EFF8E4EDF6E2EBF4E1E9F4E0E8F3DFE7F2DEE6F3DCE4F1D4DFFFD8E1E8E3E4C4E8E294
E7DB65ECDA4AF6DD42F9E03EEDDD3FF2E342F3E443F0DD41EED940F1DC43F5DE40F3DD3AF0DE24
EAD718F6DF17EBD000F2D000EBC400DBAD00D7A40DC5960CB2840AAB811F9B742F8C673B8A684F
88665A8A6962927770907770957C789D8887A59296AA9BA2AFA5AEB5ADB8BFBDD2C5C6DACED1E4
D1D8EAD3DCEDD7E0F1D9E2F3DAE3F4DBE4F5DCE5F4DDE6F5DDE6F5DEE7F6DFE9F5DFE9F5DFE9F5
DEE7F6DEE7F6DEE7F8DAE6F6D8E4F4D5E1F1D2DDEFD0DDEE79919B36646110483B06352308311F
0834233F5E56252F313D5C541A4A3E004030004230024031063F2E013F28003C2000392505402A
09432D023C24043B24003722043B2600352200341D07382205351F04341E012E19002C17002C17
07341F00301A08331F002A17093A2700351F003A240334210B32203C463E6F706A857B79887A79
8D7F7E8F8383988C8E9C8D90A4959AAA9EA2B3AAAFB8B1B8B9B8C0C0C0CCC8CBDACED3E6D4DBED
D6DDEFDAE1F3DDE4F4DEE5F5DEE5F5DEE5F5DDE4F4E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5
E0E8F5E0E8F5E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3DFE7F2DFE7F2DFE7F2
DFE7F2DEE6F1DEE6F1DEE6F1DEE6F1DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E3ECF5E3ECF5E3ECF5E3EBF6
E1E9F4E0E8F3DEE6F3DDE5F2D6E2F2D9DFEFE0DEE9E3DBD0E2D4A5E5D576EBDA4EEDDC36F7E045
F8E042F5DD3BF3DA37F6DA38F8DD38F7DB31F2D726F6D61FFFDE27ECC90FF3CD10EFC710DEB30F
D0A018AD7A079968268B5D228B603387603F88654F9170618E70658E70668F78729C8480A5908D
A49092A39298AA9EA8B5ADB8BBB8C3C8C6DBCCCDE1D0D5E8D3DAECD4DDEED7E0F1D9E2F3DAE3F4
DCE5F6DCE5F4DDE6F5DEE7F6DEE7F6DFE9F5DFE9F5DFE9F5DFE8F7DFE8F7DEE7F6DBE7F7D9E5F5
D7E3F3D4E0F0D2DFF0AFC1CD426C6A144E40053A260D2F1F283F35394A44434F4F1B362D0C362A
00392A003A2B003326003022003320003820003420002E1700351E083C2500331C093A240A3B26
01321D06321B002C15032D17002A140229140D341F06301A002B14063721002B15073622003320
00341E0338240833221E3E2F666B64827F7A867B778879768F81809286869A8E90A09194A4979E
AA9FA5B2A9AEB6B1B7B9B8C0BFC1CDC8CBDACED3E6D5DCEED7DEF0DAE1F3DCE3F3DDE4F4DEE5F5
DEE5F5DEE5F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F3E0E8F3E0E8F3
E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3DFE7F2DFE7F2DFE7F2DFE7F2DEE6F1DEE6F1DEE6F1DEE6F1
DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9E5EFF9
E4EEF8E4EEF8E4EEF8E4EEF8E3ECF5E4EDF6E4EDF6E3EBF6E1E9F4E0E8F3DFE7F2DFE7F2DBE4EB
DAE0EEDCDFF2DCDBEBDAD5D2DAD1B2DBD092DBCC7BE5CE5AE8D356EED851F2DB4FF2DC4BF1D945
EED53DEAD136EFCA24E6C223D5B11BD0AC24B28E1C9F76248F63348A5B418459508C645A8C665D
8260578968618B6E66886D66957A73937E7B9581809C898BA5969BACA0AAB3ABB8BEBAC8C9C7D5
CECFE3D2D5E8D4D9ECD5DCEED5DEEFD8E1F2DAE3F4DBE4F5DCE5F6DDE6F5DEE7F6DEE7F6DFE8F7
E0EAF6E0EAF6E0EAF6DFE8F7DFE8F7DFE8F7DDE9F9DBE7F7D9E5F5D7E3F3D4E1F1D7E3F17B989C
0B41340038250B2B1C8B928BBBC0BC31443E122C210C3225053527023526073326092F22052E1E
05321E08352104311C022F180A361D09331B042E16072E19032A15033117003116002E1303351A
06361C002E1400341700371900301A06372100321C0036210035210E3A290F2F2050645976766E
847B768677748D7B79958585948888998D8F9F9397A79CA4ACA2AAB2ABB3B6B3BCBCBCC6C3C5D2
C9CFDFD0D5E8D6DDEFD8DFF1DAE1F3DCE3F3DDE4F4DDE4F4DEE5F5DFE6F6E0E8F5E0E8F5E0E8F5
E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3
DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DEE6F1DEE6F1DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2
DFE7F2E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E5EEF7
E5EEF7E4EDF6E2EBF4E0E9F2E0E8F3E1E9F4E2EAF5E1E4F3DBE1EFD8E2ECD7E1EAD4DBE1D3D4D8
D2CCD0CEC2C6CDBBB9C6B5ABBFAF98B9A988B5A281B19A78AC9671AB936DA782729E7B689E7E65
9576598B6E4E957A5C876D54866B588C6F617E6153876A5C8F736783685D856C658F77738F7777
928282A09093A79AA1A89CA6ACA6B2BCBAC8C7C9D8CACDDED1D2E6D4D7EAD6DBEED6DDEFD6DFF0
D9E2F3DBE4F5DCE5F6DDE6F7DDE6F5DEE7F6DFE8F7E0E9F8E0EAF6E0EAF6E0EAF6E0E9F8E0E9F8
E0E9F8DDE9F7DCE8F8DAE6F6D8E4F4D6E3F3D3DFEFB7C5CE385B57104332052C1A78857C818B83
011B10012313032C1A002C1A002A1A042E200A3021072E1C07301E0228130C321B0D3018052810
092B1202220A15321C102C16042A1516402A06321B002C15072E19032D1703351C003A1E00311A
033921023922002F1A103F2D0A2C1C3B4C4272797170696380726F8C787794807F98888895898B
9A8F93A4979EAAA0A9ADA5B0B4AEB8BAB8C3C0C2CEC8CBDACED4E4D2D9E9D7DEF0D9E0F2DAE1F3
DCE3F3DDE4F4DDE4F4DFE6F6DFE6F6E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5
E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2
DFE7F2DFE7F2DEE6F1DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8
E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E5EEF7E6EFF8E5EEF7E4EDF6E3ECF5E2EBF4
E1EAF3E1EAF3E3E7F3DBE3F0D7E3F3D6E3F3D2DFEFD3DBE8D1D5DECCCBD3C7C3D2BCB9C0B4B0AD
B2ABA3B1A8A1AEA09DA89996A495929D8C849E8C829E877F9477718364616D4E4B72554F745751
7F65548A6F5E8D72618C70628F7469917874947E809580859A8B909E9198A79DA6B1ABB9BBB8C9
C2C3D5C7CCDFCBD0E3D1D4E7D3D8EBD5DCEED6DFF0D7E0F1DAE3F4DBE4F5DCE3F5DDE6F7DEE7F6
DEE7F6DFE8F7E0E9F8E0EAF6E1EBF7E1EBF7E0EAF6E0E9F8E0E9F8DEEAF8DCE8F6DAE6F6D8E4F4
D6E3F3D4E4F3DBE1EF76818512382D2E5D4B092B1D072116082A1C002D1907362204352000301B
05321E08311F082F1C0C332014311B0C2913133119112F17132F18162E18132613122311252A24
313E356172686F7C735C635C46504812261B103021063E25003118033D25043822072C1B283C31
686D66726F68766B6785767394807F968484958787988D919F969BABA0A8ABA5B1B1ABB7B7B5C2
C0BFCDC6C9D8CCD2E2D1D8E8D3DCEBD8DFF1D9E0F2DBE2F4DCE3F3DDE4F4DDE4F4DFE6F6E0E7F7
E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3
E0E8F3E0E8F3E0E8F3DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2
DFE7F2DFE7F2DFE7F2DFE7F2E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8
E4EEF8E4EEF8E3ECF5E4EDF6E6EFF8E7F0F9E8F1FAE5EEF7E2EBF2DFE8EFE2EBE8DDE7E8D9E6EC
D8E6F1D6E2F2D6DFF0D4DBEBCFD5E5CBC9D4C9C6CDC5C1C2BDB7B7B6ABAFB1A2A9AE9DA5AE9BA1
B1A5A799848B7F596E6632566D32606D2F606C335E6B35595E3A44623F46643F4678535A8C6C71
8D7277937F819E8E91A0939AA79DA6B4AEBAC0BDCEC5C6DAC6CBDFC9D0E3CED5E8D1D6E9D5DAED
D7DEF0D7E0F1D8E1F2DAE3F4DBE4F5DBE2F4DDE6F7DEE7F6DEE7F6DFE8F7E0E9F8E0EAF6E1EBF7
E1EBF7E0EAF6E0EAF6E0EAF6DEEAF8DDE9F7DBE7F5D9E5F3D7E4F4CFE1EFE2E8F6D1D4DD3C504E
0931260B37280A3325092F2402331E05342002311D03301B08331F0B351F082F1A062C1515311A
08240D0D2910153118152D171629161F2D1E6C766BBAC0BEB9C8C3A3B6B0A8B7B2A3A7A6C1C5C4
8798920E2C22023C2300341B00351E0C372410281B646962746F697269647B716F877978978585
978788978C909E989CA39CA4ABA1ACB0ACBAB5B3C1BEBDCDC5C6D8C9CFDFCED5E5D2DBEAD4DDEC
D9E0F2DAE1F3DBE2F4DCE3F3DDE4F4DEE5F5DFE6F6E0E7F7E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5
E0E8F5E0E8F5E0E8F5E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3DFE7F2DFE7F2
DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E4ECF7E3ECF5E4EDF6
E6EFF8E9F2FBE8F1F8E5EEF5E1EAF1E0ECEADDE9E7DDE9E9DEE7ECDAE2EDD9E0F3D9DDF8D5D8F7
D2D5E4D2D4E0CECCD7C4C1CCC0B8C7C2B5C6C4B4C1C2B2BC7C707091778092627C8641709C4B8D
AB5A9C954F837D3F666F40606C3B5B75446470425F6E445CA78898CCB6C296858DA89DA5BFB5C0
CBC7D5C6C5D7BFC4D8C9CFE5CED6EBCCD4E7D2D7EAD4DBEDD5DEEFD6DFF0D8E1F2DAE3F4DBE4F5
DBE2F4DDE6F7DDE6F5DEE7F6DFE8F7E0E9F8E0EAF6E0EAF6E0EAF6E0EAF6E0EAF6E1EBF7DFEBF9
DEEAF8DCE8F6DBE7F5D9E7F4D0E0EFD8E6F1D7E1EAD1D8DE374A48082B240630260A2F270B3726
07301E092E1D113420183B251D402A1E3E27193620112D1419351C19351C1B3720172E1A28382B
858F86C3CAC3304C40062A1C07322106261921352C8B9C94415F53002F1D003A2000381E063A24
0C2C1D4D58507A726F7B6D6A7B706A7F7774857A789789899B8F919C969AA5A2A9AAA4B0B0A8B7
BAB8C6BFBECEC5C6D8CBCEE1CED3E6D0D7E9D3DCEDD3DFEDD9E0F2DAE1F3DCE3F5DDE4F4DEE5F5
DEE5F5DFE6F6DFE6F6E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F3E0E8F3
E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2
DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9
E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E6EEF9E3ECF5E1EAF3E3ECF5E7F0F7E9F2F9E8F1F8E6EFF6
DCE9F9DBE7F7E0E7FAE2E4F9DEE1F4DCDFEEDAE1E9D7DFE2D1DEEECDD9E7C9D3DFCAD0DED0D2E1
C9C7D5AEA9B0918B8DDCD5DDDDC4D7A06E91B469A2B15CA07D2C6E6724504E162F3E0727470F32
50163C5A234A5F30527E5C75BCA5B7DECEDBBDB2BA99919C928E9DB7B8CCD2D7EDCCD2E8C6CEE3
CFD7EAD1D6E9D2D9EBD3DCEDD4DDEED4E0F0DAE3F4DBE4F5DCE3F5DDE6F7DDE6F5DEE7F6DFE8F7
DFE8F7E0EAF6E0EAF6E0EAF6DFE9F5E0EAF6E1EBF7DFEBF7DFEBF9DDE9F7DCE8F6DAE8F5D8E1F0
CBE4EBD3E8EDDCDFE6DAD9DF5D73711D423B30554E14382A123225183324183322112C19122E18
19321C1A301917331A18341B122E17132F18182F1D3F4F44BDC7BF4145441332220D3723012E19
13352423352959695E1E3A2B0F3C27034227013D2307382327433572746F786A697D6E6B837670
8984818A82809B8F91A095999F9AA0A9A8B0B1ADBBBEB7C7C3C2D0C8C7D7CDCEE0D0D3E6D0D7EA
D1DAEBD2DEEED5E1EFD9E0F2DBE2F4DCE3F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6E0E8F5E0E8F5
E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3E0E8F3
E0E8F3E0E8F3E0E8F3DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2
DFE7F2DFE7F2E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7
E2ECF6E3EDF7E3EDF7E3EDF7E2ECF6E2ECF5E4EEF7E6F0F9EAF2F5E2E9EFE0E9F0DDE7F0DBE5EF
DAE3F2D7DEF0D4DBEED3D7F2D2D6EFD1D8EBD9E0EAC0C4C7827D81DACED8E1D0E0C69FBC885482
79497D401F4E3F1A43571E495512474F124D41164445164246143A3C09283D08243C0A233E0E28
4E203A5F4E61AB9AACCBB5CCD0B0D59672A2B69CC9D2CDEBD2E2EFDAD7F4D4DAF0D1E3F1CDE1EA
CFE2E9D9E5F1D8E1F2D6DDF0D9E2F3DEE7F8DDE4F6DEE5F7E0E7F9DFE6F6E3EBF8E2EAF5E1EAFB
E1EAFBE1EAFBE1EAFBDEEAFADDE9F9DCE8F8DBE7F7DBE6F8DBE6F8D9E6F6CFDCECD0E0EDD9EBF5
A5B8BF475A612F47492643411A3B341434271631201C311E1F321C22361D1C2F1C1838230A341C
11372221392C65726B9AA7A034474114311B1C38213B3F3EA4A09DADB6A1CACECD36474F0B4B29
04433202372516382A64716778736F7C6C6D8770788D768099838F978791989399A1A1A3ACACAA
B3B3B3BCBBC1C2C4D0C3CADDC7CDE3CDD3EBD0D7F1D1DBF4D3DEF2D4E1F1D3E3F0DAE1F3DBE2F4
DCE3F5DDE4F6DEE5F7DEE5F7DFE6F8DFE6F8DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6
DFE6F6E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5DFE7F2DFE7F2DFE7F2DFE7F2
DFE7F2DFE7F2DFE7F2DFE7F2DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E5EFF9E4EEF8E4EEF8E3EDF7E2ECF6
E2ECF5E2ECF5E3EDF6E8ECF7F0F7FFE1EAF3DCE5EEDEE7F0DCE5EEDDE3EFD8DEEAD3DAE4E1E7F3
CED0DDC7C5D0827883ECD7E8D5B7D39D799F5E2C5F521D51562457411548390D424D164D450A40
47114248164741103D410F35451135541E3E521D3B3C09283603223B002137052042163155294D
602D6876408E9563BAA87CD3CCB7E0DDD2F4E4E1FCD6DBEFD6DCECD9DFEFD7DDEDE0E7F7E1EDFB
D5E1F1DEE7F8E2EBFCD8E1F2E2EBFADFE9F5E1EBF5E0E9FAE0E9FAE1EAFBE0E9FADEEAFADDE9F9
DDE9F9DCE8F8DDE8FAD6E1F3D9E6F6D8E5F5CBDBE8CDDDEACFE1EDC5D7E181929A475C61284241
2B463F233B2E1A32221B372115351D132F19184028073C22083E260C33217D8C85D3CFD0E1D0D6
BAC5C9C5D5CBCFDDDE92969F797C71C5D8C51E3F34123423003B21114129475F497477627C7666
7C7A6E7B857D7B8E8A888983959595A6A3AEB4ACC1B9AFCABCB5D6C2C2E8C7CEF8C7D5DECAD7E0
CCD8E6CFD7EAD1D7EDD3D9F1D6DCF4DADEF7DAE1F3DBE2F4DCE3F5DDE4F6DEE5F7DEE5F7DFE6F8
DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DFE6F6DFE6F6DFE6F6E0E7F7E0E8F5E0E8F5E0E8F5E0E8F5
E0E8F5E0E8F5E0E8F5E0E8F5DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E3EDF7E6F0FAE5EFF9E4EEF8E3EDF7E3EDF7E2ECF5E1EBF4E1EBF4EBF1FFE1E7F5
EBF3FFE7EFFAE0E9F2E0E7EFD9E0E6E3E8EEE3E7E8CDCED3DFD9E5BFB1C2D8BFD58A6285612D5E
571D5A672B75541E5C3D083C40073E551A5A5D2B6A4B1B4D400E343900313D053447103A461239
461238430C333A02293E062D4D043B420137460B41440D463C023F33003332002B421035522A5C
7354809D87ADC2B3D2E7DDF6EEE9FDDADCEBD4DAE6D3DFEDD8E4F2DBE7F5DCE8F8DAE6F6DFE8F7
E4EEFAE0EAF6DFE8F9E0E9FAE0E9FAE0E9FADEEAFADEEAFADEEAFADDE9F9DCE8F8D5E1F1D6E3F3
DAE7F7D4E4F3D0E0EFD1E1F0D0E2F0D4E0F0BAC8D575868E3C4F533347452A44391439270C3821
173823123C260A422900442600482D0F4F37366052627B7561806E4A543C2E4237153134A0A295
C0BA9A383D1D3E42293445253E48307674687A6E6E8475788A7F7D8884798C8A7B9D989EA39FAE
ADA7C3BBB1D3C6BBDBCEC6DDCDCCDCC9CFDBD3D2E2D6D5E3DADAE6DCDCE6DEDEE6E0E0E8E2E2EC
E4E2EDDBE2F5DBE2F5DCE3F5DDE4F6DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6E0E7F7E0E7F7E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5E0E8F5DFE7F2
DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E4EEF8
E3EDF7E3EDF7E4EEF8E4EEF7E3EDF6E1EBF4DBE5EFE4EEF8E0EAF4E6F0FCE2EAF5DEE4F0E4E8F3
CFD1DDC5BDCCD5CADB9C8AA27C627F56315352215050154F59185C4A0D5B4413553B084341003D
4C0A4838053D3F113F4009314002333E0333420936400835410936440C39460B39501243410730
4E103F4809425818554609454511412B041F2206142D042C1E002124092A2B143147354D95889C
D5D1DFE6E8F4DBE7F3D5E1EDDCE8F6D4E2EFDCE8F8D9E5F3E5EEFDDDE7F3DFE8F9DFE8F9E0E9FA
E0E9FADEEAFADEEAFADEEAFADDE9F9D8E4F4DDE9F9DAE7F7D5E2F3D5E2F3D3E3F3CEDDF0C7D6E9
CCD9ECC5D5E5CCD9E9A8B4C05A6970354B492C50461443330A3B250D3C28083C260C4D35005134
045D3F04543B0D513C3056494F6358909994CAB7B1CF876ED57136ED8E3CDF852DE27C34C7692C
CC7951A968549E716C987E7F92898A989898AA93A7B2A7B7B7BEC8B8CACEBBCDCFC3D0D9CBD2E5
CED2EFCFD3F0D0D6EED2DAEDD1DDEDD1DFECCFDFEED0E0F0D1E0F3DBE2F5DBE2F5DCE3F5DDE4F6
DEE5F5DEE5F5DEE6F3DEE6F3DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E0E7F7E0E7F7DFE7F4
DFE7F4DFE7F4DFE7F4DFE7F4DFE7F4DFE7F4DFE7F4DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2DFE7F2
DFE7F2DFE7F2DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E4EEF8E3EDF7E3EDF7E4EEF8E5EFF8E3EDF6
E2ECF5E2F0F1E2EFF5E3EDF7DAE1F1E7ECFFE3E4F9C4C0D7CBC6DDAF96BE72558153325F3F1847
431543410D3E4A134C4106463F084C3C0F5238054A4601424F0A40441238512246450A364A0B3A
4002333E02353E0436430A3D4B11444B11444E124659175455144E500F456026564A1A444C264F
55345F2F1240320F2D2F122E2711282613272613271507183C31429B94A4E7EDF9D6DEE9DCE6F2
D5E1EFD6E2F0DCE8F6DBE4F3DCE5F4DFE8F9DFE8F9E0E9FAE0E9FADEEAFADEEAFADDE9F9DDE9F9
DCE8F6DDE9F9D8E5F5D5E2F3D6E3F4D5E2F5D4E1F4D8E5F8C8DAEECEE0F4C5D4E7C6CEE1C4CBDB
8E9CA5466061264A460D4C390944321147370645320D523D0E523D2F5F518EAFA8C4D6D6B6E8DC
B0BDA1D88D63F58144FC923AF9972AF9941EF19937EE9030F99537F58B37EC8341E18053D57F66
D6887CC0A4A0C6B6B7CAC8D3C8CFDFC6D2E0C9D3DFCDD5E2CED4E2D3DBE8D3DDE9D1DDE9D1DDE9
D2DEEED6DEF3DBE1FBDFE3FFDBE2F4DBE2F4DCE3F5DDE4F4DDE4F4DEE5F5DEE6F3DEE6F3DFE6F6
DFE6F6DFE6F6DEE5F5DFE6F6DFE6F6DFE6F6E0E7F7DFE7F4DFE7F4DFE7F4DFE7F4DFE7F4DFE7F4
DFE7F4DFE7F4DEE6F1DEE6F1DEE6F1DEE6F1DEE6F1DEE6F1DEE6F1DEE6F1DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E4EEF7E3EDF6E2ECF5DCE8E8DCE7EBE9F1FEF3F4FF
C9C4E2A195B98E7CA2634C764922594B225C481B5643124A400B4149144A400943410B49430F4D
4C1A5F420D53490B4A4208315B26445E2B4C5017424409373B00303E02363E02383D023A440B42
4610444B154949114E3F10473716434E3E5BACA8B6E0DDE4E8DBE57A6272421C452507291E0A23
251427251426210E221F0D2327182F94929FE8EAF6D5DBE7D7DEEEDBE4F3DAE6F4D9E2F1DDE6F5
DEE7F8DEE7F8DFE8F9DFE8F9DDE9F9DDE9F9DCE8F8DCE8F8DBE7F5DBE7F7D9E5F5D8E5F5DBE8F9
D8E5F6D0DDEECDDAEBCFE2F3BED1E2C5D4E9CDD5ECC6CBE1C9D0E2AFC0CA788F952B6058104C42
07503F085D480559420A4F3C83ADA393A9A6556363354C3A936E39ED7D29FF8A37FF8F46F68A41
F39346F38F51F9944EF88F3CFB8E31F68827FB8D2EFD8F38FF923FF18A3BED8D50E8946FE39F92
E0B2B4DCC7D0D4D8E4CDE0EED0D6E6D2D9E9D6DDEDD9E0F0D9E0F0DBDEEDDDDCECDEDCEADAE1F1
DBE2F2DBE2F2DCE3F3DCE3F3DDE4F4DDE4F4DDE4F4DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
DFE6F6DFE6F6DFE7F4DFE7F4DFE7F4DFE7F4DFE7F4DFE7F4DFE7F4DFE7F4DEE6F1DEE6F1DEE6F1
DEE6F1DEE6F1DEE6F1DEE6F1DEE6F1DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8
E3EDF7E3EDF6E3EDF6E4EEF7ECF0F9F3F5FFD3CFE6998EAE846F967154824B275741194B451A48
3F104438033B460C47420541440645480B503D004A44084E4B0C52410545430E444B1B4569355B
54224543173A4B16403F05353E02363F00393F023D470D474412474214453F2B37736576C1B9CE
C5CDDAAABCC0C3CED0EEE8F29E869C61247145175731123E220E2A210E24271128270E2C270D30
302835CDC7D5D8D7E5D2D5E4DCE3F3D5DEEFDCE3F5DDE4F4DCE5F6DDE6F7DEE7F8DEE7F8DDE9F9
DDE9F9DDE9F9DCE8F8D7E5F2DDEBF8E0ECFADAE6F6D5E1F1D6E2F2D8E4F4D8E4F4D1DEEED6E3F4
CEDBEEC7D2E8CBD1E9C4CAE0B8C4D4B7C9D59EB2BD4972761C635B025D4B00503B0B60490B5641
0F5240005D513A4D39B87C36F59C34EA8B31FF994DFF9647FF9B50FF904AFF964FFC944DFA9851
F7974BFA9648F78D39F78932F48A40F58B3DF78D39F68934F08537EC874FED9275F09E92E3C4C2
E4CACDE5D4DCE3DDEBDEE1F2D9E2F3D4E2EFD0E0EDDAE2EDDAE2EFDBE3F0DBE3F0DCE3F3DCE3F3
DCE3F5DCE3F5DEE5F5DEE5F5DDE4F4DDE4F4DEE5F5DEE5F5DEE5F5DEE5F5DFE7F4DFE7F4DFE7F4
DFE7F4DFE7F4DFE7F4DFE7F4DFE7F4DEE6F1DEE6F1DEE6F1DEE6F1DEE6F1DEE6F1DEE6F1DEE6F1
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9E4EEF8E2ECF6E2ECF5E4EEF7E6F0F9E2DFF2
9D98AF6459775742694E315F431B4D46164A4712463D143233052A3C043542033C4B06454A044C
4B0454430055500C5F4D014B46023B3A0C3A532C5B63316247194045253D491941400B39460A3E
4503403E003A3B043D38093D330C3B9B96ACCBBFD7B8A9BCD4C8D2D5CED6B4A8BC6046764F276E
62137E64237D5023642C1039250C2A2C122F290B2F2C0C35231522877C8AE3DFEED0D2E1D1D7E7
D5DCEED6DDEFD8DFF1DBE4F5DBE4F5DDE6F7DEE7F8DDE9F9DDE9F9DDE9F9DDE9F9DFEDFAD8E6F3
D8E4F2DBE7F5DAE6F4D7E3F1D6E2F0D6E2F0D9DFEFD2D9EBD2DDF1D4DCF3CDD3EDCAD2E9C6D3E4
B9CBD9C1BFD7B3C9D76C9E9F2768621C62570E574603573F005C41086745644E25EE8738F78C2E
F89B56EDA553F5AB48FC9548F79B46F69745FC9747FF9549FF954CFD9349F68F44FF994EFF9344
FE9043FB8F44FF9243FF903AFD8A2FF78628F48627F27E27F1873BEC955FE7A686E4B8ADE3CACD
E5D9E3E7E3F1D9E2EBDAE2EDDAE2EDDBE3F0DBE2F2DCE3F5DCE3F5DCE3F6DDE4F4DDE4F4DDE4F4
DDE4F4DDE4F4DDE4F4DEE5F5DEE5F5DFE7F4DFE7F4DFE7F4DFE7F4DFE7F4DFE7F4DFE7F4DFE7F4
DEE6F1DEE6F1DEE6F1DEE6F1DEE6F1DEE6F1DEE6F1DEE6F1DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4F2FF
DCF5FCD3F1EFDEF3EAE3EBEEE5E8F9EBF2FCC7D3C962537C57294E6A207755157646195C43114C
3D013D460549321215340E332903344201415D04584701493B0D3E3E013D3C003E440A45380138
511F5066376355284F4D204753274B4C124C531441450C353E0E42460E4D45003A47073B431949
886A90DCC3E0C9B6CC8872984B2A474D1C495C1F7E591F74591C846721845F21825926834A2062
1F0B2718082334093F3313424F3E50D5D3D8C5C8D9CDD2E8CFD5E1CDD4DED9DEF2D8DDF0DAE1F3
DCE5F6DAE6F6DBE7F7DDE9F7DDE9F5DFE9F3DEE7F8DCE5F6DBE4F5DBE7F7DCE8F8DAE6F6D9E5F5
D9E5F5D8E3F5D6E1F3D3DEF0D2DDEFD1DCEECFDAECCCD7E9C9D4E6C0CCD8BFCBDBBFCEE199AEBF
4D6F782455511C5D470F5A3B264F3D866730F89037FB9241FDA868FCA15AFB9749FF9A4FFB9A4D
FC9B4EFC9B4EFD994DFD974CFC954AFD964BFF964CFF964CFC954AFB9449FE9448FF9545FF9340
FB8D36F6872EFC8423F7801CF8811DFD8828F98933EF8941EF9058F69E6EF9B9A0EDD2D9E8F1DE
D9DCE3E2E1DDE1E3F0D8DEEADEE1EADCE3F5DCE3F5DDE4F6DDE4F6DCE3F5DCE3F5DDE4F6DEE5F7
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6E0E7F7DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9ECEFF4E8E9FBE8EBFCE8F3F9DCE9F2E2E1FF
D2BAEC6C40754D306A641A796913745118764019583D0D3337073B463144ACA5ADC3B7CB9D91A7
2D0A343B004440154A54425A391A3C4004423F053F400A3E522150592A5653244E48194352224C
461F4E4D184654194F491458440C554805484205413E104E3F1A4E512E664A276733135C9B8CA9
BABABA6B607E533C584A2D635E267F611E916C259B65188A59207F391457390D3E2E0F3B3E2B3F
C3BEC5BFC1D0C2C4D9CCCEDBC8CCD7D4D7EAD5DBEBD8DDF0DBE2F4DBE4F5DAE6F6DCE8F6DDE9F5
DEE8F2DFE8F9DCE5F6DCE5F6DBE7F7DCE8F8DAE6F6D9E5F5D9E5F5D8E3F5D6E1F3D4DFF1D3DEF0
D3DEF0D1DCEECED9EBCCD7E9C6D4E1CAD6E6BDC8DAC2CFE2C0D3E17796992F585229594B334A40
C89256F4862FFF9F56FAA564FDA156FC9C4FFC9C50FB994EFB9A4DFB9A4DFD994DFC964BFD964B
FD964BFF954BFF954DFE934BFD924AFE944AFF9549FF9446FE913FFC8D3BFF8C3FFE8939FE8831
FD872FF9852EF48533F18A3BF28E43F28C38E4885FDD946BFABFC3EDD8DFD8E7FECFEBF7D0E4E2
DAE3F4DBE4F5DBE4F5DBE4F5DCE3F5DCE3F5DDE4F6DEE5F7DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E3E7EAF5F2FFE7E4FFE2E9F3ECF3FBF1E1FF86599E5D1D73421864530071761D93
420F5A391247450C3F533044D6E1DBEFF9FFDEE3E7E0E7DF6358693C174B6C5975EDEFEE7E7384
4B0D4C370037521E4F5F305C5427504B1C464E1D4A5C28584E29554D17495A1D59571D67420A53
3C003E4305464309564E16615D277B5519795E248B846F9ADEF0E0D8E1E6F6DEF6D6D2D1CCB7CA
B59BC267378172179867079E5D1C90411256300F3A342137ACA4AFBCBAC8B8B7C7C6C6D2C5C5D1
CDCEE2D2D5E6D4DAEAD8DFEFD9E2F3DAE3F4DBE7F5DEE8F4DEE8F4DFE8F9DDE6F7DDE6F7DEE7F8
DCE8F8DBE7F7DAE6F6DAE6F6D9E5F5D8E4F4D6E2F2D5E1F1D5E1F1D4E0F0D2DEEED0DCECCFDCED
C6D1E3D2D9ECCED3E6BEC5D7CAD3E2B4C2CD6F808A4B4A46EB9353F68634FFB475FEA966FDA154
FEA255FB9F54FC9A51FB9950FC984DFC984DFD974DFD964BFE944AFE944AFF924DFE914CFC914B
FC914BFE934DFE934BFF944BFF9348FD924AFF9149FF8E42FB8636FC8533FF8932FB8931F7852D
FF8B27F97E2EFC852BF18652D18F6FDBC4CCE1E0FFD7D9EED8E1F2D9E2F3DAE3F4DAE3F4DAE3F4
DAE3F4DBE4F5DCE5F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E4EEF8
E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E3F6FCE0F0FFDCECF9
E1EFEFE9E3E7C6A4C9481C59441F624A1565560B70691E8736044343124A430A3FBCA3A6E5F7F7
D3DDE7DADBD6E3E7D8959097371E3ECDC0C7F1F4ED4F42605317533D063D4B1D4B572F54492446
4F254B5526545E2A5B58235B672D60571C524C1B52421D49461E414A154943004D500562551374
5F177A701C8C481357B8B3BAE4D7F5D5A3DEC4B9F1DDDBE9E4F3ECD2C6EE7A24A37E09B06A18A0
55247F381440452C4A9A8D9FB9B3BFB2AFBABEBBC6C2BECCC7C4D5CCCEDDD1D4E3D5DBEBD8DFEF
D9E2F3DCE5F4DDE6F5DDE7F3DDE6F5DDE6F5DDE6F5DDE6F5DEE7F6DBE7F5DAE6F4DAE6F4DAE6F6
D9E5F5D8E4F4D7E3F3D7E3F3D6E2F2D4E0F0D3DFEFD3E0F3D2DDEFCFD6E8CDD3E3D0D3E6CDCFE4
C6CBE1C7CBE4CFBAB7FF954BF98E40EFA46AF3A05AFB9F52FFA459F49952FD9B54FC9A51FC974F
FD974FFE964DFE964DFE944AFD9349FE8F47FF9049FD904BFA914DFB924EFC934FFD954EFF9750
F99643FD9745FE9345FC8C42FE8A41FF8C42FF8C3FFD883BFF893FFF8F3BF88916FE851DEE7A27
D27B60F8C9E9E1D6F4D7DEF0D8DFF1D9E0F2D8E1F2D8E1F2D9E2F3DAE3F4DAE3F4DDE4F4DDE4F4
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5
DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9DAF1FFD9E9F8DEF2F3DEF3EAF2EEFC91669E5D24714D2269
5B0A66752C954102484C0D5445084E4F293EEAE6E7DDF1EF6C7175BEB5B8FBFAF5B9BCC1635667
F6EDE6C0BBBF3D23623E07404616465733574428413F253E492A49663D67613362662A6A552652
5436509D8FA0BFBDC2C1BDBE7A6278491D5253066E591F865B1F796819825F207157455FE3D6F0
E2BEE2BBBACCEADAE4EADFE7B393C47A1B9B7C01AA7113A54B107A431C4B60416B8D7A96B3A9B4
B2A9AEB5AEB6BEB8C6C0BCCBC8C7D5CDCFDCD4D7E6D6DDEDD8E1F0DBE4F3DDE6F5DEE7F6DDE4F4
DEE5F5DDE6F5DDE6F5DDE6F5DDE6F5DBE7F5DBE7F5DDE6F7DDE6F7DCE5F6DBE4F5DAE3F4D9E2F3
D8E1F2D7E0F1D2DDF1D5E0F2D5E1F1D4DDECD1DAE9CCD4E7C7CFE6C5CCE6E6C2B2E87B29FFA75C
F4B073FFAA61FCA055FFA156FFA35DFE9C53FE9951FC974FFD974DFE964DFF954DFE934BFD9349
FE9045FF9048FE934BFC944DFB944FFB944FFC9550FD974FFE9947FD984AFD954CFE934FFD904D
FC8C4AFB8C45FC8D46FD873DEC7E2FF88B30FF8727FF7B23E36E39E1A9B6D7E1E0D6DBEED7DCEF
D7DEF0D7DEF0D8DFF1D7E0F1D8E1F2D9E2F3DCE3F3DCE3F3DDE4F4DDE4F4DEE5F5DEE5F5DEE5F5
DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
DDEDFCF2EEFFEBEAF0D0E4E2E9F0FF72489A5F0F7E832D98AE48B65C0B6849054E4D03504D0F50
4B3446E5EFE7E1F4F2ABA8B9836F88EAE4F2D6E4E7DFE2E9F8F3F07D6F88431C773E0E424C264F
715973BFB3C1E2D8E3BCABBE715675522F574614514C3853CDD3D3DFEBE7E3F2EDE8F9EFE9F1F3
827A8F4B106E471189632B96621F89642D88DDCDF2C3C1CEDED3CFE2D9F8BC74E08C24C17A0EAF
8D0ABA900AC36E0D9B551466562A5F724D83876D94B0A0ADB0A4A6B1A6AEBAB2C1BCB9C4C3C1CE
CACAD6D1D5E1D5DBEBD8DFEFDAE3F2DDE6F5DDE6F5DDE4F4DFE6F6E0E7F7DEE7F6DDE6F5DEE7F6
DEE7F6DEE7F6DEE7F8DEE7F8DDE6F7DCE5F6DBE4F5DAE3F4D9E2F3D9E2F3DDE5F8D2DEEED1DDED
D3E1EED1DEEECFDCECCDDAEBCBD6EAEFB796F18636F3A35EEFA15FFFA358F79E5AFF9648FD9C57
FF9B50FE9A4FFD994EFD974DFD954CFE934BFD924AFD9149FF9146FF934AFF954DFF9750FE9752
FD9854FC9751FD9651FF9655FC9352FC9352FD9654FB924EF68E45F58E41FB9241F18D38FF9B46
F38236FF812DFB751CDF6D2FE4AAB9CAD3D0D2D5E8D4D7EAD5D8EBD5DAEDD6DBEED6DDEFD8DFF1
D9E0F2D9E0F0DAE1F1DBE2F2DCE3F3DDE4F4DDE4F4DDE4F4DDE4F4DEE5F5DEE5F5DEE5F5DFE6F6
DFE6F6DFE6F6DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E4EEF8E4EEF8E5EFF9
E5EFF9E5EFF9E5EFF9E6F0FAE6F0FAE5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E3F2F9EBE2F7ECE5F7DEF1F7DFE9FF
8458A574208F9D45B5721E804F064B4F075B4903494711454C275BA698AFC2BAD2583D705E306E
DEC9EADBE6ECE8EAF6D5C6DD4422554D13794821505B3D5FE2D5E6E9EAECDEE2E1E8E7EDDFD2E6
463150542E5F807C8AE2EEEAE1DFEC70617E9C97ABF0F7FDD1D9DB61367B621EA5630B966B108F
6D2298B780DBCE99EBCC8DD3E1AFE09927B38A00BE8C03C29100B8AD1CD97615A04310556E3C77
724888856596AC9AAAAC9E9DB0A3AAB4ACB9B9B6BFBDBBC6C6C6D2CFD1DED3D9E7D6DDEDDAE1F3
DCE5F6DDE6F5DFE6F6E1E8F8E2E9F9E0E7F7DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DDE6F5DCE5F4DCE5F4DCE5F4E1E8F8DAE3F2DDE6F7DAE6F6D2DEEED6DDEDD9DFEDD1D7E5
EA9668FF954CFAAA6DFEA056FD974CEE9559FF9342FFA55DFD994BFD994BFE994BFC964BFC954A
FC9149FD9149FD9149FD9149FD924CFD9450FE9755FE9856FE9858FE9858FE9755FE9456FA9052
F8914EFB944FFC944BFA9044FA8F3FFD8F40F29047FA8E36FF8B3BFE8625F5781CE27439DD9CBC
D1D1D9CACBDFCCCDE1CECFE3D0D3E6D2D5E8D2D7EAD5DAEDD5DCEED7DEEED8DFEFDAE1F1DBE2F2
DCE3F3DDE4F4DDE4F4DDE4F4DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DEE5F5DEE5F5DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E6F0FAE6F0FA
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9DAF3EFEAEFFFE2E8FEDCF4F8EFEDFA8550846B2474531F71471A51420845
46054544094D47124A51185F5015715026585B277A5D176F5E3464ACACB4B4ACC35938674F175E
5A0B744F2B57AC95B2F3EDF7B3BCB74E5B52D3DCDBE8E4F28D7F9847214AB7B2B9E6E7E9C7A7D0
571E63532A62CCC0D4EBEFEE8A65916D11A29D1BBD9410A27906997E0EAE960FCEB116DE9326B3
8700A88605B87A06B39201B8B81FD26105825538787F48896C3D85836096AC95A7A69794ADA0A7
AEA6B3B5B2B9BBB8C1C4C2CDCCCEDBD3D6E5D5DCECD9E0F2DCE3F5DDE4F6E1E8F8E3EAFAE4EBFB
E1E8F8DEE7F6DFE8F7DFE8F7DDE6F5DEE7F6DEE7F6DFE8F7DFE8F7DEE7F6DEE7F6DEE7F6DEE7F6
DFE7F4DFE6F6DFE6F8DEE5F8DBE0F3DADCEBDEDCE9E2DFEAEF8551F88944F1A069FF994AFF964B
F29B65FF913DF2964BFC9948FD9A49FE994BFD9649FA9348FA8F47FC9048FC8F4AFC8F4EFB8F4F
FB9153FC9457FE975CFF985DFE975CFE9659FF984FFC954AFA9348FB9447FE9448FF9048FE8C45
FE8944FF8249FF8530FF8D38F5811EF37926DA6C3BDDA5C2B7CCBDC5C3D8C6C4D9C9C7DCCBCCE0
CDD0E3D0D3E6D1D6E9D3D8EBD6DDEDD7DEEED9E0F0DBE2F2DCE3F3DDE4F4DDE4F4DDE4F4DDE4F4
DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9E5EFF9E6F0FAE7F1FBE5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E9ECFFDFF3F4
DBE8F1E4ECF9E8F6F96255736331785E28734E1E584710544A0C5745094F3F0B494B1A5B501768
5614785D1980611F805E1E754B0E5E4D105D470C5C4E12685418724F26684D2C59785E8138294A
3A374ADBE1DDD9E3DBA5ACB44D1762BCB7BDDCE5EC898294682A806C2B93948D9FF0E2FFB9A5C0
730FA57F00A2921BB57B04B47B00B19005C0AC06D2BD09F09703CB8803B28700ABAA1CD3780AA7
5413777550847654917A3D9A7C53A2AF89AEAE959B9C9D98B5A5AFAFA7B4BBB3C0C3BDC9CBCAD8
D2D5E4D5DCECD8DFF1DBE2F4DDE4F6DFE6F6DFE6F6E0E7F7E0E8F5E0E8F5E1E9F6E1E9F6E2EAF5
E2EAF7E2EAF7E2EAF7E2EAF7E2EAF7E2EAF7E2EAF7E2EAF7E5E8F7D8EBFADFEBF7E7E1EBE0E1F3
D4E5F7DADBE0F2D5CFE87830FFA45EF29955FC9352FF934BFC9644F99645FF934BF59A3FFF9046
FC9552FB923FE8972EFF8645FF8B57F08A36FF7B44F4975EE69A68F89A74F8986EF5A570F9A068
FF8E5FFF985DFD9755FA944CF89146FB9048FE914CFE8F48FC8C44FA913EFF8443FA843EF97E17
FF7415D67459C3AABDC0B5BBBCB6C2BFB9C5C4BECAC6C3CEC8C6D3CBCADACCCFE0CDD2E5D8D7E7
D9DBEADCDFF0D9E0F2DBE2F4DBE4F5DCE5F6DCE3F3DDE4F4DDE4F4DEE5F5DEE5F5DFE6F6DFE6F6
DFE6F6DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9
E5EFF9E6F0FAE6F0FAE5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8
E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8EAEDFFDFF1F3E1E9F4E7E8FAE7F0F7655673714383
633072562C5E4F1D5C4F125F4D115B4F185C420F5449126555157656157D5D1B7F56157353136A
4A0C6151136950146E561B7759237B60297A4E1B5E42234FA99DB1DDD7E1F0DBFA623C754F2263
B1B5B4E1EAEF8F6E9D8110A0820DAC8D729BE8EBFABBB2C3700D9C8300A6780EA46C01A77900A4
8500B19404C5A700CE9807C88700BC8F03C4920DCA6D0BA0652981815884A17EA68157897D4F97
AE85A3A08E8EA39E9AB2A0AEB4A9B7B9B1BEC1BBC7C9C8D6D0D3E2D4DBEBD7DEF0DAE1F3DCE3F5
DFE6F6DFE6F6E1E8F8E1E9F6E1E9F6E1E9F6E2EAF7E2EAF5E2EAF7E2EAF7E2EAF7E2EAF7E2EAF7
E2EAF7E2EAF7E2EAF7E2E8F6DEECF7DDEBF8E4E3F3E3E2F2D7E4F5E1DFE4EDC2B2E97A33FFA15B
F49855FB9250FF924AFB9445F89343FF9048FB934CFE9136F79942FB8E4DFA9543FF883DE27D45
E09A69F0DEC8F3F1DCFFFFF3F8EFE6FAE3D3E9C19DE9A46DFD9B5AFE975CFD9755FC964EFB9449
FC9149FD904BFE8F48FD8D45F9903DFF8947F9833BFA7F18FB6E14D97B62BCA4B4B8ACB0B3ADB7
B6B0BABBB5BFBFB9C3C0BDC8C4C2D0C7C6D6C9CADCD3D2E2D6D8E7D9DCEDD8DFF1DAE1F3DBE4F5
DCE5F6DCE3F3DDE4F4DDE4F4DEE5F5DEE5F5DEE5F5DFE6F6DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6E5EFF9E5EFF9E4EEF8E5EFF9E5EFF9E5EFF9E6F0FAE6F0FAE5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8
E4EEF8E2E8F8E3F2F5EBEEFFE6E1F8E9EDF68476906A3F755F346956365D54295F58206B541669
4A0D5D4F16654F186C4C116D55167E58177D561478591578500D6E541472501873521C74542573
531F715023649B87A0DEE0DDD8D7DF8868995D1F72501E65C5C4CADAD9E7DA9EE8CC28EBAE04D7
B380C3DBE9EAC6C4D16F0F978706AB6A079F6B08A37703987800A17D06B69200B69003C18700C1
8C06C77907B45C0D8C7841928755887C5582B59FB68D55ACAB7DA29C9293A29493B19CAFA89EA7
B6AEBBBEB8C4C7C6D4CFD2E1D2D9E9D7DEF0DAE1F3DCE3F5DFE6F6E0E7F7E1E8F8E2EAF7E2EAF7
E2EAF7E2EAF7E2EAF5E2EAF7E2EAF7E2EAF7E2EAF7E2EAF7E2EAF7E2EAF7E2EAF7E2E8F8E7ECF0
DAEAF9DEE6FDE5E3F1DAE3F2EAE4E8E6A589ED823CFF9E59F69753FD9150FF904AFC9244F99245
FC9047FF8D52FD9035F89A42FB874AFF863FF57E3AE9A87EFFE7D8F1DDC4D9B499E5BBA2FBE5D8
FFF8F6FFF6EFF2BC96EE9F5CFC955AFD9755FE9850FD964BFD924AFD904BFE8F48FD8D45F88D3B
FF8A47FA8236F97D1BF26B1ADA836FB39BA8AEA2A6AFA5ADB2A8B0B6ACB4B9AFB8BBB3BEBFB9C5
C2C0CEC7C4D5CDCCDCD1D3E2D6D9EAD6DDEFD9E0F2DAE3F4DCE5F6DCE3F3DDE4F4DDE4F4DEE5F5
DEE5F5DEE5F5DFE6F6DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E6F0FAE5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E4F0FCD9EDEEE7EAFDEFE9FF
E8ECF7988CA25E3A68B799BF624B675736635321685B1F75591874480C6451176E4D176D52197A
5012775C187F5912785713764F126F531D714D1C6D522162471F5E6E5982E6E5EADCE2DE6E6381
572E705C1D6C5F1F75A38EAFECE0F6FCC8FFC234D8A108BBBF8FCBE3EFEFC3B4D16E12977F09AD
740CAB7910AA770B956B029A7409AD8700B58500BD8401BF7D02B270129E55197D8451A08B4D98
80509AA095B38945B6A770B18F8794A89496AC95A9AEA4A5B4ACB9BCB6C2C5C4D2CDD0DFD2D9E9
D6DDEFDAE1F3DDE4F6DFE6F6E0E7F7E2E9F9E3EBF8E3EBF8E3EBF8E2EAF7E2EAF5E2EAF7E2EAF7
E2EAF7E2EAF7E2EAF7E2EAF7E2EAF7E2EAF7E2E8F8EDEDEDD8E9F9D8E9FFE6E2F0DDE3EFF0E2E1
E0895CF38E4AFF9D5AFC9654FD924EFF914AFC9045FD9347FD9146FF9449FA8C41F58F47FF8A3E
FF8838E48859F8DCD0F5FCF5FEEFDAFCC79FE99863E7A781ECCEC3FFF3EDF1BF9AF3A35CFC955A
FD9755FD974FFC954AFD924AFE914CFE8F48FD8D45FA8D3AFF853FF98031F6791CEA6F2BD38777
AB949CA99A9DAA9FA3ADA2A6B2A6AAB5AAB0B8ADB5BBB3BEC1BBC9C4C0CFC9C8D8CDCFDED4D7E8
D5DCEED8DFF1DAE3F4DBE4F5DCE3F3DDE4F4DDE4F4DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9E5EFF9
E4EEF8E4EEF8E4EEF8E4EEF8E6F7FFD6EEEEE1E8FAECEAFFE3ECF3ACA8B961456DC6AECEE1D3E2
5A40636139785E267D5816785715774D126C4D176B5015734D106F58167755127154136D4D1465
521F6A4B1E635F195F482055B5ADC5F5F8FF8E7F9E582E76582174531C60571A6A573568E6D8EF
EEE6F1BB83C2863D8CE2D5E9E6EEF0A173B36F149F790DAE8310B6800BA9710D91640B9B7208A6
7E04AD7900B37D04BB7704A76D1993622D858754A39652A99565B1ACA1C39855BEAE74C0968B9C
A58F92A58C9FAFA3A7B2AAB7BBB5C1C4C3D1CDD0DFD2D9E9D7DEF0DBE2F4DEE5F7DFE6F6E1E8F8
E2E9F9E3EBF8E3EBF8E3EBF8E3EBF8E3EBF6E3EBF8E3EBF8E3EBF8E3EBF8E3EBF8E3EBF8E3EBF8
E3EBF8E3E8FBEEECEDD9EBF9D8E9FFE5E3F0E1E4EDF0D8CEE27940F79B5AFE9B58FE9551FD924C
FD924CFC9048FF9449FC9546F5953EFF924FFE8A4FFF8D39F98633E2B08FF8F7FCF3F8F2DDAE94
D89060F48E4CFF9353F08F5CDD8F5EF4A266FFA159FE975CFC9654FB954DFA9348FC9149FE914C
FE8F48FC8C44FB8E3BF98037F97F2CF2761EE87942C38175A38D90A49495A7989BAA9B9EAFA0A3
B2A3A8B3A6ADB7ADB6BCB4C1C1BBC9C6C5D5CCCEDDD3D6E7D5DCEED8DFF1D9E2F3DAE3F4DBE2F2
DDE4F4DDE4F4DDE4F4DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E0F1FB
DAF4F3E3ECFBE4E6FBE4EFF5C0BDCE664A736D5378E5DAE2CDBBD554366C5A2B7C6426895B187F
5212704B14684F126F5313714F1069521469480E5B4E195F4B1A5B491C57581855482F4CC5D1CD
E1F2EC6052734F2B69633D76A28AAC5B30685A3173A58FB5E0F4E9E6F2E8F3EDF1D4DCDEE2D5EF
782B957516A67B14AD8510B67E02A27010956512A072089E7204997105A67202AE790BAC640E8B
753A9686519F9C5BAD694271B69EC2B078B9A76DB79987959C8A86AC94A2AD9FACB1A9B6BAB4C0
C3C2D0CCCFDED1D8E8D7DEF0DBE2F4DEE5F7DFE6F6E1E8F8E2E9F9E3EBF8E3EBF8E3EBF8E3EBF8
E3EBF6E3EBF8E3EBF8E3EBF8E3EBF8E3EBF8E3EBF8E3EBF8E3EBF8E4E9FCE8EBF0DBEBF8DBEAFF
E0E2EFE3E6EBEBC6B3E87836FAA666FB9857FF9451FB934CFA944CFC8F4AFF964DFA9746EC903D
FF994EFF8946F98538E27937F2DEBDF0F9F6FFEFE7ECD6BFF4E3CFEBCFB9E5A685F69664FF965B
FF9B68F78B65FE975CFC9654F9934BF99247FC9149FF924DFE8F48FB8B43FF8F3DF57F35FB7D28
EF721EE58056AD766F9C87849D8D8DA59193A89597AD9A9CAE9EA1AFA2A9B3A9B2B8B2BEBCB8C6
C5C4D4CBCDDCD3D6E7D5DCEED7DEF0D8E1F2DAE3F4DBE2F2DDE4F4DDE4F4DDE4F4DEE5F5DEE5F5
DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E5EFF9E5EFF9E5EFF9E6F0FA
E6F0FAE5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E5EEFDDCF1F2E2ECF8EBEEFFE2EDEFC4BCD1
67467564406E7E7379F5E8FA6C56846B45905E25865F1C8557157650146C520E71541472480C62
450F5B45125552205D4F1D584D1C544D205B453649D7E8D8D8EADEEEEEF8EADDF1EEE5F6E4E7EE
9A78AA6224875C1A7B9B8CB7E0DBF2FCE5FFD7BFF1783C96690C987E14AC7E17A47B10AC7D09A2
76149B67139F6E0E946C04976909A068059D780F9F5F01797D3A998C52A79756B09877A2A376BB
C99CC5AC72C6967A899F928AA79098A799AAB1A9B6B9B3BFC3C2D0CCCFDED1D8E8D6DDEFDBE2F4
DDE4F6E0E7F7E1E8F8E2E9F9E2EAF7E2EAF7E2EAF7E3EBF8E3EBF6E4ECF9E4ECF9E4ECF9E4ECF9
E4ECF9E4ECF9E4ECF9E4ECF9E7EAFDE1EBF5E0EDF6E0E8F5DBE1EFE5E9ECE1B493F1803AFAAF6E
F99756FF9651FC964CF9974EFC914BFF994FF99945FC9248FE913EFA8538F0853DE77D4DFFF4D7
ECEDDFE8AF9BF1A58BF3C2BBFFF2F5FDF6E6E5C08CEEA055F89F4FEFA355FC955AFC9654FB954D
FB9449FD924AFF924DFE8F48FC8C44FC8C3AF78235F77A20EE7121DD805F9F6F6B97827D998785
A08A8CA58F92AA9698AD9A9EAC9FA6B1A7B0B6B0BCBAB8C5C4C3D3CACCDBD2D5E6D4DBEDD6DDEF
D8E1F2DAE3F4DBE2F2DCE3F3DDE4F4DDE4F4DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6E4EEF8E5EFF9E5EFF9E6F0FAE6F0FAE5EFF9E5EFF9E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8
E4EEF8E4EEF8E6ECFCE4F6F8E1E9F4E4E6F5DDE7E9D8CFE4643C716A3F747C7074F2E7F777678E
68478C6D37955C19825E1A7D5718715009714E0C6D460C6138064F4A1C5C5626605B2A6255225A
501B733C1D499F939FD8D3DAD7CDD8C4B9BFC2B8C3A6A1B858306C731BA38011AE631C9267298A
7D31937022997F10AA6F10AA8310AB7B11977011A17F15A97D179F650D9867118C700AAB680BA1
660C927512896001698136959858B98A4BB48868A99252C4AE85B1985EC2A47D98958C83A69294
AA9CADB0A8B5B8B2BEC2C1CFCBCEDDD0D7E7D6DDEFDAE1F3DDE4F6E0E7F7E1E8F8E1E8F8E2EAF7
E2EAF7E2EAF7E3EBF8E4ECF7E4ECF9E4ECF9E4ECF9E4ECF9E4ECF9E4ECF9E4ECF9E4ECF9E8EBFE
DBEBFAE3EDF6E4E7F0D8E1F0E6EAEBDAA981F6873FFBB474F99756FF9853FF9B50FB9B51FF9450
FF9B51F89945FF9147FA8939FE8F40F59447EF8259FDEAD9FFF7EAE3956EF58836E28657FED7C8
F2FEF4FEF7E5F7AA90FF8A62FF915BFA9358FC9654FE9850FD964BFE934BFE914CFE8F48FD8D45
FA8734F88437F6761BEE7023D67C62986C6B95817A9583819C8386A2898DA79194AA979BA99CA3
ACA5ADB2AFBAB7B7C3C3C2D2C9CBDAD1D4E5D3DAECD6DDEFD7E0F1D9E2F3DBE2F2DCE3F3DDE4F4
DDE4F4DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E4EEF8
E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E6F0FAE6F0FAE5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E6EDF5E2E9FBD5F3F3
E1EEFEE2E0F6E2E0ED5E4B69BBB9C7D1DFE0E4D8E4706681CBC4D66B3F9668288860218A5D1A8D
530C84520B753D004D38113DBCABBE4E40514425474E1E50431C4B471E58471E5A552E65562D6F
5121775E237F5B1A6E77258B6A1D8D6A229F6213A0781BB27A0FAA7D0CA48715A97A16AA6C1B9E
7A10A6760DA56119967D18A28C0EAD6210995C1784720D996A12A66C09756B0B86842FA6834ABD
8F51A49A57B69251B9A692B7955AAEA084939987959C938AAE9DA5B1A6B4B7B1BFC2BFD0CBCEE1
D0D7EAD5DDF0DAE2F5DCE5F6E0E8F5E0E8F5E1E9F6E2EAF7E3EBF8E3EBF8E3EBF8E3EBF8E5EDF8
E5EDF8E5EDF8E5EDF8E4ECF7E4ECF7E4ECF7E4ECF7E3EBF8E7E9FFDEECF5DDE8FAE2E5F4EAD2D2
ECDBBDE49D5BFFB172F9A660F99F53F99C4EFA9A4DFB9A4DFE994BFD9443FF8F36FE8F48F69246
F78636F08A64F8EAE9F5FDF0E0926CFF824BF87B3BDD895AFEE8DDF3F4EFE9C8A5F8A96EF69453
FB934CF9954AFA994CFF974EFF904CFF8E49FE9043F6903CF7873BFF8124FB7119EC7741B36C56
907469917A749E75799A817D9F8787A18D8FA49495A89C9CACA3A6B2ABB3BCB6C2C2C1D3C9CADC
D2D5E6D3DAEAD5DCECD7E0EFD9E2F1DCE3F3DCE3F3DCE3F3DDE4F4DDE4F4DEE5F5DEE5F5DEE5F5
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9
E6F0FAE6F0FAE6F0FAE6F0FAE6F0FAE6F0FAE5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9
E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E1F0F5EBEEFFD7E9EDE0E7F9E3E8FBE2EBF2746680F3E8F8
D5D1E8C8ACD2816A94E0D0EA743F977C369966248E65238D56147E4707653D054C3D1A446C5A70
58495E3D1F454C1D534C19514F1B5D4F1C614F2162592B765926835E22845B1B725E25726E2689
7317947E11A278069C7A0CA16F0DA2660CA27905B07008A37309A76D0FA56317916917936E119D
5F15927B0FB36700A77D20AF600B80A919B67819918356AB8948A69955B89653BDAB8FC07E4F95
A08596978792A89597A7989DB1A6B4B7B1BFC2BFD0CBCEE1D0D7EAD5DDF0DAE2F5DDE6F7E0E8F5
E0E8F5E1E9F6E2EAF7E3EBF8E3EBF8E3EBF8E3EBF8E5EDF8E5EDF8E5EDF8E5EDF8E4ECF7E4ECF7
E4ECF7E4ECF7E3EAF4E4E6FBE1EBEDE1E8F8E2E5F4EFC7BBEAC497EEA561FFAE6CFCA65DFB9F52
FE9F4FFC9C4FFD9C4FFF9A4CFF9547FF8C3FFF924BED8F37FB8D34E57648FFE9E0EFFBEDEAC7A9
E78A47F27C36E4804EF1D0BFF3EEE8FED2B9E6875BFF905FFF9455FF924FFA9249F89248F99148
FF934BFF9147FB8A3AF88739FC7C21F6701BF17F4BA3614B8F73689077729C7578977E7A9C8484
9E8A8CA19192A69A9AAAA1A4B1AAB2BCB6C4C3C2D4C9CADCD2D5E6D3DAEAD5DCECD7E0EFD9E2F1
DCE3F3DCE3F3DCE3F3DDE4F4DDE4F4DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E6F0FAE6F0FAE6F0FA
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8
DDF0F6E8E9FDE1EAEFE9EAFCE1EAF9E6FAFB8B7F97F2E4F38E79A26E44839C7CAEE6CEEE7D439A
8133A0732D9F611E85460D6B450E614A1759522E5AE8D1EDC1AAC757335F4B1B555B1D5E571964
561C694B1561551F7552198050137B4C0F6C4A17735E0583A012BEC107D6C601D7BD0AD79403C2
7B04B87700B47103A46608A46512A26616915B148E5C129B6E169E8F18C07B10B4711B8652166E
A915A1950E8F7F4389974BA69A52C09D55C59E73BA6D5383967C95998E92AC8CA1A59A9EB1A6B4
B7B1BFC3C0D1CBCEE1D0D7EAD5DDF0DAE2F5DDE6F7E0E8F5E1E9F6E1E9F6E2EAF7E3EBF8E3EBF8
E4ECF9E4ECF9E5EDF8E5EDF8E5EDF8E5EDF8E4ECF7E4ECF7E4ECF7E4ECF7E8ECF7E4E5FAE7E9E6
E1E7F5E0E3F2ECAF90E4A15BF4A965FEAA62FDA357FFA050FFA04FFE9D4EFF9B4FFF994EFF9549
FF934BFF934BFC9D49F88F34F07839FFC39EF5F7E1FFFDF1EDDDC6E1C8A0F8DCB5FEE9D6DAC0AF
EFBB8CF89B56FF8E4AF98B56FC8E53FF914FFC954AF49346F79347FF8F45FF873DFA8737F7771E
F16F21EA83569255428E70658F746D987476947B7799817F9D878AA18E90A59999AAA1A4B1AAB2
BCB6C4C4C3D5CACBDDD2D5E6D4DBEBD6DDEDD7E0EFD9E2F1DBE2F2DCE3F3DCE3F3DDE4F4DDE4F4
DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E4EEF8E4EEF8E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E3F2F9E8E6FCE3F1F4E7EAF9DDE5F2
E1F1F184788EDBD1DC6150726E4786CCB3DAC9B4D3773B918433A9782EAB6E2B954E1870460F63
49175E421A4F7B5B825B38604115463B053F4A0E4E450B574912634710614E166F4C0F7751147B
49116846135E5810738415A0BC1ED5C60ADBB300CAA30ABD8408A47403AB680A9C5B0E9C60129C
6816946114986912AE8B18BD7A1599841EA5550D564A255B721D72BB16B0761A85A03FA89D4DC8
A04FC88F55AC66567B94799A9A908FAD84A6A8A2A6B1A6B4B8B2C0C3C0D1CBCEE1D1D8EBD5DDF0
DAE2F5DDE6F7E0E8F5E1E9F6E2EAF7E2EAF7E3EBF8E4ECF9E4ECF9E4ECF9E5EDF8E5EDF8E5EDF8
E5EDF8E4ECF7E4ECF7E4ECF7E4ECF7E6ECF8E3E8FEE7E8E3E3E7F3E4E6F3E89667E89039FCB36F
FCA65DFB9F52FF9E4DFF9F4CFE9A4CFC984CFD964BFD9347F6933EFF944CF8934DF89142FF8C3C
DC853EF7D2A8F3DCD6F6D9D3F6D1BFDEC0A6DAC2A6F6C09EF09066E89768DEBC8EF19C65F79459
FF9250FF944CF89345F49042FC8C42FF863FFB8432F67420EB702CD67D558956458E6E638C6D68
947475937A769880809C8689A18E90A4989AAAA1A6B1ABB5BBB7C6C6C5D7CBCCDED3D6E7D4DBEB
D6DDEDD7E0EFDAE3F2DBE2F2DCE3F3DCE3F3DDE4F4DDE4F4DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8
E4EEF8E4EEF8E4EEF8E9EDF9E6E8FDD9F1F1DBE7F3EFF1FEE7EAEF8D7F96F0F0F8E5E1F0856E9C
BFB7C2C3B8D8763E978A39B2762DB06C2C9E4F1772531B72410A5B390649310238320234390438
3D033D36033E3907503F105E431261481067480C6E5018733E0C5534174F431C537B317CAE2CA6
CB16C7D21CE38E02B96606A57400A6640D9C5C0D9C620E9A6718956919A07814B58F18C08C1DAA
68137A470140280A483415509414A77912A1A638BBA146D1A348C78F4DAF644F7AA07FAE948987
B087A9A7A0A8B1A6B4B8B2C0C3C0D1CBCEE1D1D8EBD6DEF1DAE2F5DDE6F7E1E9F6E1E9F6E2EAF7
E3EBF8E3EBF8E4ECF9E4ECF9E4ECF9E5EDF8E5EDF8E5EDF8E5EDF8E4ECF7E4ECF7E4ECF7E4ECF7
E2EBFAE2E8FFE6E8E7E1E7F5EEE7EEE8854AF6973BFFC386FCA55EFB9F54FF9E4FFF9E4DFC984A
FA964AFC954AFD9347F89F4BF1853AFF9752F99349FB8C3DFE9043DC8347EA9E7CFDA991F9C4A2
EFC59BF6AC7FFA8D55EA874CFFD5ADFDF9EEFCBF80F4A15FF88B48FF8C44FF9044FB9143FC8C40
FF863BFA802BF57222E9753AB56A4A8C61518D6B618C6963927474957975997F7E9B8588A08D91
A4989AA9A0A5B1ABB7BBB7C6C8C7D9CDCEE0D3D6E7D4DBEBD6DDEDD8E1F0DAE3F2DBE2F2DCE3F3
DCE3F3DDE4F4DDE4F4DDE4F4DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E9EBF8E0E5F9
D7F5F3DAE8F3F4F3FFF2F1F7A898B2C2C4D0F2F0FD9483A7DADAD2A89FCA7941A28233A87630AA
682E9C581E72491266430C5D3F07523A02433B013B3B00383A00393604413C0E563E14603E125D
400B5D440C6542125E3D164B816983C2C3C5DFF1E3D5CFDBCA87D4B237C5A20DC19800BF7800AB
6C09A1660CA2630E9F6117906417977111A67913A59613AF3C00424903392C0B522F124A501974
6B16978319A19C33CDAD4ACB8B47AA7E5194A279B59C8D8AAD8BA4A598A9B2A7B5B8B2C0C3C0D1
CCCFE2D1D8EBD6DEF1DBE3F6DEE7F8E1E9F6E1E9F6E2EAF7E3EBF8E4ECF9E4ECF9E4ECF9E4ECF9
E5EDF8E5EDF8E5EDF8E5EDF8E4ECF7E4ECF7E4ECF7E4ECF7E1EDFDE3E9FFE1E9EBE1E5F1EFD6CF
EA7F3BFAA048FFC58DFDAA68FBA35CFEA154FF9F52FC9B4EFA984DFD974CFF9549F49A4EFF9D4F
FC8F3CFE994BFD924CFF8A4BFF8441F8823CF88D2FF48536EE823AF59040EC822CEB8844F1BC9D
F3F3F5F6B770EF9D54F48C43FF8D44FF8E46FD8C40FA893BFB8838F87C24F47025E87A47975940
8B695D8D695D8D68608E7473937773987E7D9A84879F8C90A39799A9A0A5B1ABB7BCB8C9CAC9DB
CECFE1D4D7E8D4DBEBD7DEEED8E1F0DAE3F2DBE2F2DCE3F3DCE3F3DDE4F4DDE4F4DDE4F4DDE4F4
DDE4F4DDE4F4DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8
E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E6F0FAE1E6FADFF4F5DEE8F4E4E7F6E7ECF2B4A4C1
615A6CB09CBF694C7CEFE8DE9686C5854AB481329B7D3FA25D2A875925674A175C37034D3F0750
3A00434004443500374107443B00443A05533C0F603D0E5C420D5D4612643E1756766084E5D7F1
F9F8FFECF5FAE3E3EFE7C3F1D67EE49B12B7AB06CF6D0CA771099C6911A55C18A3621390660F92
6B0FA2720C9C7E129B39033D3903373208473805483D145868189175099B901BC1AA3FC3803F9B
A157BAA876BFA58F91A38D99AA98B0B2A7B5B8B2C0C4C1D2CCCFE2D1D8EBD6DEF1DBE3F6DEE7F8
E1E9F6E2EAF7E2EAF7E3EBF8E4ECF9E4ECF9E5EDFAE5EDFAE5EDF8E5EDF8E5EDF8E5EDF8E4ECF7
E4ECF7E4ECF7E4ECF7E5EEFDE4E5FAE2ECEEE3E2E8E9BBA4F37F36F3A455F8C18BFDAD72FBA665
FEA35CFFA157FC9E54FC9C50FF9B4FFF984BF69546FF9B50FC9248F38E40F89144FF8643FF8945
FF893CF78735FC8E43FA853FFF8237FF822CFF8E3BF08444F9885CF1934BF18F44F99245FF9449
FF8E45FE883EFC8738FA8734F8781FEF6B23E9805384503B876B608C665B926A628C7472937773
977D7C9A84879F8C90A4989CA9A2A9B1AEB9BDBACDCBCADCCFD0E2D4D7E8D4DBEBD7DEEED8E1F0
DAE3F2DBE2F2DCE3F3DCE3F3DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8
E4EEF8DBEFF6EAECFFDFEDF0E1E4F3E7EEFEE1F0F5CABBDA58465E704886704282FDEBE9795EAF
7A37AA8636956E3383582C794E1E4E52235941114F3C074B4005493E014440084938014247014A
3C0053400B634110614813654514633C1F57B8AEC9DEE9E5B2B0BD473952A79CADD3CED5E4D6EF
5A32795D1D8D571D966C0C8A5F169B5321A46710936F09997111B0850CAF3E046B4304552B074F
3805404F106B5B08707013AC7100AA8A0CB89A2BAE7C3E94AF52C7B881D2A08689A29396AF9BB6
B2A7B5B9B3C1C4C1D2CCCFE2D1D8EBD6DEF1DBE3F6DEE7F8E1E9F6E2EAF7E3EBF8E3EBF8E4ECF9
E4ECF9E5EDFAE5EDFAE5EDF8E5EDF8E5EDF8E5EDF8E4ECF7E4ECF7E4ECF7E4ECF7E6EEFBE5E1F2
E3EDEFE7E1E5E4A884FF8739F0A85EF8C18BFBAE76F8A66AFCA35FFFA35AFDA158FD9F55FF9D51
FF994AFF9B3CFC9552F98F5BFA944CFD963AFF933DFA833FF98D4FFD8D41FC8D45F88D45F69045
F29144F08C40FF9243FF8C38FF8540FF8C41FB9445F99446FC8D45FF8B43FF883AF9822EF6761B
EB671FE9815A7D4E3C80685E8C645A956D6588736E957874987E7D9B8588A18E92A69A9EABA4AB
B4B0BEC0BDD0CCCBDDCFD0E2D4D7E8D4DBEBD7DEEED9E2F1DAE3F2DBE2F2DCE3F3DCE3F3DDE4F4
DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E4EEF8E4EEF8
E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8
E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E1EEF7E4F0FCDBE7F3E2F0F9
E0EFF6E0E8F3C8C3D94F405F614166725082F9D3FF794995773E9C6E388C603084542E6B4E2658
4C225245194A47144C4A0F4F440C4D4513503C0F483F034B4706583F04563D0D574818644B1664
3F1D50C4BDCDD4D2DF939BA6392855644473CBC6DDEEEFE95C2F84651A916E0E96640A9F630FA3
69159E6C149E6609A06C17AA580D8C4000533A0B53300C493502475F03709E23BC7400A87507B8
750AB07519966C337AC352E0C574DA928E8DAE8BA9AFA3A7B1ABB7B8B4C2C4C3D3CDD0E1D3D8EC
D7DEF1DBE3F8DEE6F9E1EAF9E1EAF9E2EBFAE2EBFAE3ECFBE3ECFBE4EDFCE4EDFCE4ECF9E4ECF9
E4ECF9E4ECF9E5EDFAE5EDFAE4ECF9E3EBF8E2E6E7E8EBF2DEE4F4F5E9EDDB9468F7882FF8A45B
F6DFBFF2B177EEA968F0A35DF8A45BFFA35DFF9E59FD9C55FFA054FB9854FA9A50F9994CF99847
FA9744FA9344FC9045FF8F47FD8C46FF8E48FE8F48FC8D46FB8F47FD924AFA9249F69046FD9345
FB924EFD954CFE963DFC8F3AFD8842FD843BF77E23F37312E27137C574598656408966538D6860
8E6C6B8C706C917776967E7E9D8789A49195A699A2ABA3B0B6B2C3C0BFD1C9CBE0CCD1E5D1D8EA
D3DCEDD6DFF0D8E1F2DBE2F2DAE1F1DAE3F2DBE4F3DCE5F4DDE6F5DDE6F5DDE6F5DCE5F4DCE5F4
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8
E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9
E4EEF8E4EEF8E4EEF8E4EEF8DFEDF6E4F0FCDCE8F4E0EEF7DCEBF2DEE6F1D3CEE4534463664476
593271936AA47743967034966C32896530885228675221594E22534C255247204F451A5244155B
4C19684511663D0B50470E5B49135F45155F440E644B106E4B2065AE9FBCE7DDF6CED3D9C6C1D7
CAC5DCD0D7E9D6CFD7642695620DA6650C9A650FA4630FA2620C95660B966D11A46B189C550E78
3F014E41084C3E074B530B6E8E25B37C00A1A21EC19117AA5B1A8E52176B701977BD4BDFAD6CBE
9B8C93A38EADAD989FB1ABB9B9B5C3C5C4D4CDD0E3D3DAEDD7DFF2DBE3F6DEE6F9E1EAF9E1EAF9
E2EBFAE2EBFAE3ECFBE3ECFBE3ECFBE4EDFCE5EDFAE4ECF9E4ECF9E4ECF9E5EDFAE5EDFAE4ECF9
E3EBF8EEEAFFDEE6FDD2E2F1F2E3DCDD8351FF7827F89657FFE7D0FFCDB2F9BB94F4A771F99F60
FFA05CFF9F5EFDA160F8A362FFA05FFF9E5AFC9A53FA984DFC9749FE9448FF9144FF8F43FC8E43
FD8F44FD8F44FD8F44FD9146FF9348FF9549FD9347FD9345FC914DFD954CFC9641FD903DFE8A41
FD8336F87B1FF27012E5763EAE624A8B5C4A8766558B68628C6A688F726C9379789880809F898B
A69397A99CA5AEA6B3B9B5C6C3C2D4CACCE1CDD2E6D2D9EBD3DCEDD6DFF0D8E1F2DAE1F1DAE1F1
DBE4F3DBE4F3DCE5F4DDE6F5DDE6F5DDE6F5DCE5F4DCE5F4DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9
E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E0EEF7
E5F1FDE1EDF9DFEDF6DAE9F0E0E8F3E2DFF2594C685B3473683E886E3F85743C976F2E9670318C
6129825022625725585323535325535025524E1F554C1B5C4A16614F186B3D135B410F58461358
45135C4B0F6F5713824211634F3A61DACEE6D8E2DAEFF8F5E4F0FEC5D9E2C8BEC658117B6D0EA8
6D08A66F0BA96C0CA36A0B9B6E10A2711AA758148345115C3619514C34546036667C318E853399
7B3E8C8751AF53109D3A18622E093F911A98A639C8A97AB0A58D9D9B95B1B89EABB2ACBABAB6C5
C5C4D4CED1E4D3DAEDD8E0F3DCE4F7DFE7FAE1EAF9E1EAF9E2EBFAE2EBFAE3ECFBE3ECFBE3ECFB
E3ECFBE5EDFAE4ECF9E4ECF9E4ECF9E5EDFAE5EDFAE4ECF9E3EBF8DCDFFFDAE4FDE1EBF7F6DBD2
E17D4BFF7B28F3833BEAB68EFFD3BCFFCBABFEBE90FDB078FFA66CFFA265FEA261FBA25EFF9852
FF9652FD9653FE9856FE9B58FD9A57F99652F5924EFE9448FC9246FB9145FE9345FF9446FF9245
FE9041FD8F40FF9144FB904AFB934CFC9546FB903EFE893AFD802EF8751AF26A14E87D49934F3A
8C625487675C876863896A6792746C937B7B9880809F898CA49399A99CA5B0A8B5BBB8C9C5C4D6
CCCEE3CFD4E8D3DAECD4DDEED6DFF0D8E1F2DAE1F1D9E0F0DBE4F3DBE4F3DCE5F4DDE6F5DDE6F5
DDE6F5DDE6F5DCE5F4DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E4EEF8E4EEF8E5EFF9E5EFF9
E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8
E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E1EFF8E3EFFBE1EDFBDFEBF7DCE9F1E2EAF5
ECE9FC5E516B603A77663C846B3D7E70358F6E2C906A29835B237C5F317159316650235A5B2863
541C5B521A59591E605C2068511360451869430E5C4710544511594B0D6E520C7E48166B422D54
C8B9CEF1F2F69F98A8A999C8D1D3E8F5E6ED923E9E8508A07800AB7600A274009D7508A36E0BA6
60129A450F6F4D29665E638D797A98A09CBFA8A2CEB5B3C9DAD2D0AD87AC4C056B3D0657440C57
8C0CA18D2EA6A887A6A2879A9B97A6B59FB6B3ADBBBAB8C6C6C5D5CFD2E5D4DBEED8E0F3DAE5F7
DDE8FAE1EAF9E1EAF9E2EBFAE2EBFAE3ECFBE3ECFBE3ECFBE3ECFBE5EDFAE4ECF9E4ECF9E4ECF9
E4ECF9E4ECF9E3EBF8E2EAF7DAEAEAE0E9F0E8E4F3EFC8CBD67A53FF7C2AF6791DE58538E69047
F0A057FBB06CFFB87AFEB57EFFB078FCA86AFBA25EFFA862FFA35EFB9D5DF89A5CF9995CFB9C5C
FE9D58FE9D56FB994EFA964BFB974BFF9A4FFF9C4FFF9749FE9345FF9144FF9144FB8F47F9914A
FB9449FC8F3DFE8733FD7B25F77016F06719E681538146368B655C87695F8367638B6E6A95746B
937B7B9782819F8B8DA49399A99DA7B2ACBABDBACBC5C6DACDCFE4D0D5E9D3DAECD4DDEED6DFF0
D8E1F2DAE1F1DAE1F1DBE4F3DBE4F3DCE5F4DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8
E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8
E4EEF8E4EEF8E1EFF8E0ECF8E0E9F8DEEAF6DDEAF3E3EBF6ECEBFB665C74634372502D67663B70
68327E63247D652B785E2B7A522B624B30654E316955346B533365462457502463571C705D1579
571E7C500F694A0D5A4D186051156F46036C4C1B6A564569DBD2E5E9ECFD644F70764B90D8C8E3
FEEBFFAA50C1B018CD8607B88203AA8002A47F08AF700AAB5F0F94501775704688B7ABB7CEA2C6
BC89C29785BF857DB68662A26E2C764900517607877A1A9769009094499CA4889F9D8899A89CA0
A69CBEB3AFBEBBB9C7C5C6D8CED3E6D4DBEDD8E0F3DAE5F7DDE9F9E1EAF9E1EAF9E2EBFAE2EBFA
E3ECFBE3ECFBE3ECFBE3ECFBE5ECFCE4EBFBE4EBFBE3EAFAE4EBFBE3EAFAE2E9F9E1E8F8E9F0E8
DBE0E4DEDAEBEBC9D7D78570E7692EF46B1DEF7023FF700EFF7518F57D27EB833AED9152F6A065
FFAA6AFFAC69F4AB67F6A866F7A667FBA266FD9F61FE9B57FE984EFE974AF69953F39650F3974E
F89A52FC9C52FC984DFD954CFF954BFF9449FB9147FB904AFD9149FC8C3AFD8429FB781EF76B16
ED6624D57C547D4D3F86645B8B6A638266628D746F95746D937E7D9A8486A18E90A6979CADA1AB
B6B0BEC1C0D0C8C9DDCED0E5D0D5E9D4DBEDD5DEEFD6DFF0D9E2F3DBE2F2DBE2F2DBE4F3DBE4F3
DCE5F4DCE5F4DDE6F5DDE6F5DDE6F5DDE6F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E4EEF8
E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9
E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E2F0F9DFEBF7E0E9FA
E1EAF9DFECF5E4ECF7EBEAFA81799051395B52356159375A5C2F6A5621695C2C685F37737F6487
BEB6CDDCD4E9E4E0EFCDD0D7BEC1CA6A5D7B51266D6725895D1A7B5B1376500E664A146051176B
4D0A6B46115F3F2552D2E2E1B8CDD0D0D1D3D5C6E3E8EDE9DBCCED7825A98D07C87B05B17A01A8
7600A37602AD6F0AA45B0A824A0860591C69581275681B7B64097E6807946B22974A185D3A043E
5A0C629C0BAE7D0D9D6E2598A36A9DA5899F9D92A2AE9A9CAAA4C6B5B1C0BDBACBC7C8DACFD4E7
D4DDEED6E2F2DAE6F6DCE8F8E1EAF9E2EBFAE2EBFAE3ECFBE3ECFBE3ECFBE3ECFBE3ECFBE4EBFB
E3EAFAE3EAFAE3EAFAE3EAFAE2E9F9E1E8F8E0E7F7E8DFF2D5DAEED8E0F3EBD1DED37E7BD44F3C
E35436DD5636F05831F46032F8662DF7692BF46D2BF47530F17B31EF7E2EF38E40F79147FD9852
FF9F5CFFA263FFA568FFA668FFA66AFFA562FFA25DFBA05AF99E58F89B55F89752F8964FFB944F
FF984FFC9246FC9047FF8E47FE8733FE7F20FA751AF6681CED6B37BB6F4D7F594C85635A906A61
856A638E7672967472947F7E9B8788A39092A8999EAFA5AEB7B3C1C3C2D4C8CBDECFD1E6D1D6EA
D4DBEDD5DEEFD7E0F1D9E2F3DCE3F3DCE3F3DBE4F3DBE4F3DCE5F4DCE5F4DDE6F5DDE6F5DEE7F6
DEE7F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9
E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9
E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E3F1FAE2EEFAE2EBFCE2EBFAE0EAF4E4ECF7EBEDFCA7A2B6
4C3B5B4C365D3F25424C265550255B48234C553B60DDD1DBC1CAC9E3E0EBC4B2C8C2B0C6BCB1BF
E1D6E7AA95B64D2B5E5B167362198257167A461265470E5F550E6C521269471A5F90889FF3EFFF
EFF2EBEEF8FFDEE3E99A5CB2A227CF8202B78004B48305AF7D01AF7606B06C149E52116D4B165A
531E66743B9C66458C8560AE6527944B0B6C3900476C0673AF0ABE9511B26E1E8D8962A1A17898
A2899F9C95A7AA98A4B2A8C0B8B4C3C0BDCEC9CADCD1D6E9D5DEEFD7E3F3DAE6F6DDE9F9E1EAF9
E2EBFAE2EBFAE3ECFBE3ECFBE3ECFBE3ECFBE3ECFBE3EAFAE3EAFAE2E9F9E2E9F9E2E9F9E1E8F8
E0E7F7DFE6F6E0DDFADBE3FADEE1F2DDBAC1AC555BC1444ACC464DCA494EC24C5ACD5557DC5C4F
E45E41E65C35E75D2EEC652DF06C2CF46D29F16C27EB6C29E8712DEA7D3CF08A4CF4975CF79E64
FFA360FFA662FFA662FFA45FFEA15CFF9E5AFE9B57FE9955FC9A53FA9344FD8D41FF883FFE802B
FA7914F77016F16623EE754A9F5C417F61568A655C93675E8B6E668974719777789480819C8889
A59296AA9BA2B1A7B0BAB6C4C3C4D6C9CCDFD1D3E8D3D8ECD5DCEED6DFF0D7E0F1D9E2F3DCE3F3
DCE3F3DCE5F4DCE5F4DCE5F4DCE5F4DDE6F5DDE6F5DEE7F6DEE7F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9
E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8
E1EFF8E4EDFCE4EBFDE2EBFADDE7F3E2EAF5EBEDFAC2BDD14C3E613F2D55412A4641214A482450
492D46433447D8D5CEDFEDF85F4E7B6C32866E2483642A747C5C85F0E5F69B989F65237B5E1781
541580501E774E1468590E6D54086C4C106A5F106B7D338CB285B09184BC5D357B9300ADD60CEA
A704BD9000B69506BA8B05BA7306AF560F873A11535B406D7E629C9799A89C89A9BCA8C3B0ADB6
361B4860017F9702B3AC09BA912AB79168AA8D7994A884A0A189A19E99AFB2A4BDB5A3B1BAB6C5
C2BFD0CBCCDED2D7EAD6DFF0D8E4F4DBE7F7DDE9F9E2EBFAE2EBFAE2EBFAE3ECFBE3ECFBE3ECFB
E3ECFBE3ECFBE3EAFAE2E9F9E2E9F9E1E8F8E1E8F8E0E7F7DFE6F6DEE5F5CEE7EED9E5F1E8D8E5
DDA8B2943F46B34953B84250C34553C2555BC55B5DCD6566D56E6FDC7475E07471E37367E67360
EE6D4DED6C45EE6C3BF16F33F4742DF67728F57625F17420E9803CF18A47F79450FA9954FB9D57
FF9E59FF9C58FF9956FA9954F79242FA8B3CFF8339FB7921F6730BF26B11EE6225EF7B568D4F36
7E64578E685D94645892746C867170997A7F9783849F8B8CA69699AC9FA6B5ABB4BDB9C7C6C7D9
C9CEE2D2D4E9D4D9EDD6DDEFD6DFF0D7E0F1D9E2F3DBE2F2DBE2F2DCE5F4DCE5F4DCE5F4DCE5F4
DDE6F5DDE6F5DEE7F6DFE8F7DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6E5EFF9E5EFF9E6F0FA
E6F0FAE5EFF9E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E6EFF8E2ECF6E1EEF7E2EEFAE2ECF8
E3E9F9E6E4F9E3E0F560526B432F4B46264B4B214F4B245142274A3328398F8E93ECF5F4BAB3C5
654A775F39767B5995C5AFDDBBB4D3C6C7DC5F29816F22947719936F147D641B774E0F78520F82
550D7D840998800A9E7809A37004A57000A97B00B08D02BD9B06C49800BEA414C4960FCD7208B0
50117C856191C6A9BF886699F3E9E882719DBBB1CAC2C6C73315517D0F929F129EAB40C19D68B0
9C6CA098758D9E8491A694A2A99EAEABA8B3B2B3B8BAB9C9C3C4D6CED1E4D5DAF0D9DFF5D9E4F6
DBE9F6DCEAF5E1EAF9E1EAF9E2EBFAE3ECFBE3ECFBE3ECFBE2EBFAE1EAF9E5EDFAE2E9FBDCE4F9
DBE3F6DFE8F9DFE7F4DBE1F1DADFF2E0DDEED4D8E4D5E3E4C18F92A54748A74C49A63D4CAB516B
BC5E6EBC6472BF6E77C87881C9767ECB747CD27B83D47D85D58480DC7E7CEB847DE98271E8795E
F47554F27348E5733DF27130F26B29FC722AF57021EE741FF4812EF17C2DFD8338FF842BF77E2B
FE8131F97C22F57711FB6A0FF35E1AE26E35D17C678E513C886754816B5D8A6D65967371927275
957C809A84869F8C90A6979EACA2ADB3AFBEBEBDCFC6C9DCCCCFE2D0D7E9D3DAECD6DDEFD8DFF1
DAE1F3DBE2F2DBE2F2DBE2F2DDE4F4DDE4F4DDE4F4DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6
DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5E5EFF9E5EFF9E6F0FAE6F0FAE5EFF9E4EEF8E4EEF8E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8
E4EEF8E4EEF8E4EEF8E5EDF8E1EBF5E0EDF6E2EEFAE0ECF8E2E9F9E4E7F8E3E1F6A699B3503C58
4B2B504C234F502656492650351E3A3A2D3E937E8DE8D6E4FEF2FEE2E0E5EBEFF0EBECF0EBE5F3
9587A07625A67A17B28410BB810EAB700D8E6512845C1484500C7D740A92720C966F0C9D6B08A1
6E03A77701AF8201B48C02BA8B06BF910FD380009E77079161337EC1B1CB593E69695A79C3AAD4
522373C4ADC9908D863C0B4D7726839E5894A066A1936CA1927395947C8C9D8994A799AAADA1B7
B0A9BBB7B3C1BEC0CFC7C8DAD2D4E9D7DCF2D9E1F6DAE5F7DCE8F6DCEAF5E0E9F8E1EAF9E2EBFA
E2EBFAE2EBFAE2EBFAE1EAF9E1EAF9DDE5F2E4EBFBE4EBFEDEE7F8D8E1F0D8DFF1DDE3F9DBE1FB
D9DEFBDADEF9E9EAFC9E5F70A53A44A74043B54958A84F63BA5563BC606DC06A77BE6C7AC27180
C67888C57B8CC27B8BBE8389D0838DD78089D28784CC8476DB8974E48871E38569E98063EC7B59
F47A51F07440F07635EC7229F67429FC742AF77320EF7021F57023F26E19EF6E10F56713F06125
E57545BF725E8F58448B6A59866E628E6F6A9673719577799680839E888BA39094A89BA2AEA6B1
B7B3C2C0C1D3C9CCDFCFD2E5D1D8EAD3DAECD6DDEFD8DFF1DAE1F3DBE2F2DBE2F2DCE3F3DDE4F4
DDE4F4DDE4F4DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5
E5EFF9E5EFF9E6F0FAE6F0FAE5EFF9E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E5EDF8E1EBF5
E0EDF6E0EEF9E0ECF8E2EBFAE3EAFADFE5F5E9E0FB7C6D8A553A5B57315A4B204E5029564B2850
4224463E1E434C3150625068A49BAEB3A9C1B297C48B58A36721816925946A1C967B19AC810CB3
8409AF7B0E9B66118A65219262118A63118F661095670E9C6C09A27006A87602AB7B00B08A0CC5
6E00AA8101A06F0A74574167A3A0B182678ABDA8E0653F94A582BABAABC23F3045845488A165AB
8D5D91996B878A75948E7D909585909E929EAA9EB4B0A6C1B6AEC6C0B8CDC6C9DACDD0E3D4D9ED
D8DEF4DAE2F7DAE5F7DCE8F8DCEAF7E0E9F8E0E9F8E1EAFBE1EAFBE1EAFBE1EAFBE0E9FADFE8F9
E2E9F9E1E8FADBE2F4DFE6F8DCE5F6D8E3F9D6DFFFC1CAF19CA8D88087B5ACA4CBA25F82A83B50
A63740B14552AF5765B85863B55B64BC6973BA6C7AB86F80B37286B07B8DC599AAC099ABCE92AB
CA869FCC97A7C59CA2CA9197D88891DF838ED38386DD8584E27F79E87F6CED7E60ED7A4EF47844
EF6E35F3722EF0702FF36C2CEF6920EB6C1BEE651FE86336E07C58A563538F5E4F8D6D628C6F69
92706E967272987B7D968385A08C8EA49399AB9EA7B1A9B6B9B7C5C2C3D5CBCEE1CED3E6D2D9EB
D4DBEDD7DEF0D9E0F2DAE1F3DBE2F2DBE2F2DCE3F3DDE4F4DDE4F4DDE4F4DEE5F5DEE5F5DEE5F5
DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5E5EFF9E5EFF9E6F0FAE6F0FAE5EFF9
E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8
E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E2ECF6E1EDF9E0EEF9DEECF7E1EDFBE0ECFA
DEE7F6E1E1F9E9E4FAC5B6CD684D6C55325A4B26514D285345224A3C264A3B204B58386A4D2C65
583472643A829361B6BE85E4B5AACCC2AECAA676B0680D8C7F03B39111BC710C965F15885A1788
5B15895F138F6411936B0E9B6D0BA07006A47004A57B009F730A8A78159655106B9480A3E2D4E3
DCB4D66F379A750FA17C4A8F6E4D828D66A57C6488846C8E8A678F90757A8D7E93938596998D9B
A398A9ADA3BCB5ACC9BCB6D0C5C2D7CBD0E3D1D6EAD7DDF3DAE0F6DBE3F8DBE6F8DDE9F9DCEAF7
E0E9FAE0E9FAE1EAFBE1EAFBE1EAFBE0E9FADFE7FADEE6F9E3EAFCDDE4F6D5DCEFDDE5F8D7E2F8
C9D7F4BDCAF698A7DE687BBF4554955F5E98855785933E5BA13F4CA94954AC5A66B56063AB5B5E
B06468AC636AAC6670A46872A2737BC7A2A9D1CBCFC0ACB59F8B96A49DA4B0AAAEAC8B96BE8596
CB889AC78F98C78A92C9828AD6878CD7827FE0867BE0816FE8856EEA7D56ED7D55F2744CEC6E3C
E57337E46A39DF684AD47E67905C4F92675E906F688F726E9573729876779B8184978788A18E92
A5969BACA0AAB3ADB9BBBACAC4C7D8CBD0E3CFD4E8D3DAECD5DCEED7DEF0D9E0F2DAE1F3DBE2F2
DCE3F3DCE3F3DDE4F4DDE4F4DDE4F4DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6
DFE6F6DEE5F5DEE5F5E5EFF9E5EFF9E6F0FAE6F0FAE5EFF9E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8
E4EEF8E4EEFAE3EDF9E2EEFAE1EDF9DEECF7E0EEF9E1EDFBDBE7F5D7E3F3DBE3F0E1E0EEDDD4E7
89769258406245294F4A2F52422C434227464224489F85A8DACCE5D6D4E2DFE3ECE4EBF1E6E8F7
F6F0FADAB9E4822EA78306BA8400B376089D731F995A1A8A5915865B11846110896910906B0F96
6D0F9B700E9F7E08B28011AE580C884A0D966C25A56F2F8D581C8E6518A2872397905B9F916A9F
8856958968938670858F728894719198819B9D89A2A091A8A89CB4B2AAC2B9B5CCC1C2D6CBCEDD
D0D6ECD3DBF0D8E0F5D9E1F6D9E4F8DBE6F8DDE9F9DDE9F9DEEAFADEEAFADEEAFADEE9FBDEE9FB
DDE8FADCE7F9DBE6FAD9E1F6DDE5FCDCE2FCD5DCF8C1CCECAFBEE997AAE46E83C63E59A8304B9A
49579E7871A5BF96B4AB66789E58639C5A66AC5D62AA5E62B3676BB06166B7686BB56B6CA2615F
AE736FBA9493D3B1B0E7D4D0EAE1DAD7C2C1A3717AAF737DBF8A92C0A2AAB08F96BB939CB5818D
C0828DCC868EC47C7FCD8382D07E73D78174DF7869DF755DD77957D97156D67062C47C708B6057
97726A9273709375739879779C7E7E9E888A9B8C8FA29398A89BA2B0A6B1B6B2C0C0BFCFC9CCDD
CFD4E7D1D8EBD4DBEDD6DDEFD8DFF1DAE1F3DAE1F3DBE2F2DCE3F3DDE4F4DDE4F4DDE4F4DDE4F4
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5E5EFF9E5EFF9
E6F0FAE6F0FAE5EFF9E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E5EFFBE1EDF9E2EEFAE0ECF8
DFEBF7E1EDF9E1EDF9DCE8F4D4E4F1D8E6EFD4DEE8D4D7E6DEDAF1D1C8E3A699B574647E4F3751
4C344E453246948A95E4DFE6C8C2CCCABCD3B29DBE8453A5723B987A30A97309AB8A09BE8200AC
7708A27015A061188B5C12835A0D7D5D0D7E6310826712896B15906F19986B16986A0A85530F72
5B1788760497720D99581D8B8B50A48B5C8A855E7385637E996A989B5F83936D848F7598AC7DB1
9E87A4A48FAEA898B5AEA4BFB8B4CBC0C1D5C7CCDFD0D7E7D0DBF1D4DFF5D7E2F8D8E3F7D9E4F8
DBE6F8DCE7F9DCE7F9DDE9F9DDE9F9DDE9F9DDE8FADDE8FADBE6FADAE5F9D9E4F8DCE7FDD7E1FC
CFD5F7BDC5ECAFBCE9A0B3EB718CCF3C59A52043952E54A7455EB05871AAADA9CCCBA0BBC89FB1
AC8296AB6678A66472AC6671AF636DBA686EBE686BB6605FC06D69C46468B66063A86763A7756E
BE7E7CB9676BBE7070AF766F8B7A84AF9BA4ECD3D9BE979CC1888FC78287CB8386CA8283BB7A7E
C57E82CE787BD07972C77E6FCE7A6FD07876B37671906B62987770947674957B7A977D7C9D8585
9F8B8D9F8E94A5989FABA0A8B2AAB5B9B7C5C2C4D3CACFE2CFD6E9D1D8EBD5DCEED6DDEFD8DFF1
DAE1F3DBE2F4DBE2F2DCE3F3DDE4F4DDE4F4DDE4F4DDE4F4DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5E5EFF9E5EFF9E6F0FAE6F0FAE5EFF9E4EEF8E4EEF8
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9E5EFF9
E4EEF8E4EEF8E4EEF8E4EEF8E2EEFAE1EDF9E4EEFAE2ECF8E0EAF6E4EEFAE5EFFBDEE8F4DAE6F6
D4E2EFD1DFECDCE7F9D1D9F0CCCEE7C3C1D7C4C1D2C0B1CE9F91AB746B804C435859466659306C
6F2989751A937E1EA37915AB8215BC840CB98808B78506B57D0DAF6B079B6918916110865B0D7B
5A0F785C11785E137C641684691B8B5F1A8E5D0D6E611383600D798113909737B59C69AB80558A
905D989362788D6280926792986D7E8D7985938FA88D818DA093AFA79DB8AFA6C3B7B3CCC2C3D8
C8CDE1CDD3E9D3DAF4D2DEF6D6E0F9D8E3F9D8E3F7D9E4F8DBE6F8DCE7F9DBE6F8DCE8F8DCE8F8
DCE7F9DCE7F9DBE6FAD9E4F8D8E3F9D7E2F8D6E4FEBFCAEAB5BCE8ACB3E9A1B0EB859CDF4464AF
1B4091214F9D1C499C3E56AE5F7EC18F9AC8C9ADD3CABAD4C3B5CFD8B4CEC7A5BDB694A5AE8291
AB7380AB6772AE676FB87074BA6C6ABB6D6BB8736EB2776FAF6C64B36660B56F65B07D6AD4ABB3
D7B0B3E3BBB9A87572B2716FC97D7DCD8181BD7576BB7B7CC27E7FCA787EC97A7DBB7E79C7807E
CC8082A26F6B9A756D9B7A75997D7A9A8582988581A08E8CA08D8FA5949CA99EA6AFA5AEB6B0BC
BDBBC9C4C7D8CCD1E4CFD6E9D0D7EAD6DDEFD7DEF0D9E0F2DAE1F3DBE2F4DCE3F3DDE4F4DDE4F4
DDE4F4DDE4F4DDE4F4DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5
DEE5F5E5EFF9E5EFF9E6F0FAE6F0FAE5EFF9E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E1EDF9
E1EDF9E4EEFAE2ECF8E1EBF7E6EEFBE7EFFCE0E8F5DAE2F5D5E0F2D9E6F9CDD9F1D1DCF8CED5F1
CBD0E4C0C2CFBAB9CBAFAEBEB2AFC0B5ADC29E8DAF996FAE8842A28C34AC851C9D8D20AF8715A9
8E18AC860DB08209C07B06B57B0CA672199767148A5D0F7C5911755812725613745C1679621B81
55117853086F5C0B748D37B6A14FB59657848254798B628E8C5D8B866B8C886D7C927A8A8D81A5
9381ABA084AAA591B49FA0B5A9A9C1B4B4CCBEC0D7C9CEE2CFD5EBD1D6F4D4DAFED4E0F8D6E2FA
D8E4FAD8E4FAD9E4F8DBE6F8DBE6F8DAE5F7DAE6F6DBE7F7DBE6F8DAE5F7D9E4F8D8E3F9D7E2F8
D6E1F7BECEE7A5B2D5AEB6E7ACB4F291A0E35870BA1A3D8E174195184E982454A65566C25E7AC3
8994CACCB2E1BBBAD9C0C7E4C1C2DEC5C9E2C5C7DCC8C4D5D1BCCDD6B4C4CCA2B0B58792AA7D77
AD706FB1696ABE7A79B36C68C3706CBB6661B96F64B56969AC6760B17167B77368BF726CC37374
B97175BF7C83BE7A71C37A74CA7578C5797BB57D7CC58586CC85899C6C68A58078A07F7A9F8682
A3908C9B8C87A49693A39396AF9BA4B0A5ADB5ABB4BBB5C1C1C0CEC9CCDDCFD4E7D2D9ECD2D9EC
D6DDEFD8DFF1D9E0F2DAE1F3DBE2F4DCE3F3DDE4F4DEE5F5DDE4F4DDE4F4DDE4F4DEE5F5DEE5F5
DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9E4EEF8E2ECF6E2ECF8E3EDF9E3EDF9
E1EBF7DFE9F5D9E4F6DBE6F8DAE5F7D6DEF1D4DCEFD3DBF0CED4EAC5CBE1C0C5DBBABCD1B1B2C4
ABA8B9AAA1B4AA9BB2A894B0A78EAE926E9E7B4D8E6D308D7A2AA58426B87F17B4790DAE7B0FB0
6815996B1B986618885A0F76590F7062187B651A83601481390F5B5729727A498B8D5A938C5B8A
885A7F89607E8C69818A69888C6E8A90748D937B9397859B998BA29F92ACA79DB6ABABC3B4B6CD
C0C5DBC8CEE4CDD5ECCFDAF0D3DDF6D3DFF7D7E4F5D7E4F7D8E4FAD7E3FBD7E3FBDBE7FDDDE8FC
DAE5F7DAE5FBE0ECFFD0DFF2D4DFF1DEE5F7D8DEF6D3DBFFB3BFE9A1B3E1A5B5E9AAACE9B2AFF2
697BBB1745831C488F23398F194E9A355FB1486EC35E83D1798ECFB7B7EBCAC2EBC9C8E7C9CEEB
CACEE9CACEE7CCCEE5CDCEE3CECCE2CDC9E0CCC8DFD0BFD1CAB8C8C3ABBBBA9AA7B68893B47880
B56E74B8696EB67269B47067B47067B7736AB9736BB9736BBA746CBC766EBC7676C07675C27472
C37571C27B77BE817EB1807CA37A76A48A8BA58C8FA58F92A49195A49399A5989FA99EA6ADA1AB
B0AAB8B7B3C1C2C0CEC8CAD9CED1E2CED5E7D1D9ECD3DBEED8DFF1D9E0F2DAE1F3DBE2F4DBE2F4
DCE3F5DDE4F6DDE4F6DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DEE5F5DEE5F5
DEE5F5DEE5F5DEE5F5DEE5F5E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E4EEF8E4EEF8E5EFF9E4EEF8E2ECF6E2ECF8E3EDF9E3EDF9E1EBF7DFE9F5DBE6F8DCE7F9DBE6F8
D9E1F4D8E0F3D7DFF2D3D9EFCDD3E9C8CDE3C2C7DBBBBED1B7B6C8B3AEC2B2A6BEAD9DB8A996B4
9E97A7A395AEA387B09B6AAB8D4BA284339C80259E7E1D9E762399751D987114987013976F1A8F
65227F522465411F51765089825B9090669896689691648B8A62848866818A69848E708C927591
937B9597839C9D8EA5A295AFA79EB9B0AAC6B6B8CFC0C2D9C9CEE4CFD5EDD2DAF1D4DFF5D6E1F7
D6E2F8D5E2F5D8E5F8D9E4FADAE5FBDBE6FCD8E3F7D8E3F5DFEAFCDFE6F8D8E3F5D9E8FBD5E4F9
D2DEF6CDDBF8A5B2DCA6B6E79DAFDDA4ABE2B3B7F77B85CA395093203B7E152F791E3885275BA6
4069BB4D73C85F84D2768DD0B3B4EACAC3ECCACBE9CCD1EECDD3EDCFD3ECD0D5EBD3D5EAD4D5EA
D5D3E9D4D2E8D0D1E5CFD0E2D1CEDFD1CBD9D1C3D0D0B9C3CCADB5CAA5ACBF7D89BA7882B7717B
B76E75B76C71BA6B6EBD6B6DC06F6EB7726DBA736FC07572C07673BE7A79B98182B5898AAF8B8D
A99396AA9698AC999DAB9AA0AB9EA5AEA2ACB2A8B1B4ACB7B6B2C0BCBAC8C6C5D3CCCEDDD0D3E4
D0D7E9D2DAEDD4DCEFD8DFF1D9E0F2DAE1F3DBE2F4DBE2F4DCE3F5DDE4F6DDE4F6DEE5F5DEE5F5
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E5EFF9E4EEF8E3EDF7
E3EDF9E3EDF9E3EDF9E1EBF7E0EAF6DCE8F8DBE7F7DCE5F6DBE3F6DAE2F5D8E0F3D5DDF2D2DAEF
D0D6EECCD2E8C7CCE0C4C7DAC0C1D5BBB7CEB6ADC8B1A6C4ADA2C2A99CB69F92A69B8A9CA48CA2
AC8AAD9D73A584579278278E792297791CA17317A0691793692886774B8689698E88698B886687
8964858863828B67838C6B868E718D8D758F917993967F9999859E9C8CA6A598B2AAA1BCB1ADC8
BAB7D4C1C5DEC8CCE5CFD5EDD4DAF2D5DDF4D5E0F4D7E2F6D7E2F6D6E1F5DDE8FCD9E4FAD4DFF5
DBE6FADDE8FCD8E3F5D9E5F5DEE1F0DEE7F8D7E7FECCDDF9BDCDEE9FAED5A8BAEA9DB0E89FABDB
B1B3F0919ADF3954991B3379252D763B438B40579A3969B34E74C75378D05C85D5718CD1AEB1E8
CAC5EECACEEBCDD4F0CED5F1D1D7EFD3D8EED4D9EDD7D9EED8DAEFD9DAEFD0D8EFCFD7EECCD7ED
CDD8ECD0D7EACFD5E5CECDDDCBC9D7DDC5DDD7BED3D1B2C4C9A5B3C096A0B7888EB27E82B0797C
B77C78B77A77B97979B77B7BB67F84B1868DB19099B298A1B09FA7B0A1A8B0A3ACB2A6B0B3A9B4
B5ADBAB9B3BFBBB7C5C1BFCDC6C4D2CDCCDCD1D3E2D1D7E7D3DAECD4DDEED6DEF1D9E0F2DAE1F3
DBE2F4DCE3F5DCE3F5DCE3F5DDE4F6DDE4F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9
E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF9E3EDF9E3EDF9E2ECF8E1EBF7
DFE8F7DDE6F5DBE4F5DCE5F6DBE3F6D8E0F3D6DEF1D6DEF1D3DBF2D1D9F0CDD5EACAD2E5C8CFE2
C6C8DFC0C0DABCB9D4B4A4D3B3A7CDAEA9C0A6A4B29E9CA79A96A49A91A49C8EA7A88EB3967DA5
8B71A18D75A9977CB1967BA89072988B6C8E8D6F898B6B838868808A68808E6E8591758C937B93
927F9596849C9A8BA29F91AAA298B1AAA4BEB1AECBB9B8D7C2C3E1C9CFE9CED4EED3DBF2D5DDF4
D5DDF2D5E0F4D6E1F5D7E2F6DBE3F8DCE4F9DCE4F9D8E3F7D8E3F7DAE5F9DAE5F7D7E2F4E2E7FB
C8D2EBCAD9F8B3C5E99CABD4ADBAE78E9ACEA4B0EAB3B5EE97A1DF4D65AB1B39821B2D7933317C
6A6BAE4F5D9A406EB95278CB537BD35885D86D8BD3A4AAE6C7C4EFCBCEEDCDD6F3CED8F3D1D8F2
D4DAF0D4DAF0D6DBEFD7DCF0D7DCF2DEE0F9DADEF7D8DCF5D5DBF3D5DBF3D6DBF1D6D8EFD5D7EE
C8D4EAC8D3E7CBD0E3CDCFDECECBD6CFC5CECCBFC6CBBCC1C8A8ADC29FA3BD989FBE99A0BF9EA7
BBA1ACB9A5B1B7A9B6B7ADB8B8AEB9B8B0BDB9B3BFBAB6C4BCBAC8BFBECCC2C1CFCAC9D9CBCDDC
D1D2E4D3D6E7D4DAEAD4DBEDD6DFF0D7E0F1D9E0F2DAE1F3DCE3F5DCE3F5DCE3F5DCE3F5DDE4F6
DDE4F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
DEE5F5DEE5F5E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E3EDF7E3EDF7E3EDF9E3EDF9E3EDF9E2ECF8E1EBF7E1EBF7DFE9F5DDE6F5DDE6F5DCE5F6
DAE2F5D9E1F4DAE2F5D6DEF5D1DCF2CED9EDCCD7EBCAD5E9CAD2E7C7CDE5C5C9E2C8CBDEBDC2D6
B4B9CFAEB2CBAAAAC6A79DBFA696BAA893BAA193A09D8F9C998B989886969780949978959C7497
A0739C967796947692977691977991997D949980969A84999B8A9D9C90A6A298B0A79FB7ABA7C0
B2B2CCBBBCDAC1C6E3CBD0EECFD6F0D1DBF4D4DFF5D5E0F6D5E0F4D7E2F6D8E3F7D8E3F7DEE6FD
D5DDF4DEE6FBE1ECFFD5E0F4D2DDF1D9E5FBD9E5FBD7E0FFD1DEFFA3B2DD9CAAD7A8B3E19197C7
B7BDF1B2B9F0AAABEC4962A41F468B19307C292F7D4D4D97696CAF3A3F7F3E6DB55179CE507BD7
5385DC668BD99AA5E5C4C5F3CBCFF2CED7F4D0DAF5D4DBF5D5DDF4D6DCF2D7DDF3D7DDF3D8DEF4
D8DBEEDADDF0DCDFF2DCDFF2DBDCF1DBD9EFD9D7EFDAD6EFD6DBF1D6D8EDD5D6EBD4D2E7D4D1E4
D4CFE3D3CFE0D4CDDFD1CEDFCBC7D6C8C0CFC9BECEC9BECCC5BDCAC2BCCAC1BDCBC3BFCEC2C0CE
C3C1CFC3C2D2C5C4D4C5C7D6C7CADBC9CCDDCECFE1D0D3E4D3D6E7D3D9E9D5DBEBD6DDEFD7E0F1
D8E1F2DAE1F3DBE2F4DCE3F5DCE3F5DCE3F5DCE3F5DDE4F6DDE4F6DEE5F5DEE5F5DEE5F5DEE5F5
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E3EDF9E3EDF9
E3EDF9E2ECF8E2ECF8E0EAF4DFE9F5DEE8F4DDE6F5DCE5F6DCE5F6D9E4F6D9E4F6D8E0F5D4DFF3
D1DCF0CED9EDCDD8ECCED6EBCDD5EACCD2E8C8CAD7C8C9DBC4C6DFBEBFDDBAB9D9BAB5D3B7B1CB
B4ACC39D9DB5A19BB7A596B5A58DB1A187AA9B86A79586A38F859E957C9C967B9C997F9C9C829D
9C849C9B889EA08EA4A697ACA29AB1A9A4BAB0ACC3B4B4CEBDBEDAC3C9E3C9D0EACED8F3CFDBF1
D2DEF4D5E0F6D5E0F6D6E1F7D7E2F6D9E4F8D9E4F8DDE5FCD6E1F7DAE5F9D9E4FAD2DEF4DAE6FE
D9E7FFC5D3EDB5C2EE9CAAD798A6D797A1D29298C8B9BFEFB5BCF2A2AFE65667AF183F820B367A
1C2E7843438D595DA45C64AC4A4E983B6BB5507AD0507EDE4F86E3608ADC909FE4C2C4F7CAD0F4
CCD5F2D1D8F4D4DBF5D6DEF5D7DFF4D8DEF4D9DFF5DAE0F6D4E0EED7E3EFDDE7F3DEE6F3DCE2F2
DBDEEFDCDDF1DCDDF2DFDBECDFDBECDDDAEDDCD9EEDAD8EDD9D7EDD7D5EDD5D3EBC9D8EFCBD7EF
CDD5ECCDD2E6CBCEE1C8C9DBC8CBDACBCFDBCCCDDFCCCDDFCBCEDFCBCEDFCCCFE0CBD1E1CDD2E5
CED3E6D0D5E8D1D6E9D3D8EBD5DAEDD5DCEED7DEEED9E0F0D9E2F1DBE2F4DCE3F5DDE4F6DDE4F6
DDE4F6DDE4F6DDE4F6DDE4F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E4EEF8E4EEFAE3EDF9E3EDF9E3EDF9E3EDF9E1E9F4E3EBF6
E1EBF7DDE7F3DBE4F3DBE7F7DAE5F7D8E3F5DAE2F7D6E1F5D4DFF3D3DEF2D2DDF1D2DAEFD2D8EE
D0D6ECD6D3F0D5D2EFD0CDEAC9C9E5C7C9E0C3C8DBB9C3CDACB9BFBCB2CBBBACC9B9A4C3B69BBC
B096B3AB95ACA397A59E979FA090ABA08DA9A18FA9A091A8A091A8A092ABA599B1ABA1BAABA8BD
B5B1C8BCBAD2BFC1DAC6CAE5CAD1EBCCD7EDD0DCF2CFDEF1D3E0F3D5E2F5D4E0F6D5E0F6D7E2F8
D8E3F9D7E2F8D7E2F8D9E4FAD4E0F6CFDBF1D1E0F7D4E2FDC6D5F2B4C3E29FADDC96A4D59AA6D6
B3BBEAC0C6F6B2BEEE98ADE446639D0C3883123C840E31752C3E80565B9D5D61A86770BF6B7ACF
3C6EB7507ED44D81E44985E75987DD8597DFBEC1F8CACFF7CDD4F1D0D7F4D4DBF5D7DFF6D8DEF4
D8DEF4D9DFF5DAE0F6D7E2F4D7E3F3D7E3F1D7E0EFD5DEEDD5DCEED6DDF0D7DEF1D6DCEAD8DEEC
D9DFEFD8DFEFD9E0F2DAE1F4D6DEF1D3DBF0CFDAF0D5DDF4D7DDF5D4DAF0D1D7EDD0D7EAD2D9EB
D2D9EBD1D6EAD0D5E8D0D5E8CFD4E7CFD6E8D0D7E9D0D7E9D0D7E9D3DAEDD3DAEDD5DCEED6DDEF
D7DEF0D8DFEFDAE1F1DBE2F2DBE2F4DCE3F5DDE4F6DDE4F6DDE4F6DDE4F6DDE4F6DDE4F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7
E4EEF8E4EEFAE3EDF9E3EDF9E3EDF9E3EDF9E5EEF7E8F0FBE6F0FAE0EAF6DDE6F5DDE9F9DCE7F9
D8E3F5DBE3F6D8E3F5D7E2F6D7E2F6D6E1F5D6DEF3D5DCEFD4D9EDC8DFEFC8DBECCAD7E8CED3E7
CFCFE9CDCAE7C9C8E8C8C6EBC0C1DFB8BCD7B2B8D0AFB7CCAEB3C7ACAAC2AAA1BEAA9CBDA79EB1
A39AADA299ACA59CB1A69EB5A8A0B8ACA6C0B2AEC9B6B3C8C0BED4C6C6DECACCE5CED4ECD1D9F0
D0DBEFD2DFF2D2E1F4D4E3F6D5E4F7D6E3F6D6E2F8D8E3F9D8E2FBD7E1FAD4DFF5D4E1F4D1DDF3
D6E5FAD6E4FEB7C6E3A7B6D7BACAEC9EACDBA4B2E1ACB7E5B5BDEBB8C3F0788CBE183B730F3D79
07479109337F1F377D44589557639F6666AE747AD06A81DE3C70BB4F81D84B82E64583E65183DC
7D90DCBABCF5C8CDF7CED4F4D2D9F6D7DCF9DAE0F8DAE0F8D9DFF5DAE0F6DAE0F6DCDDF9DCDEF7
DDDFF6DEE0F5DCE1F5DBE0F4D8DEF4D7DDF5E1E8F8DFE6F6DCE1F4D7DCEFD6DBEED8DDF0D9DEF1
D8DDF0DCDAEFDDDBF0D9DAEFD6D8EDD5DAF0D8DDF3D5DBF1D0D8EDD5DCEFD4DBEED3DAEDD3DAED
D3DAECD4DBEDD4DBEDD3DAECD5DCEFD6DDF0D6DDF0D7DEF0D8DFF1D9E0F0DBE2F2DBE2F2DCE3F5
DCE3F5DDE4F6DDE4F6DDE4F6DDE4F6DDE4F6DDE4F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E3EDF7E3EDF7E3EDF9E2EBFAE1EAF9DFE8F9DDE6F7DCE5F6DCE4F7DBE3F6DBE3F6DBE3F8
DAE2F7D8E0F5D7DFF4D6DEF3D4DCF3D4DCF3D3DBF2D1D9F0D0D8EFCDD4EECAD1EBC8CFE9C7CBE4
C6CAE3C3C7E0C1C3DCBEBED8B9B9D3B8B5D0B5B2CDB2ACC6AEAAC3ADA9C0AEACC2B0AEC4B1B1C9
B6B6D2BABBD7BCC6E1C1CBE6C7D1EACCD6EFCFDAF0D0DCF2D3DFF5D4E0F6D6E4F1D1DEEED3E0F1
D8E5F8D7E3F9D5E1F9D3E1FBD4E2FCD6DDEDD1E1FAC5DDFFC4DAFFB6C5E2A8B2CBC0CBE9A4B2D9
ABB2E6B3BBE9BDC6EFA4B2D94459840E2C62163D80012D7809387C063988333A715A55955660B7
676ABB6D78C76C7FCB3F7BD14D89F73891E53E84DC537CF06E8CE4B6BCEEC2D1F0D0D2F8D2D6F9
D5DAF8D6DCF6D8DEF4DBE2F5DBE2F5DAE1F4DCE1F5DCE1F5DCE1F5DCE1F5DCE1F4DCE1F4DCE1F4
DCE1F4DBE2F4DAE1F3DAE1F3DAE1F3DAE1F3D9E0F2D9E0F2D9E0F2D9E0F2D9E0F2D9E0F2D9E0F2
D9E0F2D9E0F2D9E0F2D9E0F2D7DEF0D7DEF0D6DDEFD6DDEFD6DDEFD6DDEFD6DDEFD6DDEFD8DFF1
D8DFF1D8DFF1D9E0F2D9E0F2DAE1F3DBE2F4DCE3F5DDE4F4DDE4F4DDE4F4DEE5F5DEE5F5DEE5F5
DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DDE4F4DDE4F4DEE5F5
DEE5F5DEE5F5DEE5F5E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E2ECF6E2ECF6E3EDF9E2ECF8
E1EAF9E0E9FADFE8F9DEE7F8DCE4F7DCE4F7DCE4F7DBE3F6DBE3F8DAE2F7D9E1F6D9E1F6D8E0F5
D7DFF4D7DFF6D6DEF5D5DDF4D3DBF2D1D8F2CFD6F0CDD3EBCCD2EACCD0E9C9CDE6C8CAE3C5C7E0
C3C3DDC2C2DCC0BCD5BCBAD2BCBAD0BBBCD1BDBED3BEC0D7C1C3DCC5C6E2C4CEE7C8D2EBCDD7F0
D1DBF4D2DDF3D3DFF5D4E0F6D6E2F8D0DBF1DBE6FCDAE7FAD5E2F5D5E2F5D2DFF2D0DCF2D5E1F9
D5DFFFD2D8F2D2D7EACDDAEAA1B7CE8FA7CD99ABDDA9B2EDB7C4F0A6B6E95B73AF1E3D8012377D
0B34766993CD446DA1023577053D88323F765A5E9D5867BA6B72C06B7BC8697DC64A82D55694E7
55AEF23C83DB517FEE6486DFAFB8EFBDCCE9CFD3F8D2D6F9D5DAF8D7DDF7D9DFF5DBE2F5DBE2F5
DAE1F4DCE1F5DCE1F5DCE1F5DCE1F5DCE1F4DCE1F4DCE1F4DCE1F4DBE2F4DBE2F4DBE2F4DAE1F3
DAE1F3DAE1F3DAE1F3D9E0F2D9E0F2D9E0F2D9E0F2D9E0F2D9E0F2D9E0F2D9E0F2D9E0F2D8DFF1
D8DFF1D8DFF1D7DEF0D7DEF0D7DEF0D7DEF0D8DFF1D8DFF1D8DFF1D9E0F2D9E0F2DAE1F3DBE2F4
DBE2F4DCE3F5DDE4F4DDE4F4DDE4F4DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DEE5F5
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DDE4F4DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5E5EFF9E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9E5EFF9
E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E2ECF6E2ECF6E2ECF8E3EDF9E2EBFAE1EAF9E1EAFBE0E9FADEE7F8
DEE6F9DDE5F8DDE5F8DCE4F7DCE4F9DCE4F9DCE4F9D9E1F6D9E1F6D8E0F5D8E0F7D8E0F7D7DFF6
D5DDF4D4DCF3D1D9F0D1D9F0D1D7EFCFD5EDCED2EBCCD0E9CDCFE8CCCEE7CACAE2C9C9E1C7C9E0
C8CAE1C7CCE2C8CDE3CACEE7CBD1E9CDD7F0D0DAF3D3DDF6D5DFF8D5E0F6D5E1F7D6E2F8D6E2F8
DBE4FFD1DBF6D4DFF5D8E3F5D2DFF0D4E1F4D7E3F9CFDBF5CBDBFDC5CEEDA5A8C7C3C9E9B4C3EA
91A6D3A7B7EAB3BEF48196CB2B4987103C87033A8D053F91053B83194880163F6B003374043E87
2A40795462A3596ABC7077C56A7BC96A7CC4568BD96AABD570CCFB317DD5497FE95981D9A9B5F1
BDCCEBCFD3F8D2D6F9D6DBF9D7DDF7D9DFF5DBE2F5DCE3F6DBE2F5DCE3F6DCE3F6DCE3F6DCE3F6
DCE3F5DCE3F5DCE3F5DCE3F5DBE2F4DBE2F4DBE2F4DBE2F4DBE2F4DAE1F3DAE1F3DAE1F3DAE1F3
DAE1F3DAE1F3DAE1F3DAE1F3DAE1F3DAE1F3DAE1F3DAE1F3DAE1F3D9E0F2D9E0F2D9E0F2D9E0F2
D9E0F2D9E0F2D9E0F2D9E0F2D9E0F2DAE1F3DAE1F3DBE2F4DCE3F5DCE3F5DDE4F4DDE4F4DEE5F5
DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5E5EFF9E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E2ECF6
E2ECF6E3EDF9E3EDF9E3EDF9E2EBFAE2EBFAE1EAF9E0E9FAE0E9FADFE8F9DEE6F9DDE5F8DDE5F8
DDE5F8DDE5F8DAE2F5D9E1F6D9E1F6D8E0F5D8E0F5D8E0F7D6DEF5D5DDF4D4DCF3D4DCF3D3DBF2
D1D9F0D1D7EFCFD5EDCED4ECCDD3EBCFD4EACED3E9CDD2E8CCD2E8CDD3E9CDD3E9CED6EDCFD7EE
D2DDF3D3DEF4D5E0F6D6E1F7D6E1F7D5E1F7D6E2F8D6E2F8D4DBF8DAE4FFD4DFF3CFDAECD6E3F6
D4E0F8CAD8F5CFDCFFB5C4EF98AADC99ACE6929FD4AFB3E0C5CAF095A2CE475D8F0D337C0D3C84
043C86003D8700367D013D830030720E3A7B003578033B851D3B77485FA55669B87177C36B7CCC
737FC74775C07ABAC46ECBED2574D03E7EE25584DE9EADF0BAC9EACDD3F7D1D7F9D5DCF9D7DEF8
D8E0F7DAE2F7DCE3F6DBE2F5DDE4F7DDE4F7DDE4F7DDE4F7DDE4F6DDE4F6DDE4F6DDE4F6DCE3F5
DCE3F5DCE3F5DCE3F5DBE2F4DBE2F4DBE2F4DBE2F4DBE2F4DBE2F4DBE2F4DBE2F4DBE2F4DBE2F4
DBE2F4DBE2F4DBE2F4DBE2F4DBE2F4DAE1F3DAE1F3DAE1F3DAE1F3DBE2F4DAE1F3DAE1F3DAE1F3
DAE1F3DBE2F4DBE2F4DCE3F5DCE3F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
DEE5F5E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF9E3EDF9E3EDF9E3EDF9E3EDF9E2ECF8
E2ECF8E2ECF8E2EBFAE1EAFBE0E9FADFE8F9DEE7F8DDE5F8DDE5F8DDE5F8DDE5F8DCE4F7DBE3F6
DBE3F6DBE3F8DAE2F7D9E1F6D8E0F5D6E1F7D7DFF6D6DEF5D5DDF4D3DBF2D2DAF1D1D9F0D1D9F0
D3D9EFD2DAEFD1D9F0D0D8EFD0D8EDD2DAEFD4DCF1D4DCF1D4DFF5D5E0F6D6E1F7D6E1F7D7E2F8
D6E2F8D6E2F8D6E2F8D8E3F9D3DEF2D6E1F5D2DFF2CBD9F3D0DDFFC6D3FDA9B5E59CA4E597A5E6
9BAEE99AAFDEA1B3D7596F960F2E671A428A084391003C85013E8109448607428400377E0B438E
002D7D03397F023A841437793C5CA95869B97375C06D7CD18084CE355AA182BCBD5AB1DC2070D1
367FDE558DEC90A1E9B6C2ECC9D1F6CED7F8D3DCFBD5DFFAD8E0F7DAE2F7DBE3F6DCE3F6DDE4F7
DDE4F7DDE4F7DDE4F7DEE5F7DEE5F7DEE5F7DEE5F7DDE4F6DDE4F6DDE4F6DCE3F5DCE3F5DCE3F5
DCE3F5DCE3F5DCE3F5DCE3F5DCE3F5DCE3F5DCE3F5DCE3F5DCE3F5DCE3F5DCE3F5DCE3F5DBE2F4
DBE2F4DBE2F4DBE2F4DBE2F4DBE2F4DBE2F4DBE2F4DBE2F4DBE2F4DBE2F4DCE3F5DCE3F5DDE4F6
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5E5EFF9E5EFF9E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEFAE4EEFAE4EEFAE3EDF9E2ECF8E2ECF8E2ECF8E2ECF8E3ECFBE2EBFAE1EAF9
E0E9F8DFE8F9DEE7F8DDE6F7DDE6F7DEE7F8DDE5F8DCE4F7DCE4F7DBE3F6DBE3F8DAE2F7D9E1F6
D9E1F6D8E0F5D8E0F5D7DFF4D6DEF3D6DEF3D6DEF3D6DEF3D5DDF2D5DDF2D4DCF3D2DAF1D1DCF2
D4DFF3D5E0F4D6E1F3D5E0F4D6E1F5D6E1F5D7E2F8D7E2F8D6E2F8D6E2F8D6E2F8D6E1F3D6E3F4
CFDBF1CDDBF6CFDEFFBAC7F3A0AEDF9AA7DCAAB0ECA9AEE6ADB4EA7388BD16407C0A43860B4992
003A85004184003D820D498F002F77053982043C8600367F07478F053D87033B850D39802A57AA
586BBA7274C16F7ED98683D04B66AD8EBCCC4A97DB1E6FD82F7EDD508EF18799E3BBC2F6C7D1F5
CCD6F9D2DDFBD5DFFAD6E1F7DAE2F7DBE3F8DBE3F8DDE4F7DDE4F7DDE4F7DEE5F8DEE5F7DEE5F7
DEE5F7DEE5F7DEE5F5DEE5F5DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DCE3F3DCE3F3DCE3F3DCE3F3
DCE3F3DCE3F3DCE3F3DCE3F3DCE3F3DCE3F3DCE3F3DCE3F3DCE3F3DBE2F2DCE3F3DCE3F3DCE3F3
DCE3F5DCE3F5DCE3F5DCE3F5DCE3F5DCE3F5DDE4F6DDE4F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5
DEE5F5DEE5F5DEE5F5DFE6F6E5EFF9E5EFF9E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEFAE4EEFAE3EDF9
E3EDF9E2ECF8E2ECF6E2ECF6E2ECF6E2EBFAE2EBFAE2EBFAE1EAF9E0E9F8DFE8F9DFE8F9DEE7F8
DEE7F8DDE6F7DCE5F6DBE3F6DCE4F7DBE3F6DBE3F6DAE2F5DAE2F7D9E1F6D9E1F6D8E0F5D8E0F5
D8E0F5D8E0F5D8E0F5D3DEF2D5E0F6D5E0F6D3DEF4D4DFF5D6E1F5D9E1F4D8E1F2D7E2F6D7E2F6
D7E2F6D8E3F7D8E3F9D6E2F8D5E1F7D4E0F6D0DDF0CDD9F1D1DFFCCBD9FCAFBEE99AA8D79BABDC
A5B5E89FB1D994A5D32E427D12347C0D4496003F91004A9600489208529B00428D01418B08448D
033D8608448A004084004081024089013F88033B85144CA34C66B36A70BC6C7FDD807FCD6D7FC7
86A9D34084E91B6BDC287BDB4484EE7D91DABCC0FDC2CFF2C9D6F8D1DCFAD4E0FAD6E1F7DAE2F7
DCE4F9DCE4F9DCE4F7DCE4F7DCE4F7DCE4F7DDE6F7DDE6F7DDE6F7DDE6F7DEE5F5DEE5F5DEE5F5
DEE5F5DEE5F5DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4
DDE4F4DDE4F4DDE4F4DDE4F4DCE3F3DCE3F3DDE4F4DDE4F4DDE4F6DDE4F6DCE3F5DCE3F5DCE3F5
DDE4F6DDE4F6DDE4F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6E5EFF9
E5EFF9E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF9E3EDF9E3EDF9E2ECF8E2ECF6E2ECF6E2ECF6E2ECF6
E2ECF8E2ECF8E2EBFAE2EBFAE2EBFAE1EAF9E0E9FADFE8F9DFE8F9DEE7F8DDE6F7DDE6F7DDE5F8
DDE5F8DDE5F8DCE4F7DDE3F9DDE3F9DCE2F8DBE1F7D9E1F6D9E1F6D9E1F6D9E1F6D5E0F4D7E2F8
D8E3F9D7E1FAD9E1F8DBE3F8DBE3F6D9E2F3D8E3F5D7E2F4D7E2F6D7E2F6D7E2F8D5E1F7D3DFF5
D1DDF3CEDDF4D2E0FBC0CEF1A5B2DE9DABDAA8B9E7ABBEE9A5B8E34761940F36710C3E83084184
094383054084004191084DAA0447A003479C01459001468900448301458401428401428600418A
004188003C860040973E5EAB606CB66780DD797BC87280C76885C13674EF1867DD267ADC3779E7
7387D0B6B7FAC1CEF1C8D5F7D0DBF9D3DFF9D6E0F9D8E3F9DCE4F9DCE4F9DCE4F7DCE4F7DCE4F7
DCE4F7DDE6F7DDE6F7DDE6F7DDE6F7DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DDE4F4DDE4F4
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DDE4F4DDE4F4DDE4F4
DDE4F4DDE4F4DDE4F4DDE4F6DDE4F6DDE4F6DDE4F6DDE4F6DDE4F6DDE4F6DDE4F6DFE6F6DFE6F6
DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6
E2ECF6E2ECF6E1EBF5E1EAF9E0E9F8DFE8F7DEE7F6DDE6F7DDE6F7DDE6F7DDE6F7DCE4F7DCE4F7
DCE4F7DBE3F6DBE3F6DAE2F5DAE2F5D9E1F4D9E1F4D9E1F4DAE2F7D8E3F7D9E4F8D9E4F8D9E4F8
D8E5F8DAE4F0D7DFF2D9E1F8D6E0F9D3DEF4D4E0F6D2E1F8C9D9F2C3DEF3B1CEF095AFE2A3B7F2
A7B8F097ADDF587AA815447209417406417D03438B004391044C94054F90084D98003F96004994
00469000458B004286004286004286004288004289004385063F8601398600408F144DA4506DC9
6E78D1767ECF7084CD6E83D6516ACE3357B74574C64168C3637BD1A9B9ECC0C8F7CAD3FCCFDAF8
D2DCF7D6E0F9D8E3F9D8E3F5D8E4F2DCE4F7DCE4F7DCE5F6DDE6F7DDE6F7DDE6F7DDE6F5DDE6F5
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DDE4F4
DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4
DDE4F4DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DDE6F5DDE6F5DDE6F5DDE6F5
DDE6F5DDE6F5E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7
E3EDF7E3EDF7E2ECF6E2ECF6E2ECF6E3EDF7E3EDF7E2ECF6E2ECF6E2ECF6E2ECF6E1EAF9E0E9F8
E0E9F8DFE8F7DEE7F8DEE7F8DDE6F7DDE6F7DCE4F7DCE4F7DCE4F7DBE3F6DBE3F6DBE3F6DAE2F5
DAE2F5DAE2F5DAE2F5DBE3F6D9E4F8D9E4F8D9E4F8D9E4F8D7E4F7D9E2F3D8E3F7D4E3F8D5E6F8
D6E5F8D1DEF1CCD6F1D1D7F9B6BBE59DAAD7A5B9EC8EA7DF5E7BB52A4D910A3989033C9500468B
034B93004793004A98004E98004A8E00448C1053A100468E00458B004286004181014181014181
004183004185034488023E8405418A0036820B43984063BD5566C0727CD37486D0697CCB5A72D2
3458B63F6EBE4B73CB6076CCAAB7ECBDC5F4C8D1F8CED9F7D1DBF4D6E0F9D8E3F9D8E3F7D9E5F5
DCE4F7DCE4F7DCE5F6DDE6F7DDE6F7DDE6F7DDE6F5DDE6F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DDE4F4DDE4F4DEE5F5DEE5F5
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DDE4F4DDE4F4DDE4F4DEE5F5DEE5F5DEE5F5DEE5F5
DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
DEE5F5DEE5F5DEE5F5DEE5F5DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DCE5F4E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6
E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E2ECF6E1EAF9E1EAF9E1EAF9E0E9F8E0E9F8DFE8F9DEE7F8
DEE7F8DDE5F8DCE4F7DCE4F7DCE4F7DCE4F7DCE4F7DCE4F7DCE4F7DCE4F7DCE4F7DCE4F7DAE5F7
DAE5F9D9E4F8D9E4F8D7E4F7D9E1F6D3E0F3D5E4F7D1E2F2CADBEBD4E0F8CCD4F9B0B2E3A9AAEB
A4B0F85F7AC9254DA215499C003A87044E99004C96004C9E0552A003539C004E93004E9607539E
00488D00427F00438900428600418100407E01417E01417F014181014181023E86034488003C80
0440890940921D4DA25B79D36E78D77D8BD65567B36780DA4368C13363AF4871C3667CCF9EA7E0
BBC3F1C6CFF6CCD7F5D0DAF3D5DFF8D8E2FBD8E3F9D9E4F6DCE4F7DCE4F7DCE5F6DDE6F7DDE6F7
DDE6F7DDE6F5DEE7F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
DEE5F5DDE4F4DDE4F4DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DDE6F5
DDE6F5DDE6F5DDE6F5DCE5F4DCE5F4E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6
E2ECF6E1EBF7E1EBF7E2EBFAE2EBFAE1EAF9E0E9F8DFE8F9DFE8F9DDE6F7DDE6F7DDE6F7DDE6F7
DDE6F7DDE6F7DDE6F7DDE6F7DEE7F8DEE7F8DDE5F8DBE6F8DAE5F7D9E4F8D9E4F8D7E4F7D9E4F6
DBE6F8D8E0F5D3DEF4D0DBF7B9C8EFA2B3E99DB0F46C8DDA1E489A0D46A00B52AE00469D0154A0
01569601568D0F48950C48900F4D8A03447C074B8C00428F00468E014E86014284004181004181
00427F00427F01438001428201428409418C004082034A8A0641870036830741933C68C15C6ED0
7782D15667AD647DCF5074CA3664AF3E65B46277CA9199D8B9C1EFC4CEF2CCD7F5CFD9F4D4DEF9
D7E1FCD8E2FBD9E4F8DCE4F7DCE4F7DCE5F6DDE6F7DDE6F7DDE6F7DEE7F6DEE7F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DDE6F5DDE6F5DDE6F5DDE6F5DCE5F4DCE5F4
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7
E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E2ECF8E2ECF8E2ECF8E2EBFA
E2EBFAE1EAF9E0E9F8E0E9F8DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8DEE7F8DFE8F7
DFE8F9DEE7F8DCE7F9DBE6F8DAE5F9D9E4F8D7E3F9D8E6F3D5DDF2D7DCFACED3F9B7C3F3A1BBF6
729AE23366B70E53A108549F01539C004D9401559D08529D033E8A194A974A679F7996D080A0CF
38628817467A013984084C9500447A02428201417F00418100438200448500458800458A00458A
033C89014A8E014B8A013D83063F8C004191285CB25673D16C78CA7182C74C62AE5474CB4A74C0
4065B34E64B78993DBB7BFEDC4CDF4CCD7F5D0DAF5D4DEF9D7E1FCD7E1FAD9E4F8DCE4F7DCE4F7
DCE5F6DDE6F7DDE6F7DDE6F7DEE7F6DEE7F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DEE5F5
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
DEE5F5DEE5F5DDE6F5DDE6F5DCE5F4DCE5F4DCE5F4DCE5F4E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E4EEF8E4EEF8
E3EDF7E3EDF7E3EDF7E3EDF7E2ECF8E2ECF8E2ECF8E2ECF8E2EBFAE2EBFAE1EAF9E1EAF9E0E9F8
E0E9F8E0E9F8E0E9F8E0E9F8DFE8F7DFE8F7DFE8F7DFE8F7DFE8F7DFE8F9DCE8F8DBE6F8DAE5F9
D9E4F8D7E3F9D0E1F1D3E2FFC9D7FFACC0FB7C9DE23F70BC1356A70854AA004F9F004F9D085BA9
004F9B0E56A2164C944E6DAD7586BE98A7CEB5C3F4A8B6E3AEC6E01E4065123E7F043F8500437A
073F7C05407C03417E01428200458600468B00468E00468E034591003E8400458A10539A003D89
0040903A71C44068BF687AD0788BCD3A4D996079D34F72C34C70BC4963B77788D8B6BEEDC2CBF2
CBD6F4CFD9F4D4DEF9D6E0FBD7E1FAD9E4F8DBE3F6DCE4F7DCE5F6DDE6F7DDE6F7DEE7F8DEE7F6
DEE7F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DDE4F4DDE4F4DDE4F4DDE6F5DCE5F4DCE5F4
DCE5F4DCE5F4DCE5F4E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E2ECF8
E2ECF8E2ECF8E2ECF8E1EBF7E2EBFAE2EBFAE2EBFAE1EAF9E1EAF9E1EAF9E1EAF9E0E9F8E0E9F8
E0E9F8E0E9F8DFE9F5DFE8F7DEE7F6DCE8F8DBE6F8DAE5F9D9E4F8D7E3F9D7E8FFB4CDF685ADEA
4C84CF1B5FB20957AA085AAE0053A6065BAB0A5BAD004AA20853AE0A50A6154E919FC4F0BDD3EB
A7C5E93B518A405489AAC0D8829EB4123668103E7C063E6F0C3B71093C73073E7704407E024383
00458A00468E00458D00469103479007499300408A0048950B4A9A023989265CA6617AD45F77B7
485AA4697CDA5170C35074C2516FC5637BD1B3BBECC0C9F2CAD5F5CED7F4D3DDF8D6E0F9D7E2F8
DAE5F7DBE3F6DCE4F7DCE5F6DCE5F6DDE6F7DEE7F8DEE7F6DEE7F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5
DEE5F5DDE4F4DDE4F4DDE4F4DDE4F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7
E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E2ECF8E2ECF8E2ECF8E1EBF7E1EBF7E1EAF9
E2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE1EAF9E1EAF9E0E9F8E0E9F8E0E9F8DFE9F5DEE8F4DEE7F6
DCE8F8DBE6F8DAE5F9D9E4F8D7E3F9ABBDE57397CB316DB5055BAE005AB0005BB0005BAC085BAB
0055A2095DA60B5EA400529A00529B054E93285E9A4B73A61A4E751E45885674B4A2BDD897B4C2
15355C11386F0837630F376A0E396C093A72063E7904418002438700448B00438C00499200428E
06459204529C004795074494093E8A0744875270CA4E67A96272BD6272D2607AD15071C05070C7
5D78D3B0B7EBBEC7F2C8D2F5CDD6F3D2DCF7D5DFF8D7E2F6DAE5F7DBE3F6DBE3F6DCE5F6DCE5F6
DDE6F7DEE7F8DEE7F6DEE7F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
DEE5F5DEE5F5DEE5F5DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4
DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2EBFAE2EBFAE2EBFA
E2EBFAE1EAF9E1EAF9E1EAF9E0E9F8DEE8FFDDEAF2D9EAF4D7E7FFDEE3F6DFDDDEE5F2FF93B6EE
4287D4176AB60165B30061B30063B80262B60054A20A5DA9005AA000589F0056A000529E00509F
0350A00451A30650A50053B50548996E9CCEA9C8E45E76981B346C6989C47099C554607A0D3161
0C3E7B123B710D3769094480064B9600408D02479401478C074E8C00488D004B9C00469E054696
003A82375DB25074BE6478BF6A6DBE6572CE5176D14A73CB5E78CD9CAFF3B8C8E9C8CFECD6DCFF
CCDBF2CEDFF1DAE6FFD9DFF5DBE3F6DBE3F6DCE4F7DCE4F7DDE6F7DDE6F7DDE6F7DDE6F7DFE6F8
DFE6F8DFE6F8DFE6F8DEE5F7DEE5F7DEE5F7DEE5F7DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
DEE5F5DEE5F5DEE5F5DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4
DDE4F4E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E2ECF6E2ECF6E2ECF6
E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE1EAF9E1EAF9E0E9F8
E0E8FDDCE7EDD9EAF2D9EBFFDBE3F8EBF0F6AABED75781BD1F6CBE196CBC0D6AB80A6BB80161AE
015DAA0963B10056A20158A70057A60057A60054A50054A50153A50254A60355A904539E115095
709ACCB1CBE6798AA62F3D6A6879A78B9FC2A7B6C9103965023D79053C7512447900366E0E427B
174277024481004389044795004391004994004890094897033D8F174799547AC55365AD5A61AF
6676CD5476D04A6FC85A7DD195A9F0B8C8ECC5CEEDD3D8FECCDBF2CFE0F2D9E5FFDAE0F6DBE3F6
DBE3F6DCE4F7DCE4F7DDE6F7DDE6F7DDE6F7DDE6F7DFE6F8DFE6F8DFE6F8DFE6F8DEE5F7DEE5F7
DEE5F7DEE5F7DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DDE4F4DDE4F4DDE4F4
DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6
E2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE1EAF9E1EAF9E0E9F8DDE4F4E7EEF4DDEBF4D4E6FED8E4FC
E0E9F88FA6C55E8BC63A84D91465B61269B60B65B10862AE0A64B20056A40162B10358B20257B1
0057B00056AF0055AC0055AC0056AC0057AA0050A70B4CA81E4D9B698DBFC2DFFFB5CAE9ACBED6
D4E6F28FA7BF103B650841780B427809396A103E6F002A5A173A640A4474013F7A03468C034D96
014E94004589004690044796003C8D446BB85466AE5260A7677AC95D77CE4F71CB5A84DA899FEB
B7C8F3C5CDF1CFD4FECFDBF5D1E2F4D8E4FEDBE1F7DBE3F6DBE3F6DCE4F7DCE4F7DDE6F7DDE6F7
DDE6F7DDE6F7DFE6F8DFE6F8DFE6F8DFE6F8DEE5F7DEE5F7DEE5F7DEE5F7DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
DEE5F5DEE5F5DEE5F5DEE5F5DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4
DDE4F4DDE4F4DDE4F4DDE4F4E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E3EDF7E3EDF7E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2EBFAE2EBFAE2EBFAE2EBFAE2EBFA
E1EAF9E1EAF9E1EAF9DFE9F5E7EEF6D8E4F0D1E3F7DFECFFDBE1F1ABBAD75B7DAD427CC53A7EC7
2476C2136EBD0A69BD0164B90065BA0061B6015EBB005DBA005BB8005AB70059B60058B30056B0
0055AF0056B9004CBD074BBA0F4C9F2B639E5E90C176A2C96A8FAC184773083C6B093D6C0C3865
183D69133865163C6B0C34650E366A0A3C6F0542790042850047990852A90852A7004694004392
204B995D73BC586FB36179C36276CC5775CF5587DE7F95E8B5C7F7C5CDF4CCD0FDCFDAF6D3E2F5
D6E2FADBE1F7DBE3F6DBE3F6DCE4F7DCE4F7DDE6F7DDE6F7DDE6F7DDE6F7DFE6F8DFE6F8DFE6F8
DFE6F8DEE5F7DEE5F7DEE5F7DEE5F7DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DDE4F4DDE4F4
DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6
E2ECF6E2ECF6E2ECF6E2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE1EAF9E1EAF9E1EAF9DFEDFADFE7F2
DEE7F6D6E6F6DAE3F2E3E2F0DFE4F87E91B15B7CB15082BD3177BD1A75C60E71CE046BC8046DC9
006AC20166C20064C00061BF0060BE005DBD015BBB0259B80256B60061B20054BA0254C20757BA
0754AC0C53AB0949A00F489700438B0448870C498006396E0B3366203C6B1E37601A365D1E2B58
152B5A0F33670F3B7A0D3D890D419709479E05499E004996073A894866AF5C7BBE5E78C26277CA
5573CD4F81DA748CE4B1C5F8C4CDF8CBCFFCCFDAF6D3E2F5D5E1F9DBE1F7DBE3F6DBE3F6DCE4F7
DCE4F7DDE6F7DDE6F7DDE6F7DDE6F7DFE6F8DFE6F8DFE6F8DFE6F8DEE5F7DEE5F7DEE5F7DEE5F7
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5
DEE5F5DEE5F5DEE5F5DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4
DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E2ECF6E2ECF6E2EBFAE2EBFA
E2EBFAE2EBFAE2EBFAE2EBFAE1EAF9E1EAF9D9E9F8E4EBFBE3EAFCDBE8F8D7E1EDE3DFEDECE9FA
DBE4F58F9CBC58759D4D82B83F87CF1B70C3136EC7106FC90367BD0169C00068C00064C00062C1
0060C1015DC0035BBD0359BC0059AD0357BA0354BD0050B00050AD0150B5044CB00C4FA60256AE
004C96004488044C940D468D6B8AC0A2B0D3C0CAE3B8BFC79AA9C07F95BA7C95BD6E88A954769B
2B5A8E0D46890047950846931A46915274BC5E7AC4627BCD5372CC4E79D56B86DFABC0F5C3CCF7
CCD0FDCFDAF6D1E0F3D5DFFADBE1F7DBE3F6DBE3F6DCE4F7DCE4F7DDE6F7DDE6F7DDE6F7DDE6F7
DFE6F8DFE6F8DFE6F8DFE6F8DEE5F7DEE5F7DEE5F7DEE5F7DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DDE4F4DDE4F4DDE4F4
DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DCE3F3DDE4F4DDE4F4DDE4F4DDE4F4
DDE4F4DDE4F4E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7
E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E2EBFAE2EBFAE3ECFBE2EBFAE2EBFAE2EBFAE1EAF9
E1EAF9DCEAF7E6EBFEDDE2F6D9E9F8E1EFFCDFE0F4D3D4E6E6F2FFD3DAECBFCEE5657FA0446A97
5384BF3D7CC32975C3196EBF0C6FC0086CC10368C00066C30065C40062C5005FC3005DBF055AC5
0153BF0355B9065BB5035BB50050B30352AE0A56A1004A9E115498074B88014E9605499A144588
5D81B3476C967DA0B384A9C686ACD398B9DAADC9DFADCDE46494BC114E87004795084D9A053E8B
395EAE5A75C65C7BCD5779D05477D36381D9A3BAEEBECAF4CCD0FDCED8F3D1DEF1D5DFFADAE0F6
DBE3F6DBE3F6DCE4F7DCE4F7DDE6F7DDE6F7DDE6F7DDE6F7DFE6F8DFE6F8DFE6F8DFE6F8DEE5F7
DEE5F7DEE5F7DEE5F7DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4
DDE4F4DDE4F4DCE3F3DCE3F3DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6
E2ECF6E2EBFAE2EBFAE3ECFBE2EBFAE2EBFAE2EBFAE1EAF9E1EAF9DFECF5E5E8FBE1E6FADAECFA
D5E6F6DBE3FAE1E9FFCEE1F0D9DFEFD2DAE7DAE1F3C1CBE47688AE3E61973570B4347EC91B76C5
1473C50C6EC5046BC7026AC90068C90064C60062C4005EC70260C40059B20056A6005CBB0054C5
0356C0004FA40D4B96194B7E31628D11518E074E9C0C4D9D00489400539E074997044891044386
124481143A791C438610468E034B95074A980046910A4C9A23499C4F69BD5477C85C82D75B75D2
5F7DD59EB5E7BCC8F0CDD2FCCDD7F2CFDCEFD5DFFADAE0F8DBE3F6DBE3F6DCE4F7DCE4F7DDE6F7
DDE6F7DDE6F7DDE6F7DFE6F8DFE6F8DFE6F8DFE6F8DEE5F7DEE5F7DEE5F7DEE5F7DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5
DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DCE3F3DCE3F3DCE3F3DDE4F4
DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E1EBF5
E1EBF5E1EBF5E1EBF5E2ECF6E1EBF7E0EAF6E0E9F8DFE8F7DEE7F8DDE6F7DCE4F7DBE3F6D5E1F7
D7E3F9D1DCF2CDD7F0D4E0FACAD9F690A3C34F66863961943D70A93175B61A6CB80D6BC20C6DCC
0868CE0360C80769C40066C30164C1055FB70559B30E58B72153A86074BB7E99D0A5C2E094B1D3
A2C2F12252820E4E980051AD00559E004E96004E96004F94004F94004F94004F9600509900509A
054D95004B950052A00243933C62B35873C45A7DCF5083D6617FD790A7EAB9C8F3C9D2F3CED6FA
D1DBFED0DEF8D5E5F4D9E4FAD9E4F8D9E4F6DAE6F6DCE5F6DDE6F7DDE6F7DDE6F7DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DDE4F4
DDE4F4DDE4F4DCE3F3DCE3F3DCE3F3DCE3F3DDE4F4DDE4F6DDE4F6DDE4F6DDE4F6DDE4F6DDE4F6
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E3EDF7E3EDF7E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E1EBF5E1EBF5E1EBF5E1EBF5E2ECF6E1EBF7
E1EBF7E0E9F8DFE8F7DEE7F8DDE6F7DCE4F7DCE4F7D5E2F3D9E6F7DAE5F7D5DDF2CDD8EEC9D7F1
C9DAF4C8DCF7A9BCE46A82AE3A5B903767A73878C02271C00F6BBE0E72C70063B90B70CA0064C6
005AC01F63B881A4DA97ABD09EB5D78AA5C2485C917D93C496BADE083F770C519E02519E004F99
014F99014F99004E96004F96004F98005099004F9A00509C04509B004F9E004A9C084A9E1F4EA0
4E71C3587CD0547ED4607ED8879EE2B8C6F3C7D0F1CED6FAD2DCFFD0DEF8D4E4F3D9E4FAD9E4F8
D9E4F6DAE6F6DCE5F6DDE6F7DDE6F7DDE6F7DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5
DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DDE4F4DDE4F4DDE4F4DCE3F3DCE3F3DCE3F3
DCE3F3DDE4F4DDE4F6DDE4F6DDE4F6DDE4F6DDE4F6DDE4F6E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E2ECF6E2ECF6E2ECF6
E2ECF6E2ECF6E1EBF5E1EBF5E1EBF5E1EBF5E2ECF6E1EBF7E1EBF7E0E9F8E0E9F8DFE8F9DEE7F8
DDE6F7DCE4F7D8E5F6D5E2F3D6E2F2DBE4F5DAE2F5D3DEF2CFDEF3D2E2F9CDD8EED7E1FCC9D1F5
909DC94F699C3261992E70AD2676B51E75C40B64B80A68C80A6CD1125DAE7FAAD7B0C9DF9EB8C7
5C7E8A2F3D86ACBDF183A9C0114C8E014C9D0553910B4F9A024F9D024F9D004F9C004F9A004F9C
004F9C004F9E004EA00152A10250A30048A0094FA70541973568BB547CD35577D0607DD97A92DA
B8C6F7C4CEF2CED6FAD3DEFED1DFF9D5E2F2D9E4FAD9E4F8D9E4F6DAE6F6DCE5F6DDE6F7DDE6F7
DDE6F7DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5
DEE5F5DEE5F5DDE4F4DDE4F4DDE4F4DCE3F3DCE3F3DCE3F3DCE3F3DDE4F4DDE4F6DDE4F6DDE4F6
DDE4F6DDE4F6DDE4F6E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E1EBF5E1EBF5E1EBF5
E1EBF5E2ECF6E1EBF7E1EBF7E1EBF7E0E9F8DFE8F7DFE8F9DEE7F8DDE6F7D8E5F8D9E6F7DAE5F7
DAE2F5DAE2F5D9E1F4D2DDF1CBD7EDCEE1F2C3D3E3CBD2E5D5D9F2CCD1F1ACBAE1728DBA3B5D8D
3962A0316CB22770BD176AB80F6ABB0A63B32061A1557AA497C4E38599DEACBCE054778A0E4A90
00509F0A5C940247940250A30250A2014FA1014FA1004EA0004FA1004FA1004FA40050A5014EA8
044DAB034CAA0048A11656AD4977CF5973D05E7DD86F87D1B5C5F9C4CDF4CDD5F9D1DCFAD2E1F8
D5E2F3D8E3F9D9E4F8D9E4F6DAE6F6DCE5F6DDE6F7DDE6F7DEE7F8DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DEE5F5DDE4F4DDE4F4DDE4F4
DCE3F3DCE3F3DCE3F3DCE3F3DDE4F4DDE4F6DDE4F6DDE4F6DDE4F6DDE4F6DDE4F6E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7
E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E1EBF5E1EBF5E1EBF5E1EBF5E2ECF6E1EBF5E1EBF7E1EBF7
E1EBF7E0E9F8DFE8F9DFE8F9DEE7F8DBE7FDE0EBFFDEE9FDDAE2F7D8E0F5DDE5FADFE7FEDBE6FC
D3E4FECFDFF8CFDEF1CDD8EACAD2E5D3D9F3D4D9F9C3C7EC97A5CA4D6895375C903F70AA3175C0
176FC9186CC61D60AF154C8F6C8EBEA2B8C6A7C7E03069B00559A200548F0859A80153A90052A6
0051A50051A3004FA4004FA6004FA6004FA8004FA80150AC0750AF004BAB0052B0014AA6376AC6
5877D45B7DD66882CDB1C0F7C4CDF6CCD5F6CFDAF6D3DFF7D6E3F6D8E3F9D8E3F7D9E4F6DAE6F6
DCE5F6DDE6F7DEE7F8DEE7F8DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5
DEE5F5DEE5F5DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DCE3F3DCE3F3DCE3F3DCE3F3DDE4F4
DDE4F6DDE4F6DDE4F6DDE4F6DDE4F6DDE4F6E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6
E1EBF5E1EBF5E1EBF5E1EBF5E2ECF6E1EBF5E1EBF5E1EBF7E1EBF7E1EAF9E0E9F8DFE8F9DFE8F9
DDE8FEDCE7FBDBE6FADCE7F9DDE8FCDBE6FAD7E2F8D4DFF5D9DDFFD1DAF9D3E2F9D5E8F9CDE0EF
C7D8E8CBD6ECCAD1EBC6D5E8D2DAEFB3BBDF7989BC4A5F984E6BA34176BA2A7BCD4878CCB2DAFE
9CBCC92447711D57A00053990056990057A70155AD0054AA0054AA0053A90052A80051A90050AB
0050AB0050AB0556B2004FAE004FB20052B5004AAC1E59B74B78D35A7DD16781CBA7B8F0C1CDF5
CAD5F3CDD9F3D3DFF7D7E3F9D8E3F9D8E3F7D9E4F6DAE6F6DCE5F6DDE6F7DEE7F8DEE7F8DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DDE4F4DDE4F4DDE4F4DDE4F4
DDE4F4DDE4F4DDE4F4DCE3F3DCE3F3DCE3F3DCE3F3DDE4F4DDE4F6DDE4F6DDE4F6DDE4F6DDE4F6
DDE4F6E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E3EDF7E3EDF7E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E1EBF5E1EBF5E1EBF5E1EBF5E2ECF6
E2ECF6E2ECF6E2ECF8E1EBF7E1EAF9E1EAF9E0E9FAE0E9FADBE7F7DCE8F8DEEAFADEEAF8D9E6F6
D6E3F4D8E5F8DEEBFEE1E6FFDAE1FBD3DFF5D1E0F5D0E1F3CEE1F2CDE0F1CDDEF2C2D5E4D3DCED
C8CCE7CBD1F5C8CAF09FA2C15A72983D6FA24E6DAD6384B15C82A928599312549E1060A5075EA3
085AB00058B10058AF0057AE0057AB0055AC0055AC0053AD0053AE0053AF0256B00052AF0053B6
0050BB044DB60D4FAF316DC5587DCD6683C99BACE2BFCBF1CAD5F1CDD9F1D2DEF6D6E2FAD8E3F9
D8E3F7D9E4F6DAE6F6DCE5F6DDE6F7DEE7F8DEE7F8DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DEE5F5DEE5F5DEE5F5DEE5F5DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DCE3F3DCE3F3
DCE3F3DCE3F3DDE4F4DDE4F6DDE4F6DDE4F6DDE4F6DDE4F6DDE4F6E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E2ECF6E2ECF6
E2ECF6E2ECF6E2ECF6E1EBF5E1EBF5E1EBF5E1EBF5E2ECF6E2ECF6E2ECF6E2ECF6E2ECF8E1EBF7
E1EAF9E0E9F8E0E9FADFEBF7DFEBF7DCE9F2DAE8F1DCEAF5DFEDFADDEAFAD8E5F6D3E6F4D6E8F6
D9E6F7DCE4F9DBE3FAD5E0F6CFDEF3D0E1F5D3E2F7C4D6EECCDBF0CCD7E9C5D7EFBBD8FAC5DAF9
B7BACD808EB3475D97446DAF3572B5246CB81564A91261A4105AB3015BB3015BB1005AB00059AF
0057AE0056AF0055B00054AF0455B00051AB0057B10054B70452BF064EBC064CAC195FB4587EC9
6683C792A3D9BCC8EECAD6F0CEDAF0D2DEF6D5E1FBD8E3F9D8E3F7D9E4F6DAE6F6DCE5F6DDE6F7
DEE7F8DEE7F8DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6
DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DFE6F6DEE5F5DEE5F5DEE5F5DEE5F5DDE4F4
DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DDE4F4DCE3F3DCE3F3DCE3F3DCE3F3DDE4F4DDE4F6DDE4F6
DDE4F6DDE4F6DDE4F6DDE4F6E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6
E1EBF5E1EBF5E1EBF5E2EBFAE2EBFAE1EAF9E1EAF9E1EAF9E1EAF9E1EAF9E1EAF9E1EAFBE0E9FA
E0E9FAE0E9FAE0E9FADFE8F9DFE8F9DFE8F9DCE9F9DBE8F8DBE8F9DAE7F8D9E6F7D8E5F6D8E5F8
D7E4F7D4E0F6D3DFF5D2DEF6D0DCF4CEDAF2CCD8F0C9D5EFC7D3EDC5D4E9C7D3EB9BA4C1586588
3B51803D649D356CAD2164AA1961AD0E5FB0005AAD015FB6005CB0025DB00058AB0059AF0155AF
0358B50157BA0054BB0053BD0355BB0452B6024EAE3B78C85D87D18395D3BCC4F2C7D5F2CCDEF4
CFDDF7DAE1FED8E4F4D8E4F4DBE4F5DCE5F6DDE6F7DDE6F5DCE8F6DCE8F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4
DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DBE4F5DBE4F5DCE5F6DCE5F6DCE5F6DCE5F6E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E1EBF5E1EBF5E1EBF5E2EBFAE2EBFA
E2EBFAE1EAF9E1EAF9E1EAF9E1EAF9E1EAF9E1EAF9E1EAF9E0E9F8E0E9F8E0E9F8E0E9F8DFE8F7
DFE8F7DCE9F9DCE9F9DBE8F8DBE8F9DAE7F8D9E6F7D8E5F6D8E5F6D8E4FAD7E3F9D6E2F8D5E1F7
D4E0F8D2DEF6CFDBF3CDD9F1CAD8F2C3CFE9C7CEEBCBD4F5B0BEE3728AB83C60942B548C2D69A5
2667A91963AC1261B00B59AB0858AD0758B1095CB80459B30058B20056B40058B90159BB0559B9
0657B20754AE2563B05A82C87E8DC6CACEF4CBD2ECC8D7ECD1DDF7DAE0FFD8E4F4D8E4F4DBE4F5
DCE5F6DDE6F7DDE6F5DCE8F6DCE8F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5
DDE6F5DDE6F5DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4
DCE5F4DBE4F5DBE4F5DCE5F6DCE5F6DCE5F6DCE5F6E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7
E3EDF7E2ECF6E2ECF6E2ECF6E1EBF5E1EBF5E2EBFAE2EBFAE2EBFAE2EBFAE1EAF9E1EAF9E1EAF9
E1EAF9E1EAF9E1EAF9E1EAF9E1EAF9E1EAF9E0E9F8E0E9F8E0E9F8DDEAFADDEAFADCE9F9DCE9F9
DBE8F9DAE7F8DAE7F8D9E6F7D9E6F9D8E5F8D8E4FAD7E3F9D7E3F9D5E1F7D3DFF7D2DEF6C7D5F2
D0DBF7D3DAF6CBD1EBC8CDEAC8D1F0BBC5E8A1AFD247638B3D5F8F36609C2F62A42963AC195CAA
0D5BAD045AAF075DB2035BB2025BB5025DB8005AB50056AE0054AB0055A8165AAB4B77BE7889BF
C3C6E9CBD0E6CFDAECD5DFF8D8DEFFD8E4F4D8E4F4DBE4F5DCE5F6DDE6F7DDE6F5DCE8F6DCE8F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DCE5F4DCE5F4DCE5F4
DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F6DBE4F5DBE4F5DBE4F5
DBE4F5DBE4F5E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7
E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E2ECF6E2ECF6
E2ECF6E2EBFAE2EBFAE2EBFAE2EBFAE1EAF9E1EAF9E1EAF9E1EAF9E2EBFAE2EBFAE1EAF9E1EAF9
E1EAF9E1EAF9E1EAF9E1EAF9DFEBF9DFEBF9DEEAFADEEAFADDE9F9DDE9F9DCE7F9DCE7F9DAE7FA
D9E6F9D8E5F8D8E5F8D7E4F7D7E3F9D5E1F7D4E0F6DAE5FFCEDAF4CDD9F1D3DEF2D2DAEDD0D6EC
CFD4EACBCDE6D5D2EFB0B4D77683B03B528631568D3468A42A70AE0F60A10A57A50A59A8085AAC
075DB4055FB70361B90161B80060B7065BB5336EBE718BC6B7BCE2CBD0E6D5DDF0D6E0F9D7DDFF
D8E4F4D9E5F5DBE4F5DCE5F6DDE6F7DDE6F5DCE8F6DCE8F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4
DCE5F4DCE5F4DCE5F4DCE5F4DCE5F6DCE5F6DCE5F6DBE4F5DBE4F5DBE4F5E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E2ECF6E2ECF6E2EBFAE2EBFAE2EBFAE2EBFA
E2EBFAE2EBFAE1EAF9E1EAF9E2EBFAE2EBFAE2EBFAE2EBFAE1EAF9E1EAF9E1EAF9E1EAF9E0ECFA
DFEBF9DFEBF9DFEBF9DEEAF8DEEAFADDE9F9DDE9F9DDEAFBDCE9FADBE8F9DAE7F8DAE7FAD9E6F9
D8E5F8D7E4F7D8E4FAD5E1F7D3E2F7CDDEF0CAD9ECD1DEF1D3DEF2CAD2E7D5D6E8C4C9DFC7D0EF
C0CDF093A5CB44608829537D366996346BAE2A65A91B5BA30D54A20757AC0761B90264BF0062BE
005EBF246AC05D80C2B7C4F0C8D2EBCDDAEDD3DDF6D8DDFDD9E5F5D9E5F5DCE5F6DCE5F6DDE6F7
DEE7F6DCE8F6DCE8F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5
DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F6
DCE5F6DBE4F5DBE4F5DBE4F5DBE4F5E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7
E2ECF6E2ECF6E2ECF6E2ECF6E2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE1EAF9E2ECF8
E2ECF8E2ECF8E2ECF8E2ECF8E1EBF7E1EBF7E1EBF7E0ECF8E0ECF8DFEBF7DFEBF9DFEBF9DEEAF8
DEEAF8DEEAFADEEBFBDDEAFADCE9F9DBE8F9DBE8F9DAE7F8D9E6F7D8E5F6DCE9FAD8E5F6D7E6F9
D7E8FCD2E4F8CFE1F7CFDFF6CEDEF5C0D6E1CBE2F2CBDDF3BDC9E3C9CEEBD0D4F1ADB1D4727A9F
305083395A8F3D65A03869AB2C68B01D66B31365B90D65BC0F6AC52D6EC04A6CABBBCAF3C9D5ED
CAD7EAD6E0F9D8DDFBD9E5F5D9E5F5DCE5F6DDE6F7DDE6F7DEE7F6DCE8F6DCE8F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4
DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F6DCE5F6DBE4F5DBE4F5DBE4F5DBE4F5
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7
E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E2EBFA
E2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE1EBF7E1EBF7E1EBF7E1EBF7E1EBF7E1EBF7
E1EBF7E1EBF7E0ECF8E0ECF8E0ECF8DFEBF7DFEBF9DFEBF9DFEBF9DFEBF9DEECF9DDEAFADCE9F9
DBE8F8DBE8F8DBE8F9DAE7F8D9E6F7D5E2F2D8E5F6D7E2F6D6E1F7D6E2FAD5E1F7D1E0F5D0E1F3
D1E6F7CBE0F5C7DBF3CFDEF5D1D7EFD0D0E8CFCCE9D1D0F0BEC8EC8997BC52638E3B53813E5F94
3F6DA83970B13370B32B6BB3416DAE7283B7C1C7E9CDD5EACFDCEDD8E3F9D9DEFBD9E5F5D9E5F5
DCE5F6DDE6F7DDE6F7DEE7F6DCE8F6DCE8F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5
DDE6F5DDE6F5DDE6F5DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4
DCE5F4DCE5F4DCE5F6DCE5F6DBE4F5DBE4F5DBE4F5DBE4F5E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7
E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE2EBFA
E2EBFAE2EBFAE1EBF7E1EBF7E1EBF7E1EBF7E1EBF7E1EBF7E1EBF7E1EBF7E0ECF8E0ECF8E0ECF8
DFEBF7DFEBF7DFEBF9DFEBF9DFEBF9DFEDFADEECF9DDEBF8DCE9F9DCE9F9DCE9F9DCE9F9DBE8F9
D9E6F7DDE8FCDDE3FBDBDFF8DFE3FCDCE2F8D6DEF1D6E2F2DADAF6DADEFBD3DCF9D3DFF9CDD7F0
D1DCF2CCD8F2CBD9F4CCCEE7CFD0ECCED2EFB7C0E18090B4465E8A31538139619430598F506898
B9BDE3CCC9E4D5D8E9D3DFEDD4DFF3DAE0FAD9E5F5DAE6F6DCE5F6DDE6F7DDE6F7DEE7F6DCE8F6
DCE8F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DCE5F4DCE5F4
DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F6DCE5F6DBE4F5
DBE4F5DBE4F5DAE3F4E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6
E3EDF7E3EDF7E2ECF6E2ECF6E2ECF6E1EBF5E1EBF5E1EBF5E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6
E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE2EBFA
E1EAFBE1EAFBE1EAFBE0E9FAE0E9FAE0E9FADFE8F9DFE8F9DFE8F9DFE8F9DEE7F8DEE7F8DDE6F7
DCE5F6DCE5F6DBE4F5D9E4F8D9E4F8D9E4F8D8E3F7D6E1F5D4DFF3D2DDF1D1DCF0D0DBF1CDD8EE
CCD4EBCCD4EBD1D7F1D0D4EFC4C8E3B7BBD6BDC4E1C2C9E5C9D0ECCFD6F0D3DBF2D5DDF2D8E0F3
DAE2F5DCE5F6DCE5F6DDE6F7DDE6F7DEE7F8DEE7F8DEE7F8DEE7F8DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5
DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4
DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DBE4F5DBE4F5DBE4F5DBE4F5DBE4F5DBE4F5E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E3EDF7E3EDF7E2ECF6E2ECF6E2ECF6
E1EBF5E1EBF5E1EBF5E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6
E2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE1EAF9E1EAF9E1EAF9E1EAF9E0E9F8
E0E9F8E0E9F8E0E9F8E0E9FADFE8F9DFE8F9DEE7F8DDE6F7DDE6F7DCE5F6DCE5F6D9E4F8D9E4F8
D9E4F8D9E4F8D7E2F6D6E1F5D4DFF3D3DEF2D2DEF4D1DCF2CED9EFCFD7EED1D9F0D2D8F2CED4EE
C8CCE7C8CFEBCBD2EED0D7F1D3DBF2D5DDF2D6DEF3D9E1F4DBE3F6DCE5F6DCE5F6DDE6F7DDE6F7
DEE7F8DEE7F8DEE7F8DEE7F8DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5
DDE6F5DDE6F5DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4
DBE4F5DBE4F5DBE4F5DBE4F5DBE4F5DBE4F5E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7
E3EDF7E2ECF6E2ECF6E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E2ECF6E1EBF5E1EBF5E2ECF6E2ECF6
E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2EBFAE2EBFAE2EBFAE2EBFAE2EBFA
E2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE1EAF9E1EAF9E1EAF9E1EAF9E1EAF9E0E9FAE0E9FA
E0E9FADFE8F9DEE7F8DEE7F8DDE6F7DDE6F7DAE5F7DAE5F7DAE5F7DAE5F7D9E4F6D8E3F5D7E2F4
D6E1F3D5E2F5D5E2F5D5E0F4D3DEF4D2DDF3D5DDF4D6DEF5D5DDF4D3DAF4D5DCF6D6DEF5D7DFF6
D7DFF4D8E0F3DAE2F5DCE5F6DCE5F6DCE5F6DDE6F7DDE6F7DEE7F8DEE7F8DEE7F8DEE7F8DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DCE5F4DCE5F4DCE5F4DCE5F4
DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DBE4F5DBE4F5DBE4F5DBE4F5DBE4F5
DBE4F5E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E3EDF7E3EDF7
E3EDF7E3EDF7E2ECF6E2ECF6E2ECF6E1EBF5E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6
E2ECF6E2ECF6E2ECF6E2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE2EBFA
E2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE1EAFBE1EAFBE1EAFBE0E9FAE0E9FADFE8F9DFE8F9
DEE7F8DCE7F9DCE7F9DCE7F9DBE6F8DBE6F8DAE5F7D9E4F6D9E4F6D6E3F4D8E5F6D9E6F7D8E5F8
D6E1F5D5E0F4D5E0F4D6E1F7D7DFF6D8E0F7D9E1F6D9E1F6D9E1F4DAE2F5DBE4F5DCE5F6DCE5F6
DCE5F6DDE6F7DDE6F7DEE7F8DEE7F8DEE7F8DEE7F8DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5
DDE6F5DDE6F5DDE6F5DDE6F5DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4
DCE5F4DCE5F4DCE5F4DBE4F5DBE4F5DBE4F5DBE4F5DBE4F5DBE4F5E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E2ECF6
E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2EBFAE2EBFA
E2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE3ECFBE3ECFBE2EBFAE2EBFAE2EBFAE2EBFAE2EBFA
E2EBFAE2EBFCE2EBFCE1EAFBE1EAFBE0E9FAE0E9FAE0E9FADFE8F9DDE9F9DDE9F9DDE9F9DCE8F8
DCE8F8DCE8F8DBE7F7DBE7F7D8E5F5D9E6F7DAE7F8D9E6F7D7E4F5D5E2F5D6E1F5D6E1F5D8E0F5
D9E1F6DAE2F5DBE3F6DBE3F6DBE4F5DCE5F6DCE5F6DCE5F6DCE5F6DDE6F7DDE6F7DEE7F8DEE7F8
DEE7F8DDE6F7DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DDE6F5DDE6F5DDE6F5DDE6F5DDE6F5DCE5F4DCE5F4DCE5F4
DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DBE4F5DBE4F5
DBE4F5DBE4F5DBE4F5DBE4F5E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8
E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E4EEF8E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6
E2ECF6E3EDF7E3EDF7E3EDF7E3EDF7E3EDF7E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6
E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2ECF6E2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE2EBFAE2EBFA
E2EBFAE3EDF9E2ECF8E2ECF8E2ECF8E2ECF8E2ECF8E2ECF8E2ECF8E2EBFAE2EBFAE2EBFAE1EAF9
E1EAF9E1EAF9E0E9F8E0E9F8DEEAFADDE9F9DDE9F9DDE9F9DDE9F9DCE8F8DCE8F8DCE8F8DCE9F9
D9E6F6D8E5F5D8E5F5D8E5F5D8E3F5D8E3F5D9E4F6DAE2F5DAE2F5DBE4F5DCE5F6DDE6F7DDE6F5
DCE5F4DCE5F4DCE5F6DDE6F7DDE6F7DDE6F7DEE7F8DEE7F8DDE6F7DDE6F7DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6DEE7F6
DDE6F5DDE6F5DDE6F5DDE6F5DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4
DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DCE5F4DBE4F5DBE4F5DBE4F5DBE4F5DBE4F5DBE4F5

end
%%PageTrailer
%%Trailer
%%EOF

%%EndDocument
 @endspecial -459 -49 531 5 v -459 712 5 763 v 67 712
V -459 714 531 5 v 1 1 0 0 TeXcolorcmyk 196 353 a Fg(\))p
0 TeXcolorgray 157 466 a Ff(Mod\351lisation)p 677 -129
576 4 v 677 -16 4 113 v 1 0 0 TeXcolorrgb 731 -50 a Fe(Attrib)n(uts)p
0 TeXcolorgray 1249 -16 V 677 -13 576 4 v 677 213 4 226
v 731 66 a Fd(-F)-5 b(aces)731 179 y(-Couleur)p 1249
213 V 677 216 576 4 v 677 329 4 113 v 1 0 0 TeXcolorrgb
731 295 a Fe(M\351thode)p 0 TeXcolorgray 1249 329 V 677
332 576 4 v 677 445 4 113 v 731 411 a Fd(-Lancer)p 1249
445 V 677 448 576 4 v 677 674 4 226 v 731 527 a Fe(M\351thode)731
640 y(sp\351ciale)p 1249 674 V 677 678 576 4 v 677 790
4 113 v 1 0 0 TeXcolorrgb 731 757 a Fd(constr)q(ucteur)p
0 TeXcolorgray 1249 790 V 677 794 576 4 v 0.64 0 0.95 0.4
TeXcolorcmyk 1333 353 a Fg(\))p 0 TeXcolorgray 1 0 0
TeXcolorrgb 1294 466 a Ff(Instanciation)p 0 TeXcolorgray
1814 129 a Fc(Repr\351sentation)1814 221 y(inf)n(or)r(matique)34
b(d'un)1814 312 y(d\351)40 b(en)f(par)s(ticulier)l(,)1814
403 y(par)60 b(e)n(x)n(emple)f(un)1814 495 y(d\351)k(or)o(ange)f(\340)i
(6)1814 586 y(f)n(aces)o(.)-443 1000 y(Objets)20 b(\(ici)g(du)-339
1113 y(monde)-386 1226 y(ph)n(ysique\))p 1 0 0 TeXcolorrgb
798 1000 a(Classe)p 0 TeXcolorgray 1 0 0 TeXcolorrgb
932 w(Objet)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb
0.09999 0.09999 0.34999 TeXcolorrgb -600 1751 1008 85
v 0.09999 0.09999 0.34999 TeXcolorrgb 0 TeXcolorgray
1 TeXcolorgray -371 1725 a Fb(F)-7 b(.)14 b(N)r Fa(A)m(T)r(I)r(V)r(E)r
(L)32 b Fb(\(L)o(yc\351e)12 b(Nord)o(\))p 0 TeXcolorgray
0.09999 0.09999 0.34999 TeXcolorrgb 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0.15 0.15 0.525 TeXcolorrgb 408 1751 V 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 1 TeXcolorgray 912 1725 a
SDict begin H.S end

912 1725 a 1 TeXcolorgray 1 TeXcolorgray 912 1725 a
SDict begin H.R end
 912
1725 a 912 1725 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 912 1725 a 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7
TeXcolorrgb 1416 1751 1008 85 v 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 1 TeXcolorgray 679 w Fb(Ann\351e)h(scolaire)f(2018-2019)
p 1 TeXcolorgray 111 w(1)c(/)g(1)p 1 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
