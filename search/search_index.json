{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"admin/mode_examen/","text":"Mise en mode examen d'une machine Se connecter en mode administrateur. Restriction d'acc\u00e8s aux fichiers des autres utilisateurs cd /home sudo chmod go-rwx * Cr\u00e9ation de l'utilisateur examen avec le mot de passe examen sudo adduser examen Cr\u00e9er le dossier Sujets en mode root : sudo mkdir /home/examen/Sujets Copier les sujets dans le dossier Sujets , les sujets sont t\u00e9l\u00e9chargeables ci-dessous S\u00e9lection sujets EP Se d\u00e9connecter, et se reconnecter sous le nom de login examen Lancer Vs Code et installer l'extension python Cr\u00e9er les dossiers Travail et Sauvegarde pour l'utilisateur examen : rmdir * mkdir Travail Sauvegarde Changer les droits d'acc\u00e8s sur Sauvegarde chmod a-rwx Sauvegarde Cr\u00e9er un script de copie des fichiers et de nettoyage lors de la d\u00e9connexion Le gestionnaire de connection est gdm3 , le script de d\u00e9connexion est /etc/gdm3/PostSession/Default/ . Il faut donc \u00e9diter ce fichier et modifier le contenu : sudo gedit /etc/gdm3/PostSession/Default/ Nouveau contenu : #!/usr/bin/python3 from os import path , mkdir , chmod import shutil SOURCE = \"/home/examen/Travail\" PREFIXE = \"/home/examen/Sauvegarde\" def get_destination (): num = 1 dest = f \" { PREFIXE } /Session { num } /\" while path . exists ( dest ): num += 1 dest = f \" { PREFIXE } /Session { num } /\" return dest chmod ( PREFIXE , 0o777 ) destination = get_destination () shutil . copytree ( SOURCE , destination ) shutil . rmtree ( SOURCE ) mkdir ( SOURCE ) chmod ( PREFIXE , 0o000 ) Suppression de l'acc\u00e8s r\u00e9seau sur la machine sudo ifconfig enp3s0 down","title":"Mise en mode examen d'une machine"},{"location":"admin/mode_examen/#mise-en-mode-examen-dune-machine","text":"Se connecter en mode administrateur. Restriction d'acc\u00e8s aux fichiers des autres utilisateurs cd /home sudo chmod go-rwx * Cr\u00e9ation de l'utilisateur examen avec le mot de passe examen sudo adduser examen Cr\u00e9er le dossier Sujets en mode root : sudo mkdir /home/examen/Sujets Copier les sujets dans le dossier Sujets , les sujets sont t\u00e9l\u00e9chargeables ci-dessous S\u00e9lection sujets EP Se d\u00e9connecter, et se reconnecter sous le nom de login examen Lancer Vs Code et installer l'extension python Cr\u00e9er les dossiers Travail et Sauvegarde pour l'utilisateur examen : rmdir * mkdir Travail Sauvegarde Changer les droits d'acc\u00e8s sur Sauvegarde chmod a-rwx Sauvegarde Cr\u00e9er un script de copie des fichiers et de nettoyage lors de la d\u00e9connexion Le gestionnaire de connection est gdm3 , le script de d\u00e9connexion est /etc/gdm3/PostSession/Default/ . Il faut donc \u00e9diter ce fichier et modifier le contenu : sudo gedit /etc/gdm3/PostSession/Default/ Nouveau contenu : #!/usr/bin/python3 from os import path , mkdir , chmod import shutil SOURCE = \"/home/examen/Travail\" PREFIXE = \"/home/examen/Sauvegarde\" def get_destination (): num = 1 dest = f \" { PREFIXE } /Session { num } /\" while path . exists ( dest ): num += 1 dest = f \" { PREFIXE } /Session { num } /\" return dest chmod ( PREFIXE , 0o777 ) destination = get_destination () shutil . copytree ( SOURCE , destination ) shutil . rmtree ( SOURCE ) mkdir ( SOURCE ) chmod ( PREFIXE , 0o000 ) Suppression de l'acc\u00e8s r\u00e9seau sur la machine sudo ifconfig enp3s0 down","title":"Mise en mode examen d'une machine"},{"location":"admin/siteadmin/","text":"Scripts d'administration Gestion des qcm Partie barre de navigation du fichier mkdocs.yml : - \"C0-R\u00e9visions\" : revisions.md - \"C1-R\u00e9cursivit\u00e9\" : recursivite.md - \"C2-Bases de donn\u00e9es et SQL\" : sql.md - \"C3-Processus\" : processus.md - \"C4-Diviser pour r\u00e9gner\" : diviser.md - \"C5-Notions de programmation orient\u00e9 objet\" : poo.md - \"C6-Structures de donn\u00e9es lin\u00e9aires\" : sl.md - \"C7-Syst\u00e8me sur puce\" : puces.md - \"C8-Arbres\" : arbres.md - \"C9-Sch\u00e9ma relationnel d'une base de donn\u00e9es\" : sgbd.md - \"C10-Algorithmes sur les arbres\" : algoarbre.md - \"C11-Graphes\" : graphes.md - \"C12-Protocoles de routage\" : routage.md - \"C13-Recherche textuelle\" : texte.md - \"C14-Calculabilit\u00e9, d\u00e9cidabilit\u00e9\" : calculabilite.md - \"C15-S\u00e9curisation des communications\" : cryptographie.md","title":"Scripts d'administration"},{"location":"admin/siteadmin/#scripts-dadministration","text":"","title":"Scripts d'administration"},{"location":"admin/siteadmin/#gestion-des-qcm","text":"Partie barre de navigation du fichier mkdocs.yml : - \"C0-R\u00e9visions\" : revisions.md - \"C1-R\u00e9cursivit\u00e9\" : recursivite.md - \"C2-Bases de donn\u00e9es et SQL\" : sql.md - \"C3-Processus\" : processus.md - \"C4-Diviser pour r\u00e9gner\" : diviser.md - \"C5-Notions de programmation orient\u00e9 objet\" : poo.md - \"C6-Structures de donn\u00e9es lin\u00e9aires\" : sl.md - \"C7-Syst\u00e8me sur puce\" : puces.md - \"C8-Arbres\" : arbres.md - \"C9-Sch\u00e9ma relationnel d'une base de donn\u00e9es\" : sgbd.md - \"C10-Algorithmes sur les arbres\" : algoarbre.md - \"C11-Graphes\" : graphes.md - \"C12-Protocoles de routage\" : routage.md - \"C13-Recherche textuelle\" : texte.md - \"C14-Calculabilit\u00e9, d\u00e9cidabilit\u00e9\" : calculabilite.md - \"C15-S\u00e9curisation des communications\" : cryptographie.md","title":"Gestion des qcm"},{"location":"admin/todo_install/","text":"Installation ubuntu sur les postes du lyc\u00e9e Modification de l'ordre de d\u00e9marrage Par d\u00e9faut, ubuntu demarre en premier, pour modifier cet ordre : Editer le fichier /etc/default/grub et mettre GRUB_DEFAULT=2 Ex\u00e9cuter la commande update-grub pour mettre \u00e0 jour le menu de demarrage Probl\u00e8me de freeze sur l'\u00e9cran d'accueil Certains ordinateurs (client l\u00e9gers) ont un souci de freeze sur l'\u00e9cran d'accueil d'ubuntu, pour r\u00e9gler ce souci : Faire un d\u00e9marrage en recovery mode si le probl\u00e8me survient Selectionner l'option poursuivre le d\u00e9marrage normal Editer le fichier de configuration grub comme ci-dessus Changer la ligne GRUB_CMDLINE_LINUX_DEFAULT en ajoutant nomodeset , ce qui donne : GRUB_CMDLINE_LINUX_DEFAULT=\"quiet splash nomodeset\" Mettre \u00e0 jour Grub avec update-grub Changer le nom du poste Avec la commande sudo hostname <le_nom_ici> Plan de la salle de classe avec les noms des machines : Configurer l'acc\u00e8s au r\u00e9seau en activant le proxy syst\u00e8me Proxy : 172.19.240.1 Port : 3129 Identique pour tous les protocoles Configurer ssh pour avoir l'acc\u00e8s \u00e0 distance : sudo apt-get update sudo apt-get install openssh-server sudo ufw allow ssh sudo systemctl enable ssh sudo systemctl start ssh Faire tourner le script d'administration pour installer les applis Depuis le poste du bureau dans le r\u00e9pertoire Script Cr\u00e9er les comptes par d\u00e9faut Cr\u00e9ation du compte invit\u00e9 : sudo adduser invite Mettre mot de passe \u00e0 invite Cr\u00e9ation d'un compte \u00e9l\u00e8ve : sudo adduser <nom_eleve> sudo chage -d 0 <nom_eleve> permet de saisir un mot de passe lors de la premi\u00e8re connection Installation d'un serveur de paquet local (pour installation de logiciels tels que filius) : Installer un serveur apache sur le poste prof (alanturing.local) : sudo apt-get install apache2 Cr\u00e9er le r\u00e9pertoire /var/www/html/deb/amd64 et y stocker les paquets .deb Mettre \u00e0 jour le descriptif des paquets avec la commande : dpkg-scanpackages amd64 | gzip -9c > amd64/Packages.gz dans le repertoire ci dessus /var/www/html/deb/ Ajouter sur toutes les machines une exception pour l'adresse alanturing.local dans le proxy r\u00e9seau Modifier le fichier /etc/apt/sources.list et y ajouter la ligne : deb [trusted=yes] http://localhost/deb/ amd64/ Installation normale avec apt-get (update puis install) avec le nom du paquet Connection au serveur perso de l'utilisateur dans windows : Ouvrir l'explorateur de fichier Dans autre emplacement, entrer smb://scribe/perso/prenom.nom en rempla\u00e7ant prenom.nom par ceux de l'\u00e9l\u00e8ve Cocher \u00e9ventuellement de retenir les identifiants et mot de passe et se connecter Activiter de fa\u00e7on d\u00e9finitive les options de Wake on Line Installer ethtool (paquet apt) Cr\u00e9er le fichier etc/system/wol@.service Y \u00e9crire le contenu suivant : [ Unit ] Description = Wake-on-LAN for %i Requires = network.target After = network.target [ Service ] ExecStart = /sbin/ethtool -s %i wol pumbg Type = oneshot [ Install ] WantedBy = multi-user.target Taper les commandes suivantes : sudo systemctl enable wol@enp3s0 sudo systemctl start wol@enp3s0 D\u00e9sactivation r\u00e9seau des machines Les ordinateurs du lyc\u00e9e sont configur\u00e9s pour acc\u00e9der au web via le proxy d'adresse 172.19.240.1 (sur le port 3129). Pour d\u00e9sactiver cet acc\u00e8s il suffit donc de rajouter la r\u00e8gle suivante dans la table des ips : sudo iptables -A OUTPUT -d 172 .19.240.1 -j DROP La r\u00e9activation se fait avec effacement de cette r\u00e8gle : sudo iptables -D OUTPUT -d 172 .19.240.1 -j DROP","title":"Installation ubuntu sur les postes du lyc\u00e9e"},{"location":"admin/todo_install/#installation-ubuntu-sur-les-postes-du-lycee","text":"","title":"Installation ubuntu sur les postes du lyc\u00e9e"},{"location":"admin/todo_install/#modification-de-lordre-de-demarrage","text":"Par d\u00e9faut, ubuntu demarre en premier, pour modifier cet ordre : Editer le fichier /etc/default/grub et mettre GRUB_DEFAULT=2 Ex\u00e9cuter la commande update-grub pour mettre \u00e0 jour le menu de demarrage","title":"Modification de l'ordre de d\u00e9marrage"},{"location":"admin/todo_install/#probleme-de-freeze-sur-lecran-daccueil","text":"Certains ordinateurs (client l\u00e9gers) ont un souci de freeze sur l'\u00e9cran d'accueil d'ubuntu, pour r\u00e9gler ce souci : Faire un d\u00e9marrage en recovery mode si le probl\u00e8me survient Selectionner l'option poursuivre le d\u00e9marrage normal Editer le fichier de configuration grub comme ci-dessus Changer la ligne GRUB_CMDLINE_LINUX_DEFAULT en ajoutant nomodeset , ce qui donne : GRUB_CMDLINE_LINUX_DEFAULT=\"quiet splash nomodeset\" Mettre \u00e0 jour Grub avec update-grub","title":"Probl\u00e8me de freeze sur l'\u00e9cran d'accueil"},{"location":"admin/todo_install/#changer-le-nom-du-poste","text":"Avec la commande sudo hostname <le_nom_ici> Plan de la salle de classe avec les noms des machines :","title":"Changer le nom du poste"},{"location":"admin/todo_install/#configurer-lacces-au-reseau-en-activant-le-proxy-systeme","text":"Proxy : 172.19.240.1 Port : 3129 Identique pour tous les protocoles","title":"Configurer l'acc\u00e8s au r\u00e9seau en activant le proxy syst\u00e8me"},{"location":"admin/todo_install/#configurer-ssh-pour-avoir-lacces-a-distance","text":"sudo apt-get update sudo apt-get install openssh-server sudo ufw allow ssh sudo systemctl enable ssh sudo systemctl start ssh","title":"Configurer ssh pour avoir l'acc\u00e8s \u00e0 distance :"},{"location":"admin/todo_install/#faire-tourner-le-script-dadministration-pour-installer-les-applis","text":"Depuis le poste du bureau dans le r\u00e9pertoire Script","title":"Faire tourner le script d'administration pour installer les applis"},{"location":"admin/todo_install/#creer-les-comptes-par-defaut","text":"Cr\u00e9ation du compte invit\u00e9 : sudo adduser invite Mettre mot de passe \u00e0 invite Cr\u00e9ation d'un compte \u00e9l\u00e8ve : sudo adduser <nom_eleve> sudo chage -d 0 <nom_eleve> permet de saisir un mot de passe lors de la premi\u00e8re connection","title":"Cr\u00e9er les comptes par d\u00e9faut"},{"location":"admin/todo_install/#installation-dun-serveur-de-paquet-local-pour-installation-de-logiciels-tels-que-filius","text":"Installer un serveur apache sur le poste prof (alanturing.local) : sudo apt-get install apache2 Cr\u00e9er le r\u00e9pertoire /var/www/html/deb/amd64 et y stocker les paquets .deb Mettre \u00e0 jour le descriptif des paquets avec la commande : dpkg-scanpackages amd64 | gzip -9c > amd64/Packages.gz dans le repertoire ci dessus /var/www/html/deb/ Ajouter sur toutes les machines une exception pour l'adresse alanturing.local dans le proxy r\u00e9seau Modifier le fichier /etc/apt/sources.list et y ajouter la ligne : deb [trusted=yes] http://localhost/deb/ amd64/ Installation normale avec apt-get (update puis install) avec le nom du paquet","title":"Installation d'un serveur de paquet local (pour installation de logiciels tels que filius) :"},{"location":"admin/todo_install/#connection-au-serveur-perso-de-lutilisateur-dans-windows","text":"Ouvrir l'explorateur de fichier Dans autre emplacement, entrer smb://scribe/perso/prenom.nom en rempla\u00e7ant prenom.nom par ceux de l'\u00e9l\u00e8ve Cocher \u00e9ventuellement de retenir les identifiants et mot de passe et se connecter","title":"Connection au serveur perso de l'utilisateur dans windows :"},{"location":"admin/todo_install/#activiter-de-facon-definitive-les-options-de-wake-on-line","text":"Installer ethtool (paquet apt) Cr\u00e9er le fichier etc/system/wol@.service Y \u00e9crire le contenu suivant : [ Unit ] Description = Wake-on-LAN for %i Requires = network.target After = network.target [ Service ] ExecStart = /sbin/ethtool -s %i wol pumbg Type = oneshot [ Install ] WantedBy = multi-user.target Taper les commandes suivantes : sudo systemctl enable wol@enp3s0 sudo systemctl start wol@enp3s0","title":"Activiter de fa\u00e7on d\u00e9finitive les options de Wake on Line"},{"location":"admin/todo_install/#desactivation-reseau-des-machines","text":"Les ordinateurs du lyc\u00e9e sont configur\u00e9s pour acc\u00e9der au web via le proxy d'adresse 172.19.240.1 (sur le port 3129). Pour d\u00e9sactiver cet acc\u00e8s il suffit donc de rajouter la r\u00e8gle suivante dans la table des ips : sudo iptables -A OUTPUT -d 172 .19.240.1 -j DROP La r\u00e9activation se fait avec effacement de cette r\u00e8gle : sudo iptables -D OUTPUT -d 172 .19.240.1 -j DROP","title":"D\u00e9sactivation r\u00e9seau des machines"},{"location":"backup/","text":"Cours de NSI en Terminale du lyc\u00e9e Hintermann-Aff\u00e9jee Liste des chapitres Titre Dur\u00e9e C0- R\u00e9visions 2 C1- R\u00e9cursivit\u00e9 2 C2- Bases de donn\u00e9es et SQL 2 C3- Processus 1 C4- Diviser pour r\u00e9gner 1 C5- Notions de programmation orient\u00e9 objet 2 C6- Structures de donn\u00e9es lin\u00e9aires 2 C7- Syst\u00e8me sur puce 1 C8- Arbres 2 C9- Sch\u00e9ma relationnel d'une base de donn\u00e9es 2 C10- Algorithmes sur les arbres 2 C11- Graphes 2 C12- Protocoles de routage 2 C13- Recherche textuelle 2 C14- Calculabilit\u00e9, d\u00e9cidabilit\u00e9 2 C15- S\u00e9curisation des communications 2 Th\u00e8mes trait\u00e9s sur l'ann\u00e9e : Histoire de l'informatique Projet","title":"Cours de NSI en Terminale du lyc\u00e9e Hintermann-Aff\u00e9jee"},{"location":"backup/#cours-de-nsi-en-terminale-du-lycee-hintermann-affejee","text":"","title":"Cours de NSI en Terminale du lyc\u00e9e Hintermann-Aff\u00e9jee"},{"location":"backup/#liste-des-chapitres","text":"Titre Dur\u00e9e C0- R\u00e9visions 2 C1- R\u00e9cursivit\u00e9 2 C2- Bases de donn\u00e9es et SQL 2 C3- Processus 1 C4- Diviser pour r\u00e9gner 1 C5- Notions de programmation orient\u00e9 objet 2 C6- Structures de donn\u00e9es lin\u00e9aires 2 C7- Syst\u00e8me sur puce 1 C8- Arbres 2 C9- Sch\u00e9ma relationnel d'une base de donn\u00e9es 2 C10- Algorithmes sur les arbres 2 C11- Graphes 2 C12- Protocoles de routage 2 C13- Recherche textuelle 2 C14- Calculabilit\u00e9, d\u00e9cidabilit\u00e9 2 C15- S\u00e9curisation des communications 2","title":"Liste des chapitres"},{"location":"backup/#themes-traites-sur-lannee","text":"","title":"Th\u00e8mes trait\u00e9s sur l'ann\u00e9e :"},{"location":"backup/#histoire-de-linformatique","text":"","title":" &nbsp; Histoire de l'informatique"},{"location":"backup/#projet","text":"","title":" &nbsp; Projet"},{"location":"backup/2022-S01/","text":"Corrig\u00e9 sujet 01 - Ann\u00e9e : 2022 Sujet 01 - 20222 Exercice 1 1 2 3 4 5 6 def recherche ( caractere , mot ): occurrence = 0 for c in mot : if c == caractere : occurrence += 1 return occurrence Commentaires C'est un exercice classique de parcours d'un it\u00e9rable en comptant les occurrences d'apparition d'une valeur. Un parcours par \u00e9l\u00e9ment suffit, les indices des occurrences n'\u00e9tant pas utilis\u00e9es. Exercice 2 1 2 3 4 5 6 7 8 9 10 Pieces = [ 100 , 50 , 20 , 10 , 5 , 2 , 1 ] def rendu_glouton ( arendre , solution = [], i = 0 ): if arendre == 0 : return solution #(1) p = Pieces [ i ] if p <= arendre : #(2) solution . append ( p ) return rendu_glouton ( arendre - p , solution , i ) else : return rendu_glouton ( arendre , solution , i + 1 ) #(3) Lorsqu'il n'y a plus rien \u00e0 rendre on renvoie la solution Si la pi\u00e8ce est plus petite que la somme \u00e0 rendre on l'ajoute \u00e0 la solution et on diminue la somme \u00e0 rendre La pi\u00e8ce d\u00e9passe la somme \u00e0 rendre, on relance le processus en regardant la pi\u00e8ce suivante dans la liste Attention Le code fourni utilise un objet mutable (une liste) comme param\u00e8tre par d\u00e9faut d'une fonction : def rendu_glouton ( arendre , solution = [], i = 0 ): C'est une tr\u00e8s mauvaise pratique car source d'erreurs, en effet la variable solution \u00e9tant mutable elle est modifi\u00e9e par la fonction lors d'un premier appel et ne sera donc plus vide lors des appels suivants. Pour constater le probl\u00e8me, faire plusieurs appels \u00e0 cette fonction sans sp\u00e9cifier les arguments ayant des valeurs par d\u00e9faut. Pour une solution \u00e0 ce probl\u00e8me, on pourra par exemple consulter ce site","title":"2022 S01"},{"location":"backup/2022-S01/#corrige-sujet-01-annee-2022","text":"Sujet 01 - 20222","title":"Corrig\u00e9 sujet 01 - Ann\u00e9e : 2022"},{"location":"backup/2022-S01/#exercice-1","text":"1 2 3 4 5 6 def recherche ( caractere , mot ): occurrence = 0 for c in mot : if c == caractere : occurrence += 1 return occurrence Commentaires C'est un exercice classique de parcours d'un it\u00e9rable en comptant les occurrences d'apparition d'une valeur. Un parcours par \u00e9l\u00e9ment suffit, les indices des occurrences n'\u00e9tant pas utilis\u00e9es.","title":"Exercice 1"},{"location":"backup/2022-S01/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 Pieces = [ 100 , 50 , 20 , 10 , 5 , 2 , 1 ] def rendu_glouton ( arendre , solution = [], i = 0 ): if arendre == 0 : return solution #(1) p = Pieces [ i ] if p <= arendre : #(2) solution . append ( p ) return rendu_glouton ( arendre - p , solution , i ) else : return rendu_glouton ( arendre , solution , i + 1 ) #(3) Lorsqu'il n'y a plus rien \u00e0 rendre on renvoie la solution Si la pi\u00e8ce est plus petite que la somme \u00e0 rendre on l'ajoute \u00e0 la solution et on diminue la somme \u00e0 rendre La pi\u00e8ce d\u00e9passe la somme \u00e0 rendre, on relance le processus en regardant la pi\u00e8ce suivante dans la liste Attention Le code fourni utilise un objet mutable (une liste) comme param\u00e8tre par d\u00e9faut d'une fonction : def rendu_glouton ( arendre , solution = [], i = 0 ): C'est une tr\u00e8s mauvaise pratique car source d'erreurs, en effet la variable solution \u00e9tant mutable elle est modifi\u00e9e par la fonction lors d'un premier appel et ne sera donc plus vide lors des appels suivants. Pour constater le probl\u00e8me, faire plusieurs appels \u00e0 cette fonction sans sp\u00e9cifier les arguments ayant des valeurs par d\u00e9faut. Pour une solution \u00e0 ce probl\u00e8me, on pourra par exemple consulter ce site","title":"Exercice 2"},{"location":"backup/2022-S02/","text":"Corrig\u00e9 sujet 02 - Ann\u00e9e : 2022 Sujet 02 - 20222 Exercice 1 1 2 3 4 5 6 7 8 9 def moyenne ( donnees ): somme_notes = 0 somme_coefficients = 0 for d in donnees : note = d [ 0 ] coefficient = d [ 1 ] somme_notes += note * coefficient somme_coefficients += coefficient return somme_notes / somme_coefficients Commentaires Bien comprendre la fa\u00e7on dont les donn\u00e9es sont organis\u00e9es, c'est une liste dont chaque \u00e9l\u00e9ment est un tuple (couple,coefficient) . Ainsi dans l'exemple de l'\u00e9nonc\u00e9 : donnees=[(15,2),(9,1),(12,3)] la premi\u00e8re donn\u00e9e not\u00e9e d est le couple (15,2) et donc la premi\u00e8re note est d[0] et le premier coefficient d[1] . Exercice 2 1 2 3 4 5 6 7 8 9 def pascal ( n ): C = [[ 1 ]] #(1) for k in range ( 1 , n + 1 ): Ck = [ 1 ] #(2) for i in range ( 1 , k ): Ck . append ( C [ k - 1 ][ i - 1 ] + C [ k - 1 ][ i ] ) #(3) Ck . append ( 1 ) #(2) C . append ( Ck ) return C La variable C est la liste des lignes du triangle de Pascal et la toute premi\u00e8re ligne du triangle de Pascal contient un unique 1 Toutes les lignes (sauf la premi\u00e8re) commencent et se terminent par un 1. On construit la ligne en utilisant la relation donn\u00e9e dans l'\u00e9nonc\u00e9. Toutes les lignes (sauf la premi\u00e8re) commencent et se terminent par un 1. Commentaire Le sujet avantage probablement les \u00e9l\u00e8ves faisant la sp\u00e9cialit\u00e9 math\u00e9matiques en terminale puisqu'ils auront d\u00e9j\u00e0 rencontr\u00e9 le triangle de Pascal ainsi que la relation de Pascal : \\[\\binom{k}{i} = \\binom{k-1}{i-1} + \\binom{k-1}{i}\\] qui sert de base \u00e0 la construction de la \\(k-i\u00e8me\\) ligne du triangle de Pascal \u00e0 partir de la ligne pr\u00e9c\u00e9dente. On peut d'ailleurs signaler que la g\u00e9n\u00e9ration des coefficients binomiaux est un des algorithmes pr\u00e9vus au programme de terminale en sp\u00e9cialit\u00e9 math\u00e9matiques.","title":"2022 S02"},{"location":"backup/2022-S02/#corrige-sujet-02-annee-2022","text":"Sujet 02 - 20222","title":"Corrig\u00e9 sujet 02 - Ann\u00e9e : 2022"},{"location":"backup/2022-S02/#exercice-1","text":"1 2 3 4 5 6 7 8 9 def moyenne ( donnees ): somme_notes = 0 somme_coefficients = 0 for d in donnees : note = d [ 0 ] coefficient = d [ 1 ] somme_notes += note * coefficient somme_coefficients += coefficient return somme_notes / somme_coefficients Commentaires Bien comprendre la fa\u00e7on dont les donn\u00e9es sont organis\u00e9es, c'est une liste dont chaque \u00e9l\u00e9ment est un tuple (couple,coefficient) . Ainsi dans l'exemple de l'\u00e9nonc\u00e9 : donnees=[(15,2),(9,1),(12,3)] la premi\u00e8re donn\u00e9e not\u00e9e d est le couple (15,2) et donc la premi\u00e8re note est d[0] et le premier coefficient d[1] .","title":"Exercice 1"},{"location":"backup/2022-S02/#exercice-2","text":"1 2 3 4 5 6 7 8 9 def pascal ( n ): C = [[ 1 ]] #(1) for k in range ( 1 , n + 1 ): Ck = [ 1 ] #(2) for i in range ( 1 , k ): Ck . append ( C [ k - 1 ][ i - 1 ] + C [ k - 1 ][ i ] ) #(3) Ck . append ( 1 ) #(2) C . append ( Ck ) return C La variable C est la liste des lignes du triangle de Pascal et la toute premi\u00e8re ligne du triangle de Pascal contient un unique 1 Toutes les lignes (sauf la premi\u00e8re) commencent et se terminent par un 1. On construit la ligne en utilisant la relation donn\u00e9e dans l'\u00e9nonc\u00e9. Toutes les lignes (sauf la premi\u00e8re) commencent et se terminent par un 1. Commentaire Le sujet avantage probablement les \u00e9l\u00e8ves faisant la sp\u00e9cialit\u00e9 math\u00e9matiques en terminale puisqu'ils auront d\u00e9j\u00e0 rencontr\u00e9 le triangle de Pascal ainsi que la relation de Pascal : \\[\\binom{k}{i} = \\binom{k-1}{i-1} + \\binom{k-1}{i}\\] qui sert de base \u00e0 la construction de la \\(k-i\u00e8me\\) ligne du triangle de Pascal \u00e0 partir de la ligne pr\u00e9c\u00e9dente. On peut d'ailleurs signaler que la g\u00e9n\u00e9ration des coefficients binomiaux est un des algorithmes pr\u00e9vus au programme de terminale en sp\u00e9cialit\u00e9 math\u00e9matiques.","title":"Exercice 2"},{"location":"backup/2022-S03/","text":"Corrig\u00e9 sujet 03 - Ann\u00e9e : 2022 Sujet 03 - 20222 Exercice 1 1 2 3 4 5 def delta ( liste ): codage = [ liste [ 0 ]] for i in range ( 1 , len ( liste )): codage . append ( liste [ i ] - liste [ i - 1 ]) return codage Commentaires On construit le codage en partant du premier \u00e9l\u00e9ment de la liste. Les autres \u00e9l\u00e9ments sont les diff\u00e9rences entre deux \u00e9l\u00e9ments cons\u00e9cutifs de la liste de d\u00e9part. L'\u00e9criture de cette fonction peut aussi se faire (de fa\u00e7on plus concise) en utilisant les listes par compr\u00e9hension : def delta ( liste ): return [ liste [ i ] - liste [ i - 1 ] if i > 0 else liste [ i ] for i in range ( len ( liste ))] Exercice 2 Bug Le code fourni semble contenir une erreur, en effet, pour le compl\u00e9ter on utilise un if True \u00e0 la ligne 23 ! On devrait donc soit se passer de la ligne 23, soit r\u00e9\u00e9crire cette fonction. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 class Noeud : def __init__ ( self , g , v , d ): self . gauche = g self . valeur = v self . droit = d def __str__ ( self ): return str ( self . valeur ) def est_une_feuille ( self ): '''Renvoie True si et seulement si le noeud est une feuille''' return self . gauche is None and self . droit is None def expression_infixe ( e ): s = \"\" #(1) if e . gauche is not None : #(2) s = '(' + s + expression_infixe ( e . gauche ) s = s + str ( e . valeur ) if e . droit is not None : #(3) s = s + expression_infixe ( e . droit ) + ')' if True : #(4) return s La variable s va contenir l'expression arithm\u00e9tique Si le noeud contient un fils gauche, on construit l'expression associ\u00e9e et on ajoute la valeur du noeud \u00e0 la suite. On construit la partie droite de l'expression (si elle existe) Si on atteint cette ligne, l'expression a \u00e9t\u00e9 construite en totalit\u00e9, il reste \u00e0 la renvoyer. Il ne devrait pas y avoir de if ! Commentaire Sujet assez difficile en plus d'\u00eatre bugg\u00e9 et qui utilise diverses notions du programme (arbre, r\u00e9cursivit\u00e9) et qui pr\u00e9sente de plus un aspect math\u00e9matique.","title":"2022 S03"},{"location":"backup/2022-S03/#corrige-sujet-03-annee-2022","text":"Sujet 03 - 20222","title":"Corrig\u00e9 sujet 03 - Ann\u00e9e : 2022"},{"location":"backup/2022-S03/#exercice-1","text":"1 2 3 4 5 def delta ( liste ): codage = [ liste [ 0 ]] for i in range ( 1 , len ( liste )): codage . append ( liste [ i ] - liste [ i - 1 ]) return codage Commentaires On construit le codage en partant du premier \u00e9l\u00e9ment de la liste. Les autres \u00e9l\u00e9ments sont les diff\u00e9rences entre deux \u00e9l\u00e9ments cons\u00e9cutifs de la liste de d\u00e9part. L'\u00e9criture de cette fonction peut aussi se faire (de fa\u00e7on plus concise) en utilisant les listes par compr\u00e9hension : def delta ( liste ): return [ liste [ i ] - liste [ i - 1 ] if i > 0 else liste [ i ] for i in range ( len ( liste ))]","title":"Exercice 1"},{"location":"backup/2022-S03/#exercice-2","text":"Bug Le code fourni semble contenir une erreur, en effet, pour le compl\u00e9ter on utilise un if True \u00e0 la ligne 23 ! On devrait donc soit se passer de la ligne 23, soit r\u00e9\u00e9crire cette fonction. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 class Noeud : def __init__ ( self , g , v , d ): self . gauche = g self . valeur = v self . droit = d def __str__ ( self ): return str ( self . valeur ) def est_une_feuille ( self ): '''Renvoie True si et seulement si le noeud est une feuille''' return self . gauche is None and self . droit is None def expression_infixe ( e ): s = \"\" #(1) if e . gauche is not None : #(2) s = '(' + s + expression_infixe ( e . gauche ) s = s + str ( e . valeur ) if e . droit is not None : #(3) s = s + expression_infixe ( e . droit ) + ')' if True : #(4) return s La variable s va contenir l'expression arithm\u00e9tique Si le noeud contient un fils gauche, on construit l'expression associ\u00e9e et on ajoute la valeur du noeud \u00e0 la suite. On construit la partie droite de l'expression (si elle existe) Si on atteint cette ligne, l'expression a \u00e9t\u00e9 construite en totalit\u00e9, il reste \u00e0 la renvoyer. Il ne devrait pas y avoir de if ! Commentaire Sujet assez difficile en plus d'\u00eatre bugg\u00e9 et qui utilise diverses notions du programme (arbre, r\u00e9cursivit\u00e9) et qui pr\u00e9sente de plus un aspect math\u00e9matique.","title":"Exercice 2"},{"location":"backup/2022-S04/","text":"Corrig\u00e9 sujet 04 - Ann\u00e9e : 2022 Sujet 04 - 20222 Exercice 1 1 2 3 4 5 6 def recherche ( liste ): consecutifs = [] for i in range ( len ( liste ) - 1 ): if liste [ i + 1 ] == liste [ i ] + 1 : consecutifs . append (( liste [ i ], liste [ i + 1 ])) return consecutifs Commentaires La condition liste[i+1]==liste[i]+1 permet de tester que deux \u00e9l\u00e9ments cons\u00e9cutifs de la liste sont deux entiers qui se suivent. On peut utiliser les d\u00e9finitions de liste par compr\u00e9hension : def recherche ( liste ): return [( liste [ i ], liste [ i + 1 ]) for i in range ( len ( liste ) - 1 ) if liste [ i + 1 ] == liste [ i ] + 1 ] Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 def propager ( M , i , j , val ): if M [ i ][ j ] == val : #(1) return M [ i ][ j ] = val # l'\u00e9l\u00e9ment en haut fait partie de la composante if (( i - 1 ) >= 0 and M [ i - 1 ][ j ] == 1 ): #(2) propager ( M , i - 1 , j , val ) # l'\u00e9l\u00e9ment en bas fait partie de la composante if (( i + 1 ) < len ( M ) and M [ i + 1 ][ j ] == 1 ): #(2) propager ( M , i + 1 , j , val ) # l'\u00e9l\u00e9ment \u00e0 gauche fait partie de la composante if (( j - 1 ) >= 0 and M [ i ][ j - 1 ] == 1 ): #(2) propager ( M , i , j - 1 , val ) # l'\u00e9l\u00e9ment \u00e0 droite fait partie de la composante if (( j + 1 ) < len ( M ) and M [ i ][ j + 1 ] == 1 ): #(2) propager ( M , i , j + 1 , val ) C'est la condition d'arr\u00eat de la r\u00e9cursivit\u00e9, on ne relance pas la propagation sur les cases voisines On relance la propagation \u00e0 partir de la case voisine si celle-ci est est dans la grille (premi\u00e8re partie de la condition) et aussi dans la m\u00eame composante (seconde partie de la condition) On relance la propagation \u00e0 partir de la case voisine si celle-ci est est dans la grille (premi\u00e8re partie de la condition) et aussi dans la m\u00eame composante (seconde partie de la condition) On relance la propagation \u00e0 partir de la case voisine si celle-ci est est dans la grille (premi\u00e8re partie de la condition) et aussi dans la m\u00eame composante (seconde partie de la condition) On relance la propagation \u00e0 partir de la case voisine si celle-ci est est dans la grille (premi\u00e8re partie de la condition) et aussi dans la m\u00eame composante (seconde partie de la condition) Commentaire Le return ligne 3 (\u00e9quivalent \u00e0 un return None ) permet de mettre fin \u00e0 la r\u00e9cursivit\u00e9. On peut faire autrement et \u00e9viter d'utiliser return d'autant plus que cette fonction modifie une liste en place mais ne renvoie pas de valeur.","title":"2022 S04"},{"location":"backup/2022-S04/#corrige-sujet-04-annee-2022","text":"Sujet 04 - 20222","title":"Corrig\u00e9 sujet 04 - Ann\u00e9e : 2022"},{"location":"backup/2022-S04/#exercice-1","text":"1 2 3 4 5 6 def recherche ( liste ): consecutifs = [] for i in range ( len ( liste ) - 1 ): if liste [ i + 1 ] == liste [ i ] + 1 : consecutifs . append (( liste [ i ], liste [ i + 1 ])) return consecutifs Commentaires La condition liste[i+1]==liste[i]+1 permet de tester que deux \u00e9l\u00e9ments cons\u00e9cutifs de la liste sont deux entiers qui se suivent. On peut utiliser les d\u00e9finitions de liste par compr\u00e9hension : def recherche ( liste ): return [( liste [ i ], liste [ i + 1 ]) for i in range ( len ( liste ) - 1 ) if liste [ i + 1 ] == liste [ i ] + 1 ]","title":"Exercice 1"},{"location":"backup/2022-S04/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 def propager ( M , i , j , val ): if M [ i ][ j ] == val : #(1) return M [ i ][ j ] = val # l'\u00e9l\u00e9ment en haut fait partie de la composante if (( i - 1 ) >= 0 and M [ i - 1 ][ j ] == 1 ): #(2) propager ( M , i - 1 , j , val ) # l'\u00e9l\u00e9ment en bas fait partie de la composante if (( i + 1 ) < len ( M ) and M [ i + 1 ][ j ] == 1 ): #(2) propager ( M , i + 1 , j , val ) # l'\u00e9l\u00e9ment \u00e0 gauche fait partie de la composante if (( j - 1 ) >= 0 and M [ i ][ j - 1 ] == 1 ): #(2) propager ( M , i , j - 1 , val ) # l'\u00e9l\u00e9ment \u00e0 droite fait partie de la composante if (( j + 1 ) < len ( M ) and M [ i ][ j + 1 ] == 1 ): #(2) propager ( M , i , j + 1 , val ) C'est la condition d'arr\u00eat de la r\u00e9cursivit\u00e9, on ne relance pas la propagation sur les cases voisines On relance la propagation \u00e0 partir de la case voisine si celle-ci est est dans la grille (premi\u00e8re partie de la condition) et aussi dans la m\u00eame composante (seconde partie de la condition) On relance la propagation \u00e0 partir de la case voisine si celle-ci est est dans la grille (premi\u00e8re partie de la condition) et aussi dans la m\u00eame composante (seconde partie de la condition) On relance la propagation \u00e0 partir de la case voisine si celle-ci est est dans la grille (premi\u00e8re partie de la condition) et aussi dans la m\u00eame composante (seconde partie de la condition) On relance la propagation \u00e0 partir de la case voisine si celle-ci est est dans la grille (premi\u00e8re partie de la condition) et aussi dans la m\u00eame composante (seconde partie de la condition) Commentaire Le return ligne 3 (\u00e9quivalent \u00e0 un return None ) permet de mettre fin \u00e0 la r\u00e9cursivit\u00e9. On peut faire autrement et \u00e9viter d'utiliser return d'autant plus que cette fonction modifie une liste en place mais ne renvoie pas de valeur.","title":"Exercice 2"},{"location":"backup/2022-S05/","text":"Corrig\u00e9 sujet 05 - Ann\u00e9e : 2022 Sujet 05 - 20222 Exercice 1 Bug La fonction \u00e0 \u00e9crire s'appelle RechercheMinMax dans l'\u00e9nonc\u00e9 (avec le R majusucule) mais devient rechercheMinMax avec un r miniscule dans les appels. 1 2 3 4 5 6 7 8 def RechercheMinMax ( tab ): if tab == []: return { 'min' : None , 'max' : None } mini , maxi = tab [ 0 ], tab [ 0 ] for elt in tab : if elt < mini : mini = elt if elt > maxi : maxi = elt return { 'min' : mini , 'max' : maxi } Commentaires Encore une recherche classique de minimum et de maximum, le r\u00e9sultat est renvoy\u00e9 sous la forme d'un dictionnaire. Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 class Carte : \"\"\"Initialise Couleur (entre 1 a 4), et Valeur (entre 1 a 13)\"\"\" def __init__ ( self , c , v ): assert 1 <= c <= 4 , \"La couleur est entre 1 et 4\" assert 1 <= v <= 13 , \"La valeur est entre 1 et 13\" #(1) self . Couleur = c self . Valeur = v \"\"\"Renvoie le nom de la Carte As, 2, ... 10, Valet, Dame, Roi\"\"\" def getNom ( self ): if ( self . Valeur > 1 and self . Valeur < 11 ): return str ( self . Valeur ) elif self . Valeur == 11 : return \"Valet\" elif self . Valeur == 12 : return \"Dame\" elif self . Valeur == 13 : return \"Roi\" else : return \"As\" \"\"\"Renvoie la couleur de la Carte (parmi pique, coeur, carreau, trefle\"\"\" def getCouleur ( self ): return [ 'pique' , 'coeur' , 'carreau' , 'trefle' ][ self . Couleur - 1 ] class PaquetDeCarte : def __init__ ( self ): self . contenu = [] \"\"\"Remplit le paquet de cartes\"\"\" def remplir ( self ): self . contenu = [ Carte ( couleur , valeur ) for couleur in range ( 1 , 5 ) for valeur in range ( 1 , 14 )] #(2) \"\"\"Renvoie la Carte qui se trouve \u00e0 la position donnee\"\"\" def getCarteAt ( self , pos ): assert 0 <= pos < 52 , \"Le num\u00e9ro de la carte doit \u00eatre entre 0 et 51\" if 0 <= pos < 52 : return self . contenu [ pos ] Ce sont les instructions assert permettant de v\u00e9rifier que la couleur est entre 1 et 4 inclus et la valeur entre 1 et 13 inclus. On utilise une d\u00e9finition de liste par compr\u00e9hension pour parcourir les couleurs et valeurs possibles. Un jeu de cartes contient 52 cartes, la position d'une carte est entre 0 et 51 inclus. Attention Le sujet demande d'ajouter des instructions assert dans la m\u00e9thode getCarteAt mais cette m\u00e9thode teste d\u00e9j\u00e0 que le num\u00e9ro de la carte est entre les limites impos\u00e9s. Le assert pourrait v\u00e9rifier ici que pos est bien une variable de type int . Les docstring devraient \u00eatre plac\u00e9es juste apr\u00e8s la ligne def de d\u00e9finition des m\u00e9thodes et pas avant. Il serait pertinent d'utiliser un dictionnaire afin d'associer valeur et nom de d'une carte : {1 : 'As', 2:'2', ...., 12: 'Dame',13 : 'Roi'}","title":"2022 S05"},{"location":"backup/2022-S05/#corrige-sujet-05-annee-2022","text":"Sujet 05 - 20222","title":"Corrig\u00e9 sujet 05 - Ann\u00e9e : 2022"},{"location":"backup/2022-S05/#exercice-1","text":"Bug La fonction \u00e0 \u00e9crire s'appelle RechercheMinMax dans l'\u00e9nonc\u00e9 (avec le R majusucule) mais devient rechercheMinMax avec un r miniscule dans les appels. 1 2 3 4 5 6 7 8 def RechercheMinMax ( tab ): if tab == []: return { 'min' : None , 'max' : None } mini , maxi = tab [ 0 ], tab [ 0 ] for elt in tab : if elt < mini : mini = elt if elt > maxi : maxi = elt return { 'min' : mini , 'max' : maxi } Commentaires Encore une recherche classique de minimum et de maximum, le r\u00e9sultat est renvoy\u00e9 sous la forme d'un dictionnaire.","title":"Exercice 1"},{"location":"backup/2022-S05/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 class Carte : \"\"\"Initialise Couleur (entre 1 a 4), et Valeur (entre 1 a 13)\"\"\" def __init__ ( self , c , v ): assert 1 <= c <= 4 , \"La couleur est entre 1 et 4\" assert 1 <= v <= 13 , \"La valeur est entre 1 et 13\" #(1) self . Couleur = c self . Valeur = v \"\"\"Renvoie le nom de la Carte As, 2, ... 10, Valet, Dame, Roi\"\"\" def getNom ( self ): if ( self . Valeur > 1 and self . Valeur < 11 ): return str ( self . Valeur ) elif self . Valeur == 11 : return \"Valet\" elif self . Valeur == 12 : return \"Dame\" elif self . Valeur == 13 : return \"Roi\" else : return \"As\" \"\"\"Renvoie la couleur de la Carte (parmi pique, coeur, carreau, trefle\"\"\" def getCouleur ( self ): return [ 'pique' , 'coeur' , 'carreau' , 'trefle' ][ self . Couleur - 1 ] class PaquetDeCarte : def __init__ ( self ): self . contenu = [] \"\"\"Remplit le paquet de cartes\"\"\" def remplir ( self ): self . contenu = [ Carte ( couleur , valeur ) for couleur in range ( 1 , 5 ) for valeur in range ( 1 , 14 )] #(2) \"\"\"Renvoie la Carte qui se trouve \u00e0 la position donnee\"\"\" def getCarteAt ( self , pos ): assert 0 <= pos < 52 , \"Le num\u00e9ro de la carte doit \u00eatre entre 0 et 51\" if 0 <= pos < 52 : return self . contenu [ pos ] Ce sont les instructions assert permettant de v\u00e9rifier que la couleur est entre 1 et 4 inclus et la valeur entre 1 et 13 inclus. On utilise une d\u00e9finition de liste par compr\u00e9hension pour parcourir les couleurs et valeurs possibles. Un jeu de cartes contient 52 cartes, la position d'une carte est entre 0 et 51 inclus. Attention Le sujet demande d'ajouter des instructions assert dans la m\u00e9thode getCarteAt mais cette m\u00e9thode teste d\u00e9j\u00e0 que le num\u00e9ro de la carte est entre les limites impos\u00e9s. Le assert pourrait v\u00e9rifier ici que pos est bien une variable de type int . Les docstring devraient \u00eatre plac\u00e9es juste apr\u00e8s la ligne def de d\u00e9finition des m\u00e9thodes et pas avant. Il serait pertinent d'utiliser un dictionnaire afin d'associer valeur et nom de d'une carte : {1 : 'As', 2:'2', ...., 12: 'Dame',13 : 'Roi'}","title":"Exercice 2"},{"location":"backup/2022-S06/","text":"Corrig\u00e9 sujet 06 - Ann\u00e9e : 2022 Sujet 06 - 20222 Exercice 1 1 2 3 4 5 6 7 def maxi ( tab ): if tab == []: return None , None indice_maxi , maxi = 0 , tab [ 0 ] for indice in range ( 1 , len ( tab )): if tab [ indice ] > maxi : indice_maxi , maxi = indice , tab [ indice ] return maxi , indice_maxi Commentaires Rien n'est indiqu\u00e9 pour la liste vide, on a choisit de renvoyer le couple (None,None) dans ce cas Un parcours par indice est n\u00e9cessaire puisqu'on a besoin de la position du maximum. Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 def recherche ( gene , seq_adn ): n = len ( seq_adn ) g = len ( gene ) i = 0 #(1) trouve = False while i < n - g and trouve == False : #(2) j = 0 while j < g and gene [ j ] == seq_adn [ i + j ]: j += 1 #(3) if j == g : trouve = True i += 1 #(4) return trouve print ( recherche ( \"AATC\" , \"GTACAAATCTTGCC\" )) print ( recherche ( \"AGTC\" , \"GTACAAATCTTGCC\" )) C'est l'indice i de parcours de la cha\u00eene, initialis\u00e9 \u00e0 0 La recherche continue tant que i est inf\u00e9rieure \u00e0 la longueur de la chaine ( n ) - la longueur du motif ( g ) et que la motif n'a pas \u00e9t\u00e9 trouv\u00e9 On a une correspondance, j est l'indice de parcours du motif, on continue \u00e0 chercher en avan\u00e7ant dans le motif j=j+1 . On passe \u00e0 l'indice suivant de la cha\u00eene. Attention La recherche textuelle n'est pas au programme de l'\u00e9preuve de Bac. Le double parcours avec un indice parcourant la cha\u00eene et un autre le motif pr\u00e9sente sans doute une difficult\u00e9. Au lieu de trouve == False (ligne 6), on peut \u00e9crire not trouve qui est sans doute plus parlant.","title":"2022 S06"},{"location":"backup/2022-S06/#corrige-sujet-06-annee-2022","text":"Sujet 06 - 20222","title":"Corrig\u00e9 sujet 06 - Ann\u00e9e : 2022"},{"location":"backup/2022-S06/#exercice-1","text":"1 2 3 4 5 6 7 def maxi ( tab ): if tab == []: return None , None indice_maxi , maxi = 0 , tab [ 0 ] for indice in range ( 1 , len ( tab )): if tab [ indice ] > maxi : indice_maxi , maxi = indice , tab [ indice ] return maxi , indice_maxi Commentaires Rien n'est indiqu\u00e9 pour la liste vide, on a choisit de renvoyer le couple (None,None) dans ce cas Un parcours par indice est n\u00e9cessaire puisqu'on a besoin de la position du maximum.","title":"Exercice 1"},{"location":"backup/2022-S06/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 def recherche ( gene , seq_adn ): n = len ( seq_adn ) g = len ( gene ) i = 0 #(1) trouve = False while i < n - g and trouve == False : #(2) j = 0 while j < g and gene [ j ] == seq_adn [ i + j ]: j += 1 #(3) if j == g : trouve = True i += 1 #(4) return trouve print ( recherche ( \"AATC\" , \"GTACAAATCTTGCC\" )) print ( recherche ( \"AGTC\" , \"GTACAAATCTTGCC\" )) C'est l'indice i de parcours de la cha\u00eene, initialis\u00e9 \u00e0 0 La recherche continue tant que i est inf\u00e9rieure \u00e0 la longueur de la chaine ( n ) - la longueur du motif ( g ) et que la motif n'a pas \u00e9t\u00e9 trouv\u00e9 On a une correspondance, j est l'indice de parcours du motif, on continue \u00e0 chercher en avan\u00e7ant dans le motif j=j+1 . On passe \u00e0 l'indice suivant de la cha\u00eene. Attention La recherche textuelle n'est pas au programme de l'\u00e9preuve de Bac. Le double parcours avec un indice parcourant la cha\u00eene et un autre le motif pr\u00e9sente sans doute une difficult\u00e9. Au lieu de trouve == False (ligne 6), on peut \u00e9crire not trouve qui est sans doute plus parlant.","title":"Exercice 2"},{"location":"backup/2022-S07/","text":"Corrig\u00e9 sujet 07 - Ann\u00e9e : 2022 Sujet 07 - 20222 Exercice 1 1 2 3 4 5 6 7 8 def conv_bin ( n ): liste_bit = [ n % 2 ] n = n // 2 while n != 0 : liste_bit . append ( n % 2 ) n = n // 2 liste_bit . reverse () return liste_bit , len ( liste_bit ) Commentaires L'exemple de l'\u00e9nonc\u00e9 est mal choisi, en effet l'\u00e9criture binaire de 9 : \\(9_{10}=1001_2\\) \u00e9tant un palindrome (identique \u00e0 l'envers), cet exemple ne permet pas de d\u00e9tecter un \u00e9ventuel oubli de l'utilisation de reverse . Dans la correction, l'initialisation liste_bit=[n%2] permet de traiter le cas de 0. Exercice 2 1 2 3 4 5 6 7 8 9 def tri_bulles ( T ): n = len ( T ) for i in range ( len ( T ) - 1 , 0 , - 1 ): #(1) for j in range ( i ): if T [ j ] > T [ j + 1 ]: #(2) temp = T [ j ] #(3) T [ j ] = T [ j + 1 ] T [ j + 1 ] = temp return T On parcourt la liste \u00e0 l'envers \u00e0 l'aide de l'indice i (le dernier \u00e9l\u00e9ment de T a pour indice len(T)-1 ) On teste si deux \u00e9l\u00e9ments cons\u00e9cutifs ne sont pas dans le bon ordre Si oui, alors on les \u00e9change Attention Cet exercice demande de coder le tri \u00e0 bulles qui n'est pourtant pas au programme. Son principe est de faire remonter les plus petits \u00e9l\u00e9ments de la liste vers le d\u00e9but en les \u00e9changeant avec leur voisins. Les lignes 6,7 et 8 permettant d'\u00e9changer T[j] et T[j+1] en utilisant la variable temporaire temp , on pourrait \u00e9crire plus simplement : T[j],T[j+1]=T[j+1],T[j] Le return T peut laisser penser qu'on veut r\u00e9cup\u00e9rer la liste tri\u00e9e, alors que T est modifi\u00e9e et tri\u00e9e par la fonction puisque mutable.","title":"2022 S07"},{"location":"backup/2022-S07/#corrige-sujet-07-annee-2022","text":"Sujet 07 - 20222","title":"Corrig\u00e9 sujet 07 - Ann\u00e9e : 2022"},{"location":"backup/2022-S07/#exercice-1","text":"1 2 3 4 5 6 7 8 def conv_bin ( n ): liste_bit = [ n % 2 ] n = n // 2 while n != 0 : liste_bit . append ( n % 2 ) n = n // 2 liste_bit . reverse () return liste_bit , len ( liste_bit ) Commentaires L'exemple de l'\u00e9nonc\u00e9 est mal choisi, en effet l'\u00e9criture binaire de 9 : \\(9_{10}=1001_2\\) \u00e9tant un palindrome (identique \u00e0 l'envers), cet exemple ne permet pas de d\u00e9tecter un \u00e9ventuel oubli de l'utilisation de reverse . Dans la correction, l'initialisation liste_bit=[n%2] permet de traiter le cas de 0.","title":"Exercice 1"},{"location":"backup/2022-S07/#exercice-2","text":"1 2 3 4 5 6 7 8 9 def tri_bulles ( T ): n = len ( T ) for i in range ( len ( T ) - 1 , 0 , - 1 ): #(1) for j in range ( i ): if T [ j ] > T [ j + 1 ]: #(2) temp = T [ j ] #(3) T [ j ] = T [ j + 1 ] T [ j + 1 ] = temp return T On parcourt la liste \u00e0 l'envers \u00e0 l'aide de l'indice i (le dernier \u00e9l\u00e9ment de T a pour indice len(T)-1 ) On teste si deux \u00e9l\u00e9ments cons\u00e9cutifs ne sont pas dans le bon ordre Si oui, alors on les \u00e9change Attention Cet exercice demande de coder le tri \u00e0 bulles qui n'est pourtant pas au programme. Son principe est de faire remonter les plus petits \u00e9l\u00e9ments de la liste vers le d\u00e9but en les \u00e9changeant avec leur voisins. Les lignes 6,7 et 8 permettant d'\u00e9changer T[j] et T[j+1] en utilisant la variable temporaire temp , on pourrait \u00e9crire plus simplement : T[j],T[j+1]=T[j+1],T[j] Le return T peut laisser penser qu'on veut r\u00e9cup\u00e9rer la liste tri\u00e9e, alors que T est modifi\u00e9e et tri\u00e9e par la fonction puisque mutable.","title":"Exercice 2"},{"location":"backup/2022-S08/","text":"Corrig\u00e9 sujet 08 - Ann\u00e9e : 2022 Sujet 08 - 20222 Exercice 1 1 2 3 4 5 def recherche ( elt , tab ): for i in range ( len ( tab )): if tab [ i ] == elt : return i return - 1 Commentaires Exercice classique de recherche dans une liste, un parcours par les indices s'impose puisqu'on renvoie la position de l'\u00e9l\u00e9ment dans la liste. Exercice 2 1 2 3 4 5 6 7 8 9 def insere ( a , tab ): l = list ( tab ) #l contient les m\u00eames \u00e9l\u00e9ments que tab l . append ( a ) i = len ( tab ) - 1 #(1) while a < l [ i ] and i >= 0 : #(2) l [ i + 1 ] = l [ i ] #(3) l [ i ] = a i = i - 1 #(4) return l C'est l'indice auquel se trouve l'\u00e9l\u00e9ment pr\u00e9c\u00e9dant celui qui a \u00e9t\u00e9 ins\u00e9r\u00e9. Au d\u00e9but on ins\u00e8re \u00e0 la fin (en position len(tab) ) donc celui qui pr\u00e9c\u00e8de a l'indice len(tab)-1 . On \u00e9change a avec le pr\u00e9c\u00e9dent tant qu'il est inf\u00e9rieur et que le d\u00e9but de liste n'est pas atteint. Cette ligne et la suivante permettent d'effectuer l'\u00e9change. D\u00e9cr\u00e9mentation de la position \u00e0 tester. Attention Pour compl\u00e9ter le code, il faut comprendre l'algorithme mis en oeuvre pour ins\u00e9rer au bon emplacement : Ajouter \u00e0 la fin Remonter l'\u00e9l\u00e9ment en l'\u00e9changeant avec son voisin de gauche tant qu'il est inf\u00e9rieur \u00e0 ce dernier La ligne 2 a pour but de faire une copie du tableau tab afin de ne pas le modifier. On aurait pu utiliser copy .","title":"2022 S08"},{"location":"backup/2022-S08/#corrige-sujet-08-annee-2022","text":"Sujet 08 - 20222","title":"Corrig\u00e9 sujet 08 - Ann\u00e9e : 2022"},{"location":"backup/2022-S08/#exercice-1","text":"1 2 3 4 5 def recherche ( elt , tab ): for i in range ( len ( tab )): if tab [ i ] == elt : return i return - 1 Commentaires Exercice classique de recherche dans une liste, un parcours par les indices s'impose puisqu'on renvoie la position de l'\u00e9l\u00e9ment dans la liste.","title":"Exercice 1"},{"location":"backup/2022-S08/#exercice-2","text":"1 2 3 4 5 6 7 8 9 def insere ( a , tab ): l = list ( tab ) #l contient les m\u00eames \u00e9l\u00e9ments que tab l . append ( a ) i = len ( tab ) - 1 #(1) while a < l [ i ] and i >= 0 : #(2) l [ i + 1 ] = l [ i ] #(3) l [ i ] = a i = i - 1 #(4) return l C'est l'indice auquel se trouve l'\u00e9l\u00e9ment pr\u00e9c\u00e9dant celui qui a \u00e9t\u00e9 ins\u00e9r\u00e9. Au d\u00e9but on ins\u00e8re \u00e0 la fin (en position len(tab) ) donc celui qui pr\u00e9c\u00e8de a l'indice len(tab)-1 . On \u00e9change a avec le pr\u00e9c\u00e9dent tant qu'il est inf\u00e9rieur et que le d\u00e9but de liste n'est pas atteint. Cette ligne et la suivante permettent d'effectuer l'\u00e9change. D\u00e9cr\u00e9mentation de la position \u00e0 tester. Attention Pour compl\u00e9ter le code, il faut comprendre l'algorithme mis en oeuvre pour ins\u00e9rer au bon emplacement : Ajouter \u00e0 la fin Remonter l'\u00e9l\u00e9ment en l'\u00e9changeant avec son voisin de gauche tant qu'il est inf\u00e9rieur \u00e0 ce dernier La ligne 2 a pour but de faire une copie du tableau tab afin de ne pas le modifier. On aurait pu utiliser copy .","title":"Exercice 2"},{"location":"backup/2022-S09/","text":"Corrig\u00e9 sujet 09 - Ann\u00e9e : 2022 Sujet 09 - 20222 Exercice 1 1 2 3 4 5 6 7 8 9 10 11 def calcul ( k ): resultat = [ k ] while k != 1 : if k % 2 == 0 : k = k // 2 else : k = 3 * k + 1 resultat . append ( k ) return resultat print ( calcul ( 7 )) Commentaires Le sujet avantage les \u00e9l\u00e8ves ayant suivi l'enseignement de sp\u00e9cialit\u00e9s math\u00e9matiques. Les suites d\u00e9finies par r\u00e9currence comme celle de l'\u00e9nonc\u00e9 y sont vues d\u00e8s la classe de premi\u00e8re. Le test permettant de savoir si un entier 2 est pair s'\u00e9crit n%2 == 0 , c'est \u00e0 dire qu'on teste qu'en divisant par 2 il reste 0. Attention \u00e0 la ligne 5 \u00e0 bien utiliser la division euclidienne \\\\ et pas la division d\u00e9cimale \\ (sinon le r\u00e9sultat obtenu serait alors un flottant). Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 dico = { \"A\" : 1 , \"B\" : 2 , \"C\" : 3 , \"D\" : 4 , \"E\" : 5 , \"F\" : 6 , \"G\" : 7 , \\ \"H\" : 8 , \"I\" : 9 , \"J\" : 10 , \"K\" : 11 , \"L\" : 12 , \"M\" : 13 , \\ \"N\" : 14 , \"O\" : 15 , \"P\" : 16 , \"Q\" : 17 , \"R\" : 18 , \"S\" : 19 , \\ \"T\" : 20 , \"U\" : 21 , \"V\" : 22 , \"W\" : 23 , \"X\" : 24 , \"Y\" : 25 , \"Z\" : 26 } def est_parfait ( mot ) : #mot est une cha\u00eene de caract\u00e8res (en lettres majuscules) code_c = \"\" code_a = 0 #(1) for c in mot : code_c = code_c + str ( dico [ c ]) #(2) code_a = code_a + dico [ c ] #(3) code_c = int ( code_c ) if code_c % code_a == 0 : #(4) mot_est_parfait = True else : mot_est_parfait = False return [ code_a , code_c , mot_est_parfait ] Bien comprendre que le code_a est un entier (addition des entiers), tandis que code_c est une cha\u00eene de caract\u00e8res (concat\u00e9nation). Les valeurs du dictionnaires sont des entiers pour concat\u00e9ner avec la chaine code_c il faut convertir en str On addition des entiers, pas de conversion n\u00e9cessaire Teste si le code additionn\u00e9 divise le code concat\u00e9n\u00e9. Attention Les lignes 14,15,16, et 17 se r\u00e9sument \u00e0 mot_est_parfait = (code_c%code_a==0) M\u00eame si cela est autoris\u00e9 en Python, le changement de type d'une variable tel que celui effectu\u00e9 ligne 13 (o\u00f9 int_c qui \u00e9tait une cha\u00eene de caract\u00e8res devient un entier) est largement consid\u00e9r\u00e9 comme une mauvaise pratique de programmation. On aurait pu se passer du dictionnaire en utilisant les fonctions ord et chr .","title":"2022 S09"},{"location":"backup/2022-S09/#corrige-sujet-09-annee-2022","text":"Sujet 09 - 20222","title":"Corrig\u00e9 sujet 09 - Ann\u00e9e : 2022"},{"location":"backup/2022-S09/#exercice-1","text":"1 2 3 4 5 6 7 8 9 10 11 def calcul ( k ): resultat = [ k ] while k != 1 : if k % 2 == 0 : k = k // 2 else : k = 3 * k + 1 resultat . append ( k ) return resultat print ( calcul ( 7 )) Commentaires Le sujet avantage les \u00e9l\u00e8ves ayant suivi l'enseignement de sp\u00e9cialit\u00e9s math\u00e9matiques. Les suites d\u00e9finies par r\u00e9currence comme celle de l'\u00e9nonc\u00e9 y sont vues d\u00e8s la classe de premi\u00e8re. Le test permettant de savoir si un entier 2 est pair s'\u00e9crit n%2 == 0 , c'est \u00e0 dire qu'on teste qu'en divisant par 2 il reste 0. Attention \u00e0 la ligne 5 \u00e0 bien utiliser la division euclidienne \\\\ et pas la division d\u00e9cimale \\ (sinon le r\u00e9sultat obtenu serait alors un flottant).","title":"Exercice 1"},{"location":"backup/2022-S09/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 dico = { \"A\" : 1 , \"B\" : 2 , \"C\" : 3 , \"D\" : 4 , \"E\" : 5 , \"F\" : 6 , \"G\" : 7 , \\ \"H\" : 8 , \"I\" : 9 , \"J\" : 10 , \"K\" : 11 , \"L\" : 12 , \"M\" : 13 , \\ \"N\" : 14 , \"O\" : 15 , \"P\" : 16 , \"Q\" : 17 , \"R\" : 18 , \"S\" : 19 , \\ \"T\" : 20 , \"U\" : 21 , \"V\" : 22 , \"W\" : 23 , \"X\" : 24 , \"Y\" : 25 , \"Z\" : 26 } def est_parfait ( mot ) : #mot est une cha\u00eene de caract\u00e8res (en lettres majuscules) code_c = \"\" code_a = 0 #(1) for c in mot : code_c = code_c + str ( dico [ c ]) #(2) code_a = code_a + dico [ c ] #(3) code_c = int ( code_c ) if code_c % code_a == 0 : #(4) mot_est_parfait = True else : mot_est_parfait = False return [ code_a , code_c , mot_est_parfait ] Bien comprendre que le code_a est un entier (addition des entiers), tandis que code_c est une cha\u00eene de caract\u00e8res (concat\u00e9nation). Les valeurs du dictionnaires sont des entiers pour concat\u00e9ner avec la chaine code_c il faut convertir en str On addition des entiers, pas de conversion n\u00e9cessaire Teste si le code additionn\u00e9 divise le code concat\u00e9n\u00e9. Attention Les lignes 14,15,16, et 17 se r\u00e9sument \u00e0 mot_est_parfait = (code_c%code_a==0) M\u00eame si cela est autoris\u00e9 en Python, le changement de type d'une variable tel que celui effectu\u00e9 ligne 13 (o\u00f9 int_c qui \u00e9tait une cha\u00eene de caract\u00e8res devient un entier) est largement consid\u00e9r\u00e9 comme une mauvaise pratique de programmation. On aurait pu se passer du dictionnaire en utilisant les fonctions ord et chr .","title":"Exercice 2"},{"location":"backup/2022-S10/","text":"Corrig\u00e9 sujet 10 - Ann\u00e9e : 2022 Sujet 10 - 20222 Exercice 1 1 2 3 4 5 6 7 8 def occurrence_lettres ( phrase ): occ = {} for caractere in phrase : if caractere in occ : occ [ caractere ] += 1 else : occ [ caractere ] = 1 return occ Commentaire Bon exercice pour revoir l'utilisation des dictionnaires. Le terme occurrence est utilis\u00e9 avec le sens habituellement attribu\u00e9 \u00e0 nombre d'occurrences Dans le nom de la fonction dans l'\u00e9nonc\u00e9, occurence s'\u00e9crit avec un seul r , ce serait deux sans faute d'orthographe. Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 def fusion ( L1 , L2 ): n1 = len ( L1 ) n2 = len ( L2 ) L12 = [ 0 ] * ( n1 + n2 ) i1 = 0 i2 = 0 i = 0 while i1 < n1 and i2 < n2 : #(1) if L1 [ i1 ] < L2 [ i2 ]: L12 [ i ] = L1 [ i1 ] #(2) i1 = i1 + 1 else : L12 [ i ] = L2 [ i2 ] i2 = i2 + 1 i += 1 while i1 < n1 : L12 [ i ] = L1 [ i1 ] #(3) i1 = i1 + 1 i = i + 1 while i2 < n2 : L12 [ i ] = L2 [ i2 ] i2 = i2 + 1 i = i + 1 return L12 i1 est l'indice de parcours de L1 (de longueur n1 ) i2 est l'indice de parcours de L2 (de longueur n2 ) On se trouve dans le cas o\u00f9 le plus petit \u00e9l\u00e9ment se trouve dans L1 , c'est donc lui qui est ajout\u00e9 \u00e0 liste fusionn\u00e9e L12 . On a atteint la fin de l'une des listes, il reste donc \u00e0 ajouter les \u00e9l\u00e9ments restants de l'autre liste.","title":"2022 S10"},{"location":"backup/2022-S10/#corrige-sujet-10-annee-2022","text":"Sujet 10 - 20222","title":"Corrig\u00e9 sujet 10 - Ann\u00e9e : 2022"},{"location":"backup/2022-S10/#exercice-1","text":"1 2 3 4 5 6 7 8 def occurrence_lettres ( phrase ): occ = {} for caractere in phrase : if caractere in occ : occ [ caractere ] += 1 else : occ [ caractere ] = 1 return occ Commentaire Bon exercice pour revoir l'utilisation des dictionnaires. Le terme occurrence est utilis\u00e9 avec le sens habituellement attribu\u00e9 \u00e0 nombre d'occurrences Dans le nom de la fonction dans l'\u00e9nonc\u00e9, occurence s'\u00e9crit avec un seul r , ce serait deux sans faute d'orthographe.","title":"Exercice 1"},{"location":"backup/2022-S10/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 def fusion ( L1 , L2 ): n1 = len ( L1 ) n2 = len ( L2 ) L12 = [ 0 ] * ( n1 + n2 ) i1 = 0 i2 = 0 i = 0 while i1 < n1 and i2 < n2 : #(1) if L1 [ i1 ] < L2 [ i2 ]: L12 [ i ] = L1 [ i1 ] #(2) i1 = i1 + 1 else : L12 [ i ] = L2 [ i2 ] i2 = i2 + 1 i += 1 while i1 < n1 : L12 [ i ] = L1 [ i1 ] #(3) i1 = i1 + 1 i = i + 1 while i2 < n2 : L12 [ i ] = L2 [ i2 ] i2 = i2 + 1 i = i + 1 return L12 i1 est l'indice de parcours de L1 (de longueur n1 ) i2 est l'indice de parcours de L2 (de longueur n2 ) On se trouve dans le cas o\u00f9 le plus petit \u00e9l\u00e9ment se trouve dans L1 , c'est donc lui qui est ajout\u00e9 \u00e0 liste fusionn\u00e9e L12 . On a atteint la fin de l'une des listes, il reste donc \u00e0 ajouter les \u00e9l\u00e9ments restants de l'autre liste.","title":"Exercice 2"},{"location":"backup/2022-S11/","text":"Corrig\u00e9 sujet 11 - Ann\u00e9e : 2022 Sujet 11 - 20222 Exercice 1 1 2 3 4 5 6 7 8 9 10 11 12 def recherche ( tab , elt ): ind_debut = 0 ind_fin = len ( tab ) - 1 while ind_fin > ind_debut : ind_milieu = ( ind_fin + ind_debut ) // 2 if tab [ ind_milieu ] == elt : return ind_milieu elif tab [ ind_milieu ] > elt : ind_fin = ind_milieu - 1 else : ind_debut = ind_milieu + 1 return - 1 Commentaire Bien qu'au programme (m\u00e9thode diviser pour r\u00e9gner), cet exercice est bien plus difficile que ceux propos\u00e9s habituellement en exercice 1 (recherche simple, recherche de maximum, calcul de moyennes, ... ). En cas de difficult\u00e9s, revenir au chapitre de premi\u00e8re sur la recherche par dichotomie Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 ALPHABET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' def position_alphabet ( lettre ): return ALPHABET . find ( lettre ) def cesar ( message , decalage ): resultat = '' for lettre in message : #(1) if lettre in ALPHABET : indice = ( position_alphabet ( lettre ) + decalage ) % 26 #(2) resultat = resultat + ALPHABET [ indice ] else : resultat = resultat + lettre #(3) return resultat La variable de parcours du message s'appelle lettre comme indiqu\u00e9 \u00e0 la ligne suivante ! On ajoute le decalage \u00e0 la position de la lettre le %26 sert ensuite \u00e0 s'assurer qu'on retombe entre 0 et 25. Si la lettre n'est pas dans l'alphabet, on la laisse telle quelle Attention La variable lettre de parcours du message peut contenir justement autre chose qu'une lettre (ponctuation, espace, ...) La m\u00e9thode find de recherche de l'indice de la lettre dans l'alphabet pourrait s'\u00e9crire sans utiliser la m\u00e9thode find (par exemple avec ord )","title":"2022 S11"},{"location":"backup/2022-S11/#corrige-sujet-11-annee-2022","text":"Sujet 11 - 20222","title":"Corrig\u00e9 sujet 11 - Ann\u00e9e : 2022"},{"location":"backup/2022-S11/#exercice-1","text":"1 2 3 4 5 6 7 8 9 10 11 12 def recherche ( tab , elt ): ind_debut = 0 ind_fin = len ( tab ) - 1 while ind_fin > ind_debut : ind_milieu = ( ind_fin + ind_debut ) // 2 if tab [ ind_milieu ] == elt : return ind_milieu elif tab [ ind_milieu ] > elt : ind_fin = ind_milieu - 1 else : ind_debut = ind_milieu + 1 return - 1 Commentaire Bien qu'au programme (m\u00e9thode diviser pour r\u00e9gner), cet exercice est bien plus difficile que ceux propos\u00e9s habituellement en exercice 1 (recherche simple, recherche de maximum, calcul de moyennes, ... ). En cas de difficult\u00e9s, revenir au chapitre de premi\u00e8re sur la recherche par dichotomie","title":"Exercice 1"},{"location":"backup/2022-S11/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 ALPHABET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' def position_alphabet ( lettre ): return ALPHABET . find ( lettre ) def cesar ( message , decalage ): resultat = '' for lettre in message : #(1) if lettre in ALPHABET : indice = ( position_alphabet ( lettre ) + decalage ) % 26 #(2) resultat = resultat + ALPHABET [ indice ] else : resultat = resultat + lettre #(3) return resultat La variable de parcours du message s'appelle lettre comme indiqu\u00e9 \u00e0 la ligne suivante ! On ajoute le decalage \u00e0 la position de la lettre le %26 sert ensuite \u00e0 s'assurer qu'on retombe entre 0 et 25. Si la lettre n'est pas dans l'alphabet, on la laisse telle quelle Attention La variable lettre de parcours du message peut contenir justement autre chose qu'une lettre (ponctuation, espace, ...) La m\u00e9thode find de recherche de l'indice de la lettre dans l'alphabet pourrait s'\u00e9crire sans utiliser la m\u00e9thode find (par exemple avec ord )","title":"Exercice 2"},{"location":"backup/2022-S12/","text":"Corrig\u00e9 sujet 12 - Ann\u00e9e : 2022 Sujet 12 - 20222 Exercice 1 1 2 3 4 5 6 def moyenne ( tab ): assert tab != [], \"erreur\" somme = 0 for valeur in tab : somme = somme + valeur return somme / len ( tab ) Commentaire Le traitement demand\u00e9 dans le cas d'un tableau vide n'est pas explicite, on ne sait pas s'il faut juste faire un print(erreur) ou plut\u00f4t utiliser un assert (comme dans cette correction) Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 def tri ( tab ): #i est le premier indice de la zone non triee, j le dernier indice. #Au debut, la zone non triee est le tableau entier. i = 0 j = len ( tab ) - 1 #(1) while i != j : if tab [ i ] == 0 : i = i + 1 #(2) else : valeur = tab [ j ] tab [ j ] = tab [ i ] #(3) tab [ i ] = valeur j = j - 1 #(4) return tab Le dernier \u00e9l\u00e9ment d'un tableau tab a pour indice len(tab)-1 Si l'\u00e9l\u00e9ment est un 0, on incr\u00e9mente le debut de la zone non tri\u00e9e d'indice i . La zone non tri\u00e9e diminue \"par la gauche\". Sinon, on \u00e9change cette valeur avec la fin de zone non tri\u00e9e (situ\u00e9e en indice j ). La zone non tri\u00e9e diminue \"par la droite\", on d\u00e9cr\u00e9mente donc sa fin d'indice j Attention Les lignes 10 \u00e0 12 qui permettent d'\u00e9changer tab[j] et tab[i] en utilisant la variable temporaire valeur peuvent \u00eatre simplifi\u00e9es en remarquant que tab[i] vaut forc\u00e9ment 1 dans cette branche du if .","title":"2022 S12"},{"location":"backup/2022-S12/#corrige-sujet-12-annee-2022","text":"Sujet 12 - 20222","title":"Corrig\u00e9 sujet 12 - Ann\u00e9e : 2022"},{"location":"backup/2022-S12/#exercice-1","text":"1 2 3 4 5 6 def moyenne ( tab ): assert tab != [], \"erreur\" somme = 0 for valeur in tab : somme = somme + valeur return somme / len ( tab ) Commentaire Le traitement demand\u00e9 dans le cas d'un tableau vide n'est pas explicite, on ne sait pas s'il faut juste faire un print(erreur) ou plut\u00f4t utiliser un assert (comme dans cette correction)","title":"Exercice 1"},{"location":"backup/2022-S12/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 def tri ( tab ): #i est le premier indice de la zone non triee, j le dernier indice. #Au debut, la zone non triee est le tableau entier. i = 0 j = len ( tab ) - 1 #(1) while i != j : if tab [ i ] == 0 : i = i + 1 #(2) else : valeur = tab [ j ] tab [ j ] = tab [ i ] #(3) tab [ i ] = valeur j = j - 1 #(4) return tab Le dernier \u00e9l\u00e9ment d'un tableau tab a pour indice len(tab)-1 Si l'\u00e9l\u00e9ment est un 0, on incr\u00e9mente le debut de la zone non tri\u00e9e d'indice i . La zone non tri\u00e9e diminue \"par la gauche\". Sinon, on \u00e9change cette valeur avec la fin de zone non tri\u00e9e (situ\u00e9e en indice j ). La zone non tri\u00e9e diminue \"par la droite\", on d\u00e9cr\u00e9mente donc sa fin d'indice j Attention Les lignes 10 \u00e0 12 qui permettent d'\u00e9changer tab[j] et tab[i] en utilisant la variable temporaire valeur peuvent \u00eatre simplifi\u00e9es en remarquant que tab[i] vaut forc\u00e9ment 1 dans cette branche du if .","title":"Exercice 2"},{"location":"backup/2022-S13/","text":"Corrig\u00e9 sujet 13 - Ann\u00e9e : 2022 Sujet 13 - 20222 Exercice 1 1 2 3 4 5 6 def rendu ( somme_a_rendre ): n1 = somme_a_rendre // 5 somme_a_rendre = somme_a_rendre % 5 n2 = somme_a_rendre // 2 n3 = somme_a_rendre % 2 return [ n1 , n2 , n3 ] Commentaire Bien qu'au programme de premi\u00e8re ( algorithme glouton ), cet exercice est bien plus difficile que ceux propos\u00e9s habituellement en exercice 1 (recherche simple, recherche de maximum, calcul de moyennes, ... ). La correction propos\u00e9e ici utilise les trois variables n1 , n2 et n3 propos\u00e9es dans l'\u00e9nonc\u00e9. Dans un cadre plus g\u00e9n\u00e9ral, une boucle travaillant sur une liste de pi\u00e8ces serait pr\u00e9f\u00e9rable. Voir par exemple la correction propos\u00e9e ici . Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 class Maillon : def __init__ ( self , v ) : self . valeur = v self . suivant = None class File : def __init__ ( self ) : self . dernier_file = None def enfile ( self , element ) : nouveau_maillon = Maillon ( element ) #(1) nouveau_maillon . suivant = self . dernier_file self . dernier_file = nouveau_maillon #(2) def est_vide ( self ) : return self . dernier_file == None def affiche ( self ) : maillon = self . dernier_file while maillon != None : #(3) print ( maillon . valeur ) maillon = maillon . suivant #(4) def defile ( self ) : if not self . est_vide () : if self . dernier_file . suivant == None : resultat = self . dernier_file . valeur self . dernier_file = None return resultat maillon = self . dernier_file #(5) while maillon . suivant . suivant != None : maillon = maillon . suivant resultat = maillon . suivant . valeur maillon . suivant = None return resultat return None Le constructeur de la classe Maillon prend en argument la valeur v (appel\u00e9e ici element ) Comme indiqu\u00e9 dans l'\u00e9nonc\u00e9, l'attribut dernier_file doit contenir le dernier maillon enfil\u00e9. La fin de file est atteinte lorsque le maillon vaut None Passage au maillon suivant On commence au dernier maillon en s'assurant avant que le maillon suivant n'est pas None Attention L'impl\u00e9mentation d'une file propos\u00e9e ici est probl\u00e9matique, pour d\u00e9filer, il faut partir de la fin (seul acc\u00e8s \u00e0 la file), la remonter en entier afin de d\u00e9filer le premier. Faire un sch\u00e9ma de l'impl\u00e9mentation propos\u00e9e peut aider \u00e0 la compr\u00e9hension du code donn\u00e9 dans l'\u00e9nonc\u00e9.","title":"2022 S13"},{"location":"backup/2022-S13/#corrige-sujet-13-annee-2022","text":"Sujet 13 - 20222","title":"Corrig\u00e9 sujet 13 - Ann\u00e9e : 2022"},{"location":"backup/2022-S13/#exercice-1","text":"1 2 3 4 5 6 def rendu ( somme_a_rendre ): n1 = somme_a_rendre // 5 somme_a_rendre = somme_a_rendre % 5 n2 = somme_a_rendre // 2 n3 = somme_a_rendre % 2 return [ n1 , n2 , n3 ] Commentaire Bien qu'au programme de premi\u00e8re ( algorithme glouton ), cet exercice est bien plus difficile que ceux propos\u00e9s habituellement en exercice 1 (recherche simple, recherche de maximum, calcul de moyennes, ... ). La correction propos\u00e9e ici utilise les trois variables n1 , n2 et n3 propos\u00e9es dans l'\u00e9nonc\u00e9. Dans un cadre plus g\u00e9n\u00e9ral, une boucle travaillant sur une liste de pi\u00e8ces serait pr\u00e9f\u00e9rable. Voir par exemple la correction propos\u00e9e ici .","title":"Exercice 1"},{"location":"backup/2022-S13/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 class Maillon : def __init__ ( self , v ) : self . valeur = v self . suivant = None class File : def __init__ ( self ) : self . dernier_file = None def enfile ( self , element ) : nouveau_maillon = Maillon ( element ) #(1) nouveau_maillon . suivant = self . dernier_file self . dernier_file = nouveau_maillon #(2) def est_vide ( self ) : return self . dernier_file == None def affiche ( self ) : maillon = self . dernier_file while maillon != None : #(3) print ( maillon . valeur ) maillon = maillon . suivant #(4) def defile ( self ) : if not self . est_vide () : if self . dernier_file . suivant == None : resultat = self . dernier_file . valeur self . dernier_file = None return resultat maillon = self . dernier_file #(5) while maillon . suivant . suivant != None : maillon = maillon . suivant resultat = maillon . suivant . valeur maillon . suivant = None return resultat return None Le constructeur de la classe Maillon prend en argument la valeur v (appel\u00e9e ici element ) Comme indiqu\u00e9 dans l'\u00e9nonc\u00e9, l'attribut dernier_file doit contenir le dernier maillon enfil\u00e9. La fin de file est atteinte lorsque le maillon vaut None Passage au maillon suivant On commence au dernier maillon en s'assurant avant que le maillon suivant n'est pas None Attention L'impl\u00e9mentation d'une file propos\u00e9e ici est probl\u00e9matique, pour d\u00e9filer, il faut partir de la fin (seul acc\u00e8s \u00e0 la file), la remonter en entier afin de d\u00e9filer le premier. Faire un sch\u00e9ma de l'impl\u00e9mentation propos\u00e9e peut aider \u00e0 la compr\u00e9hension du code donn\u00e9 dans l'\u00e9nonc\u00e9.","title":"Exercice 2"},{"location":"backup/2022-S14/","text":"Corrig\u00e9 sujet 14 - Ann\u00e9e : 2022 Sujet 14 - 20222 Exercice 1 1 2 3 4 5 def correspond ( mot , mot_a_trous ): for indice in range ( len ( mot )): if mot_a_trous [ indice ] != \"*\" and mot [ indice ] != mot_a_trous [ indice ]: return False return True Commentaire Le sujet ne pr\u00e9cise pas le comportement attendu si mot et mot_a_trous n'ont pas la m\u00eame longueur. Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 def est_cyclique ( plan ): ''' Prend en param\u00e8tre un dictionnaire `plan` correspondant \u00e0 un plan d'envoi de messages entre `N` personnes A, B, C, D, E, F ...(avec N <= 26). Renvoie True si le plan d'envoi de messages est cyclique et False sinon. ''' personne = 'A' N = len ( plan ) for i in range ( N - 1 ): #(1) if plan [ personne ] == 'A' : #(2) return False else : personne = plan [ personne ] #(3) return True Attention \u00e0 ne pas parcourir en totalit\u00e9 le dictionnaire (sinon on trouvera forcement un cycle). On s'arr\u00eate donc \u00e0 l'avant dernier. C'est le fait de retomber sur la personne de d\u00e9part (donc 'A' ) qui indique qu'on a trouv\u00e9 un cycle. Passage \u00e0 la personne suivante (revoir si besoin les dictionnaires)","title":"2022 S14"},{"location":"backup/2022-S14/#corrige-sujet-14-annee-2022","text":"Sujet 14 - 20222","title":"Corrig\u00e9 sujet 14 - Ann\u00e9e : 2022"},{"location":"backup/2022-S14/#exercice-1","text":"1 2 3 4 5 def correspond ( mot , mot_a_trous ): for indice in range ( len ( mot )): if mot_a_trous [ indice ] != \"*\" and mot [ indice ] != mot_a_trous [ indice ]: return False return True Commentaire Le sujet ne pr\u00e9cise pas le comportement attendu si mot et mot_a_trous n'ont pas la m\u00eame longueur.","title":"Exercice 1"},{"location":"backup/2022-S14/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 def est_cyclique ( plan ): ''' Prend en param\u00e8tre un dictionnaire `plan` correspondant \u00e0 un plan d'envoi de messages entre `N` personnes A, B, C, D, E, F ...(avec N <= 26). Renvoie True si le plan d'envoi de messages est cyclique et False sinon. ''' personne = 'A' N = len ( plan ) for i in range ( N - 1 ): #(1) if plan [ personne ] == 'A' : #(2) return False else : personne = plan [ personne ] #(3) return True Attention \u00e0 ne pas parcourir en totalit\u00e9 le dictionnaire (sinon on trouvera forcement un cycle). On s'arr\u00eate donc \u00e0 l'avant dernier. C'est le fait de retomber sur la personne de d\u00e9part (donc 'A' ) qui indique qu'on a trouv\u00e9 un cycle. Passage \u00e0 la personne suivante (revoir si besoin les dictionnaires)","title":"Exercice 2"},{"location":"backup/2022-S15/","text":"Corrig\u00e9 sujet 15 - Ann\u00e9e : 2022 Sujet 15 - 20222 Exercice 1 1 2 3 4 5 6 def nb_repetitions ( elt , tab ): nb_rep = 0 for x in tab : if x == elt : nb_rep += 1 return nb_rep Commentaire C'est un exercice classique de parcours d'un it\u00e9rable en comptant les occurrences d'apparition d'une valeur. Un parcours par \u00e9l\u00e9ment suffit, les indices des occurrences n'\u00e9tant pas utilis\u00e9es. Exercice 2 1 2 3 4 5 6 7 def binaire ( a ): bin_a = str ( a % 2 ) #(1) a = a // 2 while a != 0 : bin_a = str ( a % 2 ) + bin_a #(2) a = a // 2 #(3) return bin_a On rappelle que a%2 est le reste dans la division euclidienne de a par 2 et donc le premier chiffre (\u00e0 droite) de son \u00e9criture binaire. Ajout du nouveau chiffre (en le convertissant en cha\u00eene de caract\u00e8res) On rappelle que a//2 est le quotient dans la division euclidienne de a par 2. Attention L'illustration de l'algorithme propos\u00e9 dans l'\u00e9nonc\u00e9 laisse penser que la condition d'arr\u00eat de l'algorithme est a==1 .","title":"2022 S15"},{"location":"backup/2022-S15/#corrige-sujet-15-annee-2022","text":"Sujet 15 - 20222","title":"Corrig\u00e9 sujet 15 - Ann\u00e9e : 2022"},{"location":"backup/2022-S15/#exercice-1","text":"1 2 3 4 5 6 def nb_repetitions ( elt , tab ): nb_rep = 0 for x in tab : if x == elt : nb_rep += 1 return nb_rep Commentaire C'est un exercice classique de parcours d'un it\u00e9rable en comptant les occurrences d'apparition d'une valeur. Un parcours par \u00e9l\u00e9ment suffit, les indices des occurrences n'\u00e9tant pas utilis\u00e9es.","title":"Exercice 1"},{"location":"backup/2022-S15/#exercice-2","text":"1 2 3 4 5 6 7 def binaire ( a ): bin_a = str ( a % 2 ) #(1) a = a // 2 while a != 0 : bin_a = str ( a % 2 ) + bin_a #(2) a = a // 2 #(3) return bin_a On rappelle que a%2 est le reste dans la division euclidienne de a par 2 et donc le premier chiffre (\u00e0 droite) de son \u00e9criture binaire. Ajout du nouveau chiffre (en le convertissant en cha\u00eene de caract\u00e8res) On rappelle que a//2 est le quotient dans la division euclidienne de a par 2. Attention L'illustration de l'algorithme propos\u00e9 dans l'\u00e9nonc\u00e9 laisse penser que la condition d'arr\u00eat de l'algorithme est a==1 .","title":"Exercice 2"},{"location":"backup/2022-S16/","text":"Corrig\u00e9 sujet 16 - Ann\u00e9e : 2022 Sujet 16 - 20222 Exercice 1 1 2 3 4 5 6 def maxi ( tab ): indice_maximum , maximum = 0 , tab [ 0 ] for indice in range ( len ( tab )): if tab [ indice ] > maximum : indice_maximum , maximum = indice , tab [ indice ] return maximum , indice_maximum Commentaire L'\u00e9nonc\u00e9 n'indique pas le comportement attendu dans le cas de la liste vide. Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 def positif ( T ): T2 = list ( T ) #(1) T3 = [] while T2 != []: x = T2 . pop () if x >= 0 : #(2) T3 . append ( x ) T2 = [] while T3 != []: x = T3 . pop () T2 . append ( x ) print ( 'T = ' , T ) return T2 Copie ind\u00e9pendante de la liste de d\u00e9part avec la technique de l'\u00e9nonc\u00e9 : list . On d\u00e9pile en totalit\u00e9 T2 , les \u00e9l\u00e9ments positifs sont empil\u00e9s dans T3 . On d\u00e9pile T3 et on empile son contenu dans T2 , afin de les remettre dans l'ordre de d\u00e9part. Attention Bien comprendre que le sujet se limite \u00e0 l'interface habituelle d'une pile ( empile avec append , depile avec pop et est_vide avec ==[] ). La ligne 8 est inutile, T2 est vide puisqu'on a quitt\u00e9 la boucle.","title":"2022 S16"},{"location":"backup/2022-S16/#corrige-sujet-16-annee-2022","text":"Sujet 16 - 20222","title":"Corrig\u00e9 sujet 16 - Ann\u00e9e : 2022"},{"location":"backup/2022-S16/#exercice-1","text":"1 2 3 4 5 6 def maxi ( tab ): indice_maximum , maximum = 0 , tab [ 0 ] for indice in range ( len ( tab )): if tab [ indice ] > maximum : indice_maximum , maximum = indice , tab [ indice ] return maximum , indice_maximum Commentaire L'\u00e9nonc\u00e9 n'indique pas le comportement attendu dans le cas de la liste vide.","title":"Exercice 1"},{"location":"backup/2022-S16/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 def positif ( T ): T2 = list ( T ) #(1) T3 = [] while T2 != []: x = T2 . pop () if x >= 0 : #(2) T3 . append ( x ) T2 = [] while T3 != []: x = T3 . pop () T2 . append ( x ) print ( 'T = ' , T ) return T2 Copie ind\u00e9pendante de la liste de d\u00e9part avec la technique de l'\u00e9nonc\u00e9 : list . On d\u00e9pile en totalit\u00e9 T2 , les \u00e9l\u00e9ments positifs sont empil\u00e9s dans T3 . On d\u00e9pile T3 et on empile son contenu dans T2 , afin de les remettre dans l'ordre de d\u00e9part. Attention Bien comprendre que le sujet se limite \u00e0 l'interface habituelle d'une pile ( empile avec append , depile avec pop et est_vide avec ==[] ). La ligne 8 est inutile, T2 est vide puisqu'on a quitt\u00e9 la boucle.","title":"Exercice 2"},{"location":"backup/2022-S17/","text":"Corrig\u00e9 sujet 17 - Ann\u00e9e : 2022 Sujet 17 - 20222 Exercice 1 1 2 3 4 5 6 7 8 9 def nombre_de_mots ( phrase ): nb_espace = 0 for caractere in phrase : if caractere == \" \" : nb_espace += 1 if phrase [ - 1 ] == \".\" : return nb_espace + 1 else : return nb_espace Commentaire Il faut avoir remarqu\u00e9 que le nombre de mots est \u00e9gal: au nombre d'espace si la phrase se termine par \"!\" ou \"?\", au nombre d'espace plus un si la phrase se termine par un \".\". Les exemples de l'\u00e9nonc\u00e9 ne testent que la fin avec un point d'exclamation. Dans le corrig\u00e9, on a compt\u00e9 le nombre d'espace en effectuant un parcours de la phrase, on pouvait aussi utiliser la m\u00e9thode count des chaines de caract\u00e8res. Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 class Noeud : ''' Classe impl\u00e9mentant un noeud d'arbre binaire disposant de 3 attributs : - valeur : la valeur de l'\u00e9tiquette, - gauche : le sous-arbre gauche. - droit : le sous-arbre droit. ''' def __init__ ( self , v , g , d ): self . valeur = v self . gauche = g self . droite = d class ABR : ''' Classe impl\u00e9mentant une structure d'arbre binaire de recherche. ''' def __init__ ( self ): '''Cr\u00e9e un arbre binaire de recherche vide''' self . racine = None def est_vide ( self ): '''Renvoie True si l'ABR est vide et False sinon.''' return self . racine is None def parcours ( self , tab = []): ''' Renvoie la liste tab compl\u00e9t\u00e9e avec tous les \u00e9l\u00e9ments de l'ABR tri\u00e9s par ordre croissant. ''' if self . est_vide (): return tab else : self . racine . gauche . parcours ( tab ) tab . append ( self . racine . valeur ) #(1) self . racine . droite . parcours ( tab ) return tab def insere ( self , element ): '''Ins\u00e8re un \u00e9l\u00e9ment dans l'arbre binaire de recherche.''' if self . est_vide (): self . racine = Noeud ( element , ABR (), ABR ()) else : if element < self . racine . valeur : self . racine . gauche . insere ( element ) else : self . racine . droite . insere ( element ) def recherche ( self , element ): ''' Renvoie True si element est pr\u00e9sent dans l'arbre binaire et False sinon. ''' if self . est_vide (): return False #(2) else : if element < self . racine . valeur : return self . racine . gauche . recherche ( element ) #(3) elif element > self . racine . valeur : return self . racine . droite . recherche ( element ) else : return True On parcours \u00e0 gauche, on ajoute la valeur de la racine puis on parcourt \u00e0 droite. Si l'arbre est vide alors l'\u00e9l\u00e9ment ne s'y trouve pas ! Si l'arbre n'est pas vide, on compare avec la valeur de la racine. Si ce n'est pas la valeur cherch\u00e9e on recherche \u00e0 droite ou \u00e0 gauche suivant les cas. Attention Le code fourni utilise un objet mutable (une liste) comme param\u00e8tre par d\u00e9faut de la m\u00e9thode de parcours : def parcours ( self , tab = []): C'est une tr\u00e8s mauvaise pratique car source d'erreurs, en effet la variable tab \u00e9tant mutable elle est modifi\u00e9e par la fonction lors d'un premier appel et ne sera donc plus vide lors des appels suivants. Pour une solution \u00e0 ce probl\u00e8me, on pourra par exemple consulter ce site","title":"2022 S17"},{"location":"backup/2022-S17/#corrige-sujet-17-annee-2022","text":"Sujet 17 - 20222","title":"Corrig\u00e9 sujet 17 - Ann\u00e9e : 2022"},{"location":"backup/2022-S17/#exercice-1","text":"1 2 3 4 5 6 7 8 9 def nombre_de_mots ( phrase ): nb_espace = 0 for caractere in phrase : if caractere == \" \" : nb_espace += 1 if phrase [ - 1 ] == \".\" : return nb_espace + 1 else : return nb_espace Commentaire Il faut avoir remarqu\u00e9 que le nombre de mots est \u00e9gal: au nombre d'espace si la phrase se termine par \"!\" ou \"?\", au nombre d'espace plus un si la phrase se termine par un \".\". Les exemples de l'\u00e9nonc\u00e9 ne testent que la fin avec un point d'exclamation. Dans le corrig\u00e9, on a compt\u00e9 le nombre d'espace en effectuant un parcours de la phrase, on pouvait aussi utiliser la m\u00e9thode count des chaines de caract\u00e8res.","title":"Exercice 1"},{"location":"backup/2022-S17/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 class Noeud : ''' Classe impl\u00e9mentant un noeud d'arbre binaire disposant de 3 attributs : - valeur : la valeur de l'\u00e9tiquette, - gauche : le sous-arbre gauche. - droit : le sous-arbre droit. ''' def __init__ ( self , v , g , d ): self . valeur = v self . gauche = g self . droite = d class ABR : ''' Classe impl\u00e9mentant une structure d'arbre binaire de recherche. ''' def __init__ ( self ): '''Cr\u00e9e un arbre binaire de recherche vide''' self . racine = None def est_vide ( self ): '''Renvoie True si l'ABR est vide et False sinon.''' return self . racine is None def parcours ( self , tab = []): ''' Renvoie la liste tab compl\u00e9t\u00e9e avec tous les \u00e9l\u00e9ments de l'ABR tri\u00e9s par ordre croissant. ''' if self . est_vide (): return tab else : self . racine . gauche . parcours ( tab ) tab . append ( self . racine . valeur ) #(1) self . racine . droite . parcours ( tab ) return tab def insere ( self , element ): '''Ins\u00e8re un \u00e9l\u00e9ment dans l'arbre binaire de recherche.''' if self . est_vide (): self . racine = Noeud ( element , ABR (), ABR ()) else : if element < self . racine . valeur : self . racine . gauche . insere ( element ) else : self . racine . droite . insere ( element ) def recherche ( self , element ): ''' Renvoie True si element est pr\u00e9sent dans l'arbre binaire et False sinon. ''' if self . est_vide (): return False #(2) else : if element < self . racine . valeur : return self . racine . gauche . recherche ( element ) #(3) elif element > self . racine . valeur : return self . racine . droite . recherche ( element ) else : return True On parcours \u00e0 gauche, on ajoute la valeur de la racine puis on parcourt \u00e0 droite. Si l'arbre est vide alors l'\u00e9l\u00e9ment ne s'y trouve pas ! Si l'arbre n'est pas vide, on compare avec la valeur de la racine. Si ce n'est pas la valeur cherch\u00e9e on recherche \u00e0 droite ou \u00e0 gauche suivant les cas. Attention Le code fourni utilise un objet mutable (une liste) comme param\u00e8tre par d\u00e9faut de la m\u00e9thode de parcours : def parcours ( self , tab = []): C'est une tr\u00e8s mauvaise pratique car source d'erreurs, en effet la variable tab \u00e9tant mutable elle est modifi\u00e9e par la fonction lors d'un premier appel et ne sera donc plus vide lors des appels suivants. Pour une solution \u00e0 ce probl\u00e8me, on pourra par exemple consulter ce site","title":"Exercice 2"},{"location":"backup/2022-S18/","text":"Corrig\u00e9 sujet 18 - Ann\u00e9e : 2022 Sujet 18 - 20222 Exercice 1 1 2 3 4 5 6 def mini ( releve , date ): indice_mini , temp_mini = 0 , releve [ 0 ] for i in range ( len ( releve )): if releve [ i ] < temp_mini : indice_mini , temp_mini = i , releve [ i ] return temp_mini , date [ indice_mini ] Commentaire Bien comprendre que les ann\u00e9es et les temp\u00e9ratures moyennes correspondantes sont aux m\u00eames indices dans les deux listes. On recherche donc l'indice de la temp\u00e9rature moyenne et on l'utilise pour retrouver l'ann\u00e9e correspondante. Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 def inverse_chaine ( chaine ): result = \"\" for caractere in chaine : result = caractere + result #(1) return result def est_palindrome ( chaine ): inverse = inverse_chaine ( chaine ) return inverse == chaine #(2) def est_nbre_palindrome ( nbre ): chaine = str ( nbre ) #(3) return est_palindrome ( chaine ) Le dernier caract\u00e8re a \u00eatre ajout\u00e9 doit \u00eatre au d\u00e9but, il faut donc \u00e9crire result = caractere + result et pas result = result + caractere Cela est \u00e9quivalent \u00e0 \u00e9crire : if inverse == chaine : return True else : return False Conversion en chaines de caract\u00e8res afin de pouvoir utiliser est_palindrome .","title":"2022 S18"},{"location":"backup/2022-S18/#corrige-sujet-18-annee-2022","text":"Sujet 18 - 20222","title":"Corrig\u00e9 sujet 18 - Ann\u00e9e : 2022"},{"location":"backup/2022-S18/#exercice-1","text":"1 2 3 4 5 6 def mini ( releve , date ): indice_mini , temp_mini = 0 , releve [ 0 ] for i in range ( len ( releve )): if releve [ i ] < temp_mini : indice_mini , temp_mini = i , releve [ i ] return temp_mini , date [ indice_mini ] Commentaire Bien comprendre que les ann\u00e9es et les temp\u00e9ratures moyennes correspondantes sont aux m\u00eames indices dans les deux listes. On recherche donc l'indice de la temp\u00e9rature moyenne et on l'utilise pour retrouver l'ann\u00e9e correspondante.","title":"Exercice 1"},{"location":"backup/2022-S18/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 def inverse_chaine ( chaine ): result = \"\" for caractere in chaine : result = caractere + result #(1) return result def est_palindrome ( chaine ): inverse = inverse_chaine ( chaine ) return inverse == chaine #(2) def est_nbre_palindrome ( nbre ): chaine = str ( nbre ) #(3) return est_palindrome ( chaine ) Le dernier caract\u00e8re a \u00eatre ajout\u00e9 doit \u00eatre au d\u00e9but, il faut donc \u00e9crire result = caractere + result et pas result = result + caractere Cela est \u00e9quivalent \u00e0 \u00e9crire : if inverse == chaine : return True else : return False Conversion en chaines de caract\u00e8res afin de pouvoir utiliser est_palindrome .","title":"Exercice 2"},{"location":"backup/2022-S19/","text":"Corrig\u00e9 sujet 19 - Ann\u00e9e : 2022 Sujet 19 - 20222 Exercice 1 1 2 3 4 5 6 7 8 def multiplication ( a , b ): produit = 0 for i in range ( abs ( a )): produit += abs ( b ) if ( a > 0 and b < 0 ) or ( a < 0 and b > 0 ): return - produit else : return produit Commentaires On peut rappeler la r\u00e8gle des signes pour un produit : un produit est n\u00e9gatif si les deux facteurs ne sont pas de m\u00eame signe (ligne 5) et positif sinon. Si a et b sont deux entiers positifs : $$ a \\times b = \\underbrace{b + b + \\dots + b}_{a \\quad \\mathrm{termes}} $$ L'\u00e9nonc\u00e9 pourrait aiguiller vers l'utilisation de abs (valeur absolue) pour traiter les probl\u00e8mes de signe. Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 def chercher ( T , n , i , j ): if i < 0 or j > len ( T ) - 1 : #(1) print ( \"Erreur\" ) return None if i > j : return None m = ( i + j ) // 2 #(2) if T [ m ] < n : return chercher ( T , n , m + 1 , j ) #(3) elif T [ m ] > n : return chercher ( T , n , i , m - 1 ) else : return m L'indice du dernier \u00e9l\u00e9ment d'un tableau T est len(T)-1 . Calcul de l'indice au milieu On peut chercher apr\u00e8s l'indice m \u00e0 cause du strictement inf\u00e9rieur dans le test de comparaison T[m]<n .","title":"2022 S19"},{"location":"backup/2022-S19/#corrige-sujet-19-annee-2022","text":"Sujet 19 - 20222","title":"Corrig\u00e9 sujet 19 - Ann\u00e9e : 2022"},{"location":"backup/2022-S19/#exercice-1","text":"1 2 3 4 5 6 7 8 def multiplication ( a , b ): produit = 0 for i in range ( abs ( a )): produit += abs ( b ) if ( a > 0 and b < 0 ) or ( a < 0 and b > 0 ): return - produit else : return produit Commentaires On peut rappeler la r\u00e8gle des signes pour un produit : un produit est n\u00e9gatif si les deux facteurs ne sont pas de m\u00eame signe (ligne 5) et positif sinon. Si a et b sont deux entiers positifs : $$ a \\times b = \\underbrace{b + b + \\dots + b}_{a \\quad \\mathrm{termes}} $$ L'\u00e9nonc\u00e9 pourrait aiguiller vers l'utilisation de abs (valeur absolue) pour traiter les probl\u00e8mes de signe.","title":"Exercice 1"},{"location":"backup/2022-S19/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 def chercher ( T , n , i , j ): if i < 0 or j > len ( T ) - 1 : #(1) print ( \"Erreur\" ) return None if i > j : return None m = ( i + j ) // 2 #(2) if T [ m ] < n : return chercher ( T , n , m + 1 , j ) #(3) elif T [ m ] > n : return chercher ( T , n , i , m - 1 ) else : return m L'indice du dernier \u00e9l\u00e9ment d'un tableau T est len(T)-1 . Calcul de l'indice au milieu On peut chercher apr\u00e8s l'indice m \u00e0 cause du strictement inf\u00e9rieur dans le test de comparaison T[m]<n .","title":"Exercice 2"},{"location":"backup/2022-S20/","text":"Corrig\u00e9 sujet 20 - Ann\u00e9e : 2022 Sujet 20 - 20222 Exercice 1 1 2 3 4 5 6 7 8 def xor ( a , b ): resultat = [] for i in range ( len ( a )): if a [ i ] == b [ i ]: resultat . append ( 0 ) else : resultat . append ( 1 ) return resultat Commentaire On peut aussi utiliser une d\u00e9finition de listes par compr\u00e9hension. Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 class Carre : def __init__ ( self , tableau = [[]]): self . ordre = len ( tableau ) self . valeurs = tableau def affiche ( self ): '''Affiche un carr\u00e9''' for i in range ( self . ordre ): print ( self . valeurs [ i ]) def somme_ligne ( self , i ): '''Calcule la somme des valeurs de la ligne i''' return sum ( self . valeurs [ i ]) def somme_col ( self , j ): '''calcule la somme des valeurs de la colonne j''' return sum ([ self . valeurs [ i ][ j ] for i in range ( self . ordre )]) def est_magique ( carre ): n = carre . ordre s = carre . somme_ligne ( 0 ) #test de la somme de chaque ligne for i in range ( 1 , n ): #(1) if carre . somme_ligne ( i ) != s : return False #test de la somme de chaque colonne for j in range ( n ): if carre . somme_col ( j ) != s : #(2) return False #test de la somme de chaque diagonale if sum ([ carre . valeurs [ k ][ k ] for k in range ( n )]) != s : #(3) return False if sum ([ carre . valeurs [ k ][ n - 1 - k ] for k in range ( n )]) != s : return False return True #(4) Par la peine de tester la ligne d'indice 0, elle a servi \u00e0 calculer la somme de r\u00e9f\u00e9rence s (ligne 21), on commence donc \u00e0 1. On utilise la m\u00e9thode somme_col de la classe Carre La diagonale principale se caract\u00e9rise par des indices de lignes et de colonne identiques. Si on atteint cette ligne, tous les tests ont \u00e9t\u00e9 pass\u00e9 avec succ\u00e8s, le carr\u00e9 est magique ! Attention Le code fourni utilise un objet mutable (une liste) comme param\u00e8tre par d\u00e9faut d'une fonction : def __init__ ( self , tableau = [[]]): C'est une tr\u00e8s mauvaise pratique car source d'erreurs, en effet la variable tableau \u00e9tant mutable elle est modifi\u00e9e par la fonction lors d'un premier appel et ne sera donc plus vide lors des appels suivants. Pour une solution \u00e0 ce probl\u00e8me, on pourra par exemple consulter ce site","title":"2022 S20"},{"location":"backup/2022-S20/#corrige-sujet-20-annee-2022","text":"Sujet 20 - 20222","title":"Corrig\u00e9 sujet 20 - Ann\u00e9e : 2022"},{"location":"backup/2022-S20/#exercice-1","text":"1 2 3 4 5 6 7 8 def xor ( a , b ): resultat = [] for i in range ( len ( a )): if a [ i ] == b [ i ]: resultat . append ( 0 ) else : resultat . append ( 1 ) return resultat Commentaire On peut aussi utiliser une d\u00e9finition de listes par compr\u00e9hension.","title":"Exercice 1"},{"location":"backup/2022-S20/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 class Carre : def __init__ ( self , tableau = [[]]): self . ordre = len ( tableau ) self . valeurs = tableau def affiche ( self ): '''Affiche un carr\u00e9''' for i in range ( self . ordre ): print ( self . valeurs [ i ]) def somme_ligne ( self , i ): '''Calcule la somme des valeurs de la ligne i''' return sum ( self . valeurs [ i ]) def somme_col ( self , j ): '''calcule la somme des valeurs de la colonne j''' return sum ([ self . valeurs [ i ][ j ] for i in range ( self . ordre )]) def est_magique ( carre ): n = carre . ordre s = carre . somme_ligne ( 0 ) #test de la somme de chaque ligne for i in range ( 1 , n ): #(1) if carre . somme_ligne ( i ) != s : return False #test de la somme de chaque colonne for j in range ( n ): if carre . somme_col ( j ) != s : #(2) return False #test de la somme de chaque diagonale if sum ([ carre . valeurs [ k ][ k ] for k in range ( n )]) != s : #(3) return False if sum ([ carre . valeurs [ k ][ n - 1 - k ] for k in range ( n )]) != s : return False return True #(4) Par la peine de tester la ligne d'indice 0, elle a servi \u00e0 calculer la somme de r\u00e9f\u00e9rence s (ligne 21), on commence donc \u00e0 1. On utilise la m\u00e9thode somme_col de la classe Carre La diagonale principale se caract\u00e9rise par des indices de lignes et de colonne identiques. Si on atteint cette ligne, tous les tests ont \u00e9t\u00e9 pass\u00e9 avec succ\u00e8s, le carr\u00e9 est magique ! Attention Le code fourni utilise un objet mutable (une liste) comme param\u00e8tre par d\u00e9faut d'une fonction : def __init__ ( self , tableau = [[]]): C'est une tr\u00e8s mauvaise pratique car source d'erreurs, en effet la variable tableau \u00e9tant mutable elle est modifi\u00e9e par la fonction lors d'un premier appel et ne sera donc plus vide lors des appels suivants. Pour une solution \u00e0 ce probl\u00e8me, on pourra par exemple consulter ce site","title":"Exercice 2"},{"location":"backup/2022-S21/","text":"Corrig\u00e9 sujet 21 - Ann\u00e9e : 2022 Sujet 21 - 20222 Exercice 1 1 2 3 4 5 6 7 8 def multiplication ( a , b ): produit = 0 for i in range ( abs ( a )): produit += abs ( b ) if ( a > 0 and b < 0 ) or ( a < 0 and b > 0 ): return - produit else : return produit Commentaires On peut rappeler la r\u00e8gle des signes pour un produit : un produit est n\u00e9gatif si les deux facteurs ne sont pas de m\u00eame signe (ligne 5) et positif sinon. Si a et b sont deux entiers positifs : $$ a \\times b = \\underbrace{b + b + \\dots + b}_{a \\quad \\mathrm{termes}} $$ L'\u00e9nonc\u00e9 pourrait aiguiller vers l'utilisation de abs (valeur absolue) pour traiter les probl\u00e8mes de signe. Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 def dichotomie ( tab , x ): \"\"\" tab : tableau d\u2019entiers tri\u00e9 dans l\u2019ordre croissant x : nombre entier La fonction renvoie True si tab contient x et False sinon \"\"\" debut = 0 fin = len ( tab ) - 1 while debut <= fin : m = ( debut + fin ) // 2 #(1) if x == tab [ m ]: return True if x > tab [ m ]: debut = m + 1 else : fin = m - 1 #(2) return False Calcul de l'indice se trouvant \"au milieu\" entre debut et fin . Ici x < tab[m] (la cas d'\u00e9galit\u00e9 est trait\u00e9 avant), donc l'indice de fin de recherche est avant m .","title":"2022 S21"},{"location":"backup/2022-S21/#corrige-sujet-21-annee-2022","text":"Sujet 21 - 20222","title":"Corrig\u00e9 sujet 21 - Ann\u00e9e : 2022"},{"location":"backup/2022-S21/#exercice-1","text":"1 2 3 4 5 6 7 8 def multiplication ( a , b ): produit = 0 for i in range ( abs ( a )): produit += abs ( b ) if ( a > 0 and b < 0 ) or ( a < 0 and b > 0 ): return - produit else : return produit Commentaires On peut rappeler la r\u00e8gle des signes pour un produit : un produit est n\u00e9gatif si les deux facteurs ne sont pas de m\u00eame signe (ligne 5) et positif sinon. Si a et b sont deux entiers positifs : $$ a \\times b = \\underbrace{b + b + \\dots + b}_{a \\quad \\mathrm{termes}} $$ L'\u00e9nonc\u00e9 pourrait aiguiller vers l'utilisation de abs (valeur absolue) pour traiter les probl\u00e8mes de signe.","title":"Exercice 1"},{"location":"backup/2022-S21/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 def dichotomie ( tab , x ): \"\"\" tab : tableau d\u2019entiers tri\u00e9 dans l\u2019ordre croissant x : nombre entier La fonction renvoie True si tab contient x et False sinon \"\"\" debut = 0 fin = len ( tab ) - 1 while debut <= fin : m = ( debut + fin ) // 2 #(1) if x == tab [ m ]: return True if x > tab [ m ]: debut = m + 1 else : fin = m - 1 #(2) return False Calcul de l'indice se trouvant \"au milieu\" entre debut et fin . Ici x < tab[m] (la cas d'\u00e9galit\u00e9 est trait\u00e9 avant), donc l'indice de fin de recherche est avant m .","title":"Exercice 2"},{"location":"backup/2022-S22/","text":"Corrig\u00e9 sujet 22 - Ann\u00e9e : 2022 Sujet 22 - 20222 Exercice 1 1 2 3 4 5 def renverse ( chaine ): chaine_inverse = \"\" for caractere in chaine : chaine_inverse = caractere + chaine_inverse return chaine_inverse Remarque On peut proposer une version utilisant la m\u00e9thode join des listes, en effet ajouter des \u00e9l\u00e9ments \u00e0 une liste est plus efficace que d'ajouter des caract\u00e8res \u00e0 une cha\u00eene de caract\u00e8res. Exercice 2 1 2 3 4 5 6 7 8 9 10 11 def crible ( N ): \"\"\"renvoie un tableau contenant tous les nombres premiers plus petit que N\"\"\" premiers = [] tab = [ True ] * N tab [ 0 ], tab [ 1 ] = False , False for i in range ( 2 , N ): if tab [ i ] == True : #(1) premiers . append ( i ) for multiple in range ( 2 * i , N , i ): #(2) tab [ multiple ] = False #(3) return premiers C'est le cas o\u00f9 le nombre est i premier Ce sont les multiples de i , on parcourt donc avec un pas de i Les multiples ne sont pas des nombres premiers. Attention Le crible d'Eratosth\u00e8ne propos\u00e9 ici fait partie des algorithmes propos\u00e9s dans l'option math\u00e9matiques expertes.","title":"2022 S22"},{"location":"backup/2022-S22/#corrige-sujet-22-annee-2022","text":"Sujet 22 - 20222","title":"Corrig\u00e9 sujet 22 - Ann\u00e9e : 2022"},{"location":"backup/2022-S22/#exercice-1","text":"1 2 3 4 5 def renverse ( chaine ): chaine_inverse = \"\" for caractere in chaine : chaine_inverse = caractere + chaine_inverse return chaine_inverse Remarque On peut proposer une version utilisant la m\u00e9thode join des listes, en effet ajouter des \u00e9l\u00e9ments \u00e0 une liste est plus efficace que d'ajouter des caract\u00e8res \u00e0 une cha\u00eene de caract\u00e8res.","title":"Exercice 1"},{"location":"backup/2022-S22/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 def crible ( N ): \"\"\"renvoie un tableau contenant tous les nombres premiers plus petit que N\"\"\" premiers = [] tab = [ True ] * N tab [ 0 ], tab [ 1 ] = False , False for i in range ( 2 , N ): if tab [ i ] == True : #(1) premiers . append ( i ) for multiple in range ( 2 * i , N , i ): #(2) tab [ multiple ] = False #(3) return premiers C'est le cas o\u00f9 le nombre est i premier Ce sont les multiples de i , on parcourt donc avec un pas de i Les multiples ne sont pas des nombres premiers. Attention Le crible d'Eratosth\u00e8ne propos\u00e9 ici fait partie des algorithmes propos\u00e9s dans l'option math\u00e9matiques expertes.","title":"Exercice 2"},{"location":"backup/2022-S23/","text":"Corrig\u00e9 sujet 23 - Ann\u00e9e : 2022 Sujet 23 - 20222 Exercice 1 1 2 3 4 5 6 7 def max_dico ( dico ): max_like = 0 for pseudo in dico : if dico [ pseudo ] > max_like : max_pseudo = pseudo max_like = dico [ pseudo ] return max_pseudo , max_like Commentaires Dans cette correction on a choisit d'initialiser le maximum possible \u00e0 0. L'\u00e9nonc\u00e9 parle de \" la cl\u00e9 du dictionnaire associ\u00e9e \u00e0 la valeur maximale\" mais plusieurs cl\u00e9s distinctes peuvent \u00eatre associ\u00e9es \u00e0 cette valeur maximale {'Bob':102,'Alice':102} . Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 class Pile : \"\"\"Classe d\u00e9finissant une structure de pile.\"\"\" def __init__ ( self ): self . contenu = [] def est_vide ( self ): \"\"\"Renvoie le bool\u00e9en True si la pile est vide, False sinon.\"\"\" return self . contenu == [] def empiler ( self , v ): \"\"\"Place l'\u00e9l\u00e9ment v au sommet de la pile\"\"\" self . contenu . append ( v ) def depiler ( self ): \"\"\" Retire et renvoie l\u2019\u00e9l\u00e9ment plac\u00e9 au sommet de la pile, si la pile n\u2019est pas vide. \"\"\" if not self . est_vide (): return self . contenu . pop () def eval_expression ( tab ): p = Pile () for element in tab : #(1) if element != '+' and element != '*' : #(2) p . empiler ( element ) else : if element == \"+\" : #(3) resultat = p . depiler () + p . depiler () else : resultat = p . depiler () * p . depiler () p . empiler ( resultat ) #(4) return resultat Le nom de la variable de parcours est indiqu\u00e9 juste en dessous : element On suit l'algorithme de l'\u00e9nonc\u00e9 : si l'\u00e9l\u00e9ment n'est pas un op\u00e9rateur, alors on l'empile. Si c'est un op\u00e9rateur, alors on effecture l'op\u00e9ration. C'est soit l'addition, soit la multiplication car on s'est limit\u00e9 \u00e0 ces deux op\u00e9rations. Le r\u00e9sultat est empil\u00e9 comme indiqu\u00e9 dans l'algorithme donn\u00e9 dans l'\u00e9nonc\u00e9.","title":"2022 S23"},{"location":"backup/2022-S23/#corrige-sujet-23-annee-2022","text":"Sujet 23 - 20222","title":"Corrig\u00e9 sujet 23 - Ann\u00e9e : 2022"},{"location":"backup/2022-S23/#exercice-1","text":"1 2 3 4 5 6 7 def max_dico ( dico ): max_like = 0 for pseudo in dico : if dico [ pseudo ] > max_like : max_pseudo = pseudo max_like = dico [ pseudo ] return max_pseudo , max_like Commentaires Dans cette correction on a choisit d'initialiser le maximum possible \u00e0 0. L'\u00e9nonc\u00e9 parle de \" la cl\u00e9 du dictionnaire associ\u00e9e \u00e0 la valeur maximale\" mais plusieurs cl\u00e9s distinctes peuvent \u00eatre associ\u00e9es \u00e0 cette valeur maximale {'Bob':102,'Alice':102} .","title":"Exercice 1"},{"location":"backup/2022-S23/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 class Pile : \"\"\"Classe d\u00e9finissant une structure de pile.\"\"\" def __init__ ( self ): self . contenu = [] def est_vide ( self ): \"\"\"Renvoie le bool\u00e9en True si la pile est vide, False sinon.\"\"\" return self . contenu == [] def empiler ( self , v ): \"\"\"Place l'\u00e9l\u00e9ment v au sommet de la pile\"\"\" self . contenu . append ( v ) def depiler ( self ): \"\"\" Retire et renvoie l\u2019\u00e9l\u00e9ment plac\u00e9 au sommet de la pile, si la pile n\u2019est pas vide. \"\"\" if not self . est_vide (): return self . contenu . pop () def eval_expression ( tab ): p = Pile () for element in tab : #(1) if element != '+' and element != '*' : #(2) p . empiler ( element ) else : if element == \"+\" : #(3) resultat = p . depiler () + p . depiler () else : resultat = p . depiler () * p . depiler () p . empiler ( resultat ) #(4) return resultat Le nom de la variable de parcours est indiqu\u00e9 juste en dessous : element On suit l'algorithme de l'\u00e9nonc\u00e9 : si l'\u00e9l\u00e9ment n'est pas un op\u00e9rateur, alors on l'empile. Si c'est un op\u00e9rateur, alors on effecture l'op\u00e9ration. C'est soit l'addition, soit la multiplication car on s'est limit\u00e9 \u00e0 ces deux op\u00e9rations. Le r\u00e9sultat est empil\u00e9 comme indiqu\u00e9 dans l'algorithme donn\u00e9 dans l'\u00e9nonc\u00e9.","title":"Exercice 2"},{"location":"backup/2022-S24/","text":"Corrig\u00e9 sujet 24 - Ann\u00e9e : 2022 Sujet 24 - 20222 Exercice 1 1 2 3 4 5 6 def maxliste ( liste ): maxi = liste [ 0 ] for elt in liste : if elt > maxi : maxi = elt return maxi Commentaires L'\u00e9nonc\u00e9 pr\u00e9cise que la liste est non vide, on peut donc se permettre d'initialiser le maximum courant avec le premier \u00e9l\u00e9ment de la liste. Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 class Pile : \"\"\" Classe d\u00e9finissant une pile \"\"\" def __init__ ( self , valeurs = []): self . valeurs = valeurs def est_vide ( self ): \"\"\"Renvoie True si la pile est vide, False sinon\"\"\" return self . valeurs == [] def empiler ( self , c ): \"\"\"Place l\u2019\u00e9l\u00e9ment c au sommet de la pile\"\"\" self . valeurs . append ( c ) def depiler ( self ): \"\"\"Supprime l\u2019\u00e9l\u00e9ment plac\u00e9 au sommet de la pile, \u00e0 condition qu\u2019elle soit non vide\"\"\" if self . est_vide () == False : self . valeurs . pop () def parenthesage ( ch ): \"\"\"Renvoie True si la cha\u00eene ch est bien parenth\u00e9s\u00e9e et False sinon\"\"\" p = Pile () for c in ch : if c == \"(\" : #(1) p . empiler ( c ) elif c == \")\" : #(2) if p . est_vide (): return False else : p . depiler () return p . est_vide () #(3) On suit l'algorithme donn\u00e9 dans l'\u00e9nonce : si on rencontre une parenth\u00e8se ouvrante alors on l'empile Si c'est une parenth\u00e8se fermante, on d\u00e9pile dans le cas o\u00f9 la pile est vide, l'expression est mal parenth\u00e9s\u00e9e. Si \u00e0 la fin du parcours la pile n'est pas vide, l'expression est mal parenth\u00e9s\u00e9e. Attention Le code fourni utilise un objet mutable (une liste) comme param\u00e8tre par d\u00e9faut d'une fonction : def __init__ ( self , valeurs = []): C'est une tr\u00e8s mauvaise pratique car source d'erreurs, en effet la variable valeurs \u00e9tant mutable elle est modifi\u00e9e par la fonction lors d'un premier appel et ne sera donc plus vide lors des appels suivants. Pour une solution \u00e0 ce probl\u00e8me, on pourra par exemple consulter ce site Dans l'\u00e9nonc\u00e9 au format pdf , le else de la ligne 29 n'est pas correctement indent\u00e9, le probl\u00e8me n'appara\u00eet pas dans le fichier .py fourni avec le sujet. Probablement en lien avec ce souci, le elif de la ligne 26 pourrait \u00eatre un else .","title":"2022 S24"},{"location":"backup/2022-S24/#corrige-sujet-24-annee-2022","text":"Sujet 24 - 20222","title":"Corrig\u00e9 sujet 24 - Ann\u00e9e : 2022"},{"location":"backup/2022-S24/#exercice-1","text":"1 2 3 4 5 6 def maxliste ( liste ): maxi = liste [ 0 ] for elt in liste : if elt > maxi : maxi = elt return maxi Commentaires L'\u00e9nonc\u00e9 pr\u00e9cise que la liste est non vide, on peut donc se permettre d'initialiser le maximum courant avec le premier \u00e9l\u00e9ment de la liste.","title":"Exercice 1"},{"location":"backup/2022-S24/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 class Pile : \"\"\" Classe d\u00e9finissant une pile \"\"\" def __init__ ( self , valeurs = []): self . valeurs = valeurs def est_vide ( self ): \"\"\"Renvoie True si la pile est vide, False sinon\"\"\" return self . valeurs == [] def empiler ( self , c ): \"\"\"Place l\u2019\u00e9l\u00e9ment c au sommet de la pile\"\"\" self . valeurs . append ( c ) def depiler ( self ): \"\"\"Supprime l\u2019\u00e9l\u00e9ment plac\u00e9 au sommet de la pile, \u00e0 condition qu\u2019elle soit non vide\"\"\" if self . est_vide () == False : self . valeurs . pop () def parenthesage ( ch ): \"\"\"Renvoie True si la cha\u00eene ch est bien parenth\u00e9s\u00e9e et False sinon\"\"\" p = Pile () for c in ch : if c == \"(\" : #(1) p . empiler ( c ) elif c == \")\" : #(2) if p . est_vide (): return False else : p . depiler () return p . est_vide () #(3) On suit l'algorithme donn\u00e9 dans l'\u00e9nonce : si on rencontre une parenth\u00e8se ouvrante alors on l'empile Si c'est une parenth\u00e8se fermante, on d\u00e9pile dans le cas o\u00f9 la pile est vide, l'expression est mal parenth\u00e9s\u00e9e. Si \u00e0 la fin du parcours la pile n'est pas vide, l'expression est mal parenth\u00e9s\u00e9e. Attention Le code fourni utilise un objet mutable (une liste) comme param\u00e8tre par d\u00e9faut d'une fonction : def __init__ ( self , valeurs = []): C'est une tr\u00e8s mauvaise pratique car source d'erreurs, en effet la variable valeurs \u00e9tant mutable elle est modifi\u00e9e par la fonction lors d'un premier appel et ne sera donc plus vide lors des appels suivants. Pour une solution \u00e0 ce probl\u00e8me, on pourra par exemple consulter ce site Dans l'\u00e9nonc\u00e9 au format pdf , le else de la ligne 29 n'est pas correctement indent\u00e9, le probl\u00e8me n'appara\u00eet pas dans le fichier .py fourni avec le sujet. Probablement en lien avec ce souci, le elif de la ligne 26 pourrait \u00eatre un else .","title":"Exercice 2"},{"location":"backup/2022-S25/","text":"Corrig\u00e9 sujet 25 - Ann\u00e9e : 2022 Sujet 25 - 20222 Exercice 1 1 2 3 4 5 6 def selection_enclos ( table_animaux , num_enclos ): resultat = [] for animal in table_animaux : if animal [ 'enclos' ] == num_enclos : resultat . append ( animal ) return resultat Commentaires Revoir le chapitre traitement de donn\u00e9es en tables du programme de premi\u00e8re en cas de difficult\u00e9s (et aussi l'utilisation des dictionnaires) Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 def trouver_intrus ( tab , g , d ): ''' Renvoie la valeur de l'intrus situ\u00e9 entre les indices g et d dans la liste tab o\u00f9 tab v\u00e9rifie les conditions de l'exercice, g et d sont des multiples de 3. ''' if g == d : return tab [ g ] #(1) else : nombre_de_triplets = ( d - g ) // 3 indice = g + 3 * ( nombre_de_triplets // 2 ) if tab [ indice ] == tab [ indice + 1 ] : #(2) return trouver_intrus ( tab , indice + 3 , d ) #(3) else : return trouver_intrus ( tab , g , indice ) La zone de recherche se limite \u00e0 un \u00e9l\u00e9ment : l'intrus. On peut mettre indiff\u00e9remment tab[g] ou tab[d] , ils sont \u00e9gaux puisque g=d ici. On suit l'algorithme propos\u00e9 dans l'\u00e9nonc\u00e9 et on compare l'\u00e9l\u00e9ment du milieu \u00e0 son voisin de droite Attention \u00e0 la l\u00e9g\u00e8re diff\u00e9rence de traitement dans un cas ou passe \u00e0 indice+3 car les \u00e9l\u00e9ments sont situ\u00e9s strictement avant l'intrus Attention Sujet sans doute difficile et qui pr\u00e9sente un algorithme nouveau (bien que semblable \u00e0 une recherche par dichotomie)","title":"2022 S25"},{"location":"backup/2022-S25/#corrige-sujet-25-annee-2022","text":"Sujet 25 - 20222","title":"Corrig\u00e9 sujet 25 - Ann\u00e9e : 2022"},{"location":"backup/2022-S25/#exercice-1","text":"1 2 3 4 5 6 def selection_enclos ( table_animaux , num_enclos ): resultat = [] for animal in table_animaux : if animal [ 'enclos' ] == num_enclos : resultat . append ( animal ) return resultat Commentaires Revoir le chapitre traitement de donn\u00e9es en tables du programme de premi\u00e8re en cas de difficult\u00e9s (et aussi l'utilisation des dictionnaires)","title":"Exercice 1"},{"location":"backup/2022-S25/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 def trouver_intrus ( tab , g , d ): ''' Renvoie la valeur de l'intrus situ\u00e9 entre les indices g et d dans la liste tab o\u00f9 tab v\u00e9rifie les conditions de l'exercice, g et d sont des multiples de 3. ''' if g == d : return tab [ g ] #(1) else : nombre_de_triplets = ( d - g ) // 3 indice = g + 3 * ( nombre_de_triplets // 2 ) if tab [ indice ] == tab [ indice + 1 ] : #(2) return trouver_intrus ( tab , indice + 3 , d ) #(3) else : return trouver_intrus ( tab , g , indice ) La zone de recherche se limite \u00e0 un \u00e9l\u00e9ment : l'intrus. On peut mettre indiff\u00e9remment tab[g] ou tab[d] , ils sont \u00e9gaux puisque g=d ici. On suit l'algorithme propos\u00e9 dans l'\u00e9nonc\u00e9 et on compare l'\u00e9l\u00e9ment du milieu \u00e0 son voisin de droite Attention \u00e0 la l\u00e9g\u00e8re diff\u00e9rence de traitement dans un cas ou passe \u00e0 indice+3 car les \u00e9l\u00e9ments sont situ\u00e9s strictement avant l'intrus Attention Sujet sans doute difficile et qui pr\u00e9sente un algorithme nouveau (bien que semblable \u00e0 une recherche par dichotomie)","title":"Exercice 2"},{"location":"backup/2022-S26/","text":"Corrig\u00e9 sujet 26 - Ann\u00e9e : 2022 Sujet 26 - 20222 Exercice 1 1 2 3 4 5 6 7 def RechercheMin ( tab ): if tab == []: return None indice_mini , mini = 0 , tab [ 0 ] for indice in range ( 1 , len ( tab )): if tab [ indice ] < mini : indice_mini , mini = indice , tab [ indice ] return indice_mini Commentaires Rien n'est indiqu\u00e9 pour la liste vide, on a choisit de renvoyer None dans ce cas Un parcours par indice est n\u00e9cessaire puisqu'on a besoin de la position du minimum. Exercice 2 1 2 3 4 5 6 7 8 9 10 def separe ( tab ): i = 0 j = len ( tab ) - 1 #(1) while i < j : if tab [ i ] == 0 : i = i + 1 #(2) else : tab [ i ], tab [ j ] = tab [ j ], tab [ i ] #(3) j = j - 1 return tab i et j sont les indices d\u00e9limitant la partie non encore tri\u00e9e du tableau, au d\u00e9but c'est donc le tableau entier. Et on rappelle que l'indice du dernier \u00e9l\u00e9ment d'une liste tab est len(tab)-1 . Si on rencontre un 0, la zone non tri\u00e9e diminue \"par la gauche\", donc on incr\u00e9mente i Dans le cas contraire, la zone non tri\u00e9e diminue \"par la droite\". On a rencontr\u00e9 un 1, on le positionne donc \u00e0 l'extr\u00e9mit\u00e9 droite de la zone non tri\u00e9e en l'\u00e9changeant avec la valeur situ\u00e9 \u00e0 cet endroit.","title":"2022 S26"},{"location":"backup/2022-S26/#corrige-sujet-26-annee-2022","text":"Sujet 26 - 20222","title":"Corrig\u00e9 sujet 26 - Ann\u00e9e : 2022"},{"location":"backup/2022-S26/#exercice-1","text":"1 2 3 4 5 6 7 def RechercheMin ( tab ): if tab == []: return None indice_mini , mini = 0 , tab [ 0 ] for indice in range ( 1 , len ( tab )): if tab [ indice ] < mini : indice_mini , mini = indice , tab [ indice ] return indice_mini Commentaires Rien n'est indiqu\u00e9 pour la liste vide, on a choisit de renvoyer None dans ce cas Un parcours par indice est n\u00e9cessaire puisqu'on a besoin de la position du minimum.","title":"Exercice 1"},{"location":"backup/2022-S26/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 def separe ( tab ): i = 0 j = len ( tab ) - 1 #(1) while i < j : if tab [ i ] == 0 : i = i + 1 #(2) else : tab [ i ], tab [ j ] = tab [ j ], tab [ i ] #(3) j = j - 1 return tab i et j sont les indices d\u00e9limitant la partie non encore tri\u00e9e du tableau, au d\u00e9but c'est donc le tableau entier. Et on rappelle que l'indice du dernier \u00e9l\u00e9ment d'une liste tab est len(tab)-1 . Si on rencontre un 0, la zone non tri\u00e9e diminue \"par la gauche\", donc on incr\u00e9mente i Dans le cas contraire, la zone non tri\u00e9e diminue \"par la droite\". On a rencontr\u00e9 un 1, on le positionne donc \u00e0 l'extr\u00e9mit\u00e9 droite de la zone non tri\u00e9e en l'\u00e9changeant avec la valeur situ\u00e9 \u00e0 cet endroit.","title":"Exercice 2"},{"location":"backup/2022-S27/","text":"Corrig\u00e9 sujet 27 - Ann\u00e9e : 2022 Sujet 27 - 20222 Exercice 1 1 2 3 4 5 6 7 8 9 def taille ( arbre , lettre ): if arbre [ lettre ] == [ '' , '' ]: return 1 elif arbre [ lettre ][ 0 ] == '' : return 1 + taille ( arbre , arbre [ lettre ][ 1 ]) elif arbre [ lettre ][ 1 ] == '' : return 1 + taille ( arbre , arbre [ lettre ][ 0 ]) else : return 1 + taille ( arbre , arbre [ lettre ][ 0 ]) + taille ( arbre , arbre [ lettre ][ 1 ]) Commentaires La correction suit les indications du sujet en traitant les 4 cas. On peut faire autrement (et plus simplement). Ce sujet est sans doute difficile car il utilise une repr\u00e9sentation des arbres binaires inhabituelle, en plus de m\u00e9langer diverses notions du programme (r\u00e9cursivit\u00e9, arbre, dictionnaire, listes) Exercice 2 1 2 3 4 5 6 7 8 9 def tri_iteratif ( tab ): for k in range ( len ( tab ) - 1 , 0 , - 1 ): #(1) imax = 0 for i in range ( 0 , k ): #(2) if tab [ i ] > tab [ imax ] : imax = i if tab [ imax ] > tab [ k ] : tab [ k ] , tab [ imax ] = tab [ imax ] , tab [ k ] return tab L'indice du dernier \u00e9l\u00e9ment d'un tableau tab est len(tab)-1 . On parcourt ici dans l'ordre inverse (revoir l'instruction range si n\u00e9cessaire) Cette portion du programme est une recherche classique de maximum. Ici on \u00e9change le maximum trouv\u00e9 avec l'\u00e9l\u00e9ment d'indice k Attention En d\u00e9pit du nom tri_it\u00e9ratif , il fallait reconna\u00eetre ici l'algorithme du tri par s\u00e9lection. Les listes \u00e9tant mutables, tab est modifi\u00e9e par la fonction (tri en place), alors que le return finale peut laisser penser qu'on veut r\u00e9cup\u00e9rer un \"nouveau tableau\". Le test ligne 7 peut para\u00eetre surprenant mais comme on a cherch\u00e9 le maximum entre les indices 0 et k-1 , on doit v\u00e9rifier qu'il ne se trouve pas \u00e0 l'indice k (dans ce cas l'\u00e9change n'est pas n\u00e9cessaire). On aurait pu chercher entre 0 et k et \u00e9viter ce test.","title":"2022 S27"},{"location":"backup/2022-S27/#corrige-sujet-27-annee-2022","text":"Sujet 27 - 20222","title":"Corrig\u00e9 sujet 27 - Ann\u00e9e : 2022"},{"location":"backup/2022-S27/#exercice-1","text":"1 2 3 4 5 6 7 8 9 def taille ( arbre , lettre ): if arbre [ lettre ] == [ '' , '' ]: return 1 elif arbre [ lettre ][ 0 ] == '' : return 1 + taille ( arbre , arbre [ lettre ][ 1 ]) elif arbre [ lettre ][ 1 ] == '' : return 1 + taille ( arbre , arbre [ lettre ][ 0 ]) else : return 1 + taille ( arbre , arbre [ lettre ][ 0 ]) + taille ( arbre , arbre [ lettre ][ 1 ]) Commentaires La correction suit les indications du sujet en traitant les 4 cas. On peut faire autrement (et plus simplement). Ce sujet est sans doute difficile car il utilise une repr\u00e9sentation des arbres binaires inhabituelle, en plus de m\u00e9langer diverses notions du programme (r\u00e9cursivit\u00e9, arbre, dictionnaire, listes)","title":"Exercice 1"},{"location":"backup/2022-S27/#exercice-2","text":"1 2 3 4 5 6 7 8 9 def tri_iteratif ( tab ): for k in range ( len ( tab ) - 1 , 0 , - 1 ): #(1) imax = 0 for i in range ( 0 , k ): #(2) if tab [ i ] > tab [ imax ] : imax = i if tab [ imax ] > tab [ k ] : tab [ k ] , tab [ imax ] = tab [ imax ] , tab [ k ] return tab L'indice du dernier \u00e9l\u00e9ment d'un tableau tab est len(tab)-1 . On parcourt ici dans l'ordre inverse (revoir l'instruction range si n\u00e9cessaire) Cette portion du programme est une recherche classique de maximum. Ici on \u00e9change le maximum trouv\u00e9 avec l'\u00e9l\u00e9ment d'indice k Attention En d\u00e9pit du nom tri_it\u00e9ratif , il fallait reconna\u00eetre ici l'algorithme du tri par s\u00e9lection. Les listes \u00e9tant mutables, tab est modifi\u00e9e par la fonction (tri en place), alors que le return finale peut laisser penser qu'on veut r\u00e9cup\u00e9rer un \"nouveau tableau\". Le test ligne 7 peut para\u00eetre surprenant mais comme on a cherch\u00e9 le maximum entre les indices 0 et k-1 , on doit v\u00e9rifier qu'il ne se trouve pas \u00e0 l'indice k (dans ce cas l'\u00e9change n'est pas n\u00e9cessaire). On aurait pu chercher entre 0 et k et \u00e9viter ce test.","title":"Exercice 2"},{"location":"backup/2022-S28/","text":"Corrig\u00e9 sujet 28 - Ann\u00e9e : 2022 Sujet 28 - 20222 Exercice 1 1 2 3 4 5 def moyenne ( tab ): somme = 0 for valeur in tab : somme = somme + valeur return somme / len ( tab ) Commentaires C'est un exercice classique de parcours d'un it\u00e9rable. Un parcours par \u00e9l\u00e9ment suffit. Exercice 2 1 2 3 4 5 6 7 def dec_to_bin ( a ): bin_a = str ( a % 2 ) #(1) a = a // 2 while a != 0 : #(2) bin_a = str ( a % 2 ) + bin_a #(3) a = a // 2 return bin_a C'est algorithme des divisions successives, on initialise avec le premier chiffre (donc le reste dans division euclidenne de a par 2) L'algorithme s'arr\u00eate lorsque a vaut 0 L'algorithme donne l'ordre inverse (du dernier ou premier), on ajoute donc les chiffres successivement obtenu devant l'\u00e9criture binaire.","title":"2022 S28"},{"location":"backup/2022-S28/#corrige-sujet-28-annee-2022","text":"Sujet 28 - 20222","title":"Corrig\u00e9 sujet 28 - Ann\u00e9e : 2022"},{"location":"backup/2022-S28/#exercice-1","text":"1 2 3 4 5 def moyenne ( tab ): somme = 0 for valeur in tab : somme = somme + valeur return somme / len ( tab ) Commentaires C'est un exercice classique de parcours d'un it\u00e9rable. Un parcours par \u00e9l\u00e9ment suffit.","title":"Exercice 1"},{"location":"backup/2022-S28/#exercice-2","text":"1 2 3 4 5 6 7 def dec_to_bin ( a ): bin_a = str ( a % 2 ) #(1) a = a // 2 while a != 0 : #(2) bin_a = str ( a % 2 ) + bin_a #(3) a = a // 2 return bin_a C'est algorithme des divisions successives, on initialise avec le premier chiffre (donc le reste dans division euclidenne de a par 2) L'algorithme s'arr\u00eate lorsque a vaut 0 L'algorithme donne l'ordre inverse (du dernier ou premier), on ajoute donc les chiffres successivement obtenu devant l'\u00e9criture binaire.","title":"Exercice 2"},{"location":"backup/2022-S29/","text":"Corrig\u00e9 sujet 29 - Ann\u00e9e : 2022 Sujet 29 - 20222 Exercice 1 Bug La fonction s'appelle fibonacci (un n et deux c) et on parle de la suite de Fibonnaci (un c et deux n). L'orthographe correcte est Fibonacci. 1 2 3 4 5 def fibonacci ( n ): d = { 1 : 1 , 2 : 1 } for k in range ( 3 , n + 1 ): d [ k ] = d [ k - 1 ] + d [ k - 2 ] return d [ n ] Commentaires On peut aussi utiliser une liste, mais les indices sont alors d\u00e9cal\u00e9s (le premier \u00e9l\u00e9ment d'une liste a pour indice 0 alors que le premier \u00e9l\u00e9ment de la suite a pour indice 1. L'utilisation d'un dictionnaire simplifie le probl\u00e8me. Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 liste_eleves = [ 'a' , 'b' , 'c' , 'd' , 'e' , 'f' , 'g' , 'h' , 'i' , 'j' ] liste_notes = [ 1 , 40 , 80 , 60 , 58 , 80 , 75 , 80 , 60 , 24 ] def meilleures_notes (): note_maxi = 0 nb_eleves_note_maxi = 0 #(1) liste_maxi = [] for compteur in range ( len ( liste_eleves )): if liste_notes [ compteur ] == note_maxi : #(2) nb_eleves_note_maxi = nb_eleves_note_maxi + 1 liste_maxi . append ( liste_eleves [ compteur ]) if liste_notes [ compteur ] > note_maxi : note_maxi = liste_notes [ compteur ] nb_eleves_note_maxi = 1 #(3) liste_maxi = [ liste_eleves [ compteur ]] return ( note_maxi , nb_eleves_note_maxi , liste_maxi ) On travaille avec trois variables : la note maximale courante, le nombre d'\u00e9l\u00e8ves ayant cette note et la liste de ces \u00e9l\u00e8ves. Lors du parcours de la liste de note, si on trouve une note \u00e9gale \u00e0 la note maximale alors on ajoute l'\u00e9l\u00e8ve concern\u00e9e \u00e0 la liste de ceux ayant la meilleure note Si on trouve une note sup\u00e9rieur au maximum courant, cette note devient le nouveau maximum et un seul \u00e9l\u00e8ve a cette note, liste_maxi et nb_eleves_note_maxi sont donc mis \u00e0 jour en cons\u00e9quence Attention L'int\u00e9r\u00eat d'une fonction est de pouvoir \u00eatre appel\u00e9e au sein d'un m\u00eame programme avec des arguments diff\u00e9rents. Par cons\u00e9quent, liste_eleves et liste_notes devraient \u00eatre des arguments de la fonction meilleures_notes et pas des variables globales du programme. Cette fa\u00e7on de proc\u00e9der est clairement une mauvaise pratique de programmation.","title":"2022 S29"},{"location":"backup/2022-S29/#corrige-sujet-29-annee-2022","text":"Sujet 29 - 20222","title":"Corrig\u00e9 sujet 29 - Ann\u00e9e : 2022"},{"location":"backup/2022-S29/#exercice-1","text":"Bug La fonction s'appelle fibonacci (un n et deux c) et on parle de la suite de Fibonnaci (un c et deux n). L'orthographe correcte est Fibonacci. 1 2 3 4 5 def fibonacci ( n ): d = { 1 : 1 , 2 : 1 } for k in range ( 3 , n + 1 ): d [ k ] = d [ k - 1 ] + d [ k - 2 ] return d [ n ] Commentaires On peut aussi utiliser une liste, mais les indices sont alors d\u00e9cal\u00e9s (le premier \u00e9l\u00e9ment d'une liste a pour indice 0 alors que le premier \u00e9l\u00e9ment de la suite a pour indice 1. L'utilisation d'un dictionnaire simplifie le probl\u00e8me.","title":"Exercice 1"},{"location":"backup/2022-S29/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 liste_eleves = [ 'a' , 'b' , 'c' , 'd' , 'e' , 'f' , 'g' , 'h' , 'i' , 'j' ] liste_notes = [ 1 , 40 , 80 , 60 , 58 , 80 , 75 , 80 , 60 , 24 ] def meilleures_notes (): note_maxi = 0 nb_eleves_note_maxi = 0 #(1) liste_maxi = [] for compteur in range ( len ( liste_eleves )): if liste_notes [ compteur ] == note_maxi : #(2) nb_eleves_note_maxi = nb_eleves_note_maxi + 1 liste_maxi . append ( liste_eleves [ compteur ]) if liste_notes [ compteur ] > note_maxi : note_maxi = liste_notes [ compteur ] nb_eleves_note_maxi = 1 #(3) liste_maxi = [ liste_eleves [ compteur ]] return ( note_maxi , nb_eleves_note_maxi , liste_maxi ) On travaille avec trois variables : la note maximale courante, le nombre d'\u00e9l\u00e8ves ayant cette note et la liste de ces \u00e9l\u00e8ves. Lors du parcours de la liste de note, si on trouve une note \u00e9gale \u00e0 la note maximale alors on ajoute l'\u00e9l\u00e8ve concern\u00e9e \u00e0 la liste de ceux ayant la meilleure note Si on trouve une note sup\u00e9rieur au maximum courant, cette note devient le nouveau maximum et un seul \u00e9l\u00e8ve a cette note, liste_maxi et nb_eleves_note_maxi sont donc mis \u00e0 jour en cons\u00e9quence Attention L'int\u00e9r\u00eat d'une fonction est de pouvoir \u00eatre appel\u00e9e au sein d'un m\u00eame programme avec des arguments diff\u00e9rents. Par cons\u00e9quent, liste_eleves et liste_notes devraient \u00eatre des arguments de la fonction meilleures_notes et pas des variables globales du programme. Cette fa\u00e7on de proc\u00e9der est clairement une mauvaise pratique de programmation.","title":"Exercice 2"},{"location":"backup/2022-S30/","text":"Corrig\u00e9 sujet 30 - Ann\u00e9e : 2022 Sujet 30 - 20222 Exercice 1 1 2 3 4 5 6 7 8 9 10 11 12 def fusion ( tab1 , tab2 ): i1 , i2 = 0 , 0 tab = [] while i1 < len ( tab1 ) and i2 < len ( tab2 ): if tab1 [ i1 ] < tab2 [ i2 ]: tab . append ( tab1 [ i1 ]) i1 += 1 else : tab . append ( tab2 [ i2 ]) i2 += 1 tab = tab + tab1 [ i1 :] + tab2 [ i2 :] return tab Commentaire M\u00eame si le tri fusion est au programme de terminale, l'exercice est sans doute difficile. On rappelle que pour fusionner deux listes d\u00e9j\u00e0 tri\u00e9es, on peut : parcourir les deux listes en comparant leurs \u00e9l\u00e9ments, le plus petit est plac\u00e9 dans la liste fusion et on progresse dans le parcours de la liste correspondante lorsque la fin d'une deux listes est atteinte on compl\u00e8te avec les \u00e9l\u00e9ments de l'autre. Exercice 2 Bug Il y a des diff\u00e9rences notables (indentation, lignes, ....) entre le code python qui figure sur le sujet au format pdf et le code python fourni avec le sujet sous forme d'un fichier .py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 def rom_to_dec ( nombre ): \"\"\" Renvoie l\u2019\u00e9criture d\u00e9cimale du nombre donn\u00e9 en chiffres romains \"\"\" dico = { \"I\" : 1 , \"V\" : 5 , \"X\" : 10 , \"L\" : 50 , \"C\" : 100 , \"D\" : 500 , \"M\" : 1000 } #(1) if len ( nombre ) == 1 : return dico [ nombre ] #(2) else : ### on supprime le premier caract\u00e8re de la cha\u00eene contenue dans la variable nombre ### et cette nouvelle cha\u00eene est enregistr\u00e9e dans la variable nombre_droite nombre_droite = nombre [ 1 :] if dico [ nombre [ 0 ]] >= dico [ nombre [ 1 ]]: return dico [ nombre [ 0 ]] + rom_to_dec ( nombre_droite ) #(3) else : return rom_to_dec ( nombre_droite ) - dico [ nombre [ 0 ]] #(4) On compl\u00e8te avec les valeurs des chiffres romains (donn\u00e9es dans l'\u00e9nonc\u00e9). Si le nombre contient un unique chiffre, on renvoie sa valeur. Ici, il faut ajouter la valeur de la premi\u00e8re lettre car elle est sup\u00e9rieure \u00e0 la valeur de la lettre suivante. Ici, il faut soustraire car elle est inf\u00e9rieure \u00e0 la valeur de la lettre suivante. Attention Le sujet utilise les slices ( nombre_droite = nombre[1:] ) qui ne sont pas au programme.","title":"2022 S30"},{"location":"backup/2022-S30/#corrige-sujet-30-annee-2022","text":"Sujet 30 - 20222","title":"Corrig\u00e9 sujet 30 - Ann\u00e9e : 2022"},{"location":"backup/2022-S30/#exercice-1","text":"1 2 3 4 5 6 7 8 9 10 11 12 def fusion ( tab1 , tab2 ): i1 , i2 = 0 , 0 tab = [] while i1 < len ( tab1 ) and i2 < len ( tab2 ): if tab1 [ i1 ] < tab2 [ i2 ]: tab . append ( tab1 [ i1 ]) i1 += 1 else : tab . append ( tab2 [ i2 ]) i2 += 1 tab = tab + tab1 [ i1 :] + tab2 [ i2 :] return tab Commentaire M\u00eame si le tri fusion est au programme de terminale, l'exercice est sans doute difficile. On rappelle que pour fusionner deux listes d\u00e9j\u00e0 tri\u00e9es, on peut : parcourir les deux listes en comparant leurs \u00e9l\u00e9ments, le plus petit est plac\u00e9 dans la liste fusion et on progresse dans le parcours de la liste correspondante lorsque la fin d'une deux listes est atteinte on compl\u00e8te avec les \u00e9l\u00e9ments de l'autre.","title":"Exercice 1"},{"location":"backup/2022-S30/#exercice-2","text":"Bug Il y a des diff\u00e9rences notables (indentation, lignes, ....) entre le code python qui figure sur le sujet au format pdf et le code python fourni avec le sujet sous forme d'un fichier .py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 def rom_to_dec ( nombre ): \"\"\" Renvoie l\u2019\u00e9criture d\u00e9cimale du nombre donn\u00e9 en chiffres romains \"\"\" dico = { \"I\" : 1 , \"V\" : 5 , \"X\" : 10 , \"L\" : 50 , \"C\" : 100 , \"D\" : 500 , \"M\" : 1000 } #(1) if len ( nombre ) == 1 : return dico [ nombre ] #(2) else : ### on supprime le premier caract\u00e8re de la cha\u00eene contenue dans la variable nombre ### et cette nouvelle cha\u00eene est enregistr\u00e9e dans la variable nombre_droite nombre_droite = nombre [ 1 :] if dico [ nombre [ 0 ]] >= dico [ nombre [ 1 ]]: return dico [ nombre [ 0 ]] + rom_to_dec ( nombre_droite ) #(3) else : return rom_to_dec ( nombre_droite ) - dico [ nombre [ 0 ]] #(4) On compl\u00e8te avec les valeurs des chiffres romains (donn\u00e9es dans l'\u00e9nonc\u00e9). Si le nombre contient un unique chiffre, on renvoie sa valeur. Ici, il faut ajouter la valeur de la premi\u00e8re lettre car elle est sup\u00e9rieure \u00e0 la valeur de la lettre suivante. Ici, il faut soustraire car elle est inf\u00e9rieure \u00e0 la valeur de la lettre suivante. Attention Le sujet utilise les slices ( nombre_droite = nombre[1:] ) qui ne sont pas au programme.","title":"Exercice 2"},{"location":"backup/2022-S31/","text":"Corrig\u00e9 sujet 31 - Ann\u00e9e : 2022 Sujet 31 - 20222 Exercice 1 1 2 3 4 5 6 def recherche ( a , t ): nb_occurence = 0 for elt in t : if elt == a : nb_occurence += 1 return nb_occurence Commentaires C'est un exercice classique de parcours d'un it\u00e9rable en comptant les occurrences d'apparition d'une valeur. Un parcours par \u00e9l\u00e9ment suffit, les indices des occurrences n'\u00e9tant pas utilis\u00e9es. Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 def rendu_monnaie_centimes ( s_due , s_versee ): pieces = [ 1 , 2 , 5 , 10 , 20 , 50 , 100 , 200 ] rendu = [] #(1) a_rendre = s_versee - s_due #(2) i = len ( pieces ) - 1 while a_rendre > 0 : #(3) if pieces [ i ] <= a_rendre : rendu . append ( pieces [ i ]) #(4) a_rendre = a_rendre - pieces [ i ] else : i = i - 1 return rendu La liste des pi\u00e8ces \u00e0 rendre, initialis\u00e9e \u00e0 [] La somme \u00e0 rendre, initialis\u00e9 \u00e0 s_versee - s_due La condition d'arr\u00eat, plus rien \u00e0 rendre C'est l'algorithme glouton classique pour le rendu de monnaie (les pieces sont rang\u00e9es dans l'ordre). Si la pi\u00e8ce est inf\u00e9rieure \u00e0 la somme \u00e0 rendre, on l'ajoute au rendu et on diminue la somme \u00e0 rendre. Sinon on passe \u00e0 la pi\u00e8ce suivante. Attention On utilise ici une liste de pi\u00e8ces class\u00e9es par ordre croissant de valeurs, cela oblige donc \u00e0 commencer par la fin de la liste. C'est ce qui explique le parcours de la liste \"\u00e0 l'envers\" : initialisation de i \u00e0 len(pi\u00e8ces)-1 puis d\u00e9cr\u00e9mentation de i . La fonction utilise deux arguments s_versee et s_due pour calculer la somme \u00e0 rendre ( s_versee-s_due ), on pourrait directement une fonction qui prend en argument la somme \u00e0 rendre.","title":"2022 S31"},{"location":"backup/2022-S31/#corrige-sujet-31-annee-2022","text":"Sujet 31 - 20222","title":"Corrig\u00e9 sujet 31 - Ann\u00e9e : 2022"},{"location":"backup/2022-S31/#exercice-1","text":"1 2 3 4 5 6 def recherche ( a , t ): nb_occurence = 0 for elt in t : if elt == a : nb_occurence += 1 return nb_occurence Commentaires C'est un exercice classique de parcours d'un it\u00e9rable en comptant les occurrences d'apparition d'une valeur. Un parcours par \u00e9l\u00e9ment suffit, les indices des occurrences n'\u00e9tant pas utilis\u00e9es.","title":"Exercice 1"},{"location":"backup/2022-S31/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 def rendu_monnaie_centimes ( s_due , s_versee ): pieces = [ 1 , 2 , 5 , 10 , 20 , 50 , 100 , 200 ] rendu = [] #(1) a_rendre = s_versee - s_due #(2) i = len ( pieces ) - 1 while a_rendre > 0 : #(3) if pieces [ i ] <= a_rendre : rendu . append ( pieces [ i ]) #(4) a_rendre = a_rendre - pieces [ i ] else : i = i - 1 return rendu La liste des pi\u00e8ces \u00e0 rendre, initialis\u00e9e \u00e0 [] La somme \u00e0 rendre, initialis\u00e9 \u00e0 s_versee - s_due La condition d'arr\u00eat, plus rien \u00e0 rendre C'est l'algorithme glouton classique pour le rendu de monnaie (les pieces sont rang\u00e9es dans l'ordre). Si la pi\u00e8ce est inf\u00e9rieure \u00e0 la somme \u00e0 rendre, on l'ajoute au rendu et on diminue la somme \u00e0 rendre. Sinon on passe \u00e0 la pi\u00e8ce suivante. Attention On utilise ici une liste de pi\u00e8ces class\u00e9es par ordre croissant de valeurs, cela oblige donc \u00e0 commencer par la fin de la liste. C'est ce qui explique le parcours de la liste \"\u00e0 l'envers\" : initialisation de i \u00e0 len(pi\u00e8ces)-1 puis d\u00e9cr\u00e9mentation de i . La fonction utilise deux arguments s_versee et s_due pour calculer la somme \u00e0 rendre ( s_versee-s_due ), on pourrait directement une fonction qui prend en argument la somme \u00e0 rendre.","title":"Exercice 2"},{"location":"backup/2022-S32/","text":"Corrig\u00e9 sujet 32 - Ann\u00e9e : 2022 Sujet 32 - 20222 Exercice 1 1 2 3 4 5 def recherche ( elt , tab ): for i in range ( len ( tab ) - 1 , - 1 , - 1 ): if elt == tab [ i ]: return i return - 1 Commentaires Le sujet demande de rechercher la derni\u00e8re occurrence, la correction propos\u00e9e ici parcourt la liste \u00e0 l'envers et renvoie la premi\u00e8re occurrence rencontr\u00e9e. Il faut donc dans ce cas savoir \u00e0 \u00e9crire un parcours \u00e0 l'envers \u00e0 l'aide de range . On peut faire aussi parcourir dans le sens normal jusqu'\u00e0 la fin et mettre la jour l'indice \u00e0 chaque fois qu'on rencontre la valeur: def recherche ( elt , tab ): indice = - 1 for i in range ( len ( tab )): if tab [ i ] == elt : indice = i return indice Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 class AdresseIP : def __init__ ( self , adresse ): self . adresse = adresse def liste_octet ( self ): \"\"\"renvoie une liste de nombres entiers, la liste des octets de l'adresse IP\"\"\" return [ int ( i ) for i in self . adresse . split ( \".\" )] def est_reservee ( self ): \"\"\"renvoie True si l'adresse IP est une adresse r\u00e9serv\u00e9e, False sinon\"\"\" return self . liste_octet ()[ 3 ] == 0 or self . liste_octet ()[ 3 ] == 0 #(1) def adresse_suivante ( self ): \"\"\"renvoie un objet de AdresseIP avec l'adresse IP qui suit l\u2019adresse self si elle existe et False sinon\"\"\" if self . liste_octet ()[ 3 ] < 254 : octet_nouveau = self . liste_octet ()[ 3 ] + 1 return AdresseIP ( '192.168.0.' + str ( octet_nouveau )) #(2) else : return False Le dernier octet est le 4\u00e8me \u00e9l\u00e9ment (donc celui d'indice 3) de la liste renvoy\u00e9e par la m\u00e9thode liste_octet . L'adresse est r\u00e9serv\u00e9e lorsque ce dernier octect vaut 0 ou 255. Attention \u00e0 la conversion de type, pour concat\u00e9ner le d\u00e9but de l'adresse avec le dernier octet Attention La m\u00e9thode split des chaines de caract\u00e8res est utilis\u00e9e sans explications ni exemples dans la m\u00e9thode liste_octet . Bien comprendre que cette m\u00e9thode permet de convertir une adresse comme \"192.168.0.0\" (une chaine de caract\u00e8res) en [192,168,0,0] (liste d'entiers).","title":"2022 S32"},{"location":"backup/2022-S32/#corrige-sujet-32-annee-2022","text":"Sujet 32 - 20222","title":"Corrig\u00e9 sujet 32 - Ann\u00e9e : 2022"},{"location":"backup/2022-S32/#exercice-1","text":"1 2 3 4 5 def recherche ( elt , tab ): for i in range ( len ( tab ) - 1 , - 1 , - 1 ): if elt == tab [ i ]: return i return - 1 Commentaires Le sujet demande de rechercher la derni\u00e8re occurrence, la correction propos\u00e9e ici parcourt la liste \u00e0 l'envers et renvoie la premi\u00e8re occurrence rencontr\u00e9e. Il faut donc dans ce cas savoir \u00e0 \u00e9crire un parcours \u00e0 l'envers \u00e0 l'aide de range . On peut faire aussi parcourir dans le sens normal jusqu'\u00e0 la fin et mettre la jour l'indice \u00e0 chaque fois qu'on rencontre la valeur: def recherche ( elt , tab ): indice = - 1 for i in range ( len ( tab )): if tab [ i ] == elt : indice = i return indice","title":"Exercice 1"},{"location":"backup/2022-S32/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 class AdresseIP : def __init__ ( self , adresse ): self . adresse = adresse def liste_octet ( self ): \"\"\"renvoie une liste de nombres entiers, la liste des octets de l'adresse IP\"\"\" return [ int ( i ) for i in self . adresse . split ( \".\" )] def est_reservee ( self ): \"\"\"renvoie True si l'adresse IP est une adresse r\u00e9serv\u00e9e, False sinon\"\"\" return self . liste_octet ()[ 3 ] == 0 or self . liste_octet ()[ 3 ] == 0 #(1) def adresse_suivante ( self ): \"\"\"renvoie un objet de AdresseIP avec l'adresse IP qui suit l\u2019adresse self si elle existe et False sinon\"\"\" if self . liste_octet ()[ 3 ] < 254 : octet_nouveau = self . liste_octet ()[ 3 ] + 1 return AdresseIP ( '192.168.0.' + str ( octet_nouveau )) #(2) else : return False Le dernier octet est le 4\u00e8me \u00e9l\u00e9ment (donc celui d'indice 3) de la liste renvoy\u00e9e par la m\u00e9thode liste_octet . L'adresse est r\u00e9serv\u00e9e lorsque ce dernier octect vaut 0 ou 255. Attention \u00e0 la conversion de type, pour concat\u00e9ner le d\u00e9but de l'adresse avec le dernier octet Attention La m\u00e9thode split des chaines de caract\u00e8res est utilis\u00e9e sans explications ni exemples dans la m\u00e9thode liste_octet . Bien comprendre que cette m\u00e9thode permet de convertir une adresse comme \"192.168.0.0\" (une chaine de caract\u00e8res) en [192,168,0,0] (liste d'entiers).","title":"Exercice 2"},{"location":"backup/2022-S33/","text":"Corrig\u00e9 sujet 33 - Ann\u00e9e : 2022 Sujet 33 - 20222 Exercice 1 1 2 3 4 5 6 7 def convertir ( T ): poids = len ( T ) - 1 valeur = 0 for elt in T : valeur += 2 ** poids * elt poids -= 1 return valeur Commentaires On peut aussi effectuer un parcours par indice (cela invite d'utiliser la variable poids ) Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 def tri_insertion ( L ): n = len ( L ) # cas du tableau vide if L == []: return L for j in range ( 1 , n ): e = L [ j ] i = j # A l'etape j, le sous-tableau L[0,j-1] est trie # et on insere L[j] dans ce sous-tableau en determinant # le plus petit i tel que 0 <= i <= j et L[i-1] > L[j]. while i > 0 and L [ i - 1 ] > L [ j ]: #(1) i = i - 1 # si i != j, on decale le sous tableau L[i,j-1] d'un cran # vers la droite et on place L[j] en position i if i != j : for k in range ( j , i , - 1 ): #(2) L [ k ] = L [ k - 1 ] L [ i ] = e #(3) return L On se contente de suivre les indications donn\u00e9es en commentaire. On d\u00e9cale les \u00e9l\u00e9ments de fa\u00e7on \u00e0 laisser libre l'emplacement d'indice i . On a sauvegard\u00e9 dans e la valeur \u00e0 ins\u00e9rer. Attention On peut regretter les noms de variables courts et donc fort peu explicites. L'insertion dans le d\u00e9but de liste se fait souvent en \u00e9changeant le nombre avec son voisin de droite tant qu'il lui est inf\u00e9rieur (ou que le d\u00e9but de liste n'est pas atteint) Le commentaire ligne 18 parle du \"sous tableau L[i,j-1]\" , il faut comprendre les \u00e9l\u00e9ments du tableau dont les indices sont entre i et j-1 . De m\u00eame ligne 12 pour le sous tableau L[0,j-1] . Cette fonction fait un tri en place et modifie donc la liste L , le return final laisse cependant croire qu'on a construit un nouveau table qu'on souhaite renvoyer.","title":"2022 S33"},{"location":"backup/2022-S33/#corrige-sujet-33-annee-2022","text":"Sujet 33 - 20222","title":"Corrig\u00e9 sujet 33 - Ann\u00e9e : 2022"},{"location":"backup/2022-S33/#exercice-1","text":"1 2 3 4 5 6 7 def convertir ( T ): poids = len ( T ) - 1 valeur = 0 for elt in T : valeur += 2 ** poids * elt poids -= 1 return valeur Commentaires On peut aussi effectuer un parcours par indice (cela invite d'utiliser la variable poids )","title":"Exercice 1"},{"location":"backup/2022-S33/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 def tri_insertion ( L ): n = len ( L ) # cas du tableau vide if L == []: return L for j in range ( 1 , n ): e = L [ j ] i = j # A l'etape j, le sous-tableau L[0,j-1] est trie # et on insere L[j] dans ce sous-tableau en determinant # le plus petit i tel que 0 <= i <= j et L[i-1] > L[j]. while i > 0 and L [ i - 1 ] > L [ j ]: #(1) i = i - 1 # si i != j, on decale le sous tableau L[i,j-1] d'un cran # vers la droite et on place L[j] en position i if i != j : for k in range ( j , i , - 1 ): #(2) L [ k ] = L [ k - 1 ] L [ i ] = e #(3) return L On se contente de suivre les indications donn\u00e9es en commentaire. On d\u00e9cale les \u00e9l\u00e9ments de fa\u00e7on \u00e0 laisser libre l'emplacement d'indice i . On a sauvegard\u00e9 dans e la valeur \u00e0 ins\u00e9rer. Attention On peut regretter les noms de variables courts et donc fort peu explicites. L'insertion dans le d\u00e9but de liste se fait souvent en \u00e9changeant le nombre avec son voisin de droite tant qu'il lui est inf\u00e9rieur (ou que le d\u00e9but de liste n'est pas atteint) Le commentaire ligne 18 parle du \"sous tableau L[i,j-1]\" , il faut comprendre les \u00e9l\u00e9ments du tableau dont les indices sont entre i et j-1 . De m\u00eame ligne 12 pour le sous tableau L[0,j-1] . Cette fonction fait un tri en place et modifie donc la liste L , le return final laisse cependant croire qu'on a construit un nouveau table qu'on souhaite renvoyer.","title":"Exercice 2"},{"location":"backup/2022-S34/","text":"Corrig\u00e9 sujet 34 - Ann\u00e9e : 2022 Sujet 34 - 20222 Exercice 1 Bug Il y a une faute de frappe dans la variable alphabet de l'\u00e9nonc\u00e9 (une virgule en trop dans la valeur 'o,' ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 alphabet = [ 'a' , 'b' , 'c' , 'd' , 'e' , 'f' , 'g' , 'h' , 'i' , 'j' , 'k' , 'l' , 'm' , 'n' , 'o' , 'p' , 'q' , 'r' , 's' , 't' , 'u' , 'v' , 'w' , 'x' , 'y' , 'z' ] def occurrence_max ( ch ): occurrence = [ 0 ] * 26 for caractere in ch : if caractere in alphabet : index_caractere = alphabet . index ( caractere ) occurrence [ index_caractere ] += 1 indice_max_occurence = 0 max_occurence = occurrence [ 0 ] for i in range ( 0 , len ( occurrence )): if occurrence [ i ] > max_occurence : max_occurence = occurrence [ i ] indice_max_occurence = i return alphabet [ indice_max_occurence ] Commentaires Le probl\u00e8me du nombre d'occurrence maximal d'un caract\u00e8re dans un texte peut aussi se r\u00e9soudre en utilisant un dictionnaire dont les cl\u00e9s sont les caract\u00e8res et les valeurs les nombres d'occurrences. On utilise dans la correction propos\u00e9e ici, la m\u00e9thode index qui renvoie l'indice de la premi\u00e8re apparition d'un \u00e9l\u00e9ment dans une liste. On peut aussi rechercher cet indice en effectuant un parcourt de la liste. Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 def nbLig ( image ): '''renvoie le nombre de lignes de l'image''' return len ( image ) #(1) def nbCol ( image ): '''renvoie la largeur de l'image''' return len ( image [ 0 ]) #(2) def negatif ( image ): '''renvoie le negatif de l'image sous la forme d'une liste de listes''' L = [[ 0 for k in range ( nbCol ( image ))] for i in range ( nbLig ( image ))] # on cree une image de 0 aux memes dimensions que le parametre image for i in range ( len ( image )): for j in range ( nbCol ( image )): #(3) L [ i ][ j ] = 255 - image [ i ][ j ] #(4) return L def binaire ( image , seuil ): '''renvoie une image binarisee de l'image sous la forme d'une liste de listes contenant des 0 si la valeur du pixel est strictement inferieure au seuil et 1 sinon''' L = [[ 0 for k in range ( nbCol ( image ))] for i in range ( nbLig ( image ))] # on cree une image de 0 aux memes dimensions que le parametre image for i in range ( len ( image )): for j in range ( nbCol ( image )): if image [ i ][ j ] < seuil : #(5) L [ i ][ j ] = 0 else : L [ i ][ j ] = 1 return L Comme indiqu\u00e9 dans l'\u00e9nonc\u00e9, une image est une listes de listes (toutes de m\u00eame longueur).la hauteur de l'image est le nombres de listes La largeur de l'image est la longueur d'une sous-liste (elles ont toute la m\u00eame longueur). On utilise la fonction nbCol d\u00e9finie plus haut Se r\u00e9f\u00e9rer \u00e0 l'\u00e9nonc\u00e9 : la somme du pixel et de son n\u00e9gatif doit faire 255. On applique l'algorithme donn\u00e9 en commentaire : le pixel est mis \u00e0 0 s'il est inf\u00e9rieur au seuil et \u00e0 1 sinon. Attention On peut regretter que le programme d\u00e9finisse les fonctions nbLig et nbCol afin de r\u00e9cup\u00e9rer les dimensions d'une image mais ne les utilise pas pour parcourir l'image (voir ligne 14 et 25)","title":"2022 S34"},{"location":"backup/2022-S34/#corrige-sujet-34-annee-2022","text":"Sujet 34 - 20222","title":"Corrig\u00e9 sujet 34 - Ann\u00e9e : 2022"},{"location":"backup/2022-S34/#exercice-1","text":"Bug Il y a une faute de frappe dans la variable alphabet de l'\u00e9nonc\u00e9 (une virgule en trop dans la valeur 'o,' ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 alphabet = [ 'a' , 'b' , 'c' , 'd' , 'e' , 'f' , 'g' , 'h' , 'i' , 'j' , 'k' , 'l' , 'm' , 'n' , 'o' , 'p' , 'q' , 'r' , 's' , 't' , 'u' , 'v' , 'w' , 'x' , 'y' , 'z' ] def occurrence_max ( ch ): occurrence = [ 0 ] * 26 for caractere in ch : if caractere in alphabet : index_caractere = alphabet . index ( caractere ) occurrence [ index_caractere ] += 1 indice_max_occurence = 0 max_occurence = occurrence [ 0 ] for i in range ( 0 , len ( occurrence )): if occurrence [ i ] > max_occurence : max_occurence = occurrence [ i ] indice_max_occurence = i return alphabet [ indice_max_occurence ] Commentaires Le probl\u00e8me du nombre d'occurrence maximal d'un caract\u00e8re dans un texte peut aussi se r\u00e9soudre en utilisant un dictionnaire dont les cl\u00e9s sont les caract\u00e8res et les valeurs les nombres d'occurrences. On utilise dans la correction propos\u00e9e ici, la m\u00e9thode index qui renvoie l'indice de la premi\u00e8re apparition d'un \u00e9l\u00e9ment dans une liste. On peut aussi rechercher cet indice en effectuant un parcourt de la liste.","title":"Exercice 1"},{"location":"backup/2022-S34/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 def nbLig ( image ): '''renvoie le nombre de lignes de l'image''' return len ( image ) #(1) def nbCol ( image ): '''renvoie la largeur de l'image''' return len ( image [ 0 ]) #(2) def negatif ( image ): '''renvoie le negatif de l'image sous la forme d'une liste de listes''' L = [[ 0 for k in range ( nbCol ( image ))] for i in range ( nbLig ( image ))] # on cree une image de 0 aux memes dimensions que le parametre image for i in range ( len ( image )): for j in range ( nbCol ( image )): #(3) L [ i ][ j ] = 255 - image [ i ][ j ] #(4) return L def binaire ( image , seuil ): '''renvoie une image binarisee de l'image sous la forme d'une liste de listes contenant des 0 si la valeur du pixel est strictement inferieure au seuil et 1 sinon''' L = [[ 0 for k in range ( nbCol ( image ))] for i in range ( nbLig ( image ))] # on cree une image de 0 aux memes dimensions que le parametre image for i in range ( len ( image )): for j in range ( nbCol ( image )): if image [ i ][ j ] < seuil : #(5) L [ i ][ j ] = 0 else : L [ i ][ j ] = 1 return L Comme indiqu\u00e9 dans l'\u00e9nonc\u00e9, une image est une listes de listes (toutes de m\u00eame longueur).la hauteur de l'image est le nombres de listes La largeur de l'image est la longueur d'une sous-liste (elles ont toute la m\u00eame longueur). On utilise la fonction nbCol d\u00e9finie plus haut Se r\u00e9f\u00e9rer \u00e0 l'\u00e9nonc\u00e9 : la somme du pixel et de son n\u00e9gatif doit faire 255. On applique l'algorithme donn\u00e9 en commentaire : le pixel est mis \u00e0 0 s'il est inf\u00e9rieur au seuil et \u00e0 1 sinon. Attention On peut regretter que le programme d\u00e9finisse les fonctions nbLig et nbCol afin de r\u00e9cup\u00e9rer les dimensions d'une image mais ne les utilise pas pour parcourir l'image (voir ligne 14 et 25)","title":"Exercice 2"},{"location":"backup/2022-S35/","text":"Corrig\u00e9 sujet 35 - Ann\u00e9e : 2022 Sujet 35 - 20222 Exercice 1 1 2 3 4 5 def moyenne ( tab ): somme = 0 for valeur in tab : somme = somme + valeur return somme / len ( tab ) Commentaires Exercice classique de parcours d'une liste, un parcours par \u00e9l\u00e9ment suffit les indices n'\u00e9tant pas utilis\u00e9s. Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 def dichotomie ( tab , x ): \"\"\" tab : tableau trie dans l'ordre croissant x : nombre entier La fonction renvoie True si tab contient x et False sinon \"\"\" # cas du tableau vide if tab == []: #(1) return False , 1 # cas ou x n'est pas compris entre les valeurs extremes if ( x < tab [ 0 ]) or ( x > tab [ len ( tab ) - 1 ]): return False , 2 #(2) debut = 0 fin = len ( tab ) - 1 while debut <= fin : m = ( debut + fin ) // 2 #(3) if x == tab [ m ]: return True if x > tab [ m ]: debut = m + 1 else : fin = m - 1 return False , 3 #(4) Comme indiqu\u00e9 au dessus en commentaire : c'est le cas du tableau vide ! Valeur cherch\u00e9e en dehors des valeurs extr\u00eames, on rappelle que l'indice du dernier \u00e9l\u00e9ment d'un tableau tab est len(tab)-1 . Calcul de l'indice situ\u00e9 au milieu entre les deux indices de recherche. L'\u00e9nonc\u00e9 demande de renvoyer False,3 dans ce cas. Attention On utilise de fa\u00e7on pr\u00e9f\u00e9rentielle des fonctions ayant toujours le m\u00eame type de sortie, ici on a parfois un couple (bool\u00e9en, entier) (comme False,2 ) parfois un bool\u00e9en seul.","title":"2022 S35"},{"location":"backup/2022-S35/#corrige-sujet-35-annee-2022","text":"Sujet 35 - 20222","title":"Corrig\u00e9 sujet 35 - Ann\u00e9e : 2022"},{"location":"backup/2022-S35/#exercice-1","text":"1 2 3 4 5 def moyenne ( tab ): somme = 0 for valeur in tab : somme = somme + valeur return somme / len ( tab ) Commentaires Exercice classique de parcours d'une liste, un parcours par \u00e9l\u00e9ment suffit les indices n'\u00e9tant pas utilis\u00e9s.","title":"Exercice 1"},{"location":"backup/2022-S35/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 def dichotomie ( tab , x ): \"\"\" tab : tableau trie dans l'ordre croissant x : nombre entier La fonction renvoie True si tab contient x et False sinon \"\"\" # cas du tableau vide if tab == []: #(1) return False , 1 # cas ou x n'est pas compris entre les valeurs extremes if ( x < tab [ 0 ]) or ( x > tab [ len ( tab ) - 1 ]): return False , 2 #(2) debut = 0 fin = len ( tab ) - 1 while debut <= fin : m = ( debut + fin ) // 2 #(3) if x == tab [ m ]: return True if x > tab [ m ]: debut = m + 1 else : fin = m - 1 return False , 3 #(4) Comme indiqu\u00e9 au dessus en commentaire : c'est le cas du tableau vide ! Valeur cherch\u00e9e en dehors des valeurs extr\u00eames, on rappelle que l'indice du dernier \u00e9l\u00e9ment d'un tableau tab est len(tab)-1 . Calcul de l'indice situ\u00e9 au milieu entre les deux indices de recherche. L'\u00e9nonc\u00e9 demande de renvoyer False,3 dans ce cas. Attention On utilise de fa\u00e7on pr\u00e9f\u00e9rentielle des fonctions ayant toujours le m\u00eame type de sortie, ici on a parfois un couple (bool\u00e9en, entier) (comme False,2 ) parfois un bool\u00e9en seul.","title":"Exercice 2"},{"location":"backup/2022-S36/","text":"Corrig\u00e9 sujet 36 - Ann\u00e9e : 2022 Sujet 36 - 20222 Exercice 1 1 2 3 4 5 def recherche ( elt , tab ): for i in range ( len ( tab ) - 1 , - 1 , - 1 ): if elt == tab [ i ]: return i return len ( tab ) Commentaires Le sujet demande de rechercher la derni\u00e8re occurrence, la correction propos\u00e9e ici parcourt la liste \u00e0 l'envers et renvoie la premi\u00e8re occurrence rencontr\u00e9e. Il faut donc dans ce cas savoir \u00e0 \u00e9crire un parcours \u00e0 l'envers \u00e0 l'aide de range . On peut faire aussi parcourir dans le sens normal jusqu'\u00e0 la fin et mettre la jour l'indice \u00e0 chaque fois qu'on rencontre la valeur: def recherche ( tab , n ): indice_solution = len ( tab ) for i in range ( len ( tab )): if tab [ i ] == n : indice_solution = i return indice_solution Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 from math import sqrt # import de la fonction racine carree def distance ( point1 , point2 ): \"\"\" Calcule et renvoie la distance entre deux points. \"\"\" return sqrt (( point1 [ 0 ] - point2 [ 0 ]) ** 2 + ( point1 [ 1 ] - point2 [ 1 ]) ** 2 ) #(1) assert distance (( 1 , 0 ), ( 5 , 3 )) == 5.0 , \"erreur de calcul\" def plus_courte_distance ( tab , depart ): \"\"\" Renvoie le point du tableau tab se trouvant a la plus courte distance du point depart.\"\"\" point = tab [ 0 ] min_dist = distance ( point , depart ) #(2) for i in range ( 1 , len ( tab )): #(3) if distance ( tab [ i ], depart ) < min_dist : point = tab [ i ] min_dist = distance ( tab [ i ], depart ) return point Un point est un tuple (abcisse,ordonne) donc point[0] contient l'abscisse et point[1] l'ordonn\u00e9e. On initialise le minimum \u00e0 la distance entre le point de d\u00e9part et le premier point de la liste (celui d'indice 0) Algorithme classique de recherche du minimum Attention L'exercice demande aussi d'ajouter une ou des pr\u00e9conditions \u00e0 la fonction distance. Les points ayant des coordonn\u00e9es enti\u00e8res on peut proposer : assert type(point[0])==int and type(point[1])==int . On pourrait aussi s'assurer que point est un tuple de longueur 2. On doit \u00eatre tr\u00e8s prudent en utilisant les tests d'\u00e9galit\u00e9 avec des flottants tels que celui de la ligne 7","title":"2022 S36"},{"location":"backup/2022-S36/#corrige-sujet-36-annee-2022","text":"Sujet 36 - 20222","title":"Corrig\u00e9 sujet 36 - Ann\u00e9e : 2022"},{"location":"backup/2022-S36/#exercice-1","text":"1 2 3 4 5 def recherche ( elt , tab ): for i in range ( len ( tab ) - 1 , - 1 , - 1 ): if elt == tab [ i ]: return i return len ( tab ) Commentaires Le sujet demande de rechercher la derni\u00e8re occurrence, la correction propos\u00e9e ici parcourt la liste \u00e0 l'envers et renvoie la premi\u00e8re occurrence rencontr\u00e9e. Il faut donc dans ce cas savoir \u00e0 \u00e9crire un parcours \u00e0 l'envers \u00e0 l'aide de range . On peut faire aussi parcourir dans le sens normal jusqu'\u00e0 la fin et mettre la jour l'indice \u00e0 chaque fois qu'on rencontre la valeur: def recherche ( tab , n ): indice_solution = len ( tab ) for i in range ( len ( tab )): if tab [ i ] == n : indice_solution = i return indice_solution","title":"Exercice 1"},{"location":"backup/2022-S36/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 from math import sqrt # import de la fonction racine carree def distance ( point1 , point2 ): \"\"\" Calcule et renvoie la distance entre deux points. \"\"\" return sqrt (( point1 [ 0 ] - point2 [ 0 ]) ** 2 + ( point1 [ 1 ] - point2 [ 1 ]) ** 2 ) #(1) assert distance (( 1 , 0 ), ( 5 , 3 )) == 5.0 , \"erreur de calcul\" def plus_courte_distance ( tab , depart ): \"\"\" Renvoie le point du tableau tab se trouvant a la plus courte distance du point depart.\"\"\" point = tab [ 0 ] min_dist = distance ( point , depart ) #(2) for i in range ( 1 , len ( tab )): #(3) if distance ( tab [ i ], depart ) < min_dist : point = tab [ i ] min_dist = distance ( tab [ i ], depart ) return point Un point est un tuple (abcisse,ordonne) donc point[0] contient l'abscisse et point[1] l'ordonn\u00e9e. On initialise le minimum \u00e0 la distance entre le point de d\u00e9part et le premier point de la liste (celui d'indice 0) Algorithme classique de recherche du minimum Attention L'exercice demande aussi d'ajouter une ou des pr\u00e9conditions \u00e0 la fonction distance. Les points ayant des coordonn\u00e9es enti\u00e8res on peut proposer : assert type(point[0])==int and type(point[1])==int . On pourrait aussi s'assurer que point est un tuple de longueur 2. On doit \u00eatre tr\u00e8s prudent en utilisant les tests d'\u00e9galit\u00e9 avec des flottants tels que celui de la ligne 7","title":"Exercice 2"},{"location":"backup/2022-S37/","text":"Corrig\u00e9 sujet 37 - Ann\u00e9e : 2022 Sujet 37 - 20222 Exercice 1 1 2 3 4 5 def verifie ( liste ): for i in range ( len ( liste ) - 1 ): if liste [ i ] > liste [ i + 1 ]: return False return True Commentaire On se contente de v\u00e9rifier que chaque \u00e9l\u00e9ment est bien inf\u00e9rieur \u00e0 celui qui le suit dans le tableau. Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 urne = [ 'A' , 'A' , 'A' , 'B' , 'C' , 'B' , 'C' , 'B' , 'C' , 'B' ] def depouille ( urne ): resultat = {} #(1) for bulletin in urne : if bulletin in resultat : #(2) resultat [ bulletin ] = resultat [ bulletin ] + 1 else : resultat [ bulletin ] = 1 return resultat def vainqueur ( election ): vainqueur = '' nmax = 0 for candidat in election : if election [ candidat ] > nmax : #(3) nmax = election [ candidat ] vainqueur = candidat liste_finale = [ nom for nom in election if election [ nom ] == nmax ] #(4) return liste_finale Initialisation \u00e0 un dictionnaire vide. Si la cl\u00e9 existe dans le dictionnaire on incr\u00e9mente sa valeur de 1, sinon on ajoute cette cl\u00e9 avec la valeur 1 (c'est le premier vote pour ce groupe) Algorithme classique de recherche du maximum en parcourant toutes les valeurs On construit donc ici par compr\u00e9hension la liste des candidats (car il peut y en avoir plusieurs) ayant le nombre de votes maximales Attention La variable vainqueur d\u00e9finie \u00e0 la ligne 15 (et qui porte le m\u00eame nom que la fonction) peut laisser penser qu'il y en a un seul ! Alors qu'on construit justement une liste pour g\u00e9rer les cas d'ex-aequo, cette variable n'a en fait aucune utilit\u00e9.","title":"2022 S37"},{"location":"backup/2022-S37/#corrige-sujet-37-annee-2022","text":"Sujet 37 - 20222","title":"Corrig\u00e9 sujet 37 - Ann\u00e9e : 2022"},{"location":"backup/2022-S37/#exercice-1","text":"1 2 3 4 5 def verifie ( liste ): for i in range ( len ( liste ) - 1 ): if liste [ i ] > liste [ i + 1 ]: return False return True Commentaire On se contente de v\u00e9rifier que chaque \u00e9l\u00e9ment est bien inf\u00e9rieur \u00e0 celui qui le suit dans le tableau.","title":"Exercice 1"},{"location":"backup/2022-S37/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 urne = [ 'A' , 'A' , 'A' , 'B' , 'C' , 'B' , 'C' , 'B' , 'C' , 'B' ] def depouille ( urne ): resultat = {} #(1) for bulletin in urne : if bulletin in resultat : #(2) resultat [ bulletin ] = resultat [ bulletin ] + 1 else : resultat [ bulletin ] = 1 return resultat def vainqueur ( election ): vainqueur = '' nmax = 0 for candidat in election : if election [ candidat ] > nmax : #(3) nmax = election [ candidat ] vainqueur = candidat liste_finale = [ nom for nom in election if election [ nom ] == nmax ] #(4) return liste_finale Initialisation \u00e0 un dictionnaire vide. Si la cl\u00e9 existe dans le dictionnaire on incr\u00e9mente sa valeur de 1, sinon on ajoute cette cl\u00e9 avec la valeur 1 (c'est le premier vote pour ce groupe) Algorithme classique de recherche du maximum en parcourant toutes les valeurs On construit donc ici par compr\u00e9hension la liste des candidats (car il peut y en avoir plusieurs) ayant le nombre de votes maximales Attention La variable vainqueur d\u00e9finie \u00e0 la ligne 15 (et qui porte le m\u00eame nom que la fonction) peut laisser penser qu'il y en a un seul ! Alors qu'on construit justement une liste pour g\u00e9rer les cas d'ex-aequo, cette variable n'a en fait aucune utilit\u00e9.","title":"Exercice 2"},{"location":"backup/2022-S38/","text":"Corrig\u00e9 sujet 38 - Ann\u00e9e : 2022 Sujet 38 - 20222 Exercice 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 def minimum ( tab , i ): ind_minimum = i for j in range ( i + 1 , len ( tab )): if tab [ j ] < tab [ ind_minimum ]: ind_minimum = j return ind_minimum def echange ( tab , i , j ): tab [ i ], tab [ j ] = tab [ j ], tab [ i ] def tri_selection ( tab ): for i in range ( len ( tab )): ind_minimum = minimum ( tab , i ) echange ( tab , i , ind_minimum ) return tab Commentaires C'est l'algorithme classique du tri par s\u00e9lection, les explications de l'\u00e9nonc\u00e9 sont peut \u00eatre ambigues, on rappelle que ce tri consiste pour i indice de parcours du tableau \u00e0 : rechercher le minimum \u00e0 partir de la position i \u00e9changer ce minimum avec l'\u00e9l\u00e9ment d'indice i Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 from random import randint def plus_ou_moins (): nb_mystere = randint ( 1 , 99 ) #(1) nb_test = int ( input ( \"Proposez un nombre entre 1 et 99 : \" )) compteur = 0 #(2) while nb_mystere != nb_test and compteur < 10 : #(3) compteur = compteur + 1 if nb_mystere > nb_test : nb_test = int ( input ( \"Trop petit ! Testez encore : \" )) else : nb_test = int ( input ( \"Trop grand ! Testez encore : \" )) if nb_mystere == nb_test : print ( \"Bravo ! Le nombre etait \" , nb_mystere ) print ( \"Nombre d'essais: \" , compteur ) else : print ( \"Perdu ! Le nombre etait \" , nb_mystere ) L'aide sur la fonction randint est donn\u00e9e dans l'\u00e9nonc\u00e9 compteur est la variable comptabilisant le nombre de tentatives du joueur Le jeu se poursuit tant que le nombres de tentatives est inf\u00e9rieur \u00e0 10 et que la bonne r\u00e9ponse n'a pas \u00e9t\u00e9 donn\u00e9e.","title":"2022 S38"},{"location":"backup/2022-S38/#corrige-sujet-38-annee-2022","text":"Sujet 38 - 20222","title":"Corrig\u00e9 sujet 38 - Ann\u00e9e : 2022"},{"location":"backup/2022-S38/#exercice-1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 def minimum ( tab , i ): ind_minimum = i for j in range ( i + 1 , len ( tab )): if tab [ j ] < tab [ ind_minimum ]: ind_minimum = j return ind_minimum def echange ( tab , i , j ): tab [ i ], tab [ j ] = tab [ j ], tab [ i ] def tri_selection ( tab ): for i in range ( len ( tab )): ind_minimum = minimum ( tab , i ) echange ( tab , i , ind_minimum ) return tab Commentaires C'est l'algorithme classique du tri par s\u00e9lection, les explications de l'\u00e9nonc\u00e9 sont peut \u00eatre ambigues, on rappelle que ce tri consiste pour i indice de parcours du tableau \u00e0 : rechercher le minimum \u00e0 partir de la position i \u00e9changer ce minimum avec l'\u00e9l\u00e9ment d'indice i","title":"Exercice 1"},{"location":"backup/2022-S38/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 from random import randint def plus_ou_moins (): nb_mystere = randint ( 1 , 99 ) #(1) nb_test = int ( input ( \"Proposez un nombre entre 1 et 99 : \" )) compteur = 0 #(2) while nb_mystere != nb_test and compteur < 10 : #(3) compteur = compteur + 1 if nb_mystere > nb_test : nb_test = int ( input ( \"Trop petit ! Testez encore : \" )) else : nb_test = int ( input ( \"Trop grand ! Testez encore : \" )) if nb_mystere == nb_test : print ( \"Bravo ! Le nombre etait \" , nb_mystere ) print ( \"Nombre d'essais: \" , compteur ) else : print ( \"Perdu ! Le nombre etait \" , nb_mystere ) L'aide sur la fonction randint est donn\u00e9e dans l'\u00e9nonc\u00e9 compteur est la variable comptabilisant le nombre de tentatives du joueur Le jeu se poursuit tant que le nombres de tentatives est inf\u00e9rieur \u00e0 10 et que la bonne r\u00e9ponse n'a pas \u00e9t\u00e9 donn\u00e9e.","title":"Exercice 2"},{"location":"backup/2022-S39/","text":"Corrig\u00e9 sujet 39 - Ann\u00e9e : 2022 Sujet 39 - 20222 Exercice 1 1 2 3 4 5 def moyenne ( tab ): somme = 0 for valeur in tab : somme = somme + valeur return somme / len ( tab ) Commentaires Exercice classique de parcours d'une liste, un parcours par \u00e9l\u00e9ment suffit les indices n'\u00e9tant pas utilis\u00e9s. Le sujet ne pr\u00e9cise pas le comportement \u00e0 adopter si la liste est vide. Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 coeur = [[ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], \\ [ 0 , 0 , 0 , 1 , 1 , 0 , 0 , 0 , 1 , 1 , 0 , 0 , 0 ], \\ [ 0 , 0 , 1 , 0 , 0 , 1 , 0 , 1 , 0 , 0 , 1 , 0 , 0 ], \\ [ 0 , 1 , 0 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 0 , 1 , 0 ], \\ [ 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 ], \\ [ 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 ], \\ [ 0 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 ], \\ [ 0 , 0 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 , 0 ], \\ [ 0 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 0 ], \\ [ 0 , 0 , 0 , 0 , 0 , 1 , 0 , 1 , 0 , 0 , 0 , 0 , 0 ], \\ [ 0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 ], \\ [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ]] def affiche ( dessin ): ''' affichage d'une grille : les 1 sont repreente par des \"*\" , les 0 par deux espaces \" \" ''' for ligne in dessin : for col in ligne : if col == 1 : print ( \" *\" , end = \"\" ) else : print ( \" \" , end = \"\" ) print () def zoomListe ( liste_depart , k ): '''renvoie une liste contenant k fois chaque element de liste_depart''' liste_zoom = [] #(1) for elt in liste_depart : for i in range ( k ): liste_zoom . append ( elt ) return liste_zoom def zoomDessin ( grille , k ): '''renvoie une grille ou les lignes sont zoomees k fois ET repetees k fois''' grille_zoom = [] for elt in grille : liste_zoom = zoomListe ( elt , k ) #(2) for i in range ( k ): grille_zoom . append ( liste_zoom ) return grille_zoom On suit l'algorithme de l'\u00e9nonc\u00e9 en dupliquant chaque \u00e9l\u00e9ment de la liste de d\u00e9part k fois gr\u00e2ce \u00e0 la boucle for i in range(k) On zoom chaque ligne en utilisant la fonction pr\u00e9c\u00e9dente Attention Les commentaires sur le code python fourni et ceux \u00e9crits dans le sujet au format pdf ne correspondent pas (fautes dans frappe dans le code au format .py )","title":"2022 S39"},{"location":"backup/2022-S39/#corrige-sujet-39-annee-2022","text":"Sujet 39 - 20222","title":"Corrig\u00e9 sujet 39 - Ann\u00e9e : 2022"},{"location":"backup/2022-S39/#exercice-1","text":"1 2 3 4 5 def moyenne ( tab ): somme = 0 for valeur in tab : somme = somme + valeur return somme / len ( tab ) Commentaires Exercice classique de parcours d'une liste, un parcours par \u00e9l\u00e9ment suffit les indices n'\u00e9tant pas utilis\u00e9s. Le sujet ne pr\u00e9cise pas le comportement \u00e0 adopter si la liste est vide.","title":"Exercice 1"},{"location":"backup/2022-S39/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 coeur = [[ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], \\ [ 0 , 0 , 0 , 1 , 1 , 0 , 0 , 0 , 1 , 1 , 0 , 0 , 0 ], \\ [ 0 , 0 , 1 , 0 , 0 , 1 , 0 , 1 , 0 , 0 , 1 , 0 , 0 ], \\ [ 0 , 1 , 0 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 0 , 1 , 0 ], \\ [ 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 ], \\ [ 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 ], \\ [ 0 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 ], \\ [ 0 , 0 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 , 0 ], \\ [ 0 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 0 ], \\ [ 0 , 0 , 0 , 0 , 0 , 1 , 0 , 1 , 0 , 0 , 0 , 0 , 0 ], \\ [ 0 , 0 , 0 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 ], \\ [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ]] def affiche ( dessin ): ''' affichage d'une grille : les 1 sont repreente par des \"*\" , les 0 par deux espaces \" \" ''' for ligne in dessin : for col in ligne : if col == 1 : print ( \" *\" , end = \"\" ) else : print ( \" \" , end = \"\" ) print () def zoomListe ( liste_depart , k ): '''renvoie une liste contenant k fois chaque element de liste_depart''' liste_zoom = [] #(1) for elt in liste_depart : for i in range ( k ): liste_zoom . append ( elt ) return liste_zoom def zoomDessin ( grille , k ): '''renvoie une grille ou les lignes sont zoomees k fois ET repetees k fois''' grille_zoom = [] for elt in grille : liste_zoom = zoomListe ( elt , k ) #(2) for i in range ( k ): grille_zoom . append ( liste_zoom ) return grille_zoom On suit l'algorithme de l'\u00e9nonc\u00e9 en dupliquant chaque \u00e9l\u00e9ment de la liste de d\u00e9part k fois gr\u00e2ce \u00e0 la boucle for i in range(k) On zoom chaque ligne en utilisant la fonction pr\u00e9c\u00e9dente Attention Les commentaires sur le code python fourni et ceux \u00e9crits dans le sujet au format pdf ne correspondent pas (fautes dans frappe dans le code au format .py )","title":"Exercice 2"},{"location":"backup/2022-S40/","text":"Corrig\u00e9 sujet 40 - Ann\u00e9e : 2022 Sujet 40 - 20222 Exercice 1 1 2 3 4 5 6 def recherche ( elt , tab ): liste_indice = [] for i in range ( len ( tab )): if tab [ i ] == elt : liste_indice . append ( i ) return liste_indice Commentaires Exercice classique de parcours de listes, en utilisant ici les indices. On peut utiliser une d\u00e9finition de liste par compr\u00e9hension : def recherche ( elt , tab ): return [ i for i in range ( len ( tab )) if tab [ i ] == elt ] Exercice 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 resultats = { 'Dupont' :{ 'DS1' : [ 15.5 , 4 ], 'DM1' : [ 14.5 , 1 ], 'DS2' : [ 13 , 4 ], 'PROJET1' : [ 16 , 3 ], 'DS3' : [ 14 , 4 ]}, 'Durand' :{ 'DS1' : [ 6 , 4 ], 'DM1' : [ 14.5 , 1 ], 'DS2' : [ 8 , 4 ], 'PROJET1' : [ 9 , 3 ], 'IE1' : [ 7 , 2 ], 'DS3' : [ 8 , 4 ], 'DS4' :[ 15 , 4 ]}} def moyenne ( nom ): if nom in resultats : #(1) notes = resultats [ nom ] total_points = 0 #(2) total_coefficients = 0 for valeurs in notes . values (): #(3) note , coefficient = valeurs total_points = total_points + note * coefficient #(4) total_coefficients = coefficient + coefficient return round ( total_points / total_coefficients , 1 ) else : return - 1 On v\u00e9rifie que l'\u00e9l\u00e8ve est bien pr\u00e9sent dans les donn\u00e9es (sinon on renvoie -1) Pour calculer la moyenne il nous faut la somme des notes (pond\u00e9r\u00e9es par leur coefficient) et la somme des coefficients. On commence par initialiser ces deux sommes \u00e0 0 Parcours par valeur du dictionnaire des notes de l'\u00e9l\u00e8ves (on rappelle que les cl\u00e9s sont les types d'\u00e9preuve, on en a pas besoin ici) A partir d'ici c'est l'algorithme classique du calcul d'une moyenne Attention L'exercice est sans doute difficile, il faut comprendre la fa\u00e7on dont les donn\u00e9es sont organis\u00e9es. Il s'agit d'une liste de dictionnaire ayant pour cl\u00e9 les noms des \u00e9l\u00e8ves et comme valeur un dictionnaire qui lui a pour cl\u00e9 les types d'\u00e9preuve et les valeurs une liste contenant la note et son coefficient.","title":"2022 S40"},{"location":"backup/2022-S40/#corrige-sujet-40-annee-2022","text":"Sujet 40 - 20222","title":"Corrig\u00e9 sujet 40 - Ann\u00e9e : 2022"},{"location":"backup/2022-S40/#exercice-1","text":"1 2 3 4 5 6 def recherche ( elt , tab ): liste_indice = [] for i in range ( len ( tab )): if tab [ i ] == elt : liste_indice . append ( i ) return liste_indice Commentaires Exercice classique de parcours de listes, en utilisant ici les indices. On peut utiliser une d\u00e9finition de liste par compr\u00e9hension : def recherche ( elt , tab ): return [ i for i in range ( len ( tab )) if tab [ i ] == elt ]","title":"Exercice 1"},{"location":"backup/2022-S40/#exercice-2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 resultats = { 'Dupont' :{ 'DS1' : [ 15.5 , 4 ], 'DM1' : [ 14.5 , 1 ], 'DS2' : [ 13 , 4 ], 'PROJET1' : [ 16 , 3 ], 'DS3' : [ 14 , 4 ]}, 'Durand' :{ 'DS1' : [ 6 , 4 ], 'DM1' : [ 14.5 , 1 ], 'DS2' : [ 8 , 4 ], 'PROJET1' : [ 9 , 3 ], 'IE1' : [ 7 , 2 ], 'DS3' : [ 8 , 4 ], 'DS4' :[ 15 , 4 ]}} def moyenne ( nom ): if nom in resultats : #(1) notes = resultats [ nom ] total_points = 0 #(2) total_coefficients = 0 for valeurs in notes . values (): #(3) note , coefficient = valeurs total_points = total_points + note * coefficient #(4) total_coefficients = coefficient + coefficient return round ( total_points / total_coefficients , 1 ) else : return - 1 On v\u00e9rifie que l'\u00e9l\u00e8ve est bien pr\u00e9sent dans les donn\u00e9es (sinon on renvoie -1) Pour calculer la moyenne il nous faut la somme des notes (pond\u00e9r\u00e9es par leur coefficient) et la somme des coefficients. On commence par initialiser ces deux sommes \u00e0 0 Parcours par valeur du dictionnaire des notes de l'\u00e9l\u00e8ves (on rappelle que les cl\u00e9s sont les types d'\u00e9preuve, on en a pas besoin ici) A partir d'ici c'est l'algorithme classique du calcul d'une moyenne Attention L'exercice est sans doute difficile, il faut comprendre la fa\u00e7on dont les donn\u00e9es sont organis\u00e9es. Il s'agit d'une liste de dictionnaire ayant pour cl\u00e9 les noms des \u00e9l\u00e8ves et comme valeur un dictionnaire qui lui a pour cl\u00e9 les types d'\u00e9preuve et les valeurs une liste contenant la note et son coefficient.","title":"Exercice 2"},{"location":"backup/21-NSIJ1AN1/","text":"21-NSIJ1AN1 : Corrig\u00e9 Ann\u00e9e : 2021 Centre : Am\u00e9rique du nord Jour : 1 Enonc\u00e9 : Exercice 1 : bases de donn\u00e9es relationnelles et langage SQL a. Cette requ\u00eate affiche les champs et salle et marque_ordi de la table Ordinateur . b. Cette requ\u00eate affiche les champs salle et marque_ordi de la table Ordinateur pour les enregistrement dont le champ video est \u00e0 true SELECT * FROM Ordinateur WHERE annee >= 2017 ORDER BY annee ASC Note L'ordre croissant est l'ordre par d\u00e9faut, on peut donc se passer du ASC dans la requ\u00eate pr\u00e9c\u00e9dente. Pour m\u00e9moire l'ordre d\u00e9croissant s'obtient avec DESC . a. Une cl\u00e9 primaire est unique pour chaque enregistrement. Comme plusieurs ordinateurs peuvent \u00eatre dans la m\u00eame salle. Le champ salle n'est pas unique et ne peut donc pas servir de cl\u00e9 primaire. b. On souligne la cl\u00e9 primaire, on rep\u00e8re les cl\u00e9s \u00e9trag\u00e8res en les faisant pr\u00e9c\u00e9d\u00e9es du symbole # . Exercice 2 : routage, processsus et syst\u00e8mes sur puces Exercice 3 : tableaux et programmation de base en Python a. def total_hors_reduction ( tab ): '''Calcul la somme des \u00e9l\u00e9ments de tab''' assert type ( tab ) == list , \"L'argument doit \u00eatre une liste\" thr = 0 for prix in tab : assert type ( prix ) == int or type ( prix ) == float , \"Les prix doivent \u00eatre de types num\u00e9riques\" thr += prix return thr b. def offre_bienvenue ( tab ): \"\"\" tableau -> float \"\"\" somme = 0 longueur = len ( tab ) if longueur > 0 : somme = tab [ 0 ] * 0 , 8 if longueur > 1 : somme = somme + tab [ 1 ] * 0 , 7 if longueur > 2 : for i in range ( 2 , longueur ): somme = somme + tab [ i ] return somme def prix_solde ( tab ): if len ( tab ) >= 5 : return total_hors_reduction ( tab ) * 0.5 elif len ( tab ) == 4 : return total_hors_reduction ( tab ) * 0.6 elif len ( tab ) == 3 : return total_hors_reduction ( tab ) * 0.7 elif len ( tab ) == 2 : return total_hors_reduction ( tab ) * 0.8 else : return total_hors_reduction ( tab ) * 0.9 a. def minimum ( tab ): min_courant = tab [ 0 ] for elt in tab : if elt < min_courant : min_courant = elt return min_courant b. def offre_bon_client ( tab ): if len ( tab ) >= 2 : return total_hors_reduction ( tab ) - minimum ( tab ) else : return total_hors_reduction ( tab ) a. tab = [ 35.0 , 30.5 , 20.0 , 15.0 , 10.5 , 5.0 , 6.0 ] Le total des prix du panier est de \\(35 + 30,5 + 20 + 15 + 10.5 + 6 + 5=122\\) . Compte tenu de l'ordre des articles les articles coutant 20 \u20ac et 5 \u20ac seront offerts. Et donc le prix \u00e0 payer sera 97 \u20ac. b. tab = [ 35.0 , 30.5 , 20.0 , 15.0 , 10.5 , 6.0 , 5.0 ] Le prix total a payer est de 96 euros. c. Il faut trier les objets par ordre d\u00e9croissant de prix. Exercice 4 : arbres binaires et algorithmes associ\u00e9s Exercice 5 : notion de pile, de file et programmation de base en Python","title":"21 NSIJ1AN1"},{"location":"backup/21-NSIJ1AN1/#21-nsij1an1-corrige","text":"Ann\u00e9e : 2021 Centre : Am\u00e9rique du nord Jour : 1 Enonc\u00e9 :","title":"21-NSIJ1AN1 : Corrig\u00e9"},{"location":"backup/21-NSIJ1AN1/#exercice-1-bases-de-donnees-relationnelles-et-langage-sql","text":"a. Cette requ\u00eate affiche les champs et salle et marque_ordi de la table Ordinateur . b. Cette requ\u00eate affiche les champs salle et marque_ordi de la table Ordinateur pour les enregistrement dont le champ video est \u00e0 true SELECT * FROM Ordinateur WHERE annee >= 2017 ORDER BY annee ASC Note L'ordre croissant est l'ordre par d\u00e9faut, on peut donc se passer du ASC dans la requ\u00eate pr\u00e9c\u00e9dente. Pour m\u00e9moire l'ordre d\u00e9croissant s'obtient avec DESC . a. Une cl\u00e9 primaire est unique pour chaque enregistrement. Comme plusieurs ordinateurs peuvent \u00eatre dans la m\u00eame salle. Le champ salle n'est pas unique et ne peut donc pas servir de cl\u00e9 primaire. b. On souligne la cl\u00e9 primaire, on rep\u00e8re les cl\u00e9s \u00e9trag\u00e8res en les faisant pr\u00e9c\u00e9d\u00e9es du symbole # .","title":"Exercice 1 : bases de donn\u00e9es relationnelles et langage SQL"},{"location":"backup/21-NSIJ1AN1/#exercice-2-routage-processsus-et-systemes-sur-puces","text":"","title":"Exercice 2 : routage, processsus et syst\u00e8mes sur puces"},{"location":"backup/21-NSIJ1AN1/#exercice-3-tableaux-et-programmation-de-base-en-python","text":"a. def total_hors_reduction ( tab ): '''Calcul la somme des \u00e9l\u00e9ments de tab''' assert type ( tab ) == list , \"L'argument doit \u00eatre une liste\" thr = 0 for prix in tab : assert type ( prix ) == int or type ( prix ) == float , \"Les prix doivent \u00eatre de types num\u00e9riques\" thr += prix return thr b. def offre_bienvenue ( tab ): \"\"\" tableau -> float \"\"\" somme = 0 longueur = len ( tab ) if longueur > 0 : somme = tab [ 0 ] * 0 , 8 if longueur > 1 : somme = somme + tab [ 1 ] * 0 , 7 if longueur > 2 : for i in range ( 2 , longueur ): somme = somme + tab [ i ] return somme def prix_solde ( tab ): if len ( tab ) >= 5 : return total_hors_reduction ( tab ) * 0.5 elif len ( tab ) == 4 : return total_hors_reduction ( tab ) * 0.6 elif len ( tab ) == 3 : return total_hors_reduction ( tab ) * 0.7 elif len ( tab ) == 2 : return total_hors_reduction ( tab ) * 0.8 else : return total_hors_reduction ( tab ) * 0.9 a. def minimum ( tab ): min_courant = tab [ 0 ] for elt in tab : if elt < min_courant : min_courant = elt return min_courant b. def offre_bon_client ( tab ): if len ( tab ) >= 2 : return total_hors_reduction ( tab ) - minimum ( tab ) else : return total_hors_reduction ( tab ) a. tab = [ 35.0 , 30.5 , 20.0 , 15.0 , 10.5 , 5.0 , 6.0 ] Le total des prix du panier est de \\(35 + 30,5 + 20 + 15 + 10.5 + 6 + 5=122\\) . Compte tenu de l'ordre des articles les articles coutant 20 \u20ac et 5 \u20ac seront offerts. Et donc le prix \u00e0 payer sera 97 \u20ac. b. tab = [ 35.0 , 30.5 , 20.0 , 15.0 , 10.5 , 6.0 , 5.0 ] Le prix total a payer est de 96 euros. c. Il faut trier les objets par ordre d\u00e9croissant de prix.","title":"Exercice 3 : tableaux et programmation de base en Python"},{"location":"backup/21-NSIJ1AN1/#exercice-4-arbres-binaires-et-algorithmes-associes","text":"","title":"Exercice 4 : arbres binaires et algorithmes associ\u00e9s"},{"location":"backup/21-NSIJ1AN1/#exercice-5-notion-de-pile-de-file-et-programmation-de-base-en-python","text":"","title":"Exercice 5 : notion de pile, de file et programmation de base en Python"},{"location":"backup/21-NSIJ1G11/","text":"21-NSIJ1G11 : Corrig\u00e9 Ann\u00e9e : 2021 Centre : Etranger Jour : 1 Enonc\u00e9 : Exercice 1 : programmation objet (code de C\u00e9sar) Exercice 2 : structures de donn\u00e9es (dictionnaires) Exercice 3 : arbres binaires de recherche graph TD N0[\"26.noeud00\"] --> N1[\"3.noeud01\"] N0 --> N2[\"42.noeud02\"] N1 --> N7[\"1.noeud07\"] N1 --> N3[\"15.noeud03\"] N2 --> N4[\"29.noeud04\"] N2 --> V1[\" \"] N3 --> N6[\"13.noeud06\"] N3 --> N5[\"19.noeud05\"] N4 --> V2[\" \"] N4 --> N8[\"32.noeud08\"] N8 --> N10[\"30.noeud10\"] N8 --> N9[\"37.noeud09\"] N5 --> V3[\" \"] N5 --> N11[\"25.noeud11\"] style V1 fill:#FFFFFF, stroke:#FFFFFF style V2 fill:#FFFFFF, stroke:#FFFFFF style V3 fill:#FFFFFF, stroke:#FFFFFF style N11 fill:#AA2222,stroke:#333 linkStyle 0,3,7,13 stroke:#FF0000,stroke-width:2px Etapes de l'insertion du noeud 11 de valeur 25 : A gauche du noeud00 car il a pour valeur 26 et \\(25<26\\) A droite du noeud01 car il a pour valeur 3 et \\(25>3\\) A droite du noeud03 car il a pour valeur 15 et \\(25>15\\) A droite du noeud05 car il a pour valeur 19 et \\(25>19\\) A gauche du noeud04, on peut stocker les valeurs strictement inf\u00e9rieures \u00e0 29 et sup\u00e9rieures ou \u00e9gales \u00e0 26. C'est \u00e0 dire : 26,27, et 28. Note Le sujet pr\u00e9cise dans son introduction que : les valeurs du sous-arbre droit sont sup\u00e9rieures ou \u00e9gales \u00e0 valeur du noeud. Avec cette d\u00e9finition, la valeur 26 est donc possible m\u00eame si elle est d\u00e9j\u00e0 pr\u00e9sente dans l'arbre. Si on consid\u00e8re que les valeurs sont uniques seules 27 et 28 sont possibles. a. 26, 3, 1, 15, 13, 19, 25, 42, 29, 32, 30, 37 b. C'est un parcours pr\u00e9fix\u00e9 car la valeur du noeud est list\u00e9 avant celle des valeurs pr\u00e9sentes dans le sous arbre gauche et le sous arbre droit. La valeur du noeud serait list\u00e9 entre ces valeurs pour un parcours infixe et apr\u00e8s pour un parcours suffix\u00e9. Afin d'afficher les valeurs par ordre croissant, on doit effectuer un parcours infixe. C'est \u00e0 dire afficher la valeur du noeud entre les valeurs du sous arbre gauche et du sous arbre droit. Parcours2(A): Parcours(A.fils_gauche) Afficher(A.valeur) Parcours(A.fils_droit) Exercice 4 : r\u00e9seau Exercice 5 : structure de donn\u00e9es (piles)","title":"21 NSIJ1G11"},{"location":"backup/21-NSIJ1G11/#21-nsij1g11-corrige","text":"Ann\u00e9e : 2021 Centre : Etranger Jour : 1 Enonc\u00e9 :","title":"21-NSIJ1G11 : Corrig\u00e9"},{"location":"backup/21-NSIJ1G11/#exercice-1-programmation-objet-code-de-cesar","text":"","title":"Exercice 1 : programmation objet (code de C\u00e9sar)"},{"location":"backup/21-NSIJ1G11/#exercice-2-structures-de-donnees-dictionnaires","text":"","title":"Exercice 2 : structures de donn\u00e9es (dictionnaires)"},{"location":"backup/21-NSIJ1G11/#exercice-3-arbres-binaires-de-recherche","text":"graph TD N0[\"26.noeud00\"] --> N1[\"3.noeud01\"] N0 --> N2[\"42.noeud02\"] N1 --> N7[\"1.noeud07\"] N1 --> N3[\"15.noeud03\"] N2 --> N4[\"29.noeud04\"] N2 --> V1[\" \"] N3 --> N6[\"13.noeud06\"] N3 --> N5[\"19.noeud05\"] N4 --> V2[\" \"] N4 --> N8[\"32.noeud08\"] N8 --> N10[\"30.noeud10\"] N8 --> N9[\"37.noeud09\"] N5 --> V3[\" \"] N5 --> N11[\"25.noeud11\"] style V1 fill:#FFFFFF, stroke:#FFFFFF style V2 fill:#FFFFFF, stroke:#FFFFFF style V3 fill:#FFFFFF, stroke:#FFFFFF style N11 fill:#AA2222,stroke:#333 linkStyle 0,3,7,13 stroke:#FF0000,stroke-width:2px Etapes de l'insertion du noeud 11 de valeur 25 : A gauche du noeud00 car il a pour valeur 26 et \\(25<26\\) A droite du noeud01 car il a pour valeur 3 et \\(25>3\\) A droite du noeud03 car il a pour valeur 15 et \\(25>15\\) A droite du noeud05 car il a pour valeur 19 et \\(25>19\\) A gauche du noeud04, on peut stocker les valeurs strictement inf\u00e9rieures \u00e0 29 et sup\u00e9rieures ou \u00e9gales \u00e0 26. C'est \u00e0 dire : 26,27, et 28. Note Le sujet pr\u00e9cise dans son introduction que : les valeurs du sous-arbre droit sont sup\u00e9rieures ou \u00e9gales \u00e0 valeur du noeud. Avec cette d\u00e9finition, la valeur 26 est donc possible m\u00eame si elle est d\u00e9j\u00e0 pr\u00e9sente dans l'arbre. Si on consid\u00e8re que les valeurs sont uniques seules 27 et 28 sont possibles. a. 26, 3, 1, 15, 13, 19, 25, 42, 29, 32, 30, 37 b. C'est un parcours pr\u00e9fix\u00e9 car la valeur du noeud est list\u00e9 avant celle des valeurs pr\u00e9sentes dans le sous arbre gauche et le sous arbre droit. La valeur du noeud serait list\u00e9 entre ces valeurs pour un parcours infixe et apr\u00e8s pour un parcours suffix\u00e9. Afin d'afficher les valeurs par ordre croissant, on doit effectuer un parcours infixe. C'est \u00e0 dire afficher la valeur du noeud entre les valeurs du sous arbre gauche et du sous arbre droit. Parcours2(A): Parcours(A.fils_gauche) Afficher(A.valeur) Parcours(A.fils_droit)","title":"Exercice 3 : arbres binaires de recherche"},{"location":"backup/21-NSIJ1G11/#exercice-4-reseau","text":"","title":"Exercice 4 : r\u00e9seau"},{"location":"backup/21-NSIJ1G11/#exercice-5-structure-de-donnees-piles","text":"","title":"Exercice 5 : structure de donn\u00e9es (piles)"},{"location":"backup/21-NSIJ1ME1/","text":"21-NSIJ1ME1 : Corrig\u00e9 Ann\u00e9e : 2021 Centre : M\u00e9tropole Jour : 1 Enonc\u00e9 : Exercice 1 : abres binaires de recherche Exercice 2 : gestion des processus, op\u00e9rateurs bool\u00e9ens Exercice 3 : base de donn\u00e9es et langage SQL Exercice 4 : algorithme de tri fusion et m\u00e9thode diviser pour r\u00e9gner Exercice 5 : r\u00e9seaux et protocoles de routage","title":"21 NSIJ1ME1"},{"location":"backup/21-NSIJ1ME1/#21-nsij1me1-corrige","text":"Ann\u00e9e : 2021 Centre : M\u00e9tropole Jour : 1 Enonc\u00e9 :","title":"21-NSIJ1ME1 : Corrig\u00e9"},{"location":"backup/21-NSIJ1ME1/#exercice-1-abres-binaires-de-recherche","text":"","title":"Exercice 1 : abres binaires de recherche"},{"location":"backup/21-NSIJ1ME1/#exercice-2-gestion-des-processus-operateurs-booleens","text":"","title":"Exercice 2 : gestion des processus, op\u00e9rateurs bool\u00e9ens"},{"location":"backup/21-NSIJ1ME1/#exercice-3-base-de-donnees-et-langage-sql","text":"","title":"Exercice 3 : base de donn\u00e9es et langage SQL"},{"location":"backup/21-NSIJ1ME1/#exercice-4-algorithme-de-tri-fusion-et-methode-diviser-pour-regner","text":"","title":"Exercice 4 : algorithme de tri fusion et m\u00e9thode diviser pour r\u00e9gner"},{"location":"backup/21-NSIJ1ME1/#exercice-5-reseaux-et-protocoles-de-routage","text":"","title":"Exercice 5 : r\u00e9seaux et protocoles de routage"},{"location":"backup/21-NSIJ1ME2/","text":"21-NSIJ1ME2 : Corrig\u00e9 Ann\u00e9e : 2021 Centre : M\u00e9tropole candidats libres Jour : 1 Enonc\u00e9 : Exercice 1 : bases de donn\u00e9es Exercice 2 : notions de piles et programmation orient\u00e9 objet Exercice 3 : gestion des processus et protocoles de routage Exercice 4 : algorithme et programmation en Python Exercice 5 : manipulation de tableaux, r\u00e9cursivit\u00e9, m\u00e9thode \"diviser pour r\u00e9gner\"","title":"21 NSIJ1ME2"},{"location":"backup/21-NSIJ1ME2/#21-nsij1me2-corrige","text":"Ann\u00e9e : 2021 Centre : M\u00e9tropole candidats libres Jour : 1 Enonc\u00e9 :","title":"21-NSIJ1ME2 : Corrig\u00e9"},{"location":"backup/21-NSIJ1ME2/#exercice-1-bases-de-donnees","text":"","title":"Exercice 1 : bases de donn\u00e9es"},{"location":"backup/21-NSIJ1ME2/#exercice-2-notions-de-piles-et-programmation-oriente-objet","text":"","title":"Exercice 2 : notions de piles et programmation orient\u00e9 objet"},{"location":"backup/21-NSIJ1ME2/#exercice-3-gestion-des-processus-et-protocoles-de-routage","text":"","title":"Exercice 3 : gestion des processus et protocoles de routage"},{"location":"backup/21-NSIJ1ME2/#exercice-4-algorithme-et-programmation-en-python","text":"","title":"Exercice 4 : algorithme et programmation en Python"},{"location":"backup/21-NSIJ1ME2/#exercice-5-manipulation-de-tableaux-recursivite-methode-diviser-pour-regner","text":"","title":"Exercice 5 : manipulation de tableaux, r\u00e9cursivit\u00e9, m\u00e9thode \"diviser pour r\u00e9gner\""},{"location":"backup/21-NSIJ2G11/","text":"21-NSIJ2G11 : Corrig\u00e9 Ann\u00e9e : 2021 Centre : Etranger Jour : 2 Enonc\u00e9 : Exercice 1 : structures de donn\u00e9es : piles La pile de gauche va contenir |'7','8','9','10'> et celle de droite |'V','D','R','A'> (4 premiers \u00e9l\u00e9ments de la liste \u00e0 gauche et 4 derniers \u00e0 droite). La liste m\u00e9lange va donc contenir ['10','A','9','R','8','D','7','V'] (on d\u00e9pile un \u00e9l\u00e9ment alternativement entre les deux piles). 1 2 3 4 5 6 7 def liste_vers_pile ( L ): '''prend en param\u00e8tre une liste et renvoie une pile''' N = len ( L ) p_temp = Pile () for i in range ( N ): p_temp . empiler ( L [ i ]) #(1) return p_temp On utilise la m\u00e9thode empiler de l'interface d'une pile pour ajouter chaque \u00e9l\u00e9ment de la liste On obtient pour la pile de gauche : 3 2 1 Et pour celle de droite : 6 5 4 Bug L'\u00e9nonc\u00e9 pr\u00e9cise que la m\u00e9thode est empiler , la fonction partage donn\u00e9e utilise empile . a. On peut par exemple faire la liste de sch\u00e9mas ci-dessous, en pr\u00e9cisant que la fusion se termine lorsque les piles sont vides (l'\u00e9nonc\u00e9 garantit que les deux piles ont le m\u00eame nombre d'\u00e9l\u00e9ments) b. def fusion ( p1 , p2 ): liste = [] while note p1 . est_vide (): liste . append ( p1 . depiler ()) liste . append ( p2 . depiler ()) return liste 1 2 3 4 5 6 7 8 def affichage ( p ): p_temp = p_copier () if p_temp . est_vide (): print ( '----' ) else : elt = p_temp . depiler () print ( '|' , elt , '|' ) affichage ( p_temp ) #(1) On relance r\u00e9cursivement l'affichage sur le reste de la pile. Bug Dans le sujet, le print de l'avant derni\u00e8re ligne contient une parenth\u00e8se fermante de trop. Exercice 2 : programmation python, tuples et liste def mur ( laby , lig , col ): return laby [ lig ][ col ] == \"1\" Note La version ci-dessous est \u00e9quivalente, mais on teste si un bool\u00e9en vaut True et dans ce cas on renvoie True , sinon on renvoie False . Renvoyer directement le bool\u00e9en (c'est \u00e0 dire le r\u00e9sultat du test laby[lig][col]==\"1\" est plus concis). def mur ( laby , lig , col ): if laby [ lig ][ col ] == \"1\" : return True else : return False a. Deux cases du labyrinthe sont adjacentes lorsqu'elles sont situ\u00e9es sur la m\u00eame ligne et la diff\u00e9rence entre les colonnes est de 1 ou alors lorsqu'elles sont situ\u00e9es sur la m\u00eame colonne et la diff\u00e9rence entre les lignes est 1. On peut donc calculer d = (l1-l2)**2 + (c1-c2)**2 , si les cases sont adjacentes l'un des deux termes de cette somme vaut 0 et l'autre 1 (si la diff\u00e9rence est \\(-1\\) , d vaut 1 \u00e0 cause de du carr\u00e9). Le test d==1 permet donc de savoir si deux cases sont adjacentes. b. def adjacentes ( liste_cases ): for i in range ( len ( liste_cases ) - 1 ): if not voisine ( liste_cases [ i ], liste_cases [ i + 1 ]): return False return True On rentre dans la boucle lorsque i < len(cases) , l'indice i est incr\u00e9ment\u00e9 dans la boucle et donc finira par \u00eatre plus grand que la longueur du tableau cases . Note On rappelle que la m\u00e9thode rigoureuse pour montrer la terminaison d'un boucle est d'exhiber un variant de boucle c'est \u00e0 dire une quantit\u00e9 \\(v\\) enti\u00e8re positive qui d\u00e9cro\u00eet \u00e0 chaque passage dans la boucle. La propri\u00e9t\u00e9 math\u00e9matique : Il n'existe pas de suite d'entiers positif strictement d\u00e9croissante permet alors de conclure \u00e0 la terminaison de la boucle (sinon les valeurs successives prises par \\(v\\) formeraient une suite d'entiers positif d\u00e9croissante, ce qui est impossible). Pour plus de d\u00e9tails, on peut consulter le cours de premi\u00e8re ou ce site D'apr\u00e8s l'\u00e9nonc\u00e9, le labyrinthe est carr\u00e9, on r\u00e9cup\u00e8re sa taille n puis on teste que les trois conditions suivantes sont r\u00e9unies : On d\u00e9marre bien de l'entr\u00e9e du labyrinthe (case (0,0) ) On finit bien sur la sortie du labyritnhe (case (n-1,n-1) ) Les cases de la liste sont adjacentes et non mur\u00e9es. def echappe ( cases , laby ): n = len ( laby ) return cases [ 0 ] == 0 and cases [ - 1 ] == ( n - 1 , n - 1 ) and teste ( cases , laby ): Exercice 3 : Conversion d\u00e9cimal/binaire, table de v\u00e9rit\u00e9, codages des caract\u00e8res On utilise l'algorithme des divisions successives : \\(89 = \\textcolor{blue}{44} \\times 2 + \\textcolor{red}{1}\\) \\(44 = \\textcolor{blue}{22} \\times 2 + \\textcolor{red}{0}\\) \\(22 = \\textcolor{blue}{11} \\times 2 + \\textcolor{red}{0}\\) \\(11 = \\textcolor{blue}{5} \\times 2 + \\textcolor{red}{1}\\) \\(5 = \\textcolor{blue}{2} \\times 2 + \\textcolor{red}{1}\\) \\(2 = \\textcolor{blue}{1} \\times 2 + \\textcolor{red}{0}\\) \\(1 = \\textcolor{blue}{0} \\times 2 + \\textcolor{red}{1}\\) La suite des restes prise dans l'ordre inverse donne l'\u00e9criture du nombre en base 2 : \\(89_{10}=1011001_2\\) . Note L'\u00e9nonc\u00e9 pr\u00e9cise qu'il faut d\u00e9tailler la m\u00e9thode utilis\u00e9e, signe qu'un r\u00e9sultat brut sans justification ne rapporte sans doute pas tous les points. def xor_crypt ( message , cle ): liste = [] for i in range ( len ( message )): code_caractere = ord ( message [ i ]) code_cle = ord ( cle [ i ]) code_caractere_crypte = xor ( code_caractere , code_cle ) liste . append ( code_caractere_crypte ) return liste def genere_cle ( mot , n ): nb_fois = n // len ( mot ) reste = n % len ( mot ) cle = nb_fois * mot for i in range ( reste ): cle += mot [ i ] return cle Note L'id\u00e9e utilis\u00e9e ici de chercher combien de fois le mot peut se r\u00e9p\u00e9ter sans atteindre la longueur n puis de compl\u00e9ter avec les premi\u00e8res lettres du mot pour atteindre la longueur n . Par exemple pour genere_cle(\"YAK\",8) on peut r\u00e9p\u00e9ter YAK 2 fois et il reste 2 lettres \u00e0 ajouter ( \\(8 = 2\\times 3 + 2\\) ) La table de v\u00e9rit\u00e9 est : \\(E_1\\) \\(E_2\\) \\(E_1 \\bigoplus E_2\\) \\((E_1 \\bigoplus E_2) \\bigoplus E_2\\) 0 0 0 0 0 1 1 0 1 0 1 1 1 1 0 1 On constate qu'on a toujours : \\((E_1 \\bigoplus E_2) \\bigoplus E_2 = E_1\\) . Ici les bits du message initial sont les \\(E_1\\) crypt\u00e9s \u00e0 l'aide d'un xor avec les bits de la cl\u00e9 (les \\(E_2\\) ). C'est \u00e0 dire que \\(E_1 \\bigoplus E_2\\) sont les bits du message crypt\u00e9s. On peut revenir au message initial en cryptant de nouveau avec la m\u00eame cl\u00e9 puisqu'on vient de remarquer que \\((E_1 \\bigoplus E_2) \\bigoplus E_2 = E_1\\) . Exercice 4 : Base de donn\u00e9es a. Une cl\u00e9 primaire doit identifier un enregistrement de fa\u00e7on unique, plusieurs personnes peuvent porter le m\u00eame nom de famille donc l'attribut nom de la table licencies ne peut pas servir de cl\u00e9 primaire. b. L'attribut id_licencie peut servir de cl\u00e9 primaire, lorsque c'est un entier unique pour chaque enregistrement. a. Cette requ\u00eate renvoie les pr\u00e9noms et noms des licenci\u00e9s qui jouent dans l'\u00e9quipe des moins de 12 ans. b. Dans le cas d'une * la requ\u00eate renvoie tous les attributs de la table licenci\u00e9s donc id_licencie, prenom, nom, annee_naissance, equipe c. SELECT date FROM matchs WHERE lieu = 'domicile' AND equipe = 'V\u00e9t\u00e9rans' INSERT INTO licencies VALUES ( 287 , 'Jean' , 'Lavenu' , 2001 , 'Hommes 2' ) Note On peut se passer du nom des attributs car on ins\u00e8re tous les champs Attention \u00e0 bien mettre des guillemets pour les valeurs lorsqu'il s'agit de chaines de caract\u00e8res. 4. UPDATE licencies SET equipe = 'V\u00e9t\u00e9rans' WHERE prenom = 'Joseph' AND nom = 'Cuviller' 5. SELECT nom FROM licencies JOIN matchs ON licencies . equipe = matchs . equipe WHERE matchs . adversaire = 'LSC' and matchs . date = '2021-06-19' Exercice 5 : programmation Python : commande d'un bandeau de diodes \u00e0 l'aide d'un raspberry a. L'instruction Obj_bandeau.get_pixel_rgb(1) renvoie un tuple de trois entiers correspondant \u00e0 la couleur rgb de la led n\u00b01, c'est \u00e0 dire (0,0,255) car la couleur actuelle de la led 1 est le bleu. b. Cette instruction renvoie un entier correspondant \u00e0 la couleur rgb (0,0,255) , d'apr\u00e8s le tableau donn\u00e9 en annexe cet entier est 16711680 . c. La premi\u00e8re instruction r\u00e9cup\u00e8re la couleur de la led 0, donc (255,0,0) car cette led est rouge. La seconde instruction affiche le num\u00e9ro de couleur correspond qui (tableau de l'annexe) est 255 a. On obtient un bandeau avec les 5 premi\u00e8res led bleues ( num_color=16711680 ), les 5 suivantes blanches ( num_color=1677215 ) et les 5 suivantes rouges ( num_color=255 ) b. Les led dont les num\u00e9ros sont multiples de 3 (0,3,6,9 et 12) sont vertes ( num_color=32768 ), les autres sont jaunes ( num_color=65535 ) a. La m\u00e9thode __init__ prend en param\u00e8tre un nombre entier de led et renvoie un objet de la classe Bandeau ayant ce nombre de led . b. Fixe les couleurs des led 6 et 7 \u00e0 bleu.","title":"21 NSIJ2G11"},{"location":"backup/21-NSIJ2G11/#21-nsij2g11-corrige","text":"Ann\u00e9e : 2021 Centre : Etranger Jour : 2 Enonc\u00e9 :","title":"21-NSIJ2G11 : Corrig\u00e9"},{"location":"backup/21-NSIJ2G11/#exercice-1-structures-de-donnees-piles","text":"La pile de gauche va contenir |'7','8','9','10'> et celle de droite |'V','D','R','A'> (4 premiers \u00e9l\u00e9ments de la liste \u00e0 gauche et 4 derniers \u00e0 droite). La liste m\u00e9lange va donc contenir ['10','A','9','R','8','D','7','V'] (on d\u00e9pile un \u00e9l\u00e9ment alternativement entre les deux piles). 1 2 3 4 5 6 7 def liste_vers_pile ( L ): '''prend en param\u00e8tre une liste et renvoie une pile''' N = len ( L ) p_temp = Pile () for i in range ( N ): p_temp . empiler ( L [ i ]) #(1) return p_temp On utilise la m\u00e9thode empiler de l'interface d'une pile pour ajouter chaque \u00e9l\u00e9ment de la liste On obtient pour la pile de gauche : 3 2 1 Et pour celle de droite : 6 5 4 Bug L'\u00e9nonc\u00e9 pr\u00e9cise que la m\u00e9thode est empiler , la fonction partage donn\u00e9e utilise empile . a. On peut par exemple faire la liste de sch\u00e9mas ci-dessous, en pr\u00e9cisant que la fusion se termine lorsque les piles sont vides (l'\u00e9nonc\u00e9 garantit que les deux piles ont le m\u00eame nombre d'\u00e9l\u00e9ments) b. def fusion ( p1 , p2 ): liste = [] while note p1 . est_vide (): liste . append ( p1 . depiler ()) liste . append ( p2 . depiler ()) return liste 1 2 3 4 5 6 7 8 def affichage ( p ): p_temp = p_copier () if p_temp . est_vide (): print ( '----' ) else : elt = p_temp . depiler () print ( '|' , elt , '|' ) affichage ( p_temp ) #(1) On relance r\u00e9cursivement l'affichage sur le reste de la pile. Bug Dans le sujet, le print de l'avant derni\u00e8re ligne contient une parenth\u00e8se fermante de trop.","title":"Exercice 1 : structures de donn\u00e9es : piles"},{"location":"backup/21-NSIJ2G11/#exercice-2-programmation-python-tuples-et-liste","text":"def mur ( laby , lig , col ): return laby [ lig ][ col ] == \"1\" Note La version ci-dessous est \u00e9quivalente, mais on teste si un bool\u00e9en vaut True et dans ce cas on renvoie True , sinon on renvoie False . Renvoyer directement le bool\u00e9en (c'est \u00e0 dire le r\u00e9sultat du test laby[lig][col]==\"1\" est plus concis). def mur ( laby , lig , col ): if laby [ lig ][ col ] == \"1\" : return True else : return False a. Deux cases du labyrinthe sont adjacentes lorsqu'elles sont situ\u00e9es sur la m\u00eame ligne et la diff\u00e9rence entre les colonnes est de 1 ou alors lorsqu'elles sont situ\u00e9es sur la m\u00eame colonne et la diff\u00e9rence entre les lignes est 1. On peut donc calculer d = (l1-l2)**2 + (c1-c2)**2 , si les cases sont adjacentes l'un des deux termes de cette somme vaut 0 et l'autre 1 (si la diff\u00e9rence est \\(-1\\) , d vaut 1 \u00e0 cause de du carr\u00e9). Le test d==1 permet donc de savoir si deux cases sont adjacentes. b. def adjacentes ( liste_cases ): for i in range ( len ( liste_cases ) - 1 ): if not voisine ( liste_cases [ i ], liste_cases [ i + 1 ]): return False return True On rentre dans la boucle lorsque i < len(cases) , l'indice i est incr\u00e9ment\u00e9 dans la boucle et donc finira par \u00eatre plus grand que la longueur du tableau cases . Note On rappelle que la m\u00e9thode rigoureuse pour montrer la terminaison d'un boucle est d'exhiber un variant de boucle c'est \u00e0 dire une quantit\u00e9 \\(v\\) enti\u00e8re positive qui d\u00e9cro\u00eet \u00e0 chaque passage dans la boucle. La propri\u00e9t\u00e9 math\u00e9matique : Il n'existe pas de suite d'entiers positif strictement d\u00e9croissante permet alors de conclure \u00e0 la terminaison de la boucle (sinon les valeurs successives prises par \\(v\\) formeraient une suite d'entiers positif d\u00e9croissante, ce qui est impossible). Pour plus de d\u00e9tails, on peut consulter le cours de premi\u00e8re ou ce site D'apr\u00e8s l'\u00e9nonc\u00e9, le labyrinthe est carr\u00e9, on r\u00e9cup\u00e8re sa taille n puis on teste que les trois conditions suivantes sont r\u00e9unies : On d\u00e9marre bien de l'entr\u00e9e du labyrinthe (case (0,0) ) On finit bien sur la sortie du labyritnhe (case (n-1,n-1) ) Les cases de la liste sont adjacentes et non mur\u00e9es. def echappe ( cases , laby ): n = len ( laby ) return cases [ 0 ] == 0 and cases [ - 1 ] == ( n - 1 , n - 1 ) and teste ( cases , laby ):","title":"Exercice 2 : programmation python, tuples et liste"},{"location":"backup/21-NSIJ2G11/#exercice-3-conversion-decimalbinaire-table-de-verite-codages-des-caracteres","text":"On utilise l'algorithme des divisions successives : \\(89 = \\textcolor{blue}{44} \\times 2 + \\textcolor{red}{1}\\) \\(44 = \\textcolor{blue}{22} \\times 2 + \\textcolor{red}{0}\\) \\(22 = \\textcolor{blue}{11} \\times 2 + \\textcolor{red}{0}\\) \\(11 = \\textcolor{blue}{5} \\times 2 + \\textcolor{red}{1}\\) \\(5 = \\textcolor{blue}{2} \\times 2 + \\textcolor{red}{1}\\) \\(2 = \\textcolor{blue}{1} \\times 2 + \\textcolor{red}{0}\\) \\(1 = \\textcolor{blue}{0} \\times 2 + \\textcolor{red}{1}\\) La suite des restes prise dans l'ordre inverse donne l'\u00e9criture du nombre en base 2 : \\(89_{10}=1011001_2\\) . Note L'\u00e9nonc\u00e9 pr\u00e9cise qu'il faut d\u00e9tailler la m\u00e9thode utilis\u00e9e, signe qu'un r\u00e9sultat brut sans justification ne rapporte sans doute pas tous les points. def xor_crypt ( message , cle ): liste = [] for i in range ( len ( message )): code_caractere = ord ( message [ i ]) code_cle = ord ( cle [ i ]) code_caractere_crypte = xor ( code_caractere , code_cle ) liste . append ( code_caractere_crypte ) return liste def genere_cle ( mot , n ): nb_fois = n // len ( mot ) reste = n % len ( mot ) cle = nb_fois * mot for i in range ( reste ): cle += mot [ i ] return cle Note L'id\u00e9e utilis\u00e9e ici de chercher combien de fois le mot peut se r\u00e9p\u00e9ter sans atteindre la longueur n puis de compl\u00e9ter avec les premi\u00e8res lettres du mot pour atteindre la longueur n . Par exemple pour genere_cle(\"YAK\",8) on peut r\u00e9p\u00e9ter YAK 2 fois et il reste 2 lettres \u00e0 ajouter ( \\(8 = 2\\times 3 + 2\\) ) La table de v\u00e9rit\u00e9 est : \\(E_1\\) \\(E_2\\) \\(E_1 \\bigoplus E_2\\) \\((E_1 \\bigoplus E_2) \\bigoplus E_2\\) 0 0 0 0 0 1 1 0 1 0 1 1 1 1 0 1 On constate qu'on a toujours : \\((E_1 \\bigoplus E_2) \\bigoplus E_2 = E_1\\) . Ici les bits du message initial sont les \\(E_1\\) crypt\u00e9s \u00e0 l'aide d'un xor avec les bits de la cl\u00e9 (les \\(E_2\\) ). C'est \u00e0 dire que \\(E_1 \\bigoplus E_2\\) sont les bits du message crypt\u00e9s. On peut revenir au message initial en cryptant de nouveau avec la m\u00eame cl\u00e9 puisqu'on vient de remarquer que \\((E_1 \\bigoplus E_2) \\bigoplus E_2 = E_1\\) .","title":"Exercice 3 : Conversion d\u00e9cimal/binaire, table de v\u00e9rit\u00e9, codages des caract\u00e8res"},{"location":"backup/21-NSIJ2G11/#exercice-4-base-de-donnees","text":"a. Une cl\u00e9 primaire doit identifier un enregistrement de fa\u00e7on unique, plusieurs personnes peuvent porter le m\u00eame nom de famille donc l'attribut nom de la table licencies ne peut pas servir de cl\u00e9 primaire. b. L'attribut id_licencie peut servir de cl\u00e9 primaire, lorsque c'est un entier unique pour chaque enregistrement. a. Cette requ\u00eate renvoie les pr\u00e9noms et noms des licenci\u00e9s qui jouent dans l'\u00e9quipe des moins de 12 ans. b. Dans le cas d'une * la requ\u00eate renvoie tous les attributs de la table licenci\u00e9s donc id_licencie, prenom, nom, annee_naissance, equipe c. SELECT date FROM matchs WHERE lieu = 'domicile' AND equipe = 'V\u00e9t\u00e9rans' INSERT INTO licencies VALUES ( 287 , 'Jean' , 'Lavenu' , 2001 , 'Hommes 2' ) Note On peut se passer du nom des attributs car on ins\u00e8re tous les champs Attention \u00e0 bien mettre des guillemets pour les valeurs lorsqu'il s'agit de chaines de caract\u00e8res. 4. UPDATE licencies SET equipe = 'V\u00e9t\u00e9rans' WHERE prenom = 'Joseph' AND nom = 'Cuviller' 5. SELECT nom FROM licencies JOIN matchs ON licencies . equipe = matchs . equipe WHERE matchs . adversaire = 'LSC' and matchs . date = '2021-06-19'","title":"Exercice 4 : Base de donn\u00e9es"},{"location":"backup/21-NSIJ2G11/#exercice-5-programmation-python-commande-dun-bandeau-de-diodes-a-laide-dun-raspberry","text":"a. L'instruction Obj_bandeau.get_pixel_rgb(1) renvoie un tuple de trois entiers correspondant \u00e0 la couleur rgb de la led n\u00b01, c'est \u00e0 dire (0,0,255) car la couleur actuelle de la led 1 est le bleu. b. Cette instruction renvoie un entier correspondant \u00e0 la couleur rgb (0,0,255) , d'apr\u00e8s le tableau donn\u00e9 en annexe cet entier est 16711680 . c. La premi\u00e8re instruction r\u00e9cup\u00e8re la couleur de la led 0, donc (255,0,0) car cette led est rouge. La seconde instruction affiche le num\u00e9ro de couleur correspond qui (tableau de l'annexe) est 255 a. On obtient un bandeau avec les 5 premi\u00e8res led bleues ( num_color=16711680 ), les 5 suivantes blanches ( num_color=1677215 ) et les 5 suivantes rouges ( num_color=255 ) b. Les led dont les num\u00e9ros sont multiples de 3 (0,3,6,9 et 12) sont vertes ( num_color=32768 ), les autres sont jaunes ( num_color=65535 ) a. La m\u00e9thode __init__ prend en param\u00e8tre un nombre entier de led et renvoie un objet de la classe Bandeau ayant ce nombre de led . b. Fixe les couleurs des led 6 et 7 \u00e0 bleu.","title":"Exercice 5 : programmation Python : commande d'un bandeau de diodes \u00e0 l'aide d'un raspberry"},{"location":"backup/21-NSIJ2ME1/","text":"21-NSIJ2ME1 : Corrig\u00e9 Ann\u00e9e : 2021 Centre : M\u00e9tropole Jour : 2 Enonc\u00e9 : Exercice 1 : abres et programmation orient\u00e9e objet Exercice 2 : base de donn\u00e9es relationnelles Exercice 3 : r\u00e9seaux et protocoles de routage Exercice 4 : gestion des processus et des ressources Partie A Si chaque programme s'ex\u00e9cute \u00e0 tour de r\u00f4le, apr\u00e8s la premi\u00e8re instruction de chaque programme les 3 ressources sont prises. Un interblocage se produit donc car chaque programme a besoin d'une ressource d\u00e9tenu par un autre pour continuer son ex\u00e9cution. On inverse l'ordre des demandes dans le programme 3. Ainsi c'est la table tra\u00e7ante qui est demand\u00e9 en premier, comme elle est d\u00e9tenue par le programme 1. Le programme 3 est bloqu\u00e9. Mais le programme 2 peut continuer car il dispose de sa seconde ressource (l'imprimante). Donc il peut s'ex\u00e9cuter et lib\u00e9rer ses ressources ce qui permet au programme 3 et 1 de terminer aussi. Le processus p1 sera dans l'\u00e9tat bloqu\u00e9, c'est donc la r\u00e9ponse b) Partie B C'est la commande ps -ef c'est donc la r\u00e9ponse b) C'est l'identifiant 831 C'est l'identifiant 6211 Exercice 5 : structure de donn\u00e9es lin\u00e9aires","title":"21 NSIJ2ME1"},{"location":"backup/21-NSIJ2ME1/#21-nsij2me1-corrige","text":"Ann\u00e9e : 2021 Centre : M\u00e9tropole Jour : 2 Enonc\u00e9 :","title":"21-NSIJ2ME1 : Corrig\u00e9"},{"location":"backup/21-NSIJ2ME1/#exercice-1-abres-et-programmation-orientee-objet","text":"","title":"Exercice 1 : abres et programmation orient\u00e9e objet"},{"location":"backup/21-NSIJ2ME1/#exercice-2-base-de-donnees-relationnelles","text":"","title":"Exercice 2 : base de donn\u00e9es relationnelles"},{"location":"backup/21-NSIJ2ME1/#exercice-3-reseaux-et-protocoles-de-routage","text":"","title":"Exercice 3 : r\u00e9seaux et protocoles de routage"},{"location":"backup/21-NSIJ2ME1/#exercice-4-gestion-des-processus-et-des-ressources","text":"","title":"Exercice 4 : gestion des processus et des ressources"},{"location":"backup/21-NSIJ2ME1/#partie-a","text":"Si chaque programme s'ex\u00e9cute \u00e0 tour de r\u00f4le, apr\u00e8s la premi\u00e8re instruction de chaque programme les 3 ressources sont prises. Un interblocage se produit donc car chaque programme a besoin d'une ressource d\u00e9tenu par un autre pour continuer son ex\u00e9cution. On inverse l'ordre des demandes dans le programme 3. Ainsi c'est la table tra\u00e7ante qui est demand\u00e9 en premier, comme elle est d\u00e9tenue par le programme 1. Le programme 3 est bloqu\u00e9. Mais le programme 2 peut continuer car il dispose de sa seconde ressource (l'imprimante). Donc il peut s'ex\u00e9cuter et lib\u00e9rer ses ressources ce qui permet au programme 3 et 1 de terminer aussi. Le processus p1 sera dans l'\u00e9tat bloqu\u00e9, c'est donc la r\u00e9ponse b)","title":"Partie A"},{"location":"backup/21-NSIJ2ME1/#partie-b","text":"C'est la commande ps -ef c'est donc la r\u00e9ponse b) C'est l'identifiant 831 C'est l'identifiant 6211","title":"Partie B"},{"location":"backup/21-NSIJ2ME1/#exercice-5-structure-de-donnees-lineaires","text":"","title":"Exercice 5 : structure de donn\u00e9es lin\u00e9aires"},{"location":"backup/21-NSIJ2ME2/","text":"21-NSIJ2ME2 : Corrig\u00e9 Ann\u00e9e : 2021 Centre : M\u00e9tropole candidats libres Jour : 2 Enonc\u00e9 : Exercice 1 : bases de donn\u00e9es relationnelles et langage SQL Exercice 2 : gestion des processus et des ressources par un syst\u00e8me d'exploitation Exercice 3 : arbres binaires de recherche et programmation orient\u00e9e objet Exercice 4 : programmation et r\u00e9cursivit\u00e9 Exercice 5 : programmation","title":"21 NSIJ2ME2"},{"location":"backup/21-NSIJ2ME2/#21-nsij2me2-corrige","text":"Ann\u00e9e : 2021 Centre : M\u00e9tropole candidats libres Jour : 2 Enonc\u00e9 :","title":"21-NSIJ2ME2 : Corrig\u00e9"},{"location":"backup/21-NSIJ2ME2/#exercice-1-bases-de-donnees-relationnelles-et-langage-sql","text":"","title":"Exercice 1 : bases de donn\u00e9es relationnelles et langage SQL"},{"location":"backup/21-NSIJ2ME2/#exercice-2-gestion-des-processus-et-des-ressources-par-un-systeme-dexploitation","text":"","title":"Exercice 2 : gestion des processus et des ressources par un syst\u00e8me d'exploitation"},{"location":"backup/21-NSIJ2ME2/#exercice-3-arbres-binaires-de-recherche-et-programmation-orientee-objet","text":"","title":"Exercice 3 : arbres binaires de recherche et programmation orient\u00e9e objet"},{"location":"backup/21-NSIJ2ME2/#exercice-4-programmation-et-recursivite","text":"","title":"Exercice 4 : programmation et r\u00e9cursivit\u00e9"},{"location":"backup/21-NSIJ2ME2/#exercice-5-programmation","text":"","title":"Exercice 5 : programmation"},{"location":"backup/21-NSIJ2ME3/","text":"21-NSIJ2ME3 : Corrig\u00e9 Ann\u00e9e : 2021 Centre : M\u00e9tropole session de septembre Jour : 2 Enonc\u00e9 : Exercice 1 : r\u00e9seau, protocoles de communication et de routages Exercice 2 : structure de donn\u00e9es, langages et programmation Exercice 3 : base de donn\u00e9es Exercice 4 : programmation orient\u00e9e objet, langages et programmation Exercice 5 : traitement de donn\u00e9es en table (CSV), langages et programmation\"","title":"21 NSIJ2ME3"},{"location":"backup/21-NSIJ2ME3/#21-nsij2me3-corrige","text":"Ann\u00e9e : 2021 Centre : M\u00e9tropole session de septembre Jour : 2 Enonc\u00e9 :","title":"21-NSIJ2ME3 : Corrig\u00e9"},{"location":"backup/21-NSIJ2ME3/#exercice-1-reseau-protocoles-de-communication-et-de-routages","text":"","title":"Exercice 1 : r\u00e9seau, protocoles de communication et de routages"},{"location":"backup/21-NSIJ2ME3/#exercice-2-structure-de-donnees-langages-et-programmation","text":"","title":"Exercice 2 : structure de donn\u00e9es, langages et programmation"},{"location":"backup/21-NSIJ2ME3/#exercice-3-base-de-donnees","text":"","title":"Exercice 3 : base de donn\u00e9es"},{"location":"backup/21-NSIJ2ME3/#exercice-4-programmation-orientee-objet-langages-et-programmation","text":"","title":"Exercice 4 : programmation orient\u00e9e objet, langages et programmation"},{"location":"backup/21-NSIJ2ME3/#exercice-5-traitement-de-donnees-en-table-csv-langages-et-programmation","text":"","title":"Exercice 5 : traitement de donn\u00e9es en table (CSV), langages et programmation\""},{"location":"backup/21-NSIJ2PO1/","text":"21-NSIJ2PO1 : Corrig\u00e9 Ann\u00e9e : 2021 Centre : Polyn\u00e9sie Jour : 2 Enonc\u00e9 : Exercice 1 : algorithmique et programmation (algorithmes de tri) Partie A Les affichages obtenues seront : 8 car len(notes) est le nombre d'\u00e9l\u00e9ments de la liste notes [8,7,18,16,12,9,17,3] car on affiche la liste de d\u00e9part en ayant remplac\u00e9 la valeur situ\u00e9e \u00e0 l'indice 3 par 16. Pour afficher les \u00e9l\u00e9ments d'indice 2 \u00e0 4 de la liste on peut \u00e9crire : for i in range ( 2 , 5 ): print ( note [ i ]) Note L'utilisation d'une boucle ne s'impose pas, on aurait pu \u00e9crire print(note[2],note[3],note[4]) ou encore utiliser les slices : print(note[2:5]) (bien qui cette solution affiche une liste compos\u00e9e des trois \u00e9l\u00e9ments demand\u00e9s) Partie B Code compl\u00e9t\u00e9 : 1 2 3 4 5 6 7 8 9 def tri_insertion ( liste ): \"\"\" trie par insertion la liste en param\u00e8tre \"\"\" for indice_courant in range ( 1 , len ( liste )): element_a_inserer = liste [ indice_courant ] i = indice_courant - 1 while i >= 0 and liste [ i ] > element_a_inserer : liste [ i + 1 ] = liste [ i ] i = i - 1 liste [ i + 1 ] = element_a_inserer Apr\u00e8s le premier passage : [7, 8, 18, 14, 12, 9, 17, 3] Apr\u00e8s le troisi\u00e8me passage : [7, 8, 14, 18, 12, 9, 17, 3] Note On rappelle que le principe de l'algorithme est d'ins\u00e9rer au passage \\(n\\) le n-i\u00e8me \u00e9l\u00e9ment de la liste dans le d\u00e9but de la liste (d\u00e9j\u00e0 tri\u00e9e). Partie C Cet algorithme est it\u00e9ratif car un tri fusion fait appel lui-m\u00eame Si les deux tas sont d\u00e9j\u00e0 tri\u00e9s, il suffit de comparer les cartes situ\u00e9s sur le dessus de chaque tas et de prendre la plus petite. Code compl\u00e9t\u00e9 : 1 2 3 4 5 6 7 8 9 from math import floor def tri_fusion ( liste , i_debut , i_fin ): \"\"\" trie par fusion la liste en param\u00e8tre depuis 4 i_debut jusqu\u2019\u00e0 i_fin \"\"\" if i_debut < i_fin : i_partage = floor (( i_debut + i_fin ) / 2 ) tri_fusion ( liste , i_debut , i_partage ) tri_fusion ( liste , i_partage + 1 , i_fin ) fusionner ( liste , i_debut , i_partage , i_fin ) Note L'utilisation de la fonction floor ne s'impose pas, puisque'on travaille sur des entiers i_partage se d\u00e9finit sans recours \u00e0 la biblioth\u00e8que math avec i_partage = (i_debut+i_fin)//2 . Cette ligne permet d'importer la m\u00e9thode floor \u00e0 partir du module math . Partie D C'est l'algorithme du tri fusion qui a \u00e9t\u00e9 utilis\u00e9e. Chaque \u00e9tape repr\u00e9sente la fusion de listes d\u00e9j\u00e0 tri\u00e9es. Le tri par insertion a une complexit\u00e9 en \\(\\mathcal{O}(n)\\) dans le pire des cas et le tri fusion une complexit\u00e9 en \\(\\mathcal{O}(n\\,\\log_2(n))\\) . Dans un tri par insertion, on effectue un maximum de n insertions demandant chacune au plus n op\u00e9rations. Cette algorithme a donc une complexit\u00e9 quadratique. Pour le tri fusion, on note \\(C(n)\\) le co\u00fbt en nombre d'op\u00e9rations pour trier une liste de taille \\(n\\) . Pour trier une liste de taille \\(n\\) , s\u00e9parer les deux listes (co\u00fbt de \\(n\\) op\u00e9rations), trier deux listes de taille \\(\\dfrac{n}{2}\\) et les fusionner (co\u00fbt de \\(n\\) op\u00e9rations). Donc \\(C(n) = 2\\,C(\\dfrac{n}{2}) + 2n\\) , on montre que cela implique un co\u00fbt en \\(\\mathcal{O}(n\\,\\log_2(n))\\) . Attention Question difficile et \u00e0 la limite du programme de nsi qui par ailleurs parle de co\u00fbt plut\u00f4t que de complexit\u00e9 . Exercice 2 : donn\u00e9es en table, bases de donn\u00e9es Exercice 3 : arbres binaires de recherche et programmation orient\u00e9e objet Partie A : Etude d'un exemple Le noeud racine a pour valeur 5, et ses fils sont 2 et 7. Ce sont les noeuds 5,2 et 3. Arbre obtenu apr\u00e8s l'ajout de la valeur 6 : graph TD N5[\"5\"] --> N2[\"2\"] N5 --> N7[\"7\"] N2 --> V1[\" \"] N2 --> N3[\"3\"] N7 --> N6[\"6\"] N7 --> N8[\"8\"] style V1 fill:#FFFFFF, stroke:#FFFFFF style N6 fill:#DD4444 linkStyle 2 stroke:#FFFFFF,stroke-width:0px linkStyle 4 stroke:#FF0000 Partie B : Impl\u00e9mentation en Python La fonction __init__ permet de cr\u00e9er un objet de type abr , par d\u00e9faut c'est l'arbre binaire vide ( valeur=None ) mais on peut pr\u00e9ciser une valeur pour le noeud racine en modifiant ce param\u00e8tre. Si on ajoute un \u00e9l\u00e9ment d\u00e9j\u00e0 pr\u00e9sent dans l'arbre, alors il ne se passe rien. En effet, dans la m\u00e9thode insereElement le cas e==self.valeur n'est pas trait\u00e9. 1 2 3 4 5 arbre = ABR ( 5 ) arbre . insereElement ( 2 ) arbre . insereElement ( 3 ) arbre . insereElement ( 7 ) arbre . insereElement ( 8 ) Partie C : Tri par arbre binaire de recherche C'est le parcours infixe dans lequel on liste la valeur d'un noeud entre les valeurs de sons sous arbre gauche et les valeurs de son sous arbre droit. On sait que les tri par insertion et par s\u00e9lection ont tous les deux une complexit\u00e9 quadratique. Dans ce nouvel algorithme : l'insertion d'une valeur dans l'arbre a une complexit\u00e9 logarithme (semblable \u00e0 celle d'une recherche dichotomique) donc l'insertion des \\(n\\) valeurs a une complexit\u00e9 en \\(\\mathcal{O}(n\\log(n))\\) Une fois les insertions effectu\u00e9es le parcours a une complexit\u00e9 lin\u00e9aire La complexit\u00e9 de ce nouvel algorithme est donc en \\(\\mathcal{O}(n\\log(n))\\) (parfois appel\u00e9 complexit\u00e9 pseudo lin\u00e9aire) et est donc meilleur que la complexit\u00e9 quadratique des tris par selection ou par insertion. Exercice 4 : routage, architecture mat\u00e9rielle Exercice 5 : donn\u00e9es en table, bases de donn\u00e9es","title":"21 NSIJ2PO1"},{"location":"backup/21-NSIJ2PO1/#21-nsij2po1-corrige","text":"Ann\u00e9e : 2021 Centre : Polyn\u00e9sie Jour : 2 Enonc\u00e9 :","title":"21-NSIJ2PO1 : Corrig\u00e9"},{"location":"backup/21-NSIJ2PO1/#exercice-1-algorithmique-et-programmation-algorithmes-de-tri","text":"","title":"Exercice 1 : algorithmique et programmation (algorithmes de tri)"},{"location":"backup/21-NSIJ2PO1/#partie-a","text":"Les affichages obtenues seront : 8 car len(notes) est le nombre d'\u00e9l\u00e9ments de la liste notes [8,7,18,16,12,9,17,3] car on affiche la liste de d\u00e9part en ayant remplac\u00e9 la valeur situ\u00e9e \u00e0 l'indice 3 par 16. Pour afficher les \u00e9l\u00e9ments d'indice 2 \u00e0 4 de la liste on peut \u00e9crire : for i in range ( 2 , 5 ): print ( note [ i ]) Note L'utilisation d'une boucle ne s'impose pas, on aurait pu \u00e9crire print(note[2],note[3],note[4]) ou encore utiliser les slices : print(note[2:5]) (bien qui cette solution affiche une liste compos\u00e9e des trois \u00e9l\u00e9ments demand\u00e9s)","title":"Partie A"},{"location":"backup/21-NSIJ2PO1/#partie-b","text":"Code compl\u00e9t\u00e9 : 1 2 3 4 5 6 7 8 9 def tri_insertion ( liste ): \"\"\" trie par insertion la liste en param\u00e8tre \"\"\" for indice_courant in range ( 1 , len ( liste )): element_a_inserer = liste [ indice_courant ] i = indice_courant - 1 while i >= 0 and liste [ i ] > element_a_inserer : liste [ i + 1 ] = liste [ i ] i = i - 1 liste [ i + 1 ] = element_a_inserer Apr\u00e8s le premier passage : [7, 8, 18, 14, 12, 9, 17, 3] Apr\u00e8s le troisi\u00e8me passage : [7, 8, 14, 18, 12, 9, 17, 3] Note On rappelle que le principe de l'algorithme est d'ins\u00e9rer au passage \\(n\\) le n-i\u00e8me \u00e9l\u00e9ment de la liste dans le d\u00e9but de la liste (d\u00e9j\u00e0 tri\u00e9e).","title":"Partie B"},{"location":"backup/21-NSIJ2PO1/#partie-c","text":"Cet algorithme est it\u00e9ratif car un tri fusion fait appel lui-m\u00eame Si les deux tas sont d\u00e9j\u00e0 tri\u00e9s, il suffit de comparer les cartes situ\u00e9s sur le dessus de chaque tas et de prendre la plus petite. Code compl\u00e9t\u00e9 : 1 2 3 4 5 6 7 8 9 from math import floor def tri_fusion ( liste , i_debut , i_fin ): \"\"\" trie par fusion la liste en param\u00e8tre depuis 4 i_debut jusqu\u2019\u00e0 i_fin \"\"\" if i_debut < i_fin : i_partage = floor (( i_debut + i_fin ) / 2 ) tri_fusion ( liste , i_debut , i_partage ) tri_fusion ( liste , i_partage + 1 , i_fin ) fusionner ( liste , i_debut , i_partage , i_fin ) Note L'utilisation de la fonction floor ne s'impose pas, puisque'on travaille sur des entiers i_partage se d\u00e9finit sans recours \u00e0 la biblioth\u00e8que math avec i_partage = (i_debut+i_fin)//2 . Cette ligne permet d'importer la m\u00e9thode floor \u00e0 partir du module math .","title":"Partie C"},{"location":"backup/21-NSIJ2PO1/#partie-d","text":"C'est l'algorithme du tri fusion qui a \u00e9t\u00e9 utilis\u00e9e. Chaque \u00e9tape repr\u00e9sente la fusion de listes d\u00e9j\u00e0 tri\u00e9es. Le tri par insertion a une complexit\u00e9 en \\(\\mathcal{O}(n)\\) dans le pire des cas et le tri fusion une complexit\u00e9 en \\(\\mathcal{O}(n\\,\\log_2(n))\\) . Dans un tri par insertion, on effectue un maximum de n insertions demandant chacune au plus n op\u00e9rations. Cette algorithme a donc une complexit\u00e9 quadratique. Pour le tri fusion, on note \\(C(n)\\) le co\u00fbt en nombre d'op\u00e9rations pour trier une liste de taille \\(n\\) . Pour trier une liste de taille \\(n\\) , s\u00e9parer les deux listes (co\u00fbt de \\(n\\) op\u00e9rations), trier deux listes de taille \\(\\dfrac{n}{2}\\) et les fusionner (co\u00fbt de \\(n\\) op\u00e9rations). Donc \\(C(n) = 2\\,C(\\dfrac{n}{2}) + 2n\\) , on montre que cela implique un co\u00fbt en \\(\\mathcal{O}(n\\,\\log_2(n))\\) . Attention Question difficile et \u00e0 la limite du programme de nsi qui par ailleurs parle de co\u00fbt plut\u00f4t que de complexit\u00e9 .","title":"Partie D"},{"location":"backup/21-NSIJ2PO1/#exercice-2-donnees-en-table-bases-de-donnees","text":"","title":"Exercice 2 : donn\u00e9es en table, bases de donn\u00e9es"},{"location":"backup/21-NSIJ2PO1/#exercice-3-arbres-binaires-de-recherche-et-programmation-orientee-objet","text":"","title":"Exercice 3 : arbres binaires de recherche et programmation orient\u00e9e objet"},{"location":"backup/21-NSIJ2PO1/#partie-a-etude-dun-exemple","text":"Le noeud racine a pour valeur 5, et ses fils sont 2 et 7. Ce sont les noeuds 5,2 et 3. Arbre obtenu apr\u00e8s l'ajout de la valeur 6 : graph TD N5[\"5\"] --> N2[\"2\"] N5 --> N7[\"7\"] N2 --> V1[\" \"] N2 --> N3[\"3\"] N7 --> N6[\"6\"] N7 --> N8[\"8\"] style V1 fill:#FFFFFF, stroke:#FFFFFF style N6 fill:#DD4444 linkStyle 2 stroke:#FFFFFF,stroke-width:0px linkStyle 4 stroke:#FF0000","title":"Partie A : Etude d'un exemple"},{"location":"backup/21-NSIJ2PO1/#partie-b-implementation-en-python","text":"La fonction __init__ permet de cr\u00e9er un objet de type abr , par d\u00e9faut c'est l'arbre binaire vide ( valeur=None ) mais on peut pr\u00e9ciser une valeur pour le noeud racine en modifiant ce param\u00e8tre. Si on ajoute un \u00e9l\u00e9ment d\u00e9j\u00e0 pr\u00e9sent dans l'arbre, alors il ne se passe rien. En effet, dans la m\u00e9thode insereElement le cas e==self.valeur n'est pas trait\u00e9. 1 2 3 4 5 arbre = ABR ( 5 ) arbre . insereElement ( 2 ) arbre . insereElement ( 3 ) arbre . insereElement ( 7 ) arbre . insereElement ( 8 )","title":"Partie B : Impl\u00e9mentation en Python"},{"location":"backup/21-NSIJ2PO1/#partie-c-tri-par-arbre-binaire-de-recherche","text":"C'est le parcours infixe dans lequel on liste la valeur d'un noeud entre les valeurs de sons sous arbre gauche et les valeurs de son sous arbre droit. On sait que les tri par insertion et par s\u00e9lection ont tous les deux une complexit\u00e9 quadratique. Dans ce nouvel algorithme : l'insertion d'une valeur dans l'arbre a une complexit\u00e9 logarithme (semblable \u00e0 celle d'une recherche dichotomique) donc l'insertion des \\(n\\) valeurs a une complexit\u00e9 en \\(\\mathcal{O}(n\\log(n))\\) Une fois les insertions effectu\u00e9es le parcours a une complexit\u00e9 lin\u00e9aire La complexit\u00e9 de ce nouvel algorithme est donc en \\(\\mathcal{O}(n\\log(n))\\) (parfois appel\u00e9 complexit\u00e9 pseudo lin\u00e9aire) et est donc meilleur que la complexit\u00e9 quadratique des tris par selection ou par insertion.","title":"Partie C : Tri par arbre binaire de recherche"},{"location":"backup/21-NSIJ2PO1/#exercice-4-routage-architecture-materielle","text":"","title":"Exercice 4 : routage, architecture mat\u00e9rielle"},{"location":"backup/21-NSIJ2PO1/#exercice-5-donnees-en-table-bases-de-donnees","text":"","title":"Exercice 5 : donn\u00e9es en table, bases de donn\u00e9es"},{"location":"backup/22-NSIJ1G11/","text":"22-NSIJ1G11 : Corrig\u00e9 Ann\u00e9e : 2022 Centre : Etranger Jour : 1 Enonc\u00e9 : Exercice 1 : structures de donn\u00e9es (listes, p-uplets et dictionnaires) Exercice 2 : structures de donn\u00e9es (files et la programmation objet en langage python) Exercice 3 : structures de donn\u00e9es (dictionnaires) Exercice 4 : les bases de donn\u00e9es Exercice 5 : architecture mat\u00e9rielle des ordinateurs, les r\u00e9seaux et sur les protocoles de routage","title":"22 NSIJ1G11"},{"location":"backup/22-NSIJ1G11/#22-nsij1g11-corrige","text":"Ann\u00e9e : 2022 Centre : Etranger Jour : 1 Enonc\u00e9 :","title":"22-NSIJ1G11 : Corrig\u00e9"},{"location":"backup/22-NSIJ1G11/#exercice-1-structures-de-donnees-listes-p-uplets-et-dictionnaires","text":"","title":"Exercice 1 : structures de donn\u00e9es (listes, p-uplets et dictionnaires)"},{"location":"backup/22-NSIJ1G11/#exercice-2-structures-de-donnees-files-et-la-programmation-objet-en-langage-python","text":"","title":"Exercice 2 : structures de donn\u00e9es (files et la programmation objet en langage python)"},{"location":"backup/22-NSIJ1G11/#exercice-3-structures-de-donnees-dictionnaires","text":"","title":"Exercice 3 : structures de donn\u00e9es (dictionnaires)"},{"location":"backup/22-NSIJ1G11/#exercice-4-les-bases-de-donnees","text":"","title":"Exercice 4 : les bases de donn\u00e9es"},{"location":"backup/22-NSIJ1G11/#exercice-5-architecture-materielle-des-ordinateurs-les-reseaux-et-sur-les-protocoles-de-routage","text":"","title":"Exercice 5 : architecture mat\u00e9rielle des ordinateurs, les r\u00e9seaux et sur les protocoles de routage"},{"location":"backup/22-NSIJ1ME1/","text":"22-NSIJ1ME1 : Corrig\u00e9 Ann\u00e9e : 2022 Centre : M\u00e9tropole Jour : 1 Enonc\u00e9 : Exercice 1 : structures de donn\u00e9es Partie A Cette phrase d\u00e9crit le comportement d'une file. En effet, dans une file, le premier \u00e9l\u00e9ment entr\u00e9 est aussi le premier sorti. Dans une pile par contre le premier entr\u00e9 sera le dernier \u00e0 sortir. La variable controleur augmente de 1 lorsqu'on rencontre une parenth\u00e8se ouvrante et diminue de 1 lorsqu'on rencontre une parenth\u00e8se fermante par cons\u00e9quent : pour B=((()() les valeurs successives seront : \\(1, 2, 3, 2, 3, 2\\) pour C=(()))( les valeurs successives seront : \\(1, 2, 1, 0, -1, 0\\) Le test 1 : if controleur < 0 L'exemple de l'expression C illustre ce cas de figure, l'expression est mal parenth\u00e9s\u00e9e car le controleur devient n\u00e9gatif Le test 2 : if controleur == 0 L'exemple de l'expression B illustre ce cas de figure, l'expression est mal parenth\u00e9s\u00e9e car le controleur est non nul apr\u00e8s avoir parcouru toute l'expression Attention Dans les 4 derni\u00e8res lignes du code propos\u00e9 dans l'exercice, on teste si un bool\u00e9en est vrai et dans ce cas on renvoie vrai et faux sinon : if controleur == 0 : # return True #le parenth\u00e9sage est correct else : return False #parenth\u00e8se(s) fermante(s) manquante(s) Ce qui revient \u00e0 renvoyer ce bool\u00e9en, ces quatre lignes se r\u00e9sument donc : return controleur == 0 Partie B 4. a. b. Si la pile est vide en fin de parcours alors le balisage est correct. c. Puisque l'expression est correctement balis\u00e9e, il y autant de balises ouvrantes que de balises fermantes (6 de chaque). Puisqu'on empile les balises ouvrantes, la pile contiendra au maximum 6 \u00e9l\u00e9ments. Exercice 2 : bases de donn\u00e9es a. Cette requ\u00eate renvoie les champs nom , prenom et naissance de la relation individu lorsque le nom est 'Crog' . Sur l'extrait de la table, on obtient donc : 'Crog', 'Daniel', '07-07-1968' . Attention Le sujet pr\u00e9sente des extraits des relations individu et realisation , on ne sait pas s'il faut fournir le r\u00e9sultat des requ\u00eates sur ces extraits uniquement ou de fa\u00e7on g\u00e9n\u00e9rale. Dans la r\u00e9ponse pr\u00e9c\u00e9dente, on donne les deux. b. SELECT titre , id_rea FROM realisation WHERE annee > 2020 ; a. C'est la requ\u00eate 1 qu'il faut utiliser, elle met \u00e0 jour la table. La requ\u00eate 2 ne fonctionne pas car elle ins\u00e8re un nouvel enregistrement, or id_ind est une cl\u00e9 primaire donc unique. On ne peut donc pas ins\u00e9rer un nouvel enregistrement ayant pour id_int la valeur 688 . b. Pour la relation individu la cl\u00e9 primaire est id_ind les autres valeurs acceptent donc des doublons (pas de contrainte UNIQUE ) et on peut donc avoir deux individus ayant m\u00eame nom, pr\u00e9nom et date de naissance. a. INSERT INTO emploi VALUES ( 5400 , 'Acteur(James Bond)' , 688 , 105 ); -- (1) 688 est l' id_ind de Daniel Crog et 105 l' id_rea de \"Casino Imperial\". INSERT INTO emploi VALUES ( 5401 , 'Acteur(James Bond)' , 688 , 325 ); -- (1) 688 est l' id_ind de Daniel Crog et 325 l' id_rea de \"Ciel tombant\". b. On doit d'abord cr\u00e9er l'enregistrement du film dans la relation realisation , car id_rea \u00e9tant une cl\u00e9 \u00e9trang\u00e8re de la relation emploi , on ne peut pas cr\u00e9er un enregistrement dans emploi si son id_rea ne figure pas dans realisation . a. SELECT individu . nom , realisation . titre , realisation . annee FROM emploi JOIN individu ON individu . id_ind = emploi . id_ind JOIN realisation ON realisation . id_rea = emploi . id_rea WHERE emploi . description = 'Acteur(James Bond)' ; b. SELECT emploi . description FROM emploi JOIN individu ON individu . id_ind = emploi . id_ind WHERE individu . prenom = \"Denis\" and individu . nom = \"Johnson\" Exercice 3 : repr\u00e9sentations binaires et protocoles de routage a. \\(\\overset{\\displaystyle{_{2^7}}}{\\boxed{\\strut1}}\\overset{\\displaystyle{_{2^6}}}{\\boxed{\\strut1}}\\overset{\\displaystyle{_{2^5}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^4}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^3}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^2}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^1}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^0}}}{\\boxed{\\strut0}}\\) \\(= 128 + 64 = 192\\) \\(\\overset{\\displaystyle{_{2^7}}}{\\boxed{\\strut1}}\\overset{\\displaystyle{_{2^6}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^5}}}{\\boxed{\\strut1}}\\overset{\\displaystyle{_{2^4}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^3}}}{\\boxed{\\strut1}}\\overset{\\displaystyle{_{2^2}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^1}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^0}}}{\\boxed{\\strut0}}\\) \\(= 128 + 32 + 8 = 168\\) \\(\\overset{\\displaystyle{_{2^7}}}{\\boxed{\\strut1}}\\overset{\\displaystyle{_{2^6}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^5}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^4}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^3}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^2}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^1}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^0}}}{\\boxed{\\strut0}}\\) \\(= 128\\) \\(\\overset{\\displaystyle{_{2^7}}}{\\boxed{\\strut1}}\\overset{\\displaystyle{_{2^6}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^5}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^4}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^3}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^2}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^1}}}{\\boxed{\\strut1}}\\overset{\\displaystyle{_{2^0}}}{\\boxed{\\strut1}}\\) \\(= 128 + 2 + 1 = 131\\) L'\u00e9criture d\u00e9cimale de cette adresse ip v4 est donc \\(192.168.128.131\\) b. Le dernier octet a 256 valeurs possibles (de 0 \u00e0 255), le nombre d'adresses diff\u00e9rentes possibles du r\u00e9seau A est donc 256. Attention Deux adresses sont r\u00e9serv\u00e9es dans un r\u00e9seau : une pour le r\u00e9seau lui-m\u00eame et l'autre pour la diffusion ( broadcast ). Donc parmi les 256 possibilit\u00e9s, 254 peuvent \u00eatre attribu\u00e9es \u00e0 un h\u00f4te du r\u00e9seau. a. Le routeur A est directement reli\u00e9 \u00e0 B, C et D (m\u00e9trique 1) b. graph LR A((\"A\")) B((\"B\")) C((\"C\")) D((\"D\")) E((\"E\")) A --- B & C & D B --- D C --- D D --- E a. Le chemin emprunt\u00e9 sera F - H - J - K - I pour un co\u00fbt de 13. Les autres chemins ont un co\u00fbt sup\u00e9rieur et dans le protocole ospf on minimise le co\u00fbt (et pas le nombre de routeurs travers\u00e9s comme dans le protocole rip ) b. Destination M\u00e9trique F 0 G 8 H 5 I 13 J 6 K 8 L 11 c. Une panne du routeur H, en effet dans ce cas : pour transmettre de I \u00e0 F le chemin serait I - K - J - G - F (co\u00fbt minimal de 19), pour transmettre de K \u00e0 F le chemin serait K - J - G - F (co\u00fbt minimal de 14), pour transmettre de J \u00e0 F le chemin serait J - G - F (co\u00fbt minimal de 12) pour transmettre de L \u00e0 F le chemin serait L - G - F (co\u00fbt minimal de 20) Dans tous les cas, on transite bien par G . Exercice 4 : parcours des arbres binaires, diviser pour r\u00e9gner, r\u00e9cursivit\u00e9 Partie A : Parcours d'un arbre La somme de l'arbre pr\u00e9c\u00e9dent est \\(32\\) : \\(3+6+2+7+4+9+1\\) Les r\u00e9ponses sont regroup\u00e9es dans le tableau ci-dessous : Lettre Noms A Racine B Noeud C Feuille D sag E sad Le parcours en largeur correspond au parcours de haut en bas et de gauche en droite c'est \u00e0 dire \u00e0 la proposition C : 3-6-2-7-4-9-1 def somme ( nombres ): s = 0 for n in nombres : s += n return s Remarques On peut aussi penser \u00e0 utiliser sum C'est un parcours en largeur, en effet les noeuds sont plac\u00e9s dans une file, ils sont donc trait\u00e9s dans leur ordre d'arriv\u00e9e. Partie B : M\u00e9thode 'diviser pour r\u00e9gner' C'est la proposition D : diviser un probl\u00e8me en deux probl\u00e8mes plus petits et ind\u00e9pendants. Attention on peut diviser en plus de deux sous probl\u00e8mes la m\u00e9thode inclus normalement une phase o\u00f9 on combine les solutions des sous probl\u00e8mes afin d'obtenir celle du probl\u00e8me initial. somme(Arbre) = valeur de la racine + somme(SAG) + somme(SAD) def calcul_somme ( arbre ): if est_vide ( arbre ): return 0 else : return valeur_racine ( arbre ) + somme ( arbre_gauche ( arbre )) + somme ( arbre_droit ( arbre )) Exercice 5 : programmation orient\u00e9e objet C'est l' instruction 3 : joueur1 = Joueur(\"Sniper\",319,\"A\") a. def redevenir_actif ( self ): if not self . est_actif : self . est_actif = True b. def nb_de_tirs_recus ( self ): return len ( liste_id_tirs_recus ) a. C'est le test 1 qui v\u00e9rifie que l'\u00e9quipe du participant est bien celle de la base. b. A la ligne 5, on constate que lorsqu'un joueur a \u00e9t\u00e9 touch\u00e9 par le tir d'un co\u00e9quipier, le score de l'\u00e9quipe diminue de 20. if participant . est_determine (): # (1) self . incremente_score ( 40 ) Dans la classe Joueur donn\u00e9e en d\u00e9but d'exercice on trouve la m\u00e9thode est_determine","title":"22 NSIJ1ME1"},{"location":"backup/22-NSIJ1ME1/#22-nsij1me1-corrige","text":"Ann\u00e9e : 2022 Centre : M\u00e9tropole Jour : 1 Enonc\u00e9 :","title":"22-NSIJ1ME1 : Corrig\u00e9"},{"location":"backup/22-NSIJ1ME1/#exercice-1-structures-de-donnees","text":"Partie A Cette phrase d\u00e9crit le comportement d'une file. En effet, dans une file, le premier \u00e9l\u00e9ment entr\u00e9 est aussi le premier sorti. Dans une pile par contre le premier entr\u00e9 sera le dernier \u00e0 sortir. La variable controleur augmente de 1 lorsqu'on rencontre une parenth\u00e8se ouvrante et diminue de 1 lorsqu'on rencontre une parenth\u00e8se fermante par cons\u00e9quent : pour B=((()() les valeurs successives seront : \\(1, 2, 3, 2, 3, 2\\) pour C=(()))( les valeurs successives seront : \\(1, 2, 1, 0, -1, 0\\) Le test 1 : if controleur < 0 L'exemple de l'expression C illustre ce cas de figure, l'expression est mal parenth\u00e9s\u00e9e car le controleur devient n\u00e9gatif Le test 2 : if controleur == 0 L'exemple de l'expression B illustre ce cas de figure, l'expression est mal parenth\u00e9s\u00e9e car le controleur est non nul apr\u00e8s avoir parcouru toute l'expression Attention Dans les 4 derni\u00e8res lignes du code propos\u00e9 dans l'exercice, on teste si un bool\u00e9en est vrai et dans ce cas on renvoie vrai et faux sinon : if controleur == 0 : # return True #le parenth\u00e9sage est correct else : return False #parenth\u00e8se(s) fermante(s) manquante(s) Ce qui revient \u00e0 renvoyer ce bool\u00e9en, ces quatre lignes se r\u00e9sument donc : return controleur == 0 Partie B 4. a. b. Si la pile est vide en fin de parcours alors le balisage est correct. c. Puisque l'expression est correctement balis\u00e9e, il y autant de balises ouvrantes que de balises fermantes (6 de chaque). Puisqu'on empile les balises ouvrantes, la pile contiendra au maximum 6 \u00e9l\u00e9ments.","title":"Exercice 1 : structures de donn\u00e9es"},{"location":"backup/22-NSIJ1ME1/#exercice-2-bases-de-donnees","text":"a. Cette requ\u00eate renvoie les champs nom , prenom et naissance de la relation individu lorsque le nom est 'Crog' . Sur l'extrait de la table, on obtient donc : 'Crog', 'Daniel', '07-07-1968' . Attention Le sujet pr\u00e9sente des extraits des relations individu et realisation , on ne sait pas s'il faut fournir le r\u00e9sultat des requ\u00eates sur ces extraits uniquement ou de fa\u00e7on g\u00e9n\u00e9rale. Dans la r\u00e9ponse pr\u00e9c\u00e9dente, on donne les deux. b. SELECT titre , id_rea FROM realisation WHERE annee > 2020 ; a. C'est la requ\u00eate 1 qu'il faut utiliser, elle met \u00e0 jour la table. La requ\u00eate 2 ne fonctionne pas car elle ins\u00e8re un nouvel enregistrement, or id_ind est une cl\u00e9 primaire donc unique. On ne peut donc pas ins\u00e9rer un nouvel enregistrement ayant pour id_int la valeur 688 . b. Pour la relation individu la cl\u00e9 primaire est id_ind les autres valeurs acceptent donc des doublons (pas de contrainte UNIQUE ) et on peut donc avoir deux individus ayant m\u00eame nom, pr\u00e9nom et date de naissance. a. INSERT INTO emploi VALUES ( 5400 , 'Acteur(James Bond)' , 688 , 105 ); -- (1) 688 est l' id_ind de Daniel Crog et 105 l' id_rea de \"Casino Imperial\". INSERT INTO emploi VALUES ( 5401 , 'Acteur(James Bond)' , 688 , 325 ); -- (1) 688 est l' id_ind de Daniel Crog et 325 l' id_rea de \"Ciel tombant\". b. On doit d'abord cr\u00e9er l'enregistrement du film dans la relation realisation , car id_rea \u00e9tant une cl\u00e9 \u00e9trang\u00e8re de la relation emploi , on ne peut pas cr\u00e9er un enregistrement dans emploi si son id_rea ne figure pas dans realisation . a. SELECT individu . nom , realisation . titre , realisation . annee FROM emploi JOIN individu ON individu . id_ind = emploi . id_ind JOIN realisation ON realisation . id_rea = emploi . id_rea WHERE emploi . description = 'Acteur(James Bond)' ; b. SELECT emploi . description FROM emploi JOIN individu ON individu . id_ind = emploi . id_ind WHERE individu . prenom = \"Denis\" and individu . nom = \"Johnson\"","title":"Exercice 2 : bases de donn\u00e9es"},{"location":"backup/22-NSIJ1ME1/#exercice-3-representations-binaires-et-protocoles-de-routage","text":"a. \\(\\overset{\\displaystyle{_{2^7}}}{\\boxed{\\strut1}}\\overset{\\displaystyle{_{2^6}}}{\\boxed{\\strut1}}\\overset{\\displaystyle{_{2^5}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^4}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^3}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^2}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^1}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^0}}}{\\boxed{\\strut0}}\\) \\(= 128 + 64 = 192\\) \\(\\overset{\\displaystyle{_{2^7}}}{\\boxed{\\strut1}}\\overset{\\displaystyle{_{2^6}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^5}}}{\\boxed{\\strut1}}\\overset{\\displaystyle{_{2^4}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^3}}}{\\boxed{\\strut1}}\\overset{\\displaystyle{_{2^2}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^1}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^0}}}{\\boxed{\\strut0}}\\) \\(= 128 + 32 + 8 = 168\\) \\(\\overset{\\displaystyle{_{2^7}}}{\\boxed{\\strut1}}\\overset{\\displaystyle{_{2^6}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^5}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^4}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^3}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^2}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^1}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^0}}}{\\boxed{\\strut0}}\\) \\(= 128\\) \\(\\overset{\\displaystyle{_{2^7}}}{\\boxed{\\strut1}}\\overset{\\displaystyle{_{2^6}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^5}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^4}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^3}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^2}}}{\\boxed{\\strut0}}\\overset{\\displaystyle{_{2^1}}}{\\boxed{\\strut1}}\\overset{\\displaystyle{_{2^0}}}{\\boxed{\\strut1}}\\) \\(= 128 + 2 + 1 = 131\\) L'\u00e9criture d\u00e9cimale de cette adresse ip v4 est donc \\(192.168.128.131\\) b. Le dernier octet a 256 valeurs possibles (de 0 \u00e0 255), le nombre d'adresses diff\u00e9rentes possibles du r\u00e9seau A est donc 256. Attention Deux adresses sont r\u00e9serv\u00e9es dans un r\u00e9seau : une pour le r\u00e9seau lui-m\u00eame et l'autre pour la diffusion ( broadcast ). Donc parmi les 256 possibilit\u00e9s, 254 peuvent \u00eatre attribu\u00e9es \u00e0 un h\u00f4te du r\u00e9seau. a. Le routeur A est directement reli\u00e9 \u00e0 B, C et D (m\u00e9trique 1) b. graph LR A((\"A\")) B((\"B\")) C((\"C\")) D((\"D\")) E((\"E\")) A --- B & C & D B --- D C --- D D --- E a. Le chemin emprunt\u00e9 sera F - H - J - K - I pour un co\u00fbt de 13. Les autres chemins ont un co\u00fbt sup\u00e9rieur et dans le protocole ospf on minimise le co\u00fbt (et pas le nombre de routeurs travers\u00e9s comme dans le protocole rip ) b. Destination M\u00e9trique F 0 G 8 H 5 I 13 J 6 K 8 L 11 c. Une panne du routeur H, en effet dans ce cas : pour transmettre de I \u00e0 F le chemin serait I - K - J - G - F (co\u00fbt minimal de 19), pour transmettre de K \u00e0 F le chemin serait K - J - G - F (co\u00fbt minimal de 14), pour transmettre de J \u00e0 F le chemin serait J - G - F (co\u00fbt minimal de 12) pour transmettre de L \u00e0 F le chemin serait L - G - F (co\u00fbt minimal de 20) Dans tous les cas, on transite bien par G .","title":"Exercice 3 : repr\u00e9sentations binaires et protocoles de routage"},{"location":"backup/22-NSIJ1ME1/#exercice-4-parcours-des-arbres-binaires-diviser-pour-regner-recursivite","text":"Partie A : Parcours d'un arbre La somme de l'arbre pr\u00e9c\u00e9dent est \\(32\\) : \\(3+6+2+7+4+9+1\\) Les r\u00e9ponses sont regroup\u00e9es dans le tableau ci-dessous : Lettre Noms A Racine B Noeud C Feuille D sag E sad Le parcours en largeur correspond au parcours de haut en bas et de gauche en droite c'est \u00e0 dire \u00e0 la proposition C : 3-6-2-7-4-9-1 def somme ( nombres ): s = 0 for n in nombres : s += n return s Remarques On peut aussi penser \u00e0 utiliser sum C'est un parcours en largeur, en effet les noeuds sont plac\u00e9s dans une file, ils sont donc trait\u00e9s dans leur ordre d'arriv\u00e9e. Partie B : M\u00e9thode 'diviser pour r\u00e9gner' C'est la proposition D : diviser un probl\u00e8me en deux probl\u00e8mes plus petits et ind\u00e9pendants. Attention on peut diviser en plus de deux sous probl\u00e8mes la m\u00e9thode inclus normalement une phase o\u00f9 on combine les solutions des sous probl\u00e8mes afin d'obtenir celle du probl\u00e8me initial. somme(Arbre) = valeur de la racine + somme(SAG) + somme(SAD) def calcul_somme ( arbre ): if est_vide ( arbre ): return 0 else : return valeur_racine ( arbre ) + somme ( arbre_gauche ( arbre )) + somme ( arbre_droit ( arbre ))","title":"Exercice 4 : parcours des arbres binaires, diviser pour r\u00e9gner, r\u00e9cursivit\u00e9"},{"location":"backup/22-NSIJ1ME1/#exercice-5-programmation-orientee-objet","text":"C'est l' instruction 3 : joueur1 = Joueur(\"Sniper\",319,\"A\") a. def redevenir_actif ( self ): if not self . est_actif : self . est_actif = True b. def nb_de_tirs_recus ( self ): return len ( liste_id_tirs_recus ) a. C'est le test 1 qui v\u00e9rifie que l'\u00e9quipe du participant est bien celle de la base. b. A la ligne 5, on constate que lorsqu'un joueur a \u00e9t\u00e9 touch\u00e9 par le tir d'un co\u00e9quipier, le score de l'\u00e9quipe diminue de 20. if participant . est_determine (): # (1) self . incremente_score ( 40 ) Dans la classe Joueur donn\u00e9e en d\u00e9but d'exercice on trouve la m\u00e9thode est_determine","title":"Exercice 5 : programmation orient\u00e9e objet"},{"location":"backup/22-NSIJ1PO1/","text":"22-NSIJ1PO1 : Corrig\u00e9 Ann\u00e9e : 2022 Centre : Polyn\u00e9sie Jour : 1 Enonc\u00e9 : Exercice 1 : programmation et r\u00e9cursivit\u00e9 Exercice 2 : architecture mat\u00e9rielle, ordonnancement et expressions bool\u00e9ennes Exercice 3 : base de donn\u00e9es, mod\u00e8le relationnel, langage SQL Exercice 4 : structures de donn\u00e9es, piles Exercice 5 : algorithmique, algorithme sur les abres binaires","title":"22 NSIJ1PO1"},{"location":"backup/22-NSIJ1PO1/#22-nsij1po1-corrige","text":"Ann\u00e9e : 2022 Centre : Polyn\u00e9sie Jour : 1 Enonc\u00e9 :","title":"22-NSIJ1PO1 : Corrig\u00e9"},{"location":"backup/22-NSIJ1PO1/#exercice-1-programmation-et-recursivite","text":"","title":"Exercice 1 : programmation et r\u00e9cursivit\u00e9"},{"location":"backup/22-NSIJ1PO1/#exercice-2-architecture-materielle-ordonnancement-et-expressions-booleennes","text":"","title":"Exercice 2 : architecture mat\u00e9rielle, ordonnancement et expressions bool\u00e9ennes"},{"location":"backup/22-NSIJ1PO1/#exercice-3-base-de-donnees-modele-relationnel-langage-sql","text":"","title":"Exercice 3 : base de donn\u00e9es, mod\u00e8le relationnel, langage SQL"},{"location":"backup/22-NSIJ1PO1/#exercice-4-structures-de-donnees-piles","text":"","title":"Exercice 4 : structures de donn\u00e9es, piles"},{"location":"backup/22-NSIJ1PO1/#exercice-5-algorithmique-algorithme-sur-les-abres-binaires","text":"","title":"Exercice 5 : algorithmique, algorithme sur les abres binaires"},{"location":"backup/22-NSIJ2G11/","text":"22-NSIJ2G11 : Corrig\u00e9 Ann\u00e9e : 2022 Centre : Etranger Jour : 2 Enonc\u00e9 : Exercice 1 : langages et programmation (r\u00e9cursivit\u00e9) Exercice 2 : structure de donn\u00e9es (dictionnaires) Exercice 3 : base de donn\u00e9es Exercice 4 : structures de donn\u00e9es, programmation objet Exercice 5 : architectures mat\u00e9rielles, syst\u00e8mes d\u2019exploitation et r\u00e9seaux (protocoles de routage)","title":"22 NSIJ2G11"},{"location":"backup/22-NSIJ2G11/#22-nsij2g11-corrige","text":"Ann\u00e9e : 2022 Centre : Etranger Jour : 2 Enonc\u00e9 :","title":"22-NSIJ2G11 : Corrig\u00e9"},{"location":"backup/22-NSIJ2G11/#exercice-1-langages-et-programmation-recursivite","text":"","title":"Exercice 1 : langages et programmation (r\u00e9cursivit\u00e9)"},{"location":"backup/22-NSIJ2G11/#exercice-2-structure-de-donnees-dictionnaires","text":"","title":"Exercice 2 : structure de donn\u00e9es (dictionnaires)"},{"location":"backup/22-NSIJ2G11/#exercice-3-base-de-donnees","text":"","title":"Exercice 3 : base de donn\u00e9es"},{"location":"backup/22-NSIJ2G11/#exercice-4-structures-de-donnees-programmation-objet","text":"","title":"Exercice 4 : structures de donn\u00e9es, programmation objet"},{"location":"backup/22-NSIJ2G11/#exercice-5-architectures-materielles-systemes-dexploitation-et-reseaux-protocoles-de-routage","text":"","title":"Exercice 5 : architectures mat\u00e9rielles, syst\u00e8mes d\u2019exploitation et r\u00e9seaux (protocoles de routage)"},{"location":"backup/22-NSIJ2ME1/","text":"22-NSIJ2ME1 : Corrig\u00e9 Ann\u00e9e : 2022 Centre : M\u00e9tropole Jour : 2 Enonc\u00e9 : Exercice 1 : arbres binaires de recherche, la programmation orient\u00e9e objet et la r\u00e9cursivit\u00e9 a. La taille de cet arbre est 8 (on utilise la d\u00e9finition donn\u00e9e dans l'\u00e9nonc\u00e9 : \" la taille d\u2019un arbre est le nombre de n\u0153uds qu\u2019il contient ) b. La hauteur de cet arbre est 4 (on utilise la d\u00e9finition donn\u00e9e dans l'\u00e9nonc\u00e9 : Sa hauteur est le nombre de n\u0153uds du plus long chemin qui joint le n\u0153ud racine \u00e0 l\u2019une des feuilles ) Attention D'autres auteurs donnent une d\u00e9finition diff\u00e9rente de la hauteur dans laquelle la hauteur de l'arbre vide est \\(-1\\) . c. graph TD N21((\"21\")) --> N18((\"18\")) N21 --> N27((\"27\")) N18 --> V1[\" \"] N18 --> N20((\"20\")) style V1 fill:#FFFFFF, stroke:#FFFFFF linkStyle 2 stroke:#FFFFFF,stroke-width:0px d. Pour tout noeud de cet arbre, les valeurs figurant dans le sous arbre gauche sont inf\u00e9rieures \u00e0 la valeur du noeud et celles du sous arbre droit son sup\u00e9rieures. C'est donc bien un arbre binaire de recherche. c. On a indiqu\u00e9 en rouge le chemin suivi pour ins\u00e9rer 17 graph TD N15((\"15\")) --> N13((\"13\")) N15 --> N21((\"21\")) N13 --> N11((\"11\")) N13 --> N14((\"14\")) N21 --> N18((\"18\")) N21 --> N27((\"27\")) N18 --> N17((\"17\")) N18 --> N20((\"20\")) style N17 fill:#AA2222,stroke:#333 linkStyle 1,4,6 stroke:#FF0000,stroke-width:2px a. C'est l'instruction (C) b. return Noeud ( ins ( v , abr . gauche ), abr . valeur , abr . droit ) c. Chaque noeud (m\u00eame lorsque ses fils sont None ) g\u00e9n\u00e8re deux appels r\u00e9cursif (un pour le fils droit et un pour le fils gauche). Chaque ar\u00eate de l'arbre suivant repr\u00e9sente donc un appel r\u00e9cursif : graph TD N15((\"15\")) --> N13((\"13\")) N15 --> N21((\"21\")) N13 --> N11((\"11\")) N13 --> N14((\"14\")) N21 --> N18((\"18\")) N18 --> V5[\"None\"] N21 --> N27((\"27\")) N18 --> N20((\"20\")) N11 --> V1[\"None\"] N11 --> V2[\"None\"] N14 --> V3[\"None\"] N14 --> V4[\"None\"] N27 --> V6[\"None\"] N27 --> V7[\"None\"] N20 --> V8[\"None\"] N20 --> V9[\"None\"] style V5 V6 fill:#DDDDDD,stroke:#000000 L'instruction nb_sup(16,abr) va donc g\u00e9n\u00e9rer un total de 17 appels \u00e0 nb_sup (l'appel initial plus 16 appels r\u00e9cursifs). d. En utilisant la propri\u00e9t\u00e9 des arbres binaires de recherche (rappel\u00e9e \u00e0 la question 1.d ), on sait qu'il suffit de chercher dans le sous arbre droit lorsque abr.valeur<v puisque le sous arbre gauche contient des valeurs inf\u00e9rieures \u00e0 abr.valeur . def nb_sup ( v , abr ): if abr is None : return 0 else : if abr . valeur >= v : return 1 + nb_sup ( v , abr . gauche ) + nb_sup ( v , abr . droit ) return nb_sup ( v , abr . droit ) Exercice 2 : structures de donn\u00e9es a. Premiers parcours : \u2503 4 \u2503 \u2503 9 \u2503 \u2503 8 \u2503 \u2503 7 \u2503 \u2503 4 \u2503 \u2503 2 \u2503 \u2517\u2501\u2501\u2501\u251b \u2503 \u2503 \u2503 4 \u2503 \u2503 8 \u2503 \u2503 7 \u2503 \u2503 4 \u2503 \u2503 2 \u2503 \u2517\u2501\u2501\u2501\u251b \u2503 \u2503 \u2503 \u2503 \u2503 4 \u2503 \u2503 8 \u2503 \u2503 4 \u2503 \u2503 2 \u2503 \u2517\u2501\u2501\u2501\u251b Second parcours : \u2503 \u2503 \u2503 \u2503 \u2503 4 \u2503 \u2503 8 \u2503 \u2503 4 \u2503 \u2503 2 \u2503 \u2517\u2501\u2501\u2501\u251b \u2503 \u2503 \u2503 \u2503 \u2503 \u2503 \u2503 4 \u2503 \u2503 4 \u2503 \u2503 2 \u2503 \u2517\u2501\u2501\u2501\u251b Troisi\u00e8me parcours : \u2503 \u2503 \u2503 \u2503 \u2503 4 \u2503 \u2503 4 \u2503 \u2503 2 \u2503 \u2517\u2501\u2501\u2501\u251b \u2503 \u2503 \u2503 \u2503 \u2503 \u2503 \u2503 4 \u2503 \u2503 2 \u2503 \u2517\u2501\u2501\u2501\u251b Cette pile est donc gagnante. b. La pile B est gagnante, en effet : \u2503 4 \u2503 \u2503 5 \u2503 \u2503 4 \u2503 \u2503 9 \u2503 \u2503 2 \u2503 \u2503 0 \u2503 \u2517\u2501\u2501\u2501\u251b \u2503 \u2503 \u2503 4 \u2503 \u2503 4 \u2503 \u2503 9 \u2503 \u2503 2 \u2503 \u2503 0 \u2503 \u2517\u2501\u2501\u2501\u251b \u2503 \u2503 \u2503 \u2503 \u2503 4 \u2503 \u2503 4 \u2503 \u2503 2 \u2503 \u2503 0 \u2503 \u2517\u2501\u2501\u2501\u251b Second parcours : \u2503 \u2503 \u2503 \u2503 \u2503 4 \u2503 \u2503 4 \u2503 \u2503 2 \u2503 \u2503 0 \u2503 \u2517\u2501\u2501\u2501\u251b \u2503 \u2503 \u2503 \u2503 \u2503 \u2503 \u2503 4 \u2503 \u2503 2 \u2503 \u2503 0 \u2503 \u2517\u2501\u2501\u2501\u251b Troisi\u00e8me parcours : \u2503 \u2503 \u2503 \u2503 \u2503 4 \u2503 \u2503 2 \u2503 \u2503 0 \u2503 \u2517\u2501\u2501\u2501\u251b \u2503 \u2503 \u2503 \u2503 \u2503 \u2503 \u2503 4 \u2503 \u2503 0 \u2503 \u2517\u2501\u2501\u2501\u251b Code compl\u00e9t\u00e9 : def reduire_triplet_au_sommet ( p ): a = depiler ( p ) b = depiler ( p ) c = sommet ( p ) if a % 2 != c % 2 : empiler ( p , b ) empiler ( p , a ) Attention La m\u00e9thode sommet renvoie le sommet sans le d\u00e9piler , suivant le r\u00e9sultat du test de parit\u00e9 on rempile ou non l'\u00e9l\u00e9ment central du triplet. a. La taille minimal d'une pile r\u00e9ductible est 3. b. def parcourir_pile_en_reduisant ( p ): q = creer_pile_vide () while taille ( p ) >= 3 : reduire_triplet_au_sommet ( p ) e = depiler ( p ) empiler ( q , e ) while not est_vide ( q ): e = depiler ( q ) empiler ( p , e ) return p Code compl\u00e9t\u00e9 : 1 2 3 4 5 6 def jouer ( p ): q = parcourir_pile_en_reduisant ( p ) if taille ( q ) == taille ( p ) : return p else : return jouer ( q ) Bug La structure de donn\u00e9es pile de l'\u00e9nonc\u00e9 est mutable . En effet, par exemple depiler(p) retire le sommet de p et donc modifie p . Par cons\u00e9quent, parcourir_pile_en_reduisant modifie la pile pass\u00e9e en param\u00e8tre (en d\u00e9pit du return qui figure dans cette fonction et laisse penser qu'on renvoie une nouvelle pile). Bien que la correction propos\u00e9e ci-dessus est probablement la r\u00e9ponse attendue, elle ne fonctionne pas car p et q sont le m\u00eame objet et le test ligne 3 est v\u00e9rifi\u00e9. Le site \u00e9crit nsi propose une correction de Nicolas Reveret avec modification de l'\u00e9nonc\u00e9 afin d'\u00e9viter ce bug. Exercice 3 : r\u00e9seaux et protocoles de routage a. L'adresse du r\u00e9seau est 192.168.1.0 pour l'obtenir il suffit de faire un et logique bit \u00e0 bit entre l'adresse de la machine 192.168.1.0 et le masque du r\u00e9seau qui est ici 255.255.255.0 (soir `\\24 en notation cidr ) Exercice 4 : base de donn\u00e9es relationnelles et langage SQL Exercice 5 : programmation objet et m\u00e9thode diviser pour r\u00e9gner","title":"22 NSIJ2ME1"},{"location":"backup/22-NSIJ2ME1/#22-nsij2me1-corrige","text":"Ann\u00e9e : 2022 Centre : M\u00e9tropole Jour : 2 Enonc\u00e9 :","title":"22-NSIJ2ME1 : Corrig\u00e9"},{"location":"backup/22-NSIJ2ME1/#exercice-1-arbres-binaires-de-recherche-la-programmation-orientee-objet-et-la-recursivite","text":"a. La taille de cet arbre est 8 (on utilise la d\u00e9finition donn\u00e9e dans l'\u00e9nonc\u00e9 : \" la taille d\u2019un arbre est le nombre de n\u0153uds qu\u2019il contient ) b. La hauteur de cet arbre est 4 (on utilise la d\u00e9finition donn\u00e9e dans l'\u00e9nonc\u00e9 : Sa hauteur est le nombre de n\u0153uds du plus long chemin qui joint le n\u0153ud racine \u00e0 l\u2019une des feuilles ) Attention D'autres auteurs donnent une d\u00e9finition diff\u00e9rente de la hauteur dans laquelle la hauteur de l'arbre vide est \\(-1\\) . c. graph TD N21((\"21\")) --> N18((\"18\")) N21 --> N27((\"27\")) N18 --> V1[\" \"] N18 --> N20((\"20\")) style V1 fill:#FFFFFF, stroke:#FFFFFF linkStyle 2 stroke:#FFFFFF,stroke-width:0px d. Pour tout noeud de cet arbre, les valeurs figurant dans le sous arbre gauche sont inf\u00e9rieures \u00e0 la valeur du noeud et celles du sous arbre droit son sup\u00e9rieures. C'est donc bien un arbre binaire de recherche. c. On a indiqu\u00e9 en rouge le chemin suivi pour ins\u00e9rer 17 graph TD N15((\"15\")) --> N13((\"13\")) N15 --> N21((\"21\")) N13 --> N11((\"11\")) N13 --> N14((\"14\")) N21 --> N18((\"18\")) N21 --> N27((\"27\")) N18 --> N17((\"17\")) N18 --> N20((\"20\")) style N17 fill:#AA2222,stroke:#333 linkStyle 1,4,6 stroke:#FF0000,stroke-width:2px a. C'est l'instruction (C) b. return Noeud ( ins ( v , abr . gauche ), abr . valeur , abr . droit ) c. Chaque noeud (m\u00eame lorsque ses fils sont None ) g\u00e9n\u00e8re deux appels r\u00e9cursif (un pour le fils droit et un pour le fils gauche). Chaque ar\u00eate de l'arbre suivant repr\u00e9sente donc un appel r\u00e9cursif : graph TD N15((\"15\")) --> N13((\"13\")) N15 --> N21((\"21\")) N13 --> N11((\"11\")) N13 --> N14((\"14\")) N21 --> N18((\"18\")) N18 --> V5[\"None\"] N21 --> N27((\"27\")) N18 --> N20((\"20\")) N11 --> V1[\"None\"] N11 --> V2[\"None\"] N14 --> V3[\"None\"] N14 --> V4[\"None\"] N27 --> V6[\"None\"] N27 --> V7[\"None\"] N20 --> V8[\"None\"] N20 --> V9[\"None\"] style V5 V6 fill:#DDDDDD,stroke:#000000 L'instruction nb_sup(16,abr) va donc g\u00e9n\u00e9rer un total de 17 appels \u00e0 nb_sup (l'appel initial plus 16 appels r\u00e9cursifs). d. En utilisant la propri\u00e9t\u00e9 des arbres binaires de recherche (rappel\u00e9e \u00e0 la question 1.d ), on sait qu'il suffit de chercher dans le sous arbre droit lorsque abr.valeur<v puisque le sous arbre gauche contient des valeurs inf\u00e9rieures \u00e0 abr.valeur . def nb_sup ( v , abr ): if abr is None : return 0 else : if abr . valeur >= v : return 1 + nb_sup ( v , abr . gauche ) + nb_sup ( v , abr . droit ) return nb_sup ( v , abr . droit )","title":"Exercice 1 : arbres binaires de recherche, la programmation orient\u00e9e objet et la r\u00e9cursivit\u00e9"},{"location":"backup/22-NSIJ2ME1/#exercice-2-structures-de-donnees","text":"a. Premiers parcours : \u2503 4 \u2503 \u2503 9 \u2503 \u2503 8 \u2503 \u2503 7 \u2503 \u2503 4 \u2503 \u2503 2 \u2503 \u2517\u2501\u2501\u2501\u251b \u2503 \u2503 \u2503 4 \u2503 \u2503 8 \u2503 \u2503 7 \u2503 \u2503 4 \u2503 \u2503 2 \u2503 \u2517\u2501\u2501\u2501\u251b \u2503 \u2503 \u2503 \u2503 \u2503 4 \u2503 \u2503 8 \u2503 \u2503 4 \u2503 \u2503 2 \u2503 \u2517\u2501\u2501\u2501\u251b Second parcours : \u2503 \u2503 \u2503 \u2503 \u2503 4 \u2503 \u2503 8 \u2503 \u2503 4 \u2503 \u2503 2 \u2503 \u2517\u2501\u2501\u2501\u251b \u2503 \u2503 \u2503 \u2503 \u2503 \u2503 \u2503 4 \u2503 \u2503 4 \u2503 \u2503 2 \u2503 \u2517\u2501\u2501\u2501\u251b Troisi\u00e8me parcours : \u2503 \u2503 \u2503 \u2503 \u2503 4 \u2503 \u2503 4 \u2503 \u2503 2 \u2503 \u2517\u2501\u2501\u2501\u251b \u2503 \u2503 \u2503 \u2503 \u2503 \u2503 \u2503 4 \u2503 \u2503 2 \u2503 \u2517\u2501\u2501\u2501\u251b Cette pile est donc gagnante. b. La pile B est gagnante, en effet : \u2503 4 \u2503 \u2503 5 \u2503 \u2503 4 \u2503 \u2503 9 \u2503 \u2503 2 \u2503 \u2503 0 \u2503 \u2517\u2501\u2501\u2501\u251b \u2503 \u2503 \u2503 4 \u2503 \u2503 4 \u2503 \u2503 9 \u2503 \u2503 2 \u2503 \u2503 0 \u2503 \u2517\u2501\u2501\u2501\u251b \u2503 \u2503 \u2503 \u2503 \u2503 4 \u2503 \u2503 4 \u2503 \u2503 2 \u2503 \u2503 0 \u2503 \u2517\u2501\u2501\u2501\u251b Second parcours : \u2503 \u2503 \u2503 \u2503 \u2503 4 \u2503 \u2503 4 \u2503 \u2503 2 \u2503 \u2503 0 \u2503 \u2517\u2501\u2501\u2501\u251b \u2503 \u2503 \u2503 \u2503 \u2503 \u2503 \u2503 4 \u2503 \u2503 2 \u2503 \u2503 0 \u2503 \u2517\u2501\u2501\u2501\u251b Troisi\u00e8me parcours : \u2503 \u2503 \u2503 \u2503 \u2503 4 \u2503 \u2503 2 \u2503 \u2503 0 \u2503 \u2517\u2501\u2501\u2501\u251b \u2503 \u2503 \u2503 \u2503 \u2503 \u2503 \u2503 4 \u2503 \u2503 0 \u2503 \u2517\u2501\u2501\u2501\u251b Code compl\u00e9t\u00e9 : def reduire_triplet_au_sommet ( p ): a = depiler ( p ) b = depiler ( p ) c = sommet ( p ) if a % 2 != c % 2 : empiler ( p , b ) empiler ( p , a ) Attention La m\u00e9thode sommet renvoie le sommet sans le d\u00e9piler , suivant le r\u00e9sultat du test de parit\u00e9 on rempile ou non l'\u00e9l\u00e9ment central du triplet. a. La taille minimal d'une pile r\u00e9ductible est 3. b. def parcourir_pile_en_reduisant ( p ): q = creer_pile_vide () while taille ( p ) >= 3 : reduire_triplet_au_sommet ( p ) e = depiler ( p ) empiler ( q , e ) while not est_vide ( q ): e = depiler ( q ) empiler ( p , e ) return p Code compl\u00e9t\u00e9 : 1 2 3 4 5 6 def jouer ( p ): q = parcourir_pile_en_reduisant ( p ) if taille ( q ) == taille ( p ) : return p else : return jouer ( q ) Bug La structure de donn\u00e9es pile de l'\u00e9nonc\u00e9 est mutable . En effet, par exemple depiler(p) retire le sommet de p et donc modifie p . Par cons\u00e9quent, parcourir_pile_en_reduisant modifie la pile pass\u00e9e en param\u00e8tre (en d\u00e9pit du return qui figure dans cette fonction et laisse penser qu'on renvoie une nouvelle pile). Bien que la correction propos\u00e9e ci-dessus est probablement la r\u00e9ponse attendue, elle ne fonctionne pas car p et q sont le m\u00eame objet et le test ligne 3 est v\u00e9rifi\u00e9. Le site \u00e9crit nsi propose une correction de Nicolas Reveret avec modification de l'\u00e9nonc\u00e9 afin d'\u00e9viter ce bug.","title":"Exercice 2 : structures de donn\u00e9es"},{"location":"backup/22-NSIJ2ME1/#exercice-3-reseaux-et-protocoles-de-routage","text":"a. L'adresse du r\u00e9seau est 192.168.1.0 pour l'obtenir il suffit de faire un et logique bit \u00e0 bit entre l'adresse de la machine 192.168.1.0 et le masque du r\u00e9seau qui est ici 255.255.255.0 (soir `\\24 en notation cidr )","title":"Exercice 3 : r\u00e9seaux et protocoles de routage"},{"location":"backup/22-NSIJ2ME1/#exercice-4-base-de-donnees-relationnelles-et-langage-sql","text":"","title":"Exercice 4 : base de donn\u00e9es relationnelles et langage SQL"},{"location":"backup/22-NSIJ2ME1/#exercice-5-programmation-objet-et-methode-diviser-pour-regner","text":"","title":"Exercice 5 : programmation objet et m\u00e9thode diviser pour r\u00e9gner"},{"location":"backup/DS1/","text":"Evaluation de NSI du 02/09/2021 Attention Tous les programmes demand\u00e9s doivent \u00eatre enregistr\u00e9s dans votre dossier personnel dans Evaluations/DS1/ Exercice 1 On donne ci-dessous le squelette d'un programme Python utilisant le module turtle import turtle # Cr\u00e9ation du \"papier\" et du \"crayon\" crayon = turtle . Turtle () papier = turtle . Screen () # Taille, dimension et couleur pour le papier et le crayon papier . bgcolor ( \"beige\" ) papier . setup ( width = 500 , height = 500 ) crayon . color ( \"navy\" ) crayon . pensize ( 1 ) # Attends un clic pour fermer la fen\u00eatre de dessin papier . exitonclick () Ajouter \u00e0 ce programme une fonction rectangle_plein(x,y,largeur,longueur,couleur) qui construit un rectangle de dimensions longueur x largeur rempli avec la couleur couleur et dont le coin inf\u00e9rieur gauche a pour coordonn\u00e9es (x,y) . A titre d'exemple, on donne ci-dessous le r\u00e9sultat de l'appel de cette fonction pour tracer le rectangle plein en couleur navy de dimensions 80 x 120 et dont le coin inf\u00e9rieur gauche a pour coordonn\u00e9es (-100,-100) Utiliser cette fonction afin de dessiner un drapeau de la France aux dimensions 300 pixels sur 200 pixels. Aide Les trois rectangles formant le drapeau ont m\u00eame dimension : 100 pixels sur 200 pixels. Les couleurs de chacun des trois rectangles au format (r,v,b) sont : (05,20,64) pour le bleu, (255,255,255) pour le blanc, (236,25,32) pour le rouge. Consulter la documentation de turtle pour savoir comment fixer la couleur du crayon \u00e0 une couleur sous ce format. Exercice 2 R\u00e9aliser le dessin suivant \u00e0 l'aide du module turtle, votre programme devra imp\u00e9rativement utilis\u00e9 : une boucle une instruction conditionnelle On pr\u00e9cise que : Les rayon des cercles sont 5, 10, 15 et ainsi de suite en augmentant de 5. Seul le cercle de rayon 25 est rouge Les cercles sont tangents \u00e0 l'axe des abscisses en (-200,0) , (-150,0) , (-100,0) et ainsi de suite en augmentant l'abcisse de 50 \u00e0 chaque fois. Exercice 3 (d'apr\u00e8s \u00e9preuve pratique du BAC) \u00c9crire une fonction python appel\u00e9e nb_repetitions qui prend en param\u00e8tres un \u00e9l\u00e9ment elt et une liste l et renvoie le nombre de fois o\u00f9 l\u2019\u00e9l\u00e9ment appara\u00eet dans la liste. Exemples : >>> nb_repetitions ( 5 ,[ 2 , 5 , 3 , 5 , 6 , 9 , 5 ]) 3 >>> nb_repetitions ( 'A' ,[ 'B' , 'A' , 'B' , 'A' , 'R' ]) 2 >>> nb_repetitions ( 12 ,[ 1 , '! ' , 7 , 21 , 36 , 44 ]) 0 Aide Penser \u00e0 \u00e9crire une cha\u00eene de documentation pour votre fonction et \u00e0 tester les pr\u00e9conditions \u00e9ventuelles sur les arguments. Exercice 4 (d'apr\u00e8s \u00e9preuve pratique du BAC) Le jeu du \u00ab plus ou moins \u00bb consiste \u00e0 deviner un nombre entier choisi entre 1 et 99. Un \u00e9l\u00e8ve de NSI d\u00e9cide de le coder en langage Python de la mani\u00e8re suivante : le programme g\u00e9n\u00e8re un nombre entier al\u00e9atoire compris entre 1 et 99 ; si la proposition de l\u2019utilisateur est plus petite que le nombre cherch\u00e9, l\u2019utilisateur en est averti. Il peut alors en tester un autre ; si la proposition de l\u2019utilisateur est plus grande que le nombre cherch\u00e9, l\u2019utilisateur en est averti. Il peut alors en tester un autre ; si l\u2019utilisateur trouve le bon nombre en 10 essais ou moins, il gagne ; si l\u2019utilisateur a fait plus de 10 essais sans trouver le bon nombre, il perd. La fonction randint est utilis\u00e9e. Si a et b sont des entiers, randint(a,b) renvoie un nombre entier compris entre a (inclus) et b (inclus). Compl\u00e9ter le code ci-dessous et le tester : from random import randint def plus_ou_moins (): nb_mystere = randint ( 1 , ... ) nb_test = int ( input ( \"Proposez un nombre entre 1 et 99 : \" )) compteur = ... while nb_mystere != ... and compteur < ... : compteur = compteur + ... if nb_mystere ... nb_test : nb_test = int ( input ( \"Trop petit ! Testez encore : \" )) else : nb_test = int ( input ( \"Trop grand ! Testez encore : \" )) if nb_mystere == nb_test : print ( \"Bravo ! Le nombre \u00e9tait \" , ... ) print ( \"Nombre d'essais: \" , ... ) else : print ( \"Perdu ! Le nombre \u00e9tait \" , ... )","title":"Evaluation de NSI du 02/09/2021"},{"location":"backup/DS1/#evaluation-de-nsi-du-02092021","text":"Attention Tous les programmes demand\u00e9s doivent \u00eatre enregistr\u00e9s dans votre dossier personnel dans Evaluations/DS1/","title":"Evaluation de NSI du 02/09/2021"},{"location":"backup/DS1/#exercice-1","text":"On donne ci-dessous le squelette d'un programme Python utilisant le module turtle import turtle # Cr\u00e9ation du \"papier\" et du \"crayon\" crayon = turtle . Turtle () papier = turtle . Screen () # Taille, dimension et couleur pour le papier et le crayon papier . bgcolor ( \"beige\" ) papier . setup ( width = 500 , height = 500 ) crayon . color ( \"navy\" ) crayon . pensize ( 1 ) # Attends un clic pour fermer la fen\u00eatre de dessin papier . exitonclick () Ajouter \u00e0 ce programme une fonction rectangle_plein(x,y,largeur,longueur,couleur) qui construit un rectangle de dimensions longueur x largeur rempli avec la couleur couleur et dont le coin inf\u00e9rieur gauche a pour coordonn\u00e9es (x,y) . A titre d'exemple, on donne ci-dessous le r\u00e9sultat de l'appel de cette fonction pour tracer le rectangle plein en couleur navy de dimensions 80 x 120 et dont le coin inf\u00e9rieur gauche a pour coordonn\u00e9es (-100,-100) Utiliser cette fonction afin de dessiner un drapeau de la France aux dimensions 300 pixels sur 200 pixels. Aide Les trois rectangles formant le drapeau ont m\u00eame dimension : 100 pixels sur 200 pixels. Les couleurs de chacun des trois rectangles au format (r,v,b) sont : (05,20,64) pour le bleu, (255,255,255) pour le blanc, (236,25,32) pour le rouge. Consulter la documentation de turtle pour savoir comment fixer la couleur du crayon \u00e0 une couleur sous ce format.","title":"Exercice 1"},{"location":"backup/DS1/#exercice-2","text":"R\u00e9aliser le dessin suivant \u00e0 l'aide du module turtle, votre programme devra imp\u00e9rativement utilis\u00e9 : une boucle une instruction conditionnelle On pr\u00e9cise que : Les rayon des cercles sont 5, 10, 15 et ainsi de suite en augmentant de 5. Seul le cercle de rayon 25 est rouge Les cercles sont tangents \u00e0 l'axe des abscisses en (-200,0) , (-150,0) , (-100,0) et ainsi de suite en augmentant l'abcisse de 50 \u00e0 chaque fois.","title":"Exercice 2"},{"location":"backup/DS1/#exercice-3-dapres-epreuve-pratique-du-bac","text":"\u00c9crire une fonction python appel\u00e9e nb_repetitions qui prend en param\u00e8tres un \u00e9l\u00e9ment elt et une liste l et renvoie le nombre de fois o\u00f9 l\u2019\u00e9l\u00e9ment appara\u00eet dans la liste. Exemples : >>> nb_repetitions ( 5 ,[ 2 , 5 , 3 , 5 , 6 , 9 , 5 ]) 3 >>> nb_repetitions ( 'A' ,[ 'B' , 'A' , 'B' , 'A' , 'R' ]) 2 >>> nb_repetitions ( 12 ,[ 1 , '! ' , 7 , 21 , 36 , 44 ]) 0 Aide Penser \u00e0 \u00e9crire une cha\u00eene de documentation pour votre fonction et \u00e0 tester les pr\u00e9conditions \u00e9ventuelles sur les arguments.","title":"Exercice 3 (d'apr\u00e8s \u00e9preuve pratique du BAC)"},{"location":"backup/DS1/#exercice-4-dapres-epreuve-pratique-du-bac","text":"Le jeu du \u00ab plus ou moins \u00bb consiste \u00e0 deviner un nombre entier choisi entre 1 et 99. Un \u00e9l\u00e8ve de NSI d\u00e9cide de le coder en langage Python de la mani\u00e8re suivante : le programme g\u00e9n\u00e8re un nombre entier al\u00e9atoire compris entre 1 et 99 ; si la proposition de l\u2019utilisateur est plus petite que le nombre cherch\u00e9, l\u2019utilisateur en est averti. Il peut alors en tester un autre ; si la proposition de l\u2019utilisateur est plus grande que le nombre cherch\u00e9, l\u2019utilisateur en est averti. Il peut alors en tester un autre ; si l\u2019utilisateur trouve le bon nombre en 10 essais ou moins, il gagne ; si l\u2019utilisateur a fait plus de 10 essais sans trouver le bon nombre, il perd. La fonction randint est utilis\u00e9e. Si a et b sont des entiers, randint(a,b) renvoie un nombre entier compris entre a (inclus) et b (inclus). Compl\u00e9ter le code ci-dessous et le tester : from random import randint def plus_ou_moins (): nb_mystere = randint ( 1 , ... ) nb_test = int ( input ( \"Proposez un nombre entre 1 et 99 : \" )) compteur = ... while nb_mystere != ... and compteur < ... : compteur = compteur + ... if nb_mystere ... nb_test : nb_test = int ( input ( \"Trop petit ! Testez encore : \" )) else : nb_test = int ( input ( \"Trop grand ! Testez encore : \" )) if nb_mystere == nb_test : print ( \"Bravo ! Le nombre \u00e9tait \" , ... ) print ( \"Nombre d'essais: \" , ... ) else : print ( \"Perdu ! Le nombre \u00e9tait \" , ... )","title":"Exercice 4 (d'apr\u00e8s \u00e9preuve pratique du BAC)"},{"location":"backup/DS2/","text":"Evaluation de NSI du 20/09/2021 Attention Tous les programmes demand\u00e9s doivent \u00eatre enregistr\u00e9s dans votre dossier personnel dans Evaluations/DS2/ Exercice 1 On donne ci-dessous le squelette d'un programme Python utilisant le module turtle qui pourra \u00eatre utilis\u00e9 pour r\u00e9pondre aux questions de l'exercice. import turtle # Cr\u00e9ation du \"papier\" et du \"crayon\" crayon = turtle . Turtle () papier = turtle . Screen () # Taille, dimension et couleur pour le papier et le crayon papier . bgcolor ( \"beige\" ) papier . setup ( width = 500 , height = 500 ) crayon . color ( \"navy\" ) crayon . pensize ( 5 ) # Attends un clic pour fermer la fen\u00eatre de dessin papier . exitonclick () Ecrire un programme Python it\u00e9ratif permettant de dessiner la frise suivante : Le rep\u00e8re et les graduations sont l\u00e0 pour vous aider et ne doivent pas \u00eatre reproduits. On consid\u00e8re qu'une frise est constitu\u00e9e d'un motif de base et d'une frise ayant un motif de moins. En utilisant cette d\u00e9finition r\u00e9cursive de la frise, \u00e9crire un programme r\u00e9cursif permettant de la dessiner. Exercice 2 On s'int\u00e9resse \u00e0 un algorithme r\u00e9cursif de rendu de monnaie. On veut donc \u00e9crire une fonction r\u00e9cursive rendu(somme,systeme_monetaire) qui renvoie la liste des pi\u00e8ces du systeme_monetaire permettant de former somme . On suppose aussi que la liste des valeurs du syst\u00e8me mon\u00e9taire est donn\u00e9 par ordre d\u00e9croissant de valeurs. Par exemples : >>> rendu_monnaie ( 67 ,[ 50 , 20 , 10 , 5 , 2 , 1 ]) [ 2 , 5 , 10 , 50 ] >>> rendu_monnaie ( 143 ,[ 50 , 20 , 10 , 5 , 2 , 1 ]) [ 1 , 2 , 20 , 20 , 50 , 50 ] Rappel On rappelle qu'il s'agit d'un algorithme glouton. Dans cet exercice, pour simplifier, on consid\u00e8re que le syst\u00e8me mon\u00e9taire utilis\u00e9 est canonique et que donc cet algorithme n'\u00e9choue pas. Compl\u00e9ter le code Python suivant : def rendu_monnaie ( somme , systeme_monetaire ): ''' Renvoie la liste des pieces de systeme_monetaire permettant de former somme''' # Cas de base, la somme \u00e0 rendre est nulle if ............. : return [] else : # Appel r\u00e9cursif selon que la pi\u00e8ce de plus grande valeur (forc\u00e9ment situ\u00e9 en d\u00e9but de systeme_monetaire) est utilis\u00e9e ou non piece = ............. if ............. : # piece utilis\u00e9e, l'ajouter \u00e0 liste qu'on renvoie et la soustraire de la somme return rendu_monnaie ( ......... , ........... ) + [ piece ] else : # pi\u00e8ce non utilis\u00e9e car de trop grande valeur, la supprimer du syst\u00e8me mon\u00e9taire systeme_monetaire ..... ( 0 ) return rendu_monnaie ( ...... , ......... ) Bonus (\u00e0 faire uniquement s'il vous reste du temps) : Ajouter les instructions assert permettant de v\u00e9rifier les pr\u00e9conditions sur les arguments Traiter le cas des syst\u00e8mes mon\u00e9taires non canoniques en renvoyant la liste vide lorsque l'algorithme \u00e9choue \u00e0 trouver une solution. A titre d'exemple, rendu_monnaie(11,[10,8,3]) admet une solution [8,3] mais l'algorithme glouton \u00e9choue et devra donc renvoyer [] .","title":"Evaluation de NSI du 20/09/2021"},{"location":"backup/DS2/#evaluation-de-nsi-du-20092021","text":"Attention Tous les programmes demand\u00e9s doivent \u00eatre enregistr\u00e9s dans votre dossier personnel dans Evaluations/DS2/","title":"Evaluation de NSI du 20/09/2021"},{"location":"backup/DS2/#exercice-1","text":"On donne ci-dessous le squelette d'un programme Python utilisant le module turtle qui pourra \u00eatre utilis\u00e9 pour r\u00e9pondre aux questions de l'exercice. import turtle # Cr\u00e9ation du \"papier\" et du \"crayon\" crayon = turtle . Turtle () papier = turtle . Screen () # Taille, dimension et couleur pour le papier et le crayon papier . bgcolor ( \"beige\" ) papier . setup ( width = 500 , height = 500 ) crayon . color ( \"navy\" ) crayon . pensize ( 5 ) # Attends un clic pour fermer la fen\u00eatre de dessin papier . exitonclick () Ecrire un programme Python it\u00e9ratif permettant de dessiner la frise suivante : Le rep\u00e8re et les graduations sont l\u00e0 pour vous aider et ne doivent pas \u00eatre reproduits. On consid\u00e8re qu'une frise est constitu\u00e9e d'un motif de base et d'une frise ayant un motif de moins. En utilisant cette d\u00e9finition r\u00e9cursive de la frise, \u00e9crire un programme r\u00e9cursif permettant de la dessiner.","title":"Exercice 1"},{"location":"backup/DS2/#exercice-2","text":"On s'int\u00e9resse \u00e0 un algorithme r\u00e9cursif de rendu de monnaie. On veut donc \u00e9crire une fonction r\u00e9cursive rendu(somme,systeme_monetaire) qui renvoie la liste des pi\u00e8ces du systeme_monetaire permettant de former somme . On suppose aussi que la liste des valeurs du syst\u00e8me mon\u00e9taire est donn\u00e9 par ordre d\u00e9croissant de valeurs. Par exemples : >>> rendu_monnaie ( 67 ,[ 50 , 20 , 10 , 5 , 2 , 1 ]) [ 2 , 5 , 10 , 50 ] >>> rendu_monnaie ( 143 ,[ 50 , 20 , 10 , 5 , 2 , 1 ]) [ 1 , 2 , 20 , 20 , 50 , 50 ] Rappel On rappelle qu'il s'agit d'un algorithme glouton. Dans cet exercice, pour simplifier, on consid\u00e8re que le syst\u00e8me mon\u00e9taire utilis\u00e9 est canonique et que donc cet algorithme n'\u00e9choue pas. Compl\u00e9ter le code Python suivant : def rendu_monnaie ( somme , systeme_monetaire ): ''' Renvoie la liste des pieces de systeme_monetaire permettant de former somme''' # Cas de base, la somme \u00e0 rendre est nulle if ............. : return [] else : # Appel r\u00e9cursif selon que la pi\u00e8ce de plus grande valeur (forc\u00e9ment situ\u00e9 en d\u00e9but de systeme_monetaire) est utilis\u00e9e ou non piece = ............. if ............. : # piece utilis\u00e9e, l'ajouter \u00e0 liste qu'on renvoie et la soustraire de la somme return rendu_monnaie ( ......... , ........... ) + [ piece ] else : # pi\u00e8ce non utilis\u00e9e car de trop grande valeur, la supprimer du syst\u00e8me mon\u00e9taire systeme_monetaire ..... ( 0 ) return rendu_monnaie ( ...... , ......... ) Bonus (\u00e0 faire uniquement s'il vous reste du temps) : Ajouter les instructions assert permettant de v\u00e9rifier les pr\u00e9conditions sur les arguments Traiter le cas des syst\u00e8mes mon\u00e9taires non canoniques en renvoyant la liste vide lorsque l'algorithme \u00e9choue \u00e0 trouver une solution. A titre d'exemple, rendu_monnaie(11,[10,8,3]) admet une solution [8,3] mais l'algorithme glouton \u00e9choue et devra donc renvoyer [] .","title":"Exercice 2"},{"location":"backup/EE/","text":"2022 : Epreuves \u00e9crites Etranger - jour 1 : 22-NSIJ1G11 22-NSIJ1G11 Exercice 1 : structures de donn\u00e9es (listes, p-uplets et dictionnaires) Exercice 2 : structures de donn\u00e9es (files et la programmation objet en langage python) Exercice 3 : structures de donn\u00e9es (dictionnaires) Exercice 4 : les bases de donn\u00e9es Exercice 5 : architecture mat\u00e9rielle des ordinateurs, les r\u00e9seaux et sur les protocoles de routage M\u00e9tropole - jour 1 : 22-NSIJ1ME1 22-NSIJ1ME1 Exercice 1 : structures de donn\u00e9es Exercice 2 : bases de donn\u00e9es Exercice 3 : repr\u00e9sentations binaires et protocoles de routage Exercice 4 : parcours des arbres binaires, diviser pour r\u00e9gner, r\u00e9cursivit\u00e9 Exercice 5 : programmation orient\u00e9e objet Polyn\u00e9sie - jour 1 : 22-NSIJ1PO1 22-NSIJ1PO1 Exercice 1 : programmation et r\u00e9cursivit\u00e9 Exercice 2 : architecture mat\u00e9rielle, ordonnancement et expressions bool\u00e9ennes Exercice 3 : base de donn\u00e9es, mod\u00e8le relationnel, langage SQL Exercice 4 : structures de donn\u00e9es, piles Exercice 5 : algorithmique, algorithme sur les abres binaires Etranger - jour 2 : 22-NSIJ2G11 22-NSIJ2G11 Exercice 1 : langages et programmation (r\u00e9cursivit\u00e9) Exercice 2 : structure de donn\u00e9es (dictionnaires) Exercice 3 : base de donn\u00e9es Exercice 4 : structures de donn\u00e9es, programmation objet Exercice 5 : architectures mat\u00e9rielles, syst\u00e8mes d\u2019exploitation et r\u00e9seaux (protocoles de routage) M\u00e9tropole - jour 2 : 22-NSIJ2ME1 22-NSIJ2ME1 Exercice 1 : arbres binaires de recherche, la programmation orient\u00e9e objet et la r\u00e9cursivit\u00e9 Exercice 2 : structures de donn\u00e9es Exercice 3 : r\u00e9seaux et protocoles de routage Exercice 4 : base de donn\u00e9es relationnelles et langage SQL Exercice 5 : programmation objet et m\u00e9thode diviser pour r\u00e9gner","title":"EE"},{"location":"backup/EE/#2022-epreuves-ecrites","text":"","title":"2022 : Epreuves \u00e9crites"},{"location":"backup/EE/#etranger-jour-1-22-nsij1g11","text":"22-NSIJ1G11 Exercice 1 : structures de donn\u00e9es (listes, p-uplets et dictionnaires) Exercice 2 : structures de donn\u00e9es (files et la programmation objet en langage python) Exercice 3 : structures de donn\u00e9es (dictionnaires) Exercice 4 : les bases de donn\u00e9es Exercice 5 : architecture mat\u00e9rielle des ordinateurs, les r\u00e9seaux et sur les protocoles de routage","title":"Etranger - jour 1 : 22-NSIJ1G11"},{"location":"backup/EE/#metropole-jour-1-22-nsij1me1","text":"22-NSIJ1ME1 Exercice 1 : structures de donn\u00e9es Exercice 2 : bases de donn\u00e9es Exercice 3 : repr\u00e9sentations binaires et protocoles de routage Exercice 4 : parcours des arbres binaires, diviser pour r\u00e9gner, r\u00e9cursivit\u00e9 Exercice 5 : programmation orient\u00e9e objet","title":"M\u00e9tropole - jour 1 : 22-NSIJ1ME1"},{"location":"backup/EE/#polynesie-jour-1-22-nsij1po1","text":"22-NSIJ1PO1 Exercice 1 : programmation et r\u00e9cursivit\u00e9 Exercice 2 : architecture mat\u00e9rielle, ordonnancement et expressions bool\u00e9ennes Exercice 3 : base de donn\u00e9es, mod\u00e8le relationnel, langage SQL Exercice 4 : structures de donn\u00e9es, piles Exercice 5 : algorithmique, algorithme sur les abres binaires","title":"Polyn\u00e9sie - jour 1 : 22-NSIJ1PO1"},{"location":"backup/EE/#etranger-jour-2-22-nsij2g11","text":"22-NSIJ2G11 Exercice 1 : langages et programmation (r\u00e9cursivit\u00e9) Exercice 2 : structure de donn\u00e9es (dictionnaires) Exercice 3 : base de donn\u00e9es Exercice 4 : structures de donn\u00e9es, programmation objet Exercice 5 : architectures mat\u00e9rielles, syst\u00e8mes d\u2019exploitation et r\u00e9seaux (protocoles de routage)","title":"Etranger - jour 2 : 22-NSIJ2G11"},{"location":"backup/EE/#metropole-jour-2-22-nsij2me1","text":"22-NSIJ2ME1 Exercice 1 : arbres binaires de recherche, la programmation orient\u00e9e objet et la r\u00e9cursivit\u00e9 Exercice 2 : structures de donn\u00e9es Exercice 3 : r\u00e9seaux et protocoles de routage Exercice 4 : base de donn\u00e9es relationnelles et langage SQL Exercice 5 : programmation objet et m\u00e9thode diviser pour r\u00e9gner","title":"M\u00e9tropole - jour 2 : 22-NSIJ2ME1"},{"location":"backup/EF-sql/","text":"Evaluation de NSI du 05/10/2021 Attention R\u00e9pondre sur un document libreoffice writer Enregistrer ce document dans votre dossier personnel dans Evaluations/DS3/ Exercice 1 Un collectionneur de disque vinyl souhaite cr\u00e9er une base de donn\u00e9es des morceaux de musique qu'il poss\u00e8de. Cette base serait compos\u00e9e d'une seule table : Vinyl Titre TEXT Auteur INTEGER Ann\u00e9e INTEGER Cat\u00e9gorie INTEGER Quels sont les attributs de cette table ? On souhaite ajouter un attribut Dur\u00e9e qui indique la dur\u00e9e du morceau de musique, proposer un type pour cette attribut. Proposer un domaine pour l'attribut Ann\u00e9e . Expliquer dans quelle situation le principe d'unicit\u00e9 des bases de donn\u00e9es n'est pas respect\u00e9e avec cette table. Que faire pour y remedier ? Exercice 2 Exercice 1 : Pays du monde Pr\u00e9ambule T\u00e9l\u00e9charger ci-dessous une base de donn\u00e9es des pays du monde : Pays Ouvrir cette base avec sqlitebrowser Dans Parcourir les donn\u00e9es prendre note du noms des colonnes. Note On pr\u00e9cise la signification des champs suivants ainsi que leur type : Population : le nombre d'habitants (type entier) Region : la r\u00e9gion (en anglais) dans laquelle se trouve le pays (type texte). Par exemple la France se trouve en western europe Area : la surface du pays (en mile carr\u00e9) (type entier) Coastline : la surface c\u00f4ti\u00e8re du pays (type r\u00e9el), cette valeur vaut 0.0 lorsque le pays n'a pas d'ouverture sur la mer. GDP : le produit int\u00e9rieur brut par habitant (type entier). C'est une mesure de la richesse du pays. Requ\u00eates SQL Dans chaque cas, r\u00e9pondre en \u00e9crivant une requ\u00eate sql dont on donnera les r\u00e9sultats : Donner la population et le produit int\u00e9rieur brut de l'Allemagne ( Germany en anglais) Aide Le mod\u00e8le de r\u00e9ponse attendue est donc : \"La population de l'Allemagne est ..... et son pib est .... R\u00e9sultats obtenus avec la requ\u00eate .................................... \" Combien de r\u00e9gions diff\u00e9rentes pour les pays figurent dans cette base de donn\u00e9es ? Lister par ordre croissant les trois pays les plus peupl\u00e9s au monde. Donner les noms des pays commen\u00e7ant par un t et finissant par istan . Donner le plus grand pays (en surface) n'ayant pas d'ouverture sur la mer. Recherches d'informations En argumentant vos r\u00e9ponses \u00e0 l'aide d'informations extraites de ces donn\u00e9es, donner votre opinion sur les affirmations suivantes : Les pays les plus riches sont souvent aussi les plus grands (en surface). L'europe de l'ouest est la r\u00e9gion la plus riche de la plan\u00e8te. Exercice 3 En consultant cette page wikipedia , ou en faisant vos propres recherches sur le Web , expliquer rapidement ce qu'est la loi de Benford Les populations des pays de la base de donn\u00e9es de l'exercice pr\u00e9c\u00e9dent suivent-elles la loi de Benford ? Aide Bien que le champ population soit de type entier, on peut utiliser LIKE comme sur une chaine de caract\u00e8re pour extraire les pays dont la population commence par un 1 et les compter.","title":"Evaluation de NSI du 05/10/2021"},{"location":"backup/EF-sql/#evaluation-de-nsi-du-05102021","text":"Attention R\u00e9pondre sur un document libreoffice writer Enregistrer ce document dans votre dossier personnel dans Evaluations/DS3/","title":"Evaluation de NSI du 05/10/2021"},{"location":"backup/EF-sql/#exercice-1","text":"Un collectionneur de disque vinyl souhaite cr\u00e9er une base de donn\u00e9es des morceaux de musique qu'il poss\u00e8de. Cette base serait compos\u00e9e d'une seule table : Vinyl Titre TEXT Auteur INTEGER Ann\u00e9e INTEGER Cat\u00e9gorie INTEGER Quels sont les attributs de cette table ? On souhaite ajouter un attribut Dur\u00e9e qui indique la dur\u00e9e du morceau de musique, proposer un type pour cette attribut. Proposer un domaine pour l'attribut Ann\u00e9e . Expliquer dans quelle situation le principe d'unicit\u00e9 des bases de donn\u00e9es n'est pas respect\u00e9e avec cette table. Que faire pour y remedier ?","title":"Exercice 1"},{"location":"backup/EF-sql/#exercice-2","text":"","title":"Exercice 2"},{"location":"backup/EF-sql/#exercice-1-pays-du-monde","text":"","title":"Exercice 1 : Pays du monde"},{"location":"backup/EF-sql/#preambule","text":"T\u00e9l\u00e9charger ci-dessous une base de donn\u00e9es des pays du monde : Pays Ouvrir cette base avec sqlitebrowser Dans Parcourir les donn\u00e9es prendre note du noms des colonnes. Note On pr\u00e9cise la signification des champs suivants ainsi que leur type : Population : le nombre d'habitants (type entier) Region : la r\u00e9gion (en anglais) dans laquelle se trouve le pays (type texte). Par exemple la France se trouve en western europe Area : la surface du pays (en mile carr\u00e9) (type entier) Coastline : la surface c\u00f4ti\u00e8re du pays (type r\u00e9el), cette valeur vaut 0.0 lorsque le pays n'a pas d'ouverture sur la mer. GDP : le produit int\u00e9rieur brut par habitant (type entier). C'est une mesure de la richesse du pays.","title":"Pr\u00e9ambule"},{"location":"backup/EF-sql/#requetes-sql","text":"Dans chaque cas, r\u00e9pondre en \u00e9crivant une requ\u00eate sql dont on donnera les r\u00e9sultats : Donner la population et le produit int\u00e9rieur brut de l'Allemagne ( Germany en anglais) Aide Le mod\u00e8le de r\u00e9ponse attendue est donc : \"La population de l'Allemagne est ..... et son pib est .... R\u00e9sultats obtenus avec la requ\u00eate .................................... \" Combien de r\u00e9gions diff\u00e9rentes pour les pays figurent dans cette base de donn\u00e9es ? Lister par ordre croissant les trois pays les plus peupl\u00e9s au monde. Donner les noms des pays commen\u00e7ant par un t et finissant par istan . Donner le plus grand pays (en surface) n'ayant pas d'ouverture sur la mer.","title":"Requ\u00eates SQL"},{"location":"backup/EF-sql/#recherches-dinformations","text":"En argumentant vos r\u00e9ponses \u00e0 l'aide d'informations extraites de ces donn\u00e9es, donner votre opinion sur les affirmations suivantes : Les pays les plus riches sont souvent aussi les plus grands (en surface). L'europe de l'ouest est la r\u00e9gion la plus riche de la plan\u00e8te.","title":"Recherches d'informations"},{"location":"backup/EF-sql/#exercice-3","text":"En consultant cette page wikipedia , ou en faisant vos propres recherches sur le Web , expliquer rapidement ce qu'est la loi de Benford Les populations des pays de la base de donn\u00e9es de l'exercice pr\u00e9c\u00e9dent suivent-elles la loi de Benford ? Aide Bien que le champ population soit de type entier, on peut utiliser LIKE comme sur une chaine de caract\u00e8re pour extraire les pays dont la population commence par un 1 et les compter.","title":"Exercice 3"},{"location":"backup/EP/","text":"Ann\u00e9e 2022 : Sujets d'\u00e9preuves pratiques Attention Des erreurs d'\u00e9nonc\u00e9 figurent dans certains des sujets, dans la correction ils sont signal\u00e9s par une mention Bug . De la m\u00eame fa\u00e7on, certains sujets contiennent des techniques de programmation probl\u00e9matiques indiqu\u00e9es par une mention Attention . Num\u00e9ro Lien de t\u00e9l\u00e9chargement Th\u00e8me exercice 1 Th\u00e8me exercice 2 Code fourni Correction 1 Sujet N\u00b01 Recherche d'occurrences Rendu de monnaie r\u00e9cursif Code 2022-S01 2 Sujet N\u00b02 Calcul d'une moyenne Triangle de Pascal Code 2022-S02 3 Sujet N\u00b03 Codage par diff\u00e9rence Arbre binaire et expression arithm\u00e9tique Code 2022-S03 4 Sujet N\u00b04 Entiers cons\u00e9cutifs dans un tableau Codage d'une image en liste de liste Code 2022-S04 5 Sujet N\u00b05 Recherche du minimum et du maximum POO : cartes et paquet de cartes Code 2022-S05 6 Sujet N\u00b06 Valeur et indice du maximum dans une liste Recherche textuelle Code 2022-S06 7 Sujet N\u00b07 Conversion binaire/d\u00e9cimal Tri \u00e0 bulles Code 2022-S07 8 Sujet N\u00b08 Recherche de la premi\u00e8re occurrence Insertion dans une liste tri\u00e9e Code 2022-S08 9 Sujet N\u00b09 Suite de Collatz Codage d'un mot Code 2022-S09 10 Sujet N\u00b010 Nombre d'occurrence avec un dictionnaire Fusion de deux listes tri\u00e9es Code 2022-S10 11 Sujet N\u00b011 Recherche dichotomique Code de C\u00e9sar Code 2022-S11 12 Sujet N\u00b012 Calcul d'une moyenne S\u00e9paration des 0 et des 1 dans une liste Code 2022-S12 13 Sujet N\u00b013 Rendu de monnaie POO : gestion d'une file Code 2022-S13 14 Sujet N\u00b014 Mots correspodants \u00e0 un motif Recherche d'un cycle Code 2022-S14 15 Sujet N\u00b015 Nombre de r\u00e9p\u00e9titions d'un \u00e9l\u00e9ment Conversion en binaire Code 2022-S15 16 Sujet N\u00b016 Maximum d'un \u00e9l\u00e9ment dans une liste Structure de donn\u00e9es : piles Code 2022-S16 17 Sujet N\u00b017 Nombre de mots dans une phrase POO : arbre binaire de recherche Code 2022-S17 18 Sujet N\u00b018 Minimum d'une liste de temp\u00e9ratures Palindrome Code 2022-S18 19 Sujet N\u00b019 Multiplications avec uniquement additions et soustractions Recherche dichotomique Code 2022-S19 20 Sujet N\u00b020 Ou exclusif entre deux tableaux POO : Test de carr\u00e9s magiques Code 2022-S20 21 Sujet N\u00b021 Multiplications avec uniquement additions et soustractions Recherche dichotomique dans un tableau tri\u00e9 Code 2022-S21 22 Sujet N\u00b022 Ecriture d'une cha\u00eene de caract\u00e8res \u00e0 l'envers Crible d'Eratosth\u00e8ne Code 2022-S22 23 Sujet N\u00b023 Maximum des valeurs d'un dictionnaire POO : pile pour noter une expression arithm\u00e9tique Code 2022-S23 24 Sujet N\u00b024 Maximum des \u00e9l\u00e9ments d'une liste POO : expression bien parenth\u00e9s\u00e9e et piles Code 2022-S24 25 Sujet N\u00b025 Traitement de donn\u00e9es en tables Recherche r\u00e9cursive dans un tableau Code 2022-S25 26 Sujet N\u00b026 Minimum des \u00e9l\u00e9ments d'une liste S\u00e9paration des 0 et des 1 dans une liste Code 2022-S26 27 Sujet N\u00b027 Taille d'un arbre binaire repr\u00e9sent\u00e9 par un dictionnaire Tri par s\u00e9lection Code 2022-S27 28 Sujet N\u00b028 Calcul de moyenne Conversion decimal en binaire Code 2022-S28 29 Sujet N\u00b029 Termes de la suite de Fibonacci Recherche de maximum dans une liste Code 2022-S29 30 Sujet N\u00b030 Fusion de deux listes d\u00e9j\u00e0 tri\u00e9es Conversion num\u00e9ration romaine Code 2022-S30 31 Sujet N\u00b031 Nombre d'occurrence d'un \u00e9l\u00e9ment dans une liste Rendu de monnaie Code 2022-S31 32 Sujet N\u00b032 Derni\u00e8re occurrence d'un \u00e9l\u00e9ment dans une liste POO : adresse IP Code 2022-S32 33 Sujet N\u00b033 Conversion binaire d\u00e9cimal Tri par insertion Code 2022-S33 34 Sujet N\u00b034 Lettre la plus fr\u00e9quente dans un texte Repr\u00e9sentation d'une image par une liste de listes Code 2022-S34 35 Sujet N\u00b035 Calcul d'une moyenne Recherche dichotomique Code 2022-S35 36 Sujet N\u00b036 Derni\u00e8re occurrence d'un \u00e9l\u00e9ment dans une liste Calcul de la distance entre deux points Code 2022-S36 37 Sujet N\u00b037 V\u00e9rification si une liste est tri\u00e9e ou non Comptabilisation de votes (dictionnaires) Code 2022-S37 38 Sujet N\u00b038 Tri par s\u00e9lection Jeu du nombre myst\u00e8re Code 2022-S38 39 Sujet N\u00b039 Calcul d'une moyenne Repr\u00e9sentation d'une image par une liste de liste Code 2022-S39 40 Sujet N\u00b040 Recherche d'un \u00e9l\u00e9ment dans une liste Calcul de moyennes (dictionnaires) Code 2022-S40","title":"Ann\u00e9e 2022 : Sujets d'\u00e9preuves pratiques"},{"location":"backup/EP/#annee-2022-sujets-depreuves-pratiques","text":"Attention Des erreurs d'\u00e9nonc\u00e9 figurent dans certains des sujets, dans la correction ils sont signal\u00e9s par une mention Bug . De la m\u00eame fa\u00e7on, certains sujets contiennent des techniques de programmation probl\u00e9matiques indiqu\u00e9es par une mention Attention . Num\u00e9ro Lien de t\u00e9l\u00e9chargement Th\u00e8me exercice 1 Th\u00e8me exercice 2 Code fourni Correction 1 Sujet N\u00b01 Recherche d'occurrences Rendu de monnaie r\u00e9cursif Code 2022-S01 2 Sujet N\u00b02 Calcul d'une moyenne Triangle de Pascal Code 2022-S02 3 Sujet N\u00b03 Codage par diff\u00e9rence Arbre binaire et expression arithm\u00e9tique Code 2022-S03 4 Sujet N\u00b04 Entiers cons\u00e9cutifs dans un tableau Codage d'une image en liste de liste Code 2022-S04 5 Sujet N\u00b05 Recherche du minimum et du maximum POO : cartes et paquet de cartes Code 2022-S05 6 Sujet N\u00b06 Valeur et indice du maximum dans une liste Recherche textuelle Code 2022-S06 7 Sujet N\u00b07 Conversion binaire/d\u00e9cimal Tri \u00e0 bulles Code 2022-S07 8 Sujet N\u00b08 Recherche de la premi\u00e8re occurrence Insertion dans une liste tri\u00e9e Code 2022-S08 9 Sujet N\u00b09 Suite de Collatz Codage d'un mot Code 2022-S09 10 Sujet N\u00b010 Nombre d'occurrence avec un dictionnaire Fusion de deux listes tri\u00e9es Code 2022-S10 11 Sujet N\u00b011 Recherche dichotomique Code de C\u00e9sar Code 2022-S11 12 Sujet N\u00b012 Calcul d'une moyenne S\u00e9paration des 0 et des 1 dans une liste Code 2022-S12 13 Sujet N\u00b013 Rendu de monnaie POO : gestion d'une file Code 2022-S13 14 Sujet N\u00b014 Mots correspodants \u00e0 un motif Recherche d'un cycle Code 2022-S14 15 Sujet N\u00b015 Nombre de r\u00e9p\u00e9titions d'un \u00e9l\u00e9ment Conversion en binaire Code 2022-S15 16 Sujet N\u00b016 Maximum d'un \u00e9l\u00e9ment dans une liste Structure de donn\u00e9es : piles Code 2022-S16 17 Sujet N\u00b017 Nombre de mots dans une phrase POO : arbre binaire de recherche Code 2022-S17 18 Sujet N\u00b018 Minimum d'une liste de temp\u00e9ratures Palindrome Code 2022-S18 19 Sujet N\u00b019 Multiplications avec uniquement additions et soustractions Recherche dichotomique Code 2022-S19 20 Sujet N\u00b020 Ou exclusif entre deux tableaux POO : Test de carr\u00e9s magiques Code 2022-S20 21 Sujet N\u00b021 Multiplications avec uniquement additions et soustractions Recherche dichotomique dans un tableau tri\u00e9 Code 2022-S21 22 Sujet N\u00b022 Ecriture d'une cha\u00eene de caract\u00e8res \u00e0 l'envers Crible d'Eratosth\u00e8ne Code 2022-S22 23 Sujet N\u00b023 Maximum des valeurs d'un dictionnaire POO : pile pour noter une expression arithm\u00e9tique Code 2022-S23 24 Sujet N\u00b024 Maximum des \u00e9l\u00e9ments d'une liste POO : expression bien parenth\u00e9s\u00e9e et piles Code 2022-S24 25 Sujet N\u00b025 Traitement de donn\u00e9es en tables Recherche r\u00e9cursive dans un tableau Code 2022-S25 26 Sujet N\u00b026 Minimum des \u00e9l\u00e9ments d'une liste S\u00e9paration des 0 et des 1 dans une liste Code 2022-S26 27 Sujet N\u00b027 Taille d'un arbre binaire repr\u00e9sent\u00e9 par un dictionnaire Tri par s\u00e9lection Code 2022-S27 28 Sujet N\u00b028 Calcul de moyenne Conversion decimal en binaire Code 2022-S28 29 Sujet N\u00b029 Termes de la suite de Fibonacci Recherche de maximum dans une liste Code 2022-S29 30 Sujet N\u00b030 Fusion de deux listes d\u00e9j\u00e0 tri\u00e9es Conversion num\u00e9ration romaine Code 2022-S30 31 Sujet N\u00b031 Nombre d'occurrence d'un \u00e9l\u00e9ment dans une liste Rendu de monnaie Code 2022-S31 32 Sujet N\u00b032 Derni\u00e8re occurrence d'un \u00e9l\u00e9ment dans une liste POO : adresse IP Code 2022-S32 33 Sujet N\u00b033 Conversion binaire d\u00e9cimal Tri par insertion Code 2022-S33 34 Sujet N\u00b034 Lettre la plus fr\u00e9quente dans un texte Repr\u00e9sentation d'une image par une liste de listes Code 2022-S34 35 Sujet N\u00b035 Calcul d'une moyenne Recherche dichotomique Code 2022-S35 36 Sujet N\u00b036 Derni\u00e8re occurrence d'un \u00e9l\u00e9ment dans une liste Calcul de la distance entre deux points Code 2022-S36 37 Sujet N\u00b037 V\u00e9rification si une liste est tri\u00e9e ou non Comptabilisation de votes (dictionnaires) Code 2022-S37 38 Sujet N\u00b038 Tri par s\u00e9lection Jeu du nombre myst\u00e8re Code 2022-S38 39 Sujet N\u00b039 Calcul d'une moyenne Repr\u00e9sentation d'une image par une liste de liste Code 2022-S39 40 Sujet N\u00b040 Recherche d'un \u00e9l\u00e9ment dans une liste Calcul de moyennes (dictionnaires) Code 2022-S40","title":"Ann\u00e9e 2022 : Sujets d'\u00e9preuves pratiques"},{"location":"backup/algoarbre/","text":"C10 Algorithmes sur les arbres Activit\u00e9s Activit\u00e9 1 : Parcourir un arbre Rappel sur l'impl\u00e9mentation utilis\u00e9e: R\u00e9cup\u00e9rer et enregistrer l'impl\u00e9mentation des arbres binaires vu au chapitre 8 : Impl\u00e9mentation arbres binaires Utiliser cette impl\u00e9mentation pour d\u00e9finir et afficher l'arbre binaire ci-dessous : graph TD A[\"A\"] --> B[\"B\"] A --> C[\"C\"] B --> D[\"D\"] B --> E[\"E\"] C --> V1[\" \"] C --> F[\"F\"] D --> V2[\" \"] D --> G[\"G\"] F --> H[\"H\"] F --> V3[\" \"] style V1 fill:#FFFFFF, stroke:#FFFFFF linkStyle 4 stroke:#FFFFFF,stroke-width:0px style V2 fill:#FFFFFF, stroke:#FFFFFF linkStyle 6 stroke:#FFFFFF,stroke-width:0px style V3 fill:#FFFFFF, stroke:#FFFFFF linkStyle 9 stroke:#FFFFFF,stroke-width:0px Quelle est la taille de cet arbre ? V\u00e9rifier que la m\u00e9thode taille de l'impl\u00e9mentation renvoie le r\u00e9sultat correct. Quelle est la hauteur de cet arbre ? V\u00e9rifier que la m\u00e9thode hauteur de l'impl\u00e9mentation renvoie le r\u00e9sultat correct. Le but cette activit\u00e9 est de d\u00e9couvrir (et d'impl\u00e9menter) quatre algorithmes de parcours d'un arbre qui donneront les noeuds dans un ordre diff\u00e9rent : Le parcours en largeur Le parcours en profondeur pr\u00e9fix\u00e9 Le parcours en profondeur infix\u00e9 Le parcours en profondeur suffix\u00e9 Le parcours en largeur Selon vous, quel sera l'ordre des noeuds dans un parcours en largeur sur l'arbre ci-dessous ? D'un point de vue algorithmique quel est le proc\u00e9d\u00e9 utilis\u00e9 pour obtenir cet ordre ? Pour impl\u00e9menter ce parcours, on propose la m\u00e9thode ci-dessous, la compl\u00e9ter et la recopier dans l'impl\u00e9mentation des arbres binaires : def parcours_largeur ( self ): # Ordre de traitement : noeud, fils gauche, le fils droit a_traiter = [ ......... ] pl = [] while len ( a_traiter ) != 0 : noeud_courant = a_traiter [ 0 ] pl . append ( .............. ) # Si le noeud a un fils gauche l'ajouter \u00e0 ceux \u00e0 traiter if noeud_courant . gauche !=..... : a_traiter ........ ( ................. ) # De m\u00eame s'il a un fils droit if ............. : a_traiter ........ ( ................. ) a_traiter . pop ( . ) return pl Tester cette m\u00e9thode sur l'arbre d\u00e9finie dans la premi\u00e8re partie. Cette m\u00e9thode fonctionne-t-elle pour l'arbre vide ? Sinon la corriger. Reconna\u00eetre la structure de donn\u00e9e utilis\u00e9e pour les noeuds \u00e0 traiter (variable a_traiter ). Est-il judicieux d'utiliser une liste pour cette structure de donn\u00e9es ? Le parcours en profondeur Dans un parcours en profondeur on s'appuie sur la d\u00e9finition r\u00e9cursive des arbres. Pour parcourir un arbre \\(T=(r,sag,sad)\\) on va donc parcourir \\(sag\\) et \\(sad\\) . On comprend alors qu'on a trois possibilit\u00e9 : Lister l'\u00e9tiquette \\(r\\) avant de parcourir \\(sag\\) et \\(sad\\) , c'est le parcours prefix\u00e9. Lister l'\u00e9tiquette \\(r\\) apr\u00e8s le parcours de \\(sag\\) mais avant celui de \\(sad\\) , c'est le parcours infix\u00e9. Lister l'\u00e9tiquette \\(r\\) apr\u00e8s le parcours de \\(sag\\) et de \\(sad\\) , c'est le parcours suffix\u00e9. Quel sera l'ordre des noeuds pour chacun de ces trois parcours sur l'arbre de la premi\u00e8re partie ? Ecrire une impl\u00e9mentation du parcours pr\u00e9fix\u00e9. Aide Traduire en m\u00e9thode r\u00e9cursive que le parcours de \\(T=(r,sag,sad)\\) est \\(r\\) + le parcours de \\(sag\\) + le parcours de \\(sad\\) Ecrire une impl\u00e9mentation du parcours infix\u00e9 Ecrire une impl\u00e9mentation du parcours suffix\u00e9. Activit\u00e9 2 : Arbre binaire de recherche On consid\u00e8re l'arbre binaire suivant not\u00e9 \\(T\\) et dont les \u00e9tiquettes sont des nombres entiers. graph TD N28[\"28\"] --> N25[\"25\"] N28 --> N32[\"32\"] N25 --> N6[\"6\"] N25 --> N27[\"27\"] N32 --> N31[\"31\"] N32 --> N33[\"33\"] N6 --> N3[\"3\"] N6 --> N15[\"15\"] N27 --> N26[\"26\"] N27 --> V1[\" \"] N33 --> V2[\" \"] N33 --> N35[\"35\"] N15 --> N12[\"12\"] N15 --> N20[\"20\"] style V1 fill:#FFFFFF, stroke:#FFFFFF linkStyle 9 stroke:#FFFFFF,stroke-width:0px style V2 fill:#FFFFFF, stroke:#FFFFFF linkStyle 10 stroke:#FFFFFF,stroke-width:0px Propri\u00e9t\u00e9 des arbres binaires de recherche On consid\u00e8re la racine de cette arbre. Ecrire son \u00e9tiquette puis lister toutes les \u00e9tiquettes de son sous arbre gauche et toutes les \u00e9tiquettes de son sous arbre droit. Que remarquez-vous ? Pour un autre noeud quelconque de cet arbre, donner son \u00e9tiquette puis toutes les \u00e9tiquettes de son sous arbre gauche et toutes les \u00e9tiquettes de son sous arbre droit. Que remarquez-vous ? L'arbre binaire pr\u00e9c\u00e9dent est un arbre binaire de recherche . Proposer une d\u00e9finition des arbres binaire de recherche en vous basant sur la propri\u00e9t\u00e9 observ\u00e9e ci-dessus. Note Par souci de simplicit\u00e9 on consid\u00e8re par la suite que toutes les \u00e9tiquettes d'un arbre binaire de recherche (not\u00e9 abr ) sont uniques . Ainsi dans l'arbre pr\u00e9c\u00e9dent un entier donn\u00e9 ne peut pas appara\u00eetre deux fois. Dessiner tous les abr ayant 3 noeuds et contenant les nombres 1, 2 et 3. Dessiner un abr d\u00e9g\u00e9n\u00e9r\u00e9 de hauteur 5 et contenant les nombres 1,2,3,4 et 5. Dessiner un abr complet de taille 7 et contenant les nombres 1,2,3,4,5,6 et 7. Recherche d'un \u00e9l\u00e9ment dans un arbre binaire de recherche On cherche \u00e0 savoir si la valeur 18 est pr\u00e9sente dans l'arbre \\(T\\) . L'arbre entier doit-il \u00eatre explor\u00e9 ? Justifier. Quel chemin faut-il explorer dans \\(T\\) pour rechercher la valeur 15 (surligner en rouge). M\u00eame question pour 37 (surligner en bleu). Proposer un algorithme permettant de rechercher une valeur dans un arbre binaire de recherche. Aide Penser r\u00e9cursif ! Que peut-on dire de la complexit\u00e9 de cet algorithme ? Aide On pourra s'appuyer sur les cas extr\u00eames (arbre complet ou arbre d\u00e9g\u00e9n\u00e9r\u00e9) et faire le lien avec la recherche dans une liste ou la recherche dichotomique dans une liste tri\u00e9e. D'autre part on pourra remarquer qu'\u00e0 chaque \u00e9tape de la recherche on descend d'un niveau dans l'arbre. Insertion d'un \u00e9l\u00e9ment dans un arbre binaire de recherche A quelle position faut-il ins\u00e9rer le noeud d'\u00e9tiquette 4 dans \\(T\\) pour qu'il conserve sa propri\u00e9t\u00e9 ? M\u00eame question pour le noeud d'\u00e9tiquette 30. Proposer un algorithme permettant d'ins\u00e9rer une valeur dans un arbre binaire de recherche. Aide Comme ci-dessus, penser \u00e0 utiliser la r\u00e9cursivit\u00e9. D'autre part on rappelle qu'on a suppos\u00e9 que les \u00e9tiquettes sont uniques, par cons\u00e9quent, on renverra une erreur dans le cas o\u00f9 la valeur \u00e0 ins\u00e9rer existe d\u00e9j\u00e0 dans l'arbre. Cours Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices. Exercices Exercice 1 : Parcours d'arbre graph TD P[\"P\"] --> Y[\"Y\"] P --> T[\"T\"] T --> H[\"H\"] T --> O[\"O\"] O --> E[\" \"] style E fill:#FFFFFF, stroke:#FFFFFF linkStyle 4 stroke:#FFFFFF,stroke-width:0px; O --> N[\"N\"] Quel sera l'ordre des noeuds lors du parcours de l'arbre ci-dessus : lors d'un parcours en largeur, lors d'un parcours en profondeur prefixe, lors d'un parcours en profondeur infixe, lors d'un parcours en profondeur suffixe. V\u00e9rifier vos r\u00e9ponses \u00e0 la question pr\u00e9c\u00e9dente en utilisant les fonctions de parcours d\u00e9finies sur l'impl\u00e9mentation des arbres binaires vue en cours. M\u00eames questions avec l'arbre binaire suivant : graph TD Y[\"Y\"] --> C[\"C\"] Y --> A[\"A\"] C --> V1[\" \"] C --> R[\"R\"] A --> B[\"B\"] A --> L[\"L\"] R --> I[\"I\"] R --> O[\"O\"] B --> N[\"N\"] B --> V2[\" \"] L --> V3[\" \"] L --> E[\"E\"] style V1 fill:#FFFFFF, stroke:#FFFFFF linkStyle 2 stroke:#FFFFFF,stroke-width:0px; style V2 fill:#FFFFFF, stroke:#FFFFFF linkStyle 9 stroke:#FFFFFF,stroke-width:0px; style V3 fill:#FFFFFF, stroke:#FFFFFF linkStyle 10 stroke:#FFFFFF,stroke-width:0px; Exercice 2 : Arbre binaire de recherche graph TD A[\"14\"] --> B[\"9\"] A --> C[\"22\"] B --> D[\"5\"] B --> E[\"10\"] C --> V1[\" \"] C --> F[\"28\"] D --> V2[\" \"] D --> G[\"7\"] F --> H[\"24\"] F --> V3[\" \"] style V1 fill:#FFFFFF, stroke:#FFFFFF linkStyle 4 stroke:#FFFFFF,stroke-width:0px style V2 fill:#FFFFFF, stroke:#FFFFFF linkStyle 6 stroke:#FFFFFF,stroke-width:0px style V3 fill:#FFFFFF, stroke:#FFFFFF linkStyle 9 stroke:#FFFFFF,stroke-width:0px Prouver que cet arbre est un arbre binaire de recherche. Dessiner l'arbre obtenu apr\u00e8s insertion de la valeur 11 dans cet abre. Exercice 3 : Dessiner un arbre binaire de recherche Dessiner un arbre binaire de recherche complet , contenant les valeurs suivantes : 2,7,10,15,19,24,25. Dessiner un arbre binaire de recherche d\u00e9g\u00e9n\u00e9r\u00e9 contenant ces sept m\u00eame valeurs. M\u00eame question lorsque l'arbre \u00e0 la structure suivante : graph TD A[\" \"] --> B[\" \"] A --> C[\" \"] B --> D[\" \"] B --> E[\" \"] C --> V1[\" \"] C --> F[\" \"] D --> V2[\" \"] D --> G[\" \"] style V1 fill:#FFFFFF, stroke:#FFFFFF linkStyle 4 stroke:#FFFFFF,stroke-width:0px style V2 fill:#FFFFFF, stroke:#FFFFFF linkStyle 6 stroke:#FFFFFF,stroke-width:0px Exercice 4 : Impl\u00e9mentation des arbres binaires de recherche R\u00e9cup\u00e9rer et enregistrer l'impl\u00e9mentation des arbres binaires de recherche ci-dessous : Impl\u00e9mentation arbres binaires de recherche Compl\u00e9ter puis tester la m\u00e9thode appartient ci-dessous qui permet de tester avec cette impl\u00e9mentation si un \u00e9l\u00e9ment se trouve ou non dans un arbre binaire de recherche def appartient ( self , valeur ): # Si l'arbre est vide, la valeur ne s'y trouve pas if self . racine == None : return False else : # Sinon on compare avec l'\u00e9tiquette de la racine if int ( self . racine . etiquette ) == valeur : return ........ if valeur < int ( self . racine . etiquette ): # Cr\u00e9ation du sous arbre gauche sag = ArbreBinaire ( ............. ) return .......... sad = ArbreBinaire ( .............. ) return ................. Ecrire une m\u00e9thode insere qui permet d'ins\u00e9rer une valeur dans un arbre binaire de recherche. Exercice 5 : Am\u00e9rique du nord 2021- Exercice 4 \u2009 Enonc\u00e9 Exercice 6 : M\u00e9tropole 2021 CL Sujet 2 - Exercice 3 \u2009 Enonc\u00e9 Exercice 7 : M\u00e9tropole 2021 Sujet 1 - Exercice 1 \u2009 Enonc\u00e9 Exercice 8 : Etranger 2021 Sujet 1 - Exercice 3 \u2009 Enonc\u00e9","title":"Algoarbre"},{"location":"backup/algoarbre/#c10-algorithmes-sur-les-arbres","text":"","title":"C10 Algorithmes sur les arbres "},{"location":"backup/algoarbre/#activites","text":"","title":"Activit\u00e9s"},{"location":"backup/algoarbre/#activite-1-parcourir-un-arbre","text":"Rappel sur l'impl\u00e9mentation utilis\u00e9e: R\u00e9cup\u00e9rer et enregistrer l'impl\u00e9mentation des arbres binaires vu au chapitre 8 : Impl\u00e9mentation arbres binaires Utiliser cette impl\u00e9mentation pour d\u00e9finir et afficher l'arbre binaire ci-dessous : graph TD A[\"A\"] --> B[\"B\"] A --> C[\"C\"] B --> D[\"D\"] B --> E[\"E\"] C --> V1[\" \"] C --> F[\"F\"] D --> V2[\" \"] D --> G[\"G\"] F --> H[\"H\"] F --> V3[\" \"] style V1 fill:#FFFFFF, stroke:#FFFFFF linkStyle 4 stroke:#FFFFFF,stroke-width:0px style V2 fill:#FFFFFF, stroke:#FFFFFF linkStyle 6 stroke:#FFFFFF,stroke-width:0px style V3 fill:#FFFFFF, stroke:#FFFFFF linkStyle 9 stroke:#FFFFFF,stroke-width:0px Quelle est la taille de cet arbre ? V\u00e9rifier que la m\u00e9thode taille de l'impl\u00e9mentation renvoie le r\u00e9sultat correct. Quelle est la hauteur de cet arbre ? V\u00e9rifier que la m\u00e9thode hauteur de l'impl\u00e9mentation renvoie le r\u00e9sultat correct. Le but cette activit\u00e9 est de d\u00e9couvrir (et d'impl\u00e9menter) quatre algorithmes de parcours d'un arbre qui donneront les noeuds dans un ordre diff\u00e9rent : Le parcours en largeur Le parcours en profondeur pr\u00e9fix\u00e9 Le parcours en profondeur infix\u00e9 Le parcours en profondeur suffix\u00e9 Le parcours en largeur Selon vous, quel sera l'ordre des noeuds dans un parcours en largeur sur l'arbre ci-dessous ? D'un point de vue algorithmique quel est le proc\u00e9d\u00e9 utilis\u00e9 pour obtenir cet ordre ? Pour impl\u00e9menter ce parcours, on propose la m\u00e9thode ci-dessous, la compl\u00e9ter et la recopier dans l'impl\u00e9mentation des arbres binaires : def parcours_largeur ( self ): # Ordre de traitement : noeud, fils gauche, le fils droit a_traiter = [ ......... ] pl = [] while len ( a_traiter ) != 0 : noeud_courant = a_traiter [ 0 ] pl . append ( .............. ) # Si le noeud a un fils gauche l'ajouter \u00e0 ceux \u00e0 traiter if noeud_courant . gauche !=..... : a_traiter ........ ( ................. ) # De m\u00eame s'il a un fils droit if ............. : a_traiter ........ ( ................. ) a_traiter . pop ( . ) return pl Tester cette m\u00e9thode sur l'arbre d\u00e9finie dans la premi\u00e8re partie. Cette m\u00e9thode fonctionne-t-elle pour l'arbre vide ? Sinon la corriger. Reconna\u00eetre la structure de donn\u00e9e utilis\u00e9e pour les noeuds \u00e0 traiter (variable a_traiter ). Est-il judicieux d'utiliser une liste pour cette structure de donn\u00e9es ? Le parcours en profondeur Dans un parcours en profondeur on s'appuie sur la d\u00e9finition r\u00e9cursive des arbres. Pour parcourir un arbre \\(T=(r,sag,sad)\\) on va donc parcourir \\(sag\\) et \\(sad\\) . On comprend alors qu'on a trois possibilit\u00e9 : Lister l'\u00e9tiquette \\(r\\) avant de parcourir \\(sag\\) et \\(sad\\) , c'est le parcours prefix\u00e9. Lister l'\u00e9tiquette \\(r\\) apr\u00e8s le parcours de \\(sag\\) mais avant celui de \\(sad\\) , c'est le parcours infix\u00e9. Lister l'\u00e9tiquette \\(r\\) apr\u00e8s le parcours de \\(sag\\) et de \\(sad\\) , c'est le parcours suffix\u00e9. Quel sera l'ordre des noeuds pour chacun de ces trois parcours sur l'arbre de la premi\u00e8re partie ? Ecrire une impl\u00e9mentation du parcours pr\u00e9fix\u00e9. Aide Traduire en m\u00e9thode r\u00e9cursive que le parcours de \\(T=(r,sag,sad)\\) est \\(r\\) + le parcours de \\(sag\\) + le parcours de \\(sad\\) Ecrire une impl\u00e9mentation du parcours infix\u00e9 Ecrire une impl\u00e9mentation du parcours suffix\u00e9.","title":"Activit\u00e9 1 : Parcourir un arbre"},{"location":"backup/algoarbre/#activite-2-arbre-binaire-de-recherche","text":"On consid\u00e8re l'arbre binaire suivant not\u00e9 \\(T\\) et dont les \u00e9tiquettes sont des nombres entiers. graph TD N28[\"28\"] --> N25[\"25\"] N28 --> N32[\"32\"] N25 --> N6[\"6\"] N25 --> N27[\"27\"] N32 --> N31[\"31\"] N32 --> N33[\"33\"] N6 --> N3[\"3\"] N6 --> N15[\"15\"] N27 --> N26[\"26\"] N27 --> V1[\" \"] N33 --> V2[\" \"] N33 --> N35[\"35\"] N15 --> N12[\"12\"] N15 --> N20[\"20\"] style V1 fill:#FFFFFF, stroke:#FFFFFF linkStyle 9 stroke:#FFFFFF,stroke-width:0px style V2 fill:#FFFFFF, stroke:#FFFFFF linkStyle 10 stroke:#FFFFFF,stroke-width:0px Propri\u00e9t\u00e9 des arbres binaires de recherche On consid\u00e8re la racine de cette arbre. Ecrire son \u00e9tiquette puis lister toutes les \u00e9tiquettes de son sous arbre gauche et toutes les \u00e9tiquettes de son sous arbre droit. Que remarquez-vous ? Pour un autre noeud quelconque de cet arbre, donner son \u00e9tiquette puis toutes les \u00e9tiquettes de son sous arbre gauche et toutes les \u00e9tiquettes de son sous arbre droit. Que remarquez-vous ? L'arbre binaire pr\u00e9c\u00e9dent est un arbre binaire de recherche . Proposer une d\u00e9finition des arbres binaire de recherche en vous basant sur la propri\u00e9t\u00e9 observ\u00e9e ci-dessus. Note Par souci de simplicit\u00e9 on consid\u00e8re par la suite que toutes les \u00e9tiquettes d'un arbre binaire de recherche (not\u00e9 abr ) sont uniques . Ainsi dans l'arbre pr\u00e9c\u00e9dent un entier donn\u00e9 ne peut pas appara\u00eetre deux fois. Dessiner tous les abr ayant 3 noeuds et contenant les nombres 1, 2 et 3. Dessiner un abr d\u00e9g\u00e9n\u00e9r\u00e9 de hauteur 5 et contenant les nombres 1,2,3,4 et 5. Dessiner un abr complet de taille 7 et contenant les nombres 1,2,3,4,5,6 et 7. Recherche d'un \u00e9l\u00e9ment dans un arbre binaire de recherche On cherche \u00e0 savoir si la valeur 18 est pr\u00e9sente dans l'arbre \\(T\\) . L'arbre entier doit-il \u00eatre explor\u00e9 ? Justifier. Quel chemin faut-il explorer dans \\(T\\) pour rechercher la valeur 15 (surligner en rouge). M\u00eame question pour 37 (surligner en bleu). Proposer un algorithme permettant de rechercher une valeur dans un arbre binaire de recherche. Aide Penser r\u00e9cursif ! Que peut-on dire de la complexit\u00e9 de cet algorithme ? Aide On pourra s'appuyer sur les cas extr\u00eames (arbre complet ou arbre d\u00e9g\u00e9n\u00e9r\u00e9) et faire le lien avec la recherche dans une liste ou la recherche dichotomique dans une liste tri\u00e9e. D'autre part on pourra remarquer qu'\u00e0 chaque \u00e9tape de la recherche on descend d'un niveau dans l'arbre. Insertion d'un \u00e9l\u00e9ment dans un arbre binaire de recherche A quelle position faut-il ins\u00e9rer le noeud d'\u00e9tiquette 4 dans \\(T\\) pour qu'il conserve sa propri\u00e9t\u00e9 ? M\u00eame question pour le noeud d'\u00e9tiquette 30. Proposer un algorithme permettant d'ins\u00e9rer une valeur dans un arbre binaire de recherche. Aide Comme ci-dessus, penser \u00e0 utiliser la r\u00e9cursivit\u00e9. D'autre part on rappelle qu'on a suppos\u00e9 que les \u00e9tiquettes sont uniques, par cons\u00e9quent, on renverra une erreur dans le cas o\u00f9 la valeur \u00e0 ins\u00e9rer existe d\u00e9j\u00e0 dans l'arbre.","title":"Activit\u00e9 2 : Arbre binaire de recherche"},{"location":"backup/algoarbre/#cours","text":"Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices.","title":"Cours"},{"location":"backup/algoarbre/#exercices","text":"","title":"Exercices"},{"location":"backup/algoarbre/#exercice-1-parcours-darbre","text":"graph TD P[\"P\"] --> Y[\"Y\"] P --> T[\"T\"] T --> H[\"H\"] T --> O[\"O\"] O --> E[\" \"] style E fill:#FFFFFF, stroke:#FFFFFF linkStyle 4 stroke:#FFFFFF,stroke-width:0px; O --> N[\"N\"] Quel sera l'ordre des noeuds lors du parcours de l'arbre ci-dessus : lors d'un parcours en largeur, lors d'un parcours en profondeur prefixe, lors d'un parcours en profondeur infixe, lors d'un parcours en profondeur suffixe. V\u00e9rifier vos r\u00e9ponses \u00e0 la question pr\u00e9c\u00e9dente en utilisant les fonctions de parcours d\u00e9finies sur l'impl\u00e9mentation des arbres binaires vue en cours. M\u00eames questions avec l'arbre binaire suivant : graph TD Y[\"Y\"] --> C[\"C\"] Y --> A[\"A\"] C --> V1[\" \"] C --> R[\"R\"] A --> B[\"B\"] A --> L[\"L\"] R --> I[\"I\"] R --> O[\"O\"] B --> N[\"N\"] B --> V2[\" \"] L --> V3[\" \"] L --> E[\"E\"] style V1 fill:#FFFFFF, stroke:#FFFFFF linkStyle 2 stroke:#FFFFFF,stroke-width:0px; style V2 fill:#FFFFFF, stroke:#FFFFFF linkStyle 9 stroke:#FFFFFF,stroke-width:0px; style V3 fill:#FFFFFF, stroke:#FFFFFF linkStyle 10 stroke:#FFFFFF,stroke-width:0px;","title":"Exercice 1 : Parcours d'arbre"},{"location":"backup/algoarbre/#exercice-2-arbre-binaire-de-recherche","text":"graph TD A[\"14\"] --> B[\"9\"] A --> C[\"22\"] B --> D[\"5\"] B --> E[\"10\"] C --> V1[\" \"] C --> F[\"28\"] D --> V2[\" \"] D --> G[\"7\"] F --> H[\"24\"] F --> V3[\" \"] style V1 fill:#FFFFFF, stroke:#FFFFFF linkStyle 4 stroke:#FFFFFF,stroke-width:0px style V2 fill:#FFFFFF, stroke:#FFFFFF linkStyle 6 stroke:#FFFFFF,stroke-width:0px style V3 fill:#FFFFFF, stroke:#FFFFFF linkStyle 9 stroke:#FFFFFF,stroke-width:0px Prouver que cet arbre est un arbre binaire de recherche. Dessiner l'arbre obtenu apr\u00e8s insertion de la valeur 11 dans cet abre.","title":"Exercice 2 : Arbre binaire de recherche"},{"location":"backup/algoarbre/#exercice-3-dessiner-un-arbre-binaire-de-recherche","text":"Dessiner un arbre binaire de recherche complet , contenant les valeurs suivantes : 2,7,10,15,19,24,25. Dessiner un arbre binaire de recherche d\u00e9g\u00e9n\u00e9r\u00e9 contenant ces sept m\u00eame valeurs. M\u00eame question lorsque l'arbre \u00e0 la structure suivante : graph TD A[\" \"] --> B[\" \"] A --> C[\" \"] B --> D[\" \"] B --> E[\" \"] C --> V1[\" \"] C --> F[\" \"] D --> V2[\" \"] D --> G[\" \"] style V1 fill:#FFFFFF, stroke:#FFFFFF linkStyle 4 stroke:#FFFFFF,stroke-width:0px style V2 fill:#FFFFFF, stroke:#FFFFFF linkStyle 6 stroke:#FFFFFF,stroke-width:0px","title":"Exercice 3 : Dessiner un arbre binaire de recherche"},{"location":"backup/algoarbre/#exercice-4-implementation-des-arbres-binaires-de-recherche","text":"R\u00e9cup\u00e9rer et enregistrer l'impl\u00e9mentation des arbres binaires de recherche ci-dessous : Impl\u00e9mentation arbres binaires de recherche Compl\u00e9ter puis tester la m\u00e9thode appartient ci-dessous qui permet de tester avec cette impl\u00e9mentation si un \u00e9l\u00e9ment se trouve ou non dans un arbre binaire de recherche def appartient ( self , valeur ): # Si l'arbre est vide, la valeur ne s'y trouve pas if self . racine == None : return False else : # Sinon on compare avec l'\u00e9tiquette de la racine if int ( self . racine . etiquette ) == valeur : return ........ if valeur < int ( self . racine . etiquette ): # Cr\u00e9ation du sous arbre gauche sag = ArbreBinaire ( ............. ) return .......... sad = ArbreBinaire ( .............. ) return ................. Ecrire une m\u00e9thode insere qui permet d'ins\u00e9rer une valeur dans un arbre binaire de recherche.","title":"Exercice 4 : Impl\u00e9mentation des arbres binaires de recherche"},{"location":"backup/algoarbre/#exercice-5-amerique-du-nord-2021-exercice-4","text":"Enonc\u00e9","title":"Exercice 5 : Am\u00e9rique du nord 2021- Exercice 4&thinsp; "},{"location":"backup/algoarbre/#exercice-6-metropole-2021-cl-sujet-2-exercice-3","text":"Enonc\u00e9","title":"Exercice 6 : M\u00e9tropole 2021 CL Sujet 2 - Exercice 3&thinsp; "},{"location":"backup/algoarbre/#exercice-7-metropole-2021-sujet-1-exercice-1","text":"Enonc\u00e9","title":"Exercice 7 : M\u00e9tropole 2021  Sujet 1 - Exercice 1&thinsp; "},{"location":"backup/algoarbre/#exercice-8-etranger-2021-sujet-1-exercice-3","text":"Enonc\u00e9","title":"Exercice 8 : Etranger 2021  Sujet 1 - Exercice 3&thinsp; "},{"location":"backup/apropos/","text":"A Propos Contenu Vous trouverez sur ce site le contenu du cours de NSI en classe terminale du lyc\u00e9e M\u00e9mona Hintermann-Aff\u00e9jee . Chaque chapitre se compose : d'activit\u00e9s d'un diaporama de cours au format pdf d'exercices Remerciements A la liste de discussion NSI qui a \u00e9t\u00e9 une source d'inspiration constante dans l'\u00e9criture de ce cours (mention sp\u00e9cial au cr\u00e9ateur de la liste et aux contributeurs r\u00e9guliers). Au forum des enseignants NSI . Aux coll\u00e8gues qui avant moi ont mis en ligne leurs propres cours et notamment : Le site de David Roche Le github de Gilles Lassus Le site du Lyc\u00e9e la Martini\u00e8re A Sebastien Hoarau pour les conseils et la relecture du contenu. Contact Mon adresse mail : fnativel2[at]ac-reunion.fr Utilisation Ce cours est construit pour \u00eatre utilis\u00e9 en classe , les \u00e9l\u00e8ves disposent d'un ordinateur fonctionnant sous Ubuntu et \u00e9quip\u00e9 des logiciels n\u00e9cessaires. Cependant, une utilisation autonome \u00e0 la maison est possible \u00e0 condition d'installer les applications suivantes. Applications Applications gnu /Linux Windows MacOS Python VS Code Jupyter Filius Gameshell Cliquer sur une application pour acc\u00e9der \u00e0 sa page et l'installer. Licence Ce site et tout son contenu sont sous la licence This work is licensed under a Creative Commons Attribution 4.0 International License .","title":"A Propos"},{"location":"backup/apropos/#a-propos","text":"","title":"A Propos"},{"location":"backup/apropos/#contenu","text":"Vous trouverez sur ce site le contenu du cours de NSI en classe terminale du lyc\u00e9e M\u00e9mona Hintermann-Aff\u00e9jee . Chaque chapitre se compose : d'activit\u00e9s d'un diaporama de cours au format pdf d'exercices","title":"Contenu"},{"location":"backup/apropos/#remerciements","text":"A la liste de discussion NSI qui a \u00e9t\u00e9 une source d'inspiration constante dans l'\u00e9criture de ce cours (mention sp\u00e9cial au cr\u00e9ateur de la liste et aux contributeurs r\u00e9guliers). Au forum des enseignants NSI . Aux coll\u00e8gues qui avant moi ont mis en ligne leurs propres cours et notamment : Le site de David Roche Le github de Gilles Lassus Le site du Lyc\u00e9e la Martini\u00e8re A Sebastien Hoarau pour les conseils et la relecture du contenu.","title":"Remerciements"},{"location":"backup/apropos/#contact","text":"Mon adresse mail : fnativel2[at]ac-reunion.fr","title":"Contact"},{"location":"backup/apropos/#utilisation","text":"Ce cours est construit pour \u00eatre utilis\u00e9 en classe , les \u00e9l\u00e8ves disposent d'un ordinateur fonctionnant sous Ubuntu et \u00e9quip\u00e9 des logiciels n\u00e9cessaires. Cependant, une utilisation autonome \u00e0 la maison est possible \u00e0 condition d'installer les applications suivantes.","title":"Utilisation"},{"location":"backup/apropos/#applications","text":"Applications gnu /Linux Windows MacOS Python VS Code Jupyter Filius Gameshell Cliquer sur une application pour acc\u00e9der \u00e0 sa page et l'installer.","title":"Applications"},{"location":"backup/apropos/#licence","text":"Ce site et tout son contenu sont sous la licence This work is licensed under a Creative Commons Attribution 4.0 International License .","title":"Licence"},{"location":"backup/arbres/","text":"C8 Arbres Activit\u00e9s Activit\u00e9 1 : Vocabulaire Apr\u00e8s execution d'une commande dans un terminal Linux on a obtenu l'affichage ci-dessous : De quelle commande s'agissait-il ? Quelle est sa traduction en fran\u00e7ais ? Que sont Maths et NSI pour le syst\u00e8me d'exploitation ? Un point ( . ) figure en haut du sch\u00e9ma, quelle en est la signification ? Que signifie le lien entre NSI et Projet ? Le sch\u00e9ma ci-dessus est un exemple d' arbre (on parle d'ailleurs de l'arborescence des dossiers dans un syst\u00e8me d'exploitation). Un arbre est constitu\u00e9 de noeuds et un lien entre deux noeuds s'appelle une ar\u00eate . Citer trois noeuds de l'arbre ci-dessus et donner un exemple d'ar\u00eate. Quel noeud est le r\u00e9pertoire parent de Syst\u00e8mes ? On dira dans le vocabulaire des arbres que le noeud Syst\u00e8mes est un fils de ce noeud. Citer tous les fils du noeud NSI . Dans un arbre, un seul et unique noeud n'est le fils de personne, on l'appelle la racine de l'arbre. De qui s'agit-il ici ? Nommer les noeuds n'ayant aucun fils (on les appelle feuilles de l'arbre). Une branche est une suite (finie) de noeuds depuis la racine vers une feuille. Donner une branche de cette arbre constitu\u00e9e de trois noeuds. Donner la taille de cet arbre (c'est \u00e0 dire son nombre de noeuds). Donner l' arit\u00e9 de cet arbre, c'est \u00e0 dire le nombre maximal de fils qu'un noeud peut avoir. Donner la hauteur de cet arbre c'est \u00e0 dire le nombre maximal de noeuds dans une branche. Attention La hauteur d'un arbre est parfois d\u00e9finie comme le plus grand nombre d'ar\u00eates dans une branche. Dans les sujets de bac faire attention \u00e0 la d\u00e9finition utilis\u00e9e qui est normalement donn\u00e9e dans l'\u00e9nonc\u00e9. Activit\u00e9 2 : Arbre binaire Chez les abeilles, le syst\u00e8me de reproduction fait que : une abeille femelle est issue de deux abeilles, un m\u00e2le et une femelle, une abeille m\u00e2le est issue d'une seule abeille femelle. Cela s'explique par le fait qu'un oeuf non f\u00e9cond\u00e9 (donc issu uniquement d'une femelle) donne toujours naissance \u00e0 une abeille m\u00e2le, alors qu'une oeuf f\u00e9cond\u00e9 (donc issu d'un m\u00e2le et d'une femelle) donne toujours naissance \u00e0 une abeille femelle. On a repr\u00e9sent\u00e9 ci-contre les quatre premiers niveaux de l'arbre g\u00e9n\u00e9alogique d'une abeille m\u00e2le en notant avec la lettre M les m\u00e2les et la lettre F les femelles. graph TD F0[\"F\"] --> F1[\"F\"] F0[\"F\"] --> M1[\"M\"] M1 --> F2[\"F\"] F1 --> M2[\"M\"] F1 --> F3[\"F\"] F2 --> F4[\"F\"] F2 --> M3[\"M\"] M2 --> F5[\"F\"] F3 --> F6[\"F\"] F3 --> M4[\"M\"] D\u00e9finition des arbres binaires Recopier et compl\u00e9ter cet arbre en ajoutant le 5 e niveau. Rappeler la d\u00e9finition de l' arit\u00e9 d'un arbre et d'un noeud. Quelle est l'arit\u00e9 des feuilles d'un arbre ? D\u00e9terminer le degr\u00e9 (arit\u00e9) des noeuds qui ne sont pas des feuilles selon que le noeud repr\u00e9sente une abeille male ou une abeille femelle. On appelle arbre binaire , un arbre dans lequel les noeuds ont au maximum deux fils. Donner une d\u00e9finition \u00e9quivalente utilisant le mot arit\u00e9 et justifier rapidement que l'arbre g\u00e9n\u00e9alogique d'une abeille est binaire. Une d\u00e9finition r\u00e9cursive On reprend l'exemple de l'abre g\u00e9n\u00e9alogique d'une abeille femelle jusqu'au cinqui\u00e8me niveau dessin\u00e9e ci-dessus. On appelle sous arbre gauche et sous arbre droit l'arbre g\u00e9n\u00e9alogique de chacune des deux parents de la racine. L'arbre est alors not\u00e9 sous la forme d'un triplet constitu\u00e9 de la racine et des deux sous arbres : (racine, sous arbre gauche, sous arbre droit) . Justifier rapidement que les deux sous arbres sont des arbres binaires. Que dire du sous arbre droit lorsque l'abeille est un m\u00e2le ? Pour une feuille, que dire du sous arbre droit et du sous arbre gauche ? En d\u00e9duire une version r\u00e9cursive de la d\u00e9finition d'un arbre binaire. Donner une d\u00e9finition r\u00e9cursive de la taille d'un arbre binaire. Donner une d\u00e9finition r\u00e9cursive de la hauteur d'un arbre binaire. Activit\u00e9 3 : Relation entre la hauteur et la taille d'un arbre binaire On note \\(h\\) la hauteur d'un arbre binaire et \\(n\\) sa taille, on suppose dans la suite que \\(n \\geq 2\\) . En rappelant les d\u00e9finitions de la hauteur et de la taille d'un arbre, justifier que \\(n \\geq h\\) . On num\u00e9rote les noeuds d'un arbre binaire de la suivante : la racine porte le num\u00e9ro 1, le fils gauche d'un noeud porte le num\u00e9ro de son p\u00e8re suivi d'un 0, le fils droit d'un noeud porte le num\u00e9ro de son p\u00e8re suivi d'un 1. On a entam\u00e9 la num\u00e9rotation de l'arbre binaire ci-dessous, recopier cet arbre et compl\u00e9ter cette num\u00e9rotation. graph TD A[\"A : 1\"] --> B[\"B : 10\"] A --> C[\"C : 11\"] B --> D[\"D : ...\"] B --> E[\"E : 101\"] C --> V1[\" \"] C --> F[\"F: ...\"] D --> G[\"G: ...\"] D --> H[\"H: ...\"] F --> I[\"I: ...\"] F --> V2[\" \"] style V1 fill:#FFFFFF, stroke:#FFFFFF linkStyle 4 stroke:#FFFFFF,stroke-width:0px style V2 fill:#FFFFFF, stroke:#FFFFFF linkStyle 9 stroke:#FFFFFF,stroke-width:0px Justifier que sur un niveau donn\u00e9 de l'arbre tous les num\u00e9ros de noeud ont le m\u00eame nombre de caract\u00e8res. En d\u00e9duire en fonction de \\(h\\) , le nombre de caract\u00e8res formant le num\u00e9ro des feuilles En utilisant vos connaissances sur la num\u00e9rotation binaire d'un entier positif, prouver que \\(n \\leq 2^h - 1\\) . Activit\u00e9 4 : Impl\u00e9mentation des arbres binaires en Python Le notebook suivant pr\u00e9sente une impl\u00e9mentation possible des arbres binaires en Python. Cette impl\u00e9mentation pourra \u00eatre sauvegard\u00e9e et utilis\u00e9e en exercice. Jupyter Notebook Cours Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices. Exercices Exercice 1 : DOM On consid\u00e8re le code html suivant : < html lang = \"fr\" > < head > < meta charset = \"UTF-8\" > < title > Exemple </ title > </ head > < body > < h1 > Un titre </ h1 > < p > Bonjour ! </ p > < table > < tr > < td > Case 1 </ td > < td > Case 2 </ td > </ tr > </ table > </ body > </ html > Ce document peut se repr\u00e9senter par un arbre : graph TD HTML[\"html\"] --> HEAD[\"head\"] HTML[\"html\"] --> BODY[\"body\"] HEAD --> META[\"meta\"] HEAD --> TITLE[\"title\"] BODY --> H1[\"h1\"] BODY --> P[\"p\"] BODY --> TABLE[\"table\"] TABLE --> TR[\"tr\"] TR --> TD1[\"td\"] TR --> TD2[\"td\"] Que repr\u00e9sentent les noeuds de cet arbre ? Que signifie du point de vue du html une ar\u00eate de cet arbre ? Quelle est la racine de cet arbre ? Donner les feuilles de cet arbre. Donner une branche de cet arbre. Donner l'arit\u00e9 de cet arbre. Donner la hauteur de cet arbre. Exercice 2 : Vocabulaire sur les arbres On consid\u00e8re l'arbre ci-dessous : graph TD A[\"A\"] --> L[\"L\"] A --> G[\"G\"] L --> O[\"O\"] L --> R[\"R\"] G --> V1[\" \"] G --> I[\"I\"] O --> T[\"T\"] O --> H[\"H\"] R --> M[\"M\"] R --> E[\"E\"] I --> S[\"S\"] I --> V2[\" \"] style V1 fill:#FFFFFF, stroke:#FFFFFF linkStyle 4 stroke:#FFFFFF,stroke-width:0px style V2 fill:#FFFFFF, stroke:#FFFFFF linkStyle 11 stroke:#FFFFFF,stroke-width:0px Justifier qu'il s'agit d'un arbre binaire. Quelle est sa taille ? Quelle est sa racine ? Nommer les feuilles. Donner une branche de cet arbre. Donner la hauteur de cet arbre. Donner une branche de longueur 3 dans cet On consid\u00e8re le sous arbre gauche de la racine, quel est l'arit\u00e9 de chaque noeud ? Que peut-on dire du sous arbre gauche ? M\u00eame question pour le sous arbre droit de la racine. Exercice 3 : Repr\u00e9senter un arbre binaire Dessiner tous les arbres binaires \u00e0 3 noeuds. Attention \u00e0 bien distinguer le fils droit du fils gauche. Dessiner un arbre binaire de taille 4 et de profondeur 4. Dessiner un arbre binaire de taille 4 et de profondeur 3. Quelle est la taille maximale d'un arbre binaire de hauteur 10 ? Justifier Aide On pourra utiliser sans justification, la formule vue en cours qui permet d'encadrer la taille d'un arbre en fonction de sa hauteur. Exercice 4 : Repr\u00e9senter un arbre binaire par un triplet On rappelle qu'on peut d\u00e9finir un arbre binaire de fa\u00e7on r\u00e9cursive, en effet, un arbre binaire est soit vide (not\u00e9 \\(\\Delta\\) ), soit un triplet \\((etiquette,sag,sad)\\) o\u00f9 \\(sag\\) (pour sous arbre gauche) et \\(sad\\) (pour sous arbre droit) sont eux-m\u00eames des arbres binaires. On consid\u00e8re les arbres suivants : \\(A = (7,\\Delta,\\Delta)\\) \\(B = (2,(3,\\Delta,(9,\\Delta,\\Delta)),(10,\\Delta,\\Delta))\\) \\(C = (4,(1,(8,\\Delta,\\Delta),(7,\\Delta,\\Delta)),(3,(6,\\Delta,\\Delta),(5,\\Delta,\\Delta)))\\) Pour chacun de ces arbres : Faire un sch\u00e9ma pour le repr\u00e9senter. Donner sa taille, sa hauteur, son nombre de feuilles. Exercice 5 : Retour sur l'impl\u00e9mentation On reprend ici l'impl\u00e9mentation des arbres binaires vu en cours que vous pouvez t\u00e9l\u00e9charger ci-dessous : Impl\u00e9mentation arbres binaires Compl\u00e9ter cette impl\u00e9mentation en \u00e9crivant une fonction degenere(n) qui prend en argument un entier positif n et qui renvoie l'arbre binaire d\u00e9g\u00e9n\u00e9r\u00e9 de taille n . On utilisera comme \u00e9tiquette des noeuds D0, D1, D2 ... . Compl\u00e9ter cette impl\u00e9mentation en \u00e9crivant une fonction complet(h) qui prend en argument en entier positif h et qui renvoie l'arbre binaire complet de hauteur h . On utilisera comme \u00e9tiquette des noeuds C0, C1, C2, ... . Reprendre ces deux fonctions et en \u00e9crire une version prenant aussi en param\u00e8tre une liste de chaines de caract\u00e8res qui sera utilis\u00e9e comme \u00e9tiquette des noeuds. Par exemple complet(2,[\"T\",\"O\",\"P\"]) renvoie l'arbre binaire complet de hauteur 2 dont la racine porte l'\u00e9tiquette T et a pour fils gauche O et fils droit P . Utiliser ces deux fonctions de fa\u00e7ons \u00e0 cr\u00e9er rapidement l'arbre de l'exercice 2.","title":"Arbres"},{"location":"backup/arbres/#c8-arbres","text":"","title":"C8 Arbres "},{"location":"backup/arbres/#activites","text":"","title":"Activit\u00e9s"},{"location":"backup/arbres/#activite-1-vocabulaire","text":"Apr\u00e8s execution d'une commande dans un terminal Linux on a obtenu l'affichage ci-dessous : De quelle commande s'agissait-il ? Quelle est sa traduction en fran\u00e7ais ? Que sont Maths et NSI pour le syst\u00e8me d'exploitation ? Un point ( . ) figure en haut du sch\u00e9ma, quelle en est la signification ? Que signifie le lien entre NSI et Projet ? Le sch\u00e9ma ci-dessus est un exemple d' arbre (on parle d'ailleurs de l'arborescence des dossiers dans un syst\u00e8me d'exploitation). Un arbre est constitu\u00e9 de noeuds et un lien entre deux noeuds s'appelle une ar\u00eate . Citer trois noeuds de l'arbre ci-dessus et donner un exemple d'ar\u00eate. Quel noeud est le r\u00e9pertoire parent de Syst\u00e8mes ? On dira dans le vocabulaire des arbres que le noeud Syst\u00e8mes est un fils de ce noeud. Citer tous les fils du noeud NSI . Dans un arbre, un seul et unique noeud n'est le fils de personne, on l'appelle la racine de l'arbre. De qui s'agit-il ici ? Nommer les noeuds n'ayant aucun fils (on les appelle feuilles de l'arbre). Une branche est une suite (finie) de noeuds depuis la racine vers une feuille. Donner une branche de cette arbre constitu\u00e9e de trois noeuds. Donner la taille de cet arbre (c'est \u00e0 dire son nombre de noeuds). Donner l' arit\u00e9 de cet arbre, c'est \u00e0 dire le nombre maximal de fils qu'un noeud peut avoir. Donner la hauteur de cet arbre c'est \u00e0 dire le nombre maximal de noeuds dans une branche. Attention La hauteur d'un arbre est parfois d\u00e9finie comme le plus grand nombre d'ar\u00eates dans une branche. Dans les sujets de bac faire attention \u00e0 la d\u00e9finition utilis\u00e9e qui est normalement donn\u00e9e dans l'\u00e9nonc\u00e9.","title":"Activit\u00e9 1 : Vocabulaire"},{"location":"backup/arbres/#activite-2-arbre-binaire","text":"Chez les abeilles, le syst\u00e8me de reproduction fait que : une abeille femelle est issue de deux abeilles, un m\u00e2le et une femelle, une abeille m\u00e2le est issue d'une seule abeille femelle. Cela s'explique par le fait qu'un oeuf non f\u00e9cond\u00e9 (donc issu uniquement d'une femelle) donne toujours naissance \u00e0 une abeille m\u00e2le, alors qu'une oeuf f\u00e9cond\u00e9 (donc issu d'un m\u00e2le et d'une femelle) donne toujours naissance \u00e0 une abeille femelle. On a repr\u00e9sent\u00e9 ci-contre les quatre premiers niveaux de l'arbre g\u00e9n\u00e9alogique d'une abeille m\u00e2le en notant avec la lettre M les m\u00e2les et la lettre F les femelles. graph TD F0[\"F\"] --> F1[\"F\"] F0[\"F\"] --> M1[\"M\"] M1 --> F2[\"F\"] F1 --> M2[\"M\"] F1 --> F3[\"F\"] F2 --> F4[\"F\"] F2 --> M3[\"M\"] M2 --> F5[\"F\"] F3 --> F6[\"F\"] F3 --> M4[\"M\"] D\u00e9finition des arbres binaires Recopier et compl\u00e9ter cet arbre en ajoutant le 5 e niveau. Rappeler la d\u00e9finition de l' arit\u00e9 d'un arbre et d'un noeud. Quelle est l'arit\u00e9 des feuilles d'un arbre ? D\u00e9terminer le degr\u00e9 (arit\u00e9) des noeuds qui ne sont pas des feuilles selon que le noeud repr\u00e9sente une abeille male ou une abeille femelle. On appelle arbre binaire , un arbre dans lequel les noeuds ont au maximum deux fils. Donner une d\u00e9finition \u00e9quivalente utilisant le mot arit\u00e9 et justifier rapidement que l'arbre g\u00e9n\u00e9alogique d'une abeille est binaire. Une d\u00e9finition r\u00e9cursive On reprend l'exemple de l'abre g\u00e9n\u00e9alogique d'une abeille femelle jusqu'au cinqui\u00e8me niveau dessin\u00e9e ci-dessus. On appelle sous arbre gauche et sous arbre droit l'arbre g\u00e9n\u00e9alogique de chacune des deux parents de la racine. L'arbre est alors not\u00e9 sous la forme d'un triplet constitu\u00e9 de la racine et des deux sous arbres : (racine, sous arbre gauche, sous arbre droit) . Justifier rapidement que les deux sous arbres sont des arbres binaires. Que dire du sous arbre droit lorsque l'abeille est un m\u00e2le ? Pour une feuille, que dire du sous arbre droit et du sous arbre gauche ? En d\u00e9duire une version r\u00e9cursive de la d\u00e9finition d'un arbre binaire. Donner une d\u00e9finition r\u00e9cursive de la taille d'un arbre binaire. Donner une d\u00e9finition r\u00e9cursive de la hauteur d'un arbre binaire.","title":"Activit\u00e9 2 : Arbre binaire"},{"location":"backup/arbres/#activite-3-relation-entre-la-hauteur-et-la-taille-dun-arbre-binaire","text":"On note \\(h\\) la hauteur d'un arbre binaire et \\(n\\) sa taille, on suppose dans la suite que \\(n \\geq 2\\) . En rappelant les d\u00e9finitions de la hauteur et de la taille d'un arbre, justifier que \\(n \\geq h\\) . On num\u00e9rote les noeuds d'un arbre binaire de la suivante : la racine porte le num\u00e9ro 1, le fils gauche d'un noeud porte le num\u00e9ro de son p\u00e8re suivi d'un 0, le fils droit d'un noeud porte le num\u00e9ro de son p\u00e8re suivi d'un 1. On a entam\u00e9 la num\u00e9rotation de l'arbre binaire ci-dessous, recopier cet arbre et compl\u00e9ter cette num\u00e9rotation. graph TD A[\"A : 1\"] --> B[\"B : 10\"] A --> C[\"C : 11\"] B --> D[\"D : ...\"] B --> E[\"E : 101\"] C --> V1[\" \"] C --> F[\"F: ...\"] D --> G[\"G: ...\"] D --> H[\"H: ...\"] F --> I[\"I: ...\"] F --> V2[\" \"] style V1 fill:#FFFFFF, stroke:#FFFFFF linkStyle 4 stroke:#FFFFFF,stroke-width:0px style V2 fill:#FFFFFF, stroke:#FFFFFF linkStyle 9 stroke:#FFFFFF,stroke-width:0px Justifier que sur un niveau donn\u00e9 de l'arbre tous les num\u00e9ros de noeud ont le m\u00eame nombre de caract\u00e8res. En d\u00e9duire en fonction de \\(h\\) , le nombre de caract\u00e8res formant le num\u00e9ro des feuilles En utilisant vos connaissances sur la num\u00e9rotation binaire d'un entier positif, prouver que \\(n \\leq 2^h - 1\\) .","title":"Activit\u00e9 3 : Relation entre la hauteur et la taille d'un arbre binaire"},{"location":"backup/arbres/#activite-4-implementation-des-arbres-binaires-en-python","text":"Le notebook suivant pr\u00e9sente une impl\u00e9mentation possible des arbres binaires en Python. Cette impl\u00e9mentation pourra \u00eatre sauvegard\u00e9e et utilis\u00e9e en exercice. Jupyter Notebook","title":"Activit\u00e9 4 : Impl\u00e9mentation des arbres binaires en Python"},{"location":"backup/arbres/#cours","text":"Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices.","title":"Cours"},{"location":"backup/arbres/#exercices","text":"","title":"Exercices"},{"location":"backup/arbres/#exercice-1-dom","text":"On consid\u00e8re le code html suivant : < html lang = \"fr\" > < head > < meta charset = \"UTF-8\" > < title > Exemple </ title > </ head > < body > < h1 > Un titre </ h1 > < p > Bonjour ! </ p > < table > < tr > < td > Case 1 </ td > < td > Case 2 </ td > </ tr > </ table > </ body > </ html > Ce document peut se repr\u00e9senter par un arbre : graph TD HTML[\"html\"] --> HEAD[\"head\"] HTML[\"html\"] --> BODY[\"body\"] HEAD --> META[\"meta\"] HEAD --> TITLE[\"title\"] BODY --> H1[\"h1\"] BODY --> P[\"p\"] BODY --> TABLE[\"table\"] TABLE --> TR[\"tr\"] TR --> TD1[\"td\"] TR --> TD2[\"td\"] Que repr\u00e9sentent les noeuds de cet arbre ? Que signifie du point de vue du html une ar\u00eate de cet arbre ? Quelle est la racine de cet arbre ? Donner les feuilles de cet arbre. Donner une branche de cet arbre. Donner l'arit\u00e9 de cet arbre. Donner la hauteur de cet arbre.","title":"Exercice 1 : DOM"},{"location":"backup/arbres/#exercice-2-vocabulaire-sur-les-arbres","text":"On consid\u00e8re l'arbre ci-dessous : graph TD A[\"A\"] --> L[\"L\"] A --> G[\"G\"] L --> O[\"O\"] L --> R[\"R\"] G --> V1[\" \"] G --> I[\"I\"] O --> T[\"T\"] O --> H[\"H\"] R --> M[\"M\"] R --> E[\"E\"] I --> S[\"S\"] I --> V2[\" \"] style V1 fill:#FFFFFF, stroke:#FFFFFF linkStyle 4 stroke:#FFFFFF,stroke-width:0px style V2 fill:#FFFFFF, stroke:#FFFFFF linkStyle 11 stroke:#FFFFFF,stroke-width:0px Justifier qu'il s'agit d'un arbre binaire. Quelle est sa taille ? Quelle est sa racine ? Nommer les feuilles. Donner une branche de cet arbre. Donner la hauteur de cet arbre. Donner une branche de longueur 3 dans cet On consid\u00e8re le sous arbre gauche de la racine, quel est l'arit\u00e9 de chaque noeud ? Que peut-on dire du sous arbre gauche ? M\u00eame question pour le sous arbre droit de la racine.","title":"Exercice 2 : Vocabulaire sur les arbres"},{"location":"backup/arbres/#exercice-3-representer-un-arbre-binaire","text":"Dessiner tous les arbres binaires \u00e0 3 noeuds. Attention \u00e0 bien distinguer le fils droit du fils gauche. Dessiner un arbre binaire de taille 4 et de profondeur 4. Dessiner un arbre binaire de taille 4 et de profondeur 3. Quelle est la taille maximale d'un arbre binaire de hauteur 10 ? Justifier Aide On pourra utiliser sans justification, la formule vue en cours qui permet d'encadrer la taille d'un arbre en fonction de sa hauteur.","title":"Exercice 3 : Repr\u00e9senter un arbre binaire"},{"location":"backup/arbres/#exercice-4-representer-un-arbre-binaire-par-un-triplet","text":"On rappelle qu'on peut d\u00e9finir un arbre binaire de fa\u00e7on r\u00e9cursive, en effet, un arbre binaire est soit vide (not\u00e9 \\(\\Delta\\) ), soit un triplet \\((etiquette,sag,sad)\\) o\u00f9 \\(sag\\) (pour sous arbre gauche) et \\(sad\\) (pour sous arbre droit) sont eux-m\u00eames des arbres binaires. On consid\u00e8re les arbres suivants : \\(A = (7,\\Delta,\\Delta)\\) \\(B = (2,(3,\\Delta,(9,\\Delta,\\Delta)),(10,\\Delta,\\Delta))\\) \\(C = (4,(1,(8,\\Delta,\\Delta),(7,\\Delta,\\Delta)),(3,(6,\\Delta,\\Delta),(5,\\Delta,\\Delta)))\\) Pour chacun de ces arbres : Faire un sch\u00e9ma pour le repr\u00e9senter. Donner sa taille, sa hauteur, son nombre de feuilles.","title":"Exercice 4 : Repr\u00e9senter un arbre binaire par un triplet"},{"location":"backup/arbres/#exercice-5-retour-sur-limplementation","text":"On reprend ici l'impl\u00e9mentation des arbres binaires vu en cours que vous pouvez t\u00e9l\u00e9charger ci-dessous : Impl\u00e9mentation arbres binaires Compl\u00e9ter cette impl\u00e9mentation en \u00e9crivant une fonction degenere(n) qui prend en argument un entier positif n et qui renvoie l'arbre binaire d\u00e9g\u00e9n\u00e9r\u00e9 de taille n . On utilisera comme \u00e9tiquette des noeuds D0, D1, D2 ... . Compl\u00e9ter cette impl\u00e9mentation en \u00e9crivant une fonction complet(h) qui prend en argument en entier positif h et qui renvoie l'arbre binaire complet de hauteur h . On utilisera comme \u00e9tiquette des noeuds C0, C1, C2, ... . Reprendre ces deux fonctions et en \u00e9crire une version prenant aussi en param\u00e8tre une liste de chaines de caract\u00e8res qui sera utilis\u00e9e comme \u00e9tiquette des noeuds. Par exemple complet(2,[\"T\",\"O\",\"P\"]) renvoie l'arbre binaire complet de hauteur 2 dont la racine porte l'\u00e9tiquette T et a pour fils gauche O et fils droit P . Utiliser ces deux fonctions de fa\u00e7ons \u00e0 cr\u00e9er rapidement l'arbre de l'exercice 2.","title":"Exercice 5 : Retour sur l'impl\u00e9mentation"},{"location":"backup/calculabilite/","text":"C14 Calculabilit\u00e9, d\u00e9cidabilit\u00e9 Activit\u00e9s Activit\u00e9 1 : Programme comme donn\u00e9e De fa\u00e7on sch\u00e9matique, un programme (ou une fonction) prend en entr\u00e9e des donn\u00e9es , effectue un traitement sur ces donn\u00e9es et produit un r\u00e9sultat : graph LR D[\"Donn\u00e9es\"] P([\"&#9881; Programmes\"]) R[\"R\u00e9sultat\"] D --> P P --> R Dans l'exemple d'une fonction qui compte le nombre de lettres dans un mot, que sont les donn\u00e9es ? le r\u00e9sultat ? On souhaite \u00e9crire une fonction qui compte le nombre de lignes d'un fichier. Que sont les donn\u00e9es de cette fonction ? Que sont les donn\u00e9es pour les programme suivants : un antivirus, un compilateur ? Recopier et compl\u00e9ter avec les mots \" programme \" et \" donn\u00e9e \" : un ........ prend des ....... en entr\u00e9e mais, un ........ peut aussi \u00eatre la ............ d'un ............. Activit\u00e9 2 : Probl\u00e8me de l'arr\u00eat On suppose qu'on dispose d'un programme appel\u00e9 teste_arret qui prend en entr\u00e9e un programme P et des donn\u00e9es X et renvoie True ou False selon que P s'arr\u00eate ou non avec les donn\u00e9es X comme cela est sch\u00e9matis\u00e9 ci-dessous : graph LR D[\"Programme P\"] X[\"Donn\u00e9es X\"] P([\"&#9881; teste_arret\"]) T[\"True\"] F[\"False\"] D --> P X --> P P --P s'arr\u00eate avec les donn\u00e9es X--> T P --P ne s'arr\u00eate pas avec les donn\u00e9es X--> F On d\u00e9finit le nouveau programme suivant : 1 2 3 4 5 6 def Q ( P , X ): if teste_arret ( P , X ): while True : pass else : return 1 Que dire des lignes 3 et 4 (on rappelle que l'instruction pass ne fait rien) Si P s'arr\u00eate avec les donn\u00e9es X , que fait ce programme ? Si P ne s'arr\u00eate pas avec les donn\u00e9es X , que fait ce programme ? Le programme Q prend en entr\u00e9e un programme P et des donn\u00e9es X, il peut donc se prendre lui-m\u00eame en entr\u00e9e avec lui-m\u00eame comme donn\u00e9e ! On cherche \u00e0 d\u00e9terminer le r\u00e9sultat de l'appel : Q(Q,Q) . Pour cela, recopier et compl\u00e9ter le sch\u00e9ma suivant : graph LR D[\"Programme : ...\"] X[\"Donn\u00e9es : ...\"] P([\"&#9881; Programme Q\"]) T[\"....\"] F[\"Arr\u00eat\"] D --> P X --> P P --Q ...... avec Q comme donn\u00e9e--> T P --Q ne s'arr\u00eate pas avec Q comme donn\u00e9e X--> F D'apr\u00e8s ce sch\u00e9ma, que se passe-t-il si Q s'arr\u00eate avec lui m\u00eame comme donn\u00e9e ? Et dans le cas contraire ? Que peut-on en conclure sur l'existence du programme teste_arret ? Note On pourra compl\u00e9ter cette activit\u00e9 avec le visionnage de la vid\u00e9o suivante : Dans cette activit\u00e9, nous avons prouv\u00e9 que le programme teste_arret ne peut pas exister, on dit que le probl\u00e8me de l'arr\u00eat est ind\u00e9cidable c'est \u00e0 dire qu'il n'existe pas d'algorithme permettant de r\u00e9soudre ce probl\u00e8me. Cours Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices. Exercices Exercice 1 : Vocabulaire Donner un ou plusieurs exemples de programmes acceptant un programme comme donn\u00e9e Donner un exemple de fonction calculable. Donner un exemple de probl\u00e8me ind\u00e9cidable. Que signifie la phrase \"le probl\u00e8me de l'arr\u00eat est ind\u00e9cidable\" ? Exercice 2 : Nombre premier Proproser un algorithme permettant de savoir si un entier donn\u00e9 \\(n\\) est premier ou non. Que peut-on en d\u00e9duire sur la d\u00e9cidabilit\u00e9 de ce probl\u00e8me ? Impl\u00e9menter en Python cet algorithme.","title":"Calculabilite"},{"location":"backup/calculabilite/#c14-calculabilite-decidabilite","text":"","title":"C14 Calculabilit\u00e9, d\u00e9cidabilit\u00e9 "},{"location":"backup/calculabilite/#activites","text":"","title":"Activit\u00e9s"},{"location":"backup/calculabilite/#activite-1-programme-comme-donnee","text":"De fa\u00e7on sch\u00e9matique, un programme (ou une fonction) prend en entr\u00e9e des donn\u00e9es , effectue un traitement sur ces donn\u00e9es et produit un r\u00e9sultat : graph LR D[\"Donn\u00e9es\"] P([\"&#9881; Programmes\"]) R[\"R\u00e9sultat\"] D --> P P --> R Dans l'exemple d'une fonction qui compte le nombre de lettres dans un mot, que sont les donn\u00e9es ? le r\u00e9sultat ? On souhaite \u00e9crire une fonction qui compte le nombre de lignes d'un fichier. Que sont les donn\u00e9es de cette fonction ? Que sont les donn\u00e9es pour les programme suivants : un antivirus, un compilateur ? Recopier et compl\u00e9ter avec les mots \" programme \" et \" donn\u00e9e \" : un ........ prend des ....... en entr\u00e9e mais, un ........ peut aussi \u00eatre la ............ d'un .............","title":"Activit\u00e9 1 : Programme comme donn\u00e9e"},{"location":"backup/calculabilite/#activite-2-probleme-de-larret","text":"On suppose qu'on dispose d'un programme appel\u00e9 teste_arret qui prend en entr\u00e9e un programme P et des donn\u00e9es X et renvoie True ou False selon que P s'arr\u00eate ou non avec les donn\u00e9es X comme cela est sch\u00e9matis\u00e9 ci-dessous : graph LR D[\"Programme P\"] X[\"Donn\u00e9es X\"] P([\"&#9881; teste_arret\"]) T[\"True\"] F[\"False\"] D --> P X --> P P --P s'arr\u00eate avec les donn\u00e9es X--> T P --P ne s'arr\u00eate pas avec les donn\u00e9es X--> F On d\u00e9finit le nouveau programme suivant : 1 2 3 4 5 6 def Q ( P , X ): if teste_arret ( P , X ): while True : pass else : return 1 Que dire des lignes 3 et 4 (on rappelle que l'instruction pass ne fait rien) Si P s'arr\u00eate avec les donn\u00e9es X , que fait ce programme ? Si P ne s'arr\u00eate pas avec les donn\u00e9es X , que fait ce programme ? Le programme Q prend en entr\u00e9e un programme P et des donn\u00e9es X, il peut donc se prendre lui-m\u00eame en entr\u00e9e avec lui-m\u00eame comme donn\u00e9e ! On cherche \u00e0 d\u00e9terminer le r\u00e9sultat de l'appel : Q(Q,Q) . Pour cela, recopier et compl\u00e9ter le sch\u00e9ma suivant : graph LR D[\"Programme : ...\"] X[\"Donn\u00e9es : ...\"] P([\"&#9881; Programme Q\"]) T[\"....\"] F[\"Arr\u00eat\"] D --> P X --> P P --Q ...... avec Q comme donn\u00e9e--> T P --Q ne s'arr\u00eate pas avec Q comme donn\u00e9e X--> F D'apr\u00e8s ce sch\u00e9ma, que se passe-t-il si Q s'arr\u00eate avec lui m\u00eame comme donn\u00e9e ? Et dans le cas contraire ? Que peut-on en conclure sur l'existence du programme teste_arret ? Note On pourra compl\u00e9ter cette activit\u00e9 avec le visionnage de la vid\u00e9o suivante : Dans cette activit\u00e9, nous avons prouv\u00e9 que le programme teste_arret ne peut pas exister, on dit que le probl\u00e8me de l'arr\u00eat est ind\u00e9cidable c'est \u00e0 dire qu'il n'existe pas d'algorithme permettant de r\u00e9soudre ce probl\u00e8me.","title":"Activit\u00e9 2 : Probl\u00e8me de l'arr\u00eat"},{"location":"backup/calculabilite/#cours","text":"Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices.","title":"Cours"},{"location":"backup/calculabilite/#exercices","text":"","title":"Exercices"},{"location":"backup/calculabilite/#exercice-1-vocabulaire","text":"Donner un ou plusieurs exemples de programmes acceptant un programme comme donn\u00e9e Donner un exemple de fonction calculable. Donner un exemple de probl\u00e8me ind\u00e9cidable. Que signifie la phrase \"le probl\u00e8me de l'arr\u00eat est ind\u00e9cidable\" ?","title":"Exercice 1 : Vocabulaire"},{"location":"backup/calculabilite/#exercice-2-nombre-premier","text":"Proproser un algorithme permettant de savoir si un entier donn\u00e9 \\(n\\) est premier ou non. Que peut-on en d\u00e9duire sur la d\u00e9cidabilit\u00e9 de ce probl\u00e8me ? Impl\u00e9menter en Python cet algorithme.","title":"Exercice 2 : Nombre premier"},{"location":"backup/cryptographie/","text":"C15 S\u00e9curisation des communications Ce cours s'inspire largement de celui de G. Lassus (merci pour les illustrations) Activit\u00e9s Activit\u00e9 1 : Chiffrement sym\u00e9trique Op\u00e9ration xor En Python, on peut effectuer un ou exclusif bit \u00e0 bit sur les repr\u00e9sentations binaires de deux entiers \u00e0 l'aide de l'op\u00e9rateur ^ . Par exemple pour effectuer 28 ^ 42 : Convertir 28 en binaire : \\((28)_{10} = (11100)_2\\) Convertir 42 en binaire : \\((42)_{10} = (101010)_2\\) Effectuer un xor bit \u00e0 bit : En effet, on rappelle que \\(A \\bigoplus B\\) vaut 1 lorsque \\(A\\) ou \\(B\\) vaut 1 mais pas les deux \u00e0 la fois (d'o\u00f9 le nom ou exclusif ) Convertir le r\u00e9sultat en entier : \\((110110)_2 = (54)_{10}\\) a. V\u00e9rifier en utilisant Python, qu'on obtient bien 28 ^ 42 = 54 b. Comme dans l'exemple ci-dessus, calculer 65 ^ 42 , v\u00e9rifier votre r\u00e9sultat avec Python. c. Calculer (65 ^ 42)^42 , que remarquez-vous ? d. A l'aide d'un programme Python, v\u00e9rifier que pour tout entier n compris entre 0 et 255, on a : (n ^ 42) ^ 42 = n Note On admet, sans d\u00e9monstration que l'op\u00e9ration xor est sym\u00e9trique c'est \u00e0 dire que pour tout entier n et m : (n ^ m) ^ m = n . Chiffrement avec xor On d\u00e9cide d'utiliser l'op\u00e9ration xor pour chiffrer un message, on choisit un entier compris entre 0 et 255 qui sert de cl\u00e9 de chiffrement . Pour chiffrer un message, on effectue un xor entre le code ascii de chaque caract\u00e8re du message et la cl\u00e9 de chiffrement. Par exemple, pour coder le mot NSI avec la cl\u00e9 42 : On r\u00e9cup\u00e8re les codes ascii de chaque lettre : N : 78, S : 83 et I : 73. On effectuer un xor avec la cl\u00e9 de chiffrement 42 : 78^42 = 100 , 83^42 = 121 , 73 ^ 42 = 99 On remplace avec le caract\u00e8re ayant ce code ascii : 100 : d , 121 : y , 99 : c Le chiffrement de NSI est donc dyc a. Ecrire une fonction python chiffre_xor qui prend deux arguments (le texte \u00e0 chiffrer et la cl\u00e9 de chiffrement) et renvoie le message chiffr\u00e9. Par exemple chiffre_xor(\"NSI\",42) doit renvoyer dyc . Aide On rappelle qu'en python : la fonction ord renvoie le code ascii du caract\u00e8re donn\u00e9 en param\u00e8tre. Par exemple, ord(\"N\") renvoie 78. la fonction chr renvoie le caract\u00e8re dont le code ascii est donn\u00e9 en param\u00e8tre. Par exemple, chr(100) renvoie d . b. Expliquer et justifier comment peut s'effectuer le d\u00e9chiffrage d'un message avec cette technique. Quelle est la cl\u00e9 de d\u00e9chiffrement ? c. D\u00e9chiffrer le message qARE\\E\\F@REVIA\u00daF@@Z sachant que la cl\u00e9 de chiffrement \u00e9tait 51. d. Un chiffrage est dit sym\u00e9trique lorsque les cl\u00e9s de chiffrement et de de d\u00e9chiffrement doivent \u00eatre secr\u00e8tes (elles peuvent donc \u00eatre identiques ou alors la connaissance de l'une permet ais\u00e9ment d'obtenir l'autre). Le chiffrement par xor d\u00e9fini ci-dessus est-il sym\u00e9trique ? e. Le chiffrement par le code de C\u00e9sar est-il sym\u00e9trique ? f. Dans le cas d'un chiffrement sym\u00e9trique, deux personnes peuvent-elles s'\u00e9changer des messages si elles n'ont pas encore convenu ensemble d'une cl\u00e9 de chiffrement ? En d\u00e9duire un inconv\u00e9nient de cette m\u00e9thode de chiffrement. Note Pour prolonger cette activit\u00e9 on pourra faire l'exercice 3 de ce sujet de Bac 2021 dont la correction se trouve ici . En effet, cet exercice traite du chiffrement par xor en utilisant une cha\u00eene de caract\u00e8re comme cl\u00e9. Activit\u00e9 2 : Chiffrement asym\u00e9trique \u2009 Dans un chiffrement asym\u00e9trique , la cl\u00e9 de chiffrement est publique et donc n'importe qui peut chiffrer un message. La cl\u00e9 de d\u00e9chiffrement est par contre priv\u00e9e (et seul celui qui la poss\u00e8de peut d\u00e9chiffrer). Le principe est donc qu'on ne peut pas (ou pas \"facilement\" ) d\u00e9duire de la cl\u00e9 de chiffrement (publique), la cl\u00e9 de d\u00e9chiffrement (secr\u00e8te). Le principe d'un chiffrement asym\u00e9trique est illustr\u00e9 ci-dessous (cr\u00e9dit : G. Lassus): Dans cette activit\u00e9, apr\u00e8s quelques rappels math\u00e9matiques, nous allons d\u00e9tailler chacune de ses \u00e9tapes sur un exemple tr\u00e8s connu de chiffrement asym\u00e9trique : l'algorithme RSA des initiales de ses trois inventeurs (Ron R ivest, Adi S hamir et Leonard A delman). Pour plus de d\u00e9tails historique, voir par exemple ce site Attention La compr\u00e9hension de l'algorithme demande des notions d'arithm\u00e9tique qui pourront sembler ardues aux \u00e9l\u00e8ves ne faisant pas l'enseignement de sp\u00e9cialit\u00e9s math\u00e9matiques. Ces pr\u00e9requis, sont pr\u00e9sent\u00e9s en d\u00e9but d'activit\u00e9. On pourra simplement retenir pour r\u00e9sumer et fa\u00e7on imparfaite que dans le chiffrement RSA : la cl\u00e9 publique est un tr\u00e8s grand nombre \\(n\\) (plusieurs centaines de chiffres) choisi de fa\u00e7on \u00e0 \u00eatre le produit de deux nombres premiers, la cl\u00e9 priv\u00e9e est le couple \\((p,q)\\) de nombres premiers tels que \\(n=p\\times q\\) , \u00e9tant donn\u00e9e la taille de \\(n\\) , il est difficile (impossible avec la puissance de calcul actuelle des ordinateurs) de retrouver \\(p\\) et \\(q\\) \u00e0 partir de \\(n\\) . Et donc la connaissance de la cl\u00e9 publique ne permet pas d'en d\u00e9duire celle de la cl\u00e9 priv\u00e9e. Arithm\u00e9tique modulaire a. Il est 22h, quelle heure sera-t-il 8h plus tard ? b. Si vous avez r\u00e9pondu 6h (et pas 30h \u00e0 la question pr\u00e9c\u00e9dente), vous venez de faire de l' arithm\u00e9tique modulaire , en effet vous n'avez conserv\u00e9 que le reste dans la division euclidienne par 24: \\(30 = 1 \\times 24 + 6\\) on \u00e9crira que \\(30 \\equiv 6 [24]\\) et on lira \\(30\\) est \u00e9gal \u00e0 \\(6\\) modulo \\(24\\) (ce qui peut se traduire par leur diff\u00e9rence est un multiple de 24, c'est donc la m\u00eame heure sur des jours diff\u00e9rents). c. V\u00e9rifier (en faisant la division euclidienne) que \\(42 \\equiv 18 [24]\\) d. V\u00e9rifier (en faisant la division euclidienne) que \\(103 \\equiv 7 [24]\\) e. Compl\u00e9ter : \\(13 \\equiv \\dots [5]\\) f. Compl\u00e9ter : \\(42 \\equiv \\dots [7]\\) Nombres premiers et nombres premiers entre eux. a. Rappeler la d\u00e9finition d'un nombre premier. Les nombres suivants sont-ils premiers (justifier) : 12, 21, 29, 1 ? b. On dit que deux nombres sont premiers entre eux lorsque leur pgcd vaut 1, par exemple 12 et 5 sont premiers entre eux mais pas 33 et 27 (leur pgcd vaut 3). Donner la liste des nombres premiers avec 12 et inf\u00e9rieurs \u00e0 12. Algorithme RSA - \u00e9tape 1 : cr\u00e9ation de la cl\u00e9 publique et de la cl\u00e9 priv\u00e9e Choisir deux nombres premiers \\(p\\) et \\(q\\) tr\u00e8s grands . Pour disposer d'un exemple simple nous prendrons \\(p=3\\) et \\(q=11\\) Calculer le produit \\(n = p\\times q\\) . Dans notre exemple \\(n = 3 \\times 11 = 33\\) . Choisir un nombre premier \\(e\\) premier avec \\(\\phi(n) = (p-1)(q-1)\\) . Dans notre exemple, on choisit \\(e=3\\) qui est bien premier avec \\(20\\) (comme \\(p=3\\) et \\(q=11\\) , \\(\\phi(33)=(p-1)(q-1)=20\\) ). La cl\u00e9 publique d'Alice est le couple \\((e,n)\\) et donc dans notre exemple le couple \\((3,33)\\) . Rappelons que dans la r\u00e9alit\u00e9 \\(n\\) est un nombre tr\u00e8s grand. Pour d\u00e9terminer la cl\u00e9 priv\u00e9, il faut trouver un nombre \\(d\\) tel que \\(ed \\equiv 1 [\\phi(n)]\\) . Dans notre exemple il s'agit donc de trouver \\(d\\) tel que \\(3d \\equiv 1 [20]\\) , le nombre 7 convient. Note On dit que \\(d\\) est un inverse de \\(e\\) modulo \\(\\phi(n)\\) (leur produit vaut 1 modulo \\(\\phi(n)\\) ). Dans la pratique un algorithme permet la d\u00e9termination de \\(d\\) . Le couple \\((d,n)\\) est la cl\u00e9 priv\u00e9e qui permet le d\u00e9chiffrage. Dans notre exemple c'est donc \\((7,33)\\) . Soit le couple de nombre premiers \\((p,q)\\) avec \\(p=5\\) et \\(q=13\\) : a. Calculer \\(n\\) et \\(\\phi(n)\\) . b. Justifier que \\((9,65)\\) ne peut pas \u00eatre une cl\u00e9 publique. c. V\u00e9rifier que \\((11,65)\\) est une cl\u00e9 publique. d. V\u00e9rifier que 35 est un inverse de 11 modulo 48. e. En d\u00e9duire la cl\u00e9 priv\u00e9e. Important En r\u00e9sum\u00e9, la cl\u00e9 publique est \\((e,n)\\) et la cl\u00e9 publique est \\((d,n)\\) . Puisque \\(d\\) et \\(e\\) sont inverses l'un de l'autre modulo \\(\\phi(n)=(p-1)(q-1)\\) on peut penser qu'il est simple de retrouver l'un \u00e0 partir de l'autre, dans la pratique cela est extr\u00eamement difficile car on ne conna\u00eet pas \\(\\phi(n)\\) . En effet, \\(n\\) \u00e9tant tr\u00e8s grand, il est difficile de calculer \\(p\\) et \\(q\\) , car il n'existe pas d'algorithme efficace permettant de factoriser des nombres poss\u00e9dant plusieurs centaines de chiffres. Algorithme RSA - \u00e9tape 2 : chiffrer un message Pour envoyer un nombre secret \\(S\\) en le chiffrant avec l'algorithme RSA de cl\u00e9 publique \\((e,n)\\) , il faut calculer \\(S^e [n]\\) . Rappelons que dans notre exemple la cl\u00e9 publique pour chiffrer est \\((3,33)\\) . Par exemple, pour envoyer le nombre secret 4, on calcule \\(4 ^ 3 [33] = 31\\) et on envoie 31. a. Chiffrer le nombre secret 10 avec la cl\u00e9 \\((3,33)\\) b. Chiffrer le nombre secret 17 avec la cl\u00e9 \\((11,65)\\) Algorithme RSA - \u00e9tape 3 : d\u00e9chiffrer un message Pour d\u00e9chiffrer un message \\(M\\) de cl\u00e9 priv\u00e9e \\((d,n)\\) il suffit de l'\u00e9lever \u00e0 la puissance \\(d\\) et de calculer le reste dans la division euclidienne par \\(n\\) . Rappelons que dans notre exemple exemple \\(d=7\\) et \\(n=33\\) . Si on re\u00e7oit le le message \\(M = 31\\) on doit calculer : \\(31^7 = 27512614111\\) puis chercher le reste modulo 33 : \\(27512614111 [33] = 4\\) , on retrouve bien le message de d\u00e9part qui \u00e9tait 4. Note Cela repose sur le r\u00e9sultat suivant : si \\(e\\) et \\(d\\) sont inverses modulo \\(\\phi(n)\\) alors \\(M^{ed} \\equiv M [n]\\) . Pour une d\u00e9monstration, on pourra consulter cette page a. D\u00e9chiffrer le nombre secret 18 avec la cl\u00e9 \\((7,33)\\) . b. M\u00eame question pour le nombre secret 90 avec la cl\u00e9 \\((11,65)\\) . Vous pouvez utiliser cet outil en ligne afin de v\u00e9rifier vos r\u00e9ponse \u00e0 cette activit\u00e9. Important Le protocole https qui permet de s\u00e9curiser les transmissions sur le Web utilise \u00e0 la fois : un chiffrement asym\u00e9trique pour la g\u00e9n\u00e9ration de cl\u00e9s de chiffrement identiques chez le serveur et le client un chiffrement sym\u00e9trique (aujourd'hui AES ) pour l'\u00e9change des donn\u00e9es. Voir cette page pour plus de d\u00e9tails. Cours Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices. Exercices Exercice 1 : Vocabulaire Expliquer en quelques phrases la diff\u00e9rence entre un chiffrement sym\u00e9trique et un chiffrement asym\u00e9trique . Donner un exemple de chiffrement sym\u00e9trique. Donner un exemple de chiffrement asym\u00e9trique. Exercice 2 : Chiffre de C\u00e9sar Rappeler le principe du chiffrement de C\u00e9sar Ecrire en Python, une fonction chiffre_cesar qui prend en argument un texte et une cl\u00e9 de chiffrement c et renvoie le texte chiffr\u00e9 par la m\u00e9thode de C\u00e9sar avec un d\u00e9calage de c emplacements. Par souci de simplicit\u00e9, on supposera que le texte n'est compos\u00e9 que des 26 lettres majuscules de l'alphabet et on ne chiffre ni les espaces ni les symboles de ponctuation. Aide On rappelle qu'en python : la fonction ord renvoie le code ascii du caract\u00e8re donn\u00e9 en param\u00e8tre. Par exemple, ord(\"N\") renvoie 78. la fonction chr renvoie le caract\u00e8re dont le code ascii est donn\u00e9 en param\u00e8tre. Par exemple, chr(100) renvoie d . n%26 donne le reste dans la division euclidienne de n par 26. Le chiffre de C\u00e9sar peut-\u00eatre cass\u00e9 par analyse fr\u00e9quentielle , comme expliqu\u00e9 ci-dessous : En utilisant cette technique, \u00e9crire un programme Python permettant de d\u00e9chiffrer le message suivant : PFOJC JCIG OJSN FSIGGW O RSQCRSF QS ASGGOUS Q SGH HFSG PWSB AOWG WZ FSGHS SBQCFS PSOIQCID O TOWFS D\u00e9coder de nouveau le message pr\u00e9c\u00e9dent en utilisant la biblioth\u00e8que sympy Exercice 3 : Factorisation On rappelle que la fiabilit\u00e9 de l'algorithme rsa est li\u00e9 \u00e0 la difficult\u00e9 de trouver en connaissant un nombre \\(n\\) les deux nombres premiers \\(p\\) et \\(q\\) tels que \\(n = pq\\) . Cet exercice a pour but de le v\u00e9rifier. Le module Crypto de python permet de g\u00e9n\u00e9rer des nombres premiers de n'importe quelle taille : from Crypto.Util import number from Crypto.Random import get_random_bytes # Taille des nombres (en bits) n_length = 20 # G\u00e9n\u00e9ration de deux nombres premiers p et q de cette taille p = number . getPrime ( n_length , randfunc = get_random_bytes ) q = number . getPrime ( n_length , randfunc = get_random_bytes ) Recopier ce programme, le tester et le compl\u00e9ter afin de calculer \\(n = pq\\) . Ecrire une fonction factorise qui prend en argument un entier n et renvoie deux entiers p et q tels que n = p*q . Aide On pourra utiliser l'algorithme tr\u00e8s simple qui consiste \u00e0 essayer toutes les divisions possibles jusqu'\u00e0 en trouver une dont le reste est 0. Tester votre fonction factorise et v\u00e9rifier qu'elle permet de retrouve p et q \u00e0 partir de n Modifier la valeur du param\u00e8tre n_length et mesurer les temps d'execution. Attention Ne pas choisir une valeur trop \u00e9lev\u00e9 pour n_length , prendre par exemple 21 puis 22, 23, ... et observer l'augmentation correspondante du temps de calcul. Pr\u00e9voir le temps d'execution pour n_length = 100 La majorit\u00e9 des sites Web actuel utilise actuellement des cl\u00e9s de longueur 1024. Quel serait le temps d'ex\u00e9cution pr\u00e9visible de votre programme pour casser une de ces cl\u00e9s ? Lien La vid\u00e9o ci-dessous revient sur l'algorithme RSA et donne les longueurs des plus longues cl\u00e9s cass\u00e9es \u00e0 ce jour. Exercice 4 : Autorit\u00e9 de certification Comme vu en cours, une autorit\u00e9 de certification assure de l'identit\u00e9 d'un site afin d'\u00e9viter des attaques du type homme du milieu , sans laquelle on pourrait se connecter \u00e0 un site tiers en pensant qu'il s'agit par exemple de sa banque en ligne. Les requ\u00eates https peuvent \u00eatre observ\u00e9es \u00e0 partir de la console de firefox. Pour cela : Lancer Firefox et ouvrir la console (menu outils suppl\u00e9mentaires > console du navigateur ou avec le raccourci clavier Ctrl + Shift + J ) et s\u00e9lectionner l'onglet Requ\u00eates (\u00e0 droite) Dans la barre d'adresse du navigateur taper wikipedia.fr , les requ\u00eates d\u00e9filent dans la console, cliquer sur la requ\u00eate : GET https://www.wikipedia.fr puis l'onglet s\u00e9curit\u00e9 \u00e0 droite. Retrouver les informations suivantes : La version du protocole TLS utilis\u00e9 Le nom de l'autorit\u00e9 de certification La p\u00e9riode de validit\u00e9 du cerfificat d'identit\u00e9 Exercice 5 : Impl\u00e9mentation de l'algorithme RSA On rappelle que l'algorithme rsa impose de trouver l'inverse d'un nombre \\(d\\) modulo \\(\\phi(n)\\) . Cela peut \u00eatre fait en utilisant l' algorithme d'Euclide \u00e9tendu Proposer une impl\u00e9mentation en Python de cet algorithme. Proposer une impl\u00e9mentation en Python de l'algorithme de chiffrement rsa","title":"Cryptographie"},{"location":"backup/cryptographie/#c15-securisation-des-communications","text":"Ce cours s'inspire largement de celui de G. Lassus (merci pour les illustrations)","title":"C15 S\u00e9curisation des communications "},{"location":"backup/cryptographie/#activites","text":"","title":"Activit\u00e9s"},{"location":"backup/cryptographie/#activite-1-chiffrement-symetrique","text":"Op\u00e9ration xor En Python, on peut effectuer un ou exclusif bit \u00e0 bit sur les repr\u00e9sentations binaires de deux entiers \u00e0 l'aide de l'op\u00e9rateur ^ . Par exemple pour effectuer 28 ^ 42 : Convertir 28 en binaire : \\((28)_{10} = (11100)_2\\) Convertir 42 en binaire : \\((42)_{10} = (101010)_2\\) Effectuer un xor bit \u00e0 bit : En effet, on rappelle que \\(A \\bigoplus B\\) vaut 1 lorsque \\(A\\) ou \\(B\\) vaut 1 mais pas les deux \u00e0 la fois (d'o\u00f9 le nom ou exclusif ) Convertir le r\u00e9sultat en entier : \\((110110)_2 = (54)_{10}\\) a. V\u00e9rifier en utilisant Python, qu'on obtient bien 28 ^ 42 = 54 b. Comme dans l'exemple ci-dessus, calculer 65 ^ 42 , v\u00e9rifier votre r\u00e9sultat avec Python. c. Calculer (65 ^ 42)^42 , que remarquez-vous ? d. A l'aide d'un programme Python, v\u00e9rifier que pour tout entier n compris entre 0 et 255, on a : (n ^ 42) ^ 42 = n Note On admet, sans d\u00e9monstration que l'op\u00e9ration xor est sym\u00e9trique c'est \u00e0 dire que pour tout entier n et m : (n ^ m) ^ m = n . Chiffrement avec xor On d\u00e9cide d'utiliser l'op\u00e9ration xor pour chiffrer un message, on choisit un entier compris entre 0 et 255 qui sert de cl\u00e9 de chiffrement . Pour chiffrer un message, on effectue un xor entre le code ascii de chaque caract\u00e8re du message et la cl\u00e9 de chiffrement. Par exemple, pour coder le mot NSI avec la cl\u00e9 42 : On r\u00e9cup\u00e8re les codes ascii de chaque lettre : N : 78, S : 83 et I : 73. On effectuer un xor avec la cl\u00e9 de chiffrement 42 : 78^42 = 100 , 83^42 = 121 , 73 ^ 42 = 99 On remplace avec le caract\u00e8re ayant ce code ascii : 100 : d , 121 : y , 99 : c Le chiffrement de NSI est donc dyc a. Ecrire une fonction python chiffre_xor qui prend deux arguments (le texte \u00e0 chiffrer et la cl\u00e9 de chiffrement) et renvoie le message chiffr\u00e9. Par exemple chiffre_xor(\"NSI\",42) doit renvoyer dyc . Aide On rappelle qu'en python : la fonction ord renvoie le code ascii du caract\u00e8re donn\u00e9 en param\u00e8tre. Par exemple, ord(\"N\") renvoie 78. la fonction chr renvoie le caract\u00e8re dont le code ascii est donn\u00e9 en param\u00e8tre. Par exemple, chr(100) renvoie d . b. Expliquer et justifier comment peut s'effectuer le d\u00e9chiffrage d'un message avec cette technique. Quelle est la cl\u00e9 de d\u00e9chiffrement ? c. D\u00e9chiffrer le message qARE\\E\\F@REVIA\u00daF@@Z sachant que la cl\u00e9 de chiffrement \u00e9tait 51. d. Un chiffrage est dit sym\u00e9trique lorsque les cl\u00e9s de chiffrement et de de d\u00e9chiffrement doivent \u00eatre secr\u00e8tes (elles peuvent donc \u00eatre identiques ou alors la connaissance de l'une permet ais\u00e9ment d'obtenir l'autre). Le chiffrement par xor d\u00e9fini ci-dessus est-il sym\u00e9trique ? e. Le chiffrement par le code de C\u00e9sar est-il sym\u00e9trique ? f. Dans le cas d'un chiffrement sym\u00e9trique, deux personnes peuvent-elles s'\u00e9changer des messages si elles n'ont pas encore convenu ensemble d'une cl\u00e9 de chiffrement ? En d\u00e9duire un inconv\u00e9nient de cette m\u00e9thode de chiffrement. Note Pour prolonger cette activit\u00e9 on pourra faire l'exercice 3 de ce sujet de Bac 2021 dont la correction se trouve ici . En effet, cet exercice traite du chiffrement par xor en utilisant une cha\u00eene de caract\u00e8re comme cl\u00e9.","title":"Activit\u00e9 1 : Chiffrement sym\u00e9trique"},{"location":"backup/cryptographie/#activite-2-chiffrement-asymetrique","text":"Dans un chiffrement asym\u00e9trique , la cl\u00e9 de chiffrement est publique et donc n'importe qui peut chiffrer un message. La cl\u00e9 de d\u00e9chiffrement est par contre priv\u00e9e (et seul celui qui la poss\u00e8de peut d\u00e9chiffrer). Le principe est donc qu'on ne peut pas (ou pas \"facilement\" ) d\u00e9duire de la cl\u00e9 de chiffrement (publique), la cl\u00e9 de d\u00e9chiffrement (secr\u00e8te). Le principe d'un chiffrement asym\u00e9trique est illustr\u00e9 ci-dessous (cr\u00e9dit : G. Lassus): Dans cette activit\u00e9, apr\u00e8s quelques rappels math\u00e9matiques, nous allons d\u00e9tailler chacune de ses \u00e9tapes sur un exemple tr\u00e8s connu de chiffrement asym\u00e9trique : l'algorithme RSA des initiales de ses trois inventeurs (Ron R ivest, Adi S hamir et Leonard A delman). Pour plus de d\u00e9tails historique, voir par exemple ce site Attention La compr\u00e9hension de l'algorithme demande des notions d'arithm\u00e9tique qui pourront sembler ardues aux \u00e9l\u00e8ves ne faisant pas l'enseignement de sp\u00e9cialit\u00e9s math\u00e9matiques. Ces pr\u00e9requis, sont pr\u00e9sent\u00e9s en d\u00e9but d'activit\u00e9. On pourra simplement retenir pour r\u00e9sumer et fa\u00e7on imparfaite que dans le chiffrement RSA : la cl\u00e9 publique est un tr\u00e8s grand nombre \\(n\\) (plusieurs centaines de chiffres) choisi de fa\u00e7on \u00e0 \u00eatre le produit de deux nombres premiers, la cl\u00e9 priv\u00e9e est le couple \\((p,q)\\) de nombres premiers tels que \\(n=p\\times q\\) , \u00e9tant donn\u00e9e la taille de \\(n\\) , il est difficile (impossible avec la puissance de calcul actuelle des ordinateurs) de retrouver \\(p\\) et \\(q\\) \u00e0 partir de \\(n\\) . Et donc la connaissance de la cl\u00e9 publique ne permet pas d'en d\u00e9duire celle de la cl\u00e9 priv\u00e9e. Arithm\u00e9tique modulaire a. Il est 22h, quelle heure sera-t-il 8h plus tard ? b. Si vous avez r\u00e9pondu 6h (et pas 30h \u00e0 la question pr\u00e9c\u00e9dente), vous venez de faire de l' arithm\u00e9tique modulaire , en effet vous n'avez conserv\u00e9 que le reste dans la division euclidienne par 24: \\(30 = 1 \\times 24 + 6\\) on \u00e9crira que \\(30 \\equiv 6 [24]\\) et on lira \\(30\\) est \u00e9gal \u00e0 \\(6\\) modulo \\(24\\) (ce qui peut se traduire par leur diff\u00e9rence est un multiple de 24, c'est donc la m\u00eame heure sur des jours diff\u00e9rents). c. V\u00e9rifier (en faisant la division euclidienne) que \\(42 \\equiv 18 [24]\\) d. V\u00e9rifier (en faisant la division euclidienne) que \\(103 \\equiv 7 [24]\\) e. Compl\u00e9ter : \\(13 \\equiv \\dots [5]\\) f. Compl\u00e9ter : \\(42 \\equiv \\dots [7]\\) Nombres premiers et nombres premiers entre eux. a. Rappeler la d\u00e9finition d'un nombre premier. Les nombres suivants sont-ils premiers (justifier) : 12, 21, 29, 1 ? b. On dit que deux nombres sont premiers entre eux lorsque leur pgcd vaut 1, par exemple 12 et 5 sont premiers entre eux mais pas 33 et 27 (leur pgcd vaut 3). Donner la liste des nombres premiers avec 12 et inf\u00e9rieurs \u00e0 12. Algorithme RSA - \u00e9tape 1 : cr\u00e9ation de la cl\u00e9 publique et de la cl\u00e9 priv\u00e9e Choisir deux nombres premiers \\(p\\) et \\(q\\) tr\u00e8s grands . Pour disposer d'un exemple simple nous prendrons \\(p=3\\) et \\(q=11\\) Calculer le produit \\(n = p\\times q\\) . Dans notre exemple \\(n = 3 \\times 11 = 33\\) . Choisir un nombre premier \\(e\\) premier avec \\(\\phi(n) = (p-1)(q-1)\\) . Dans notre exemple, on choisit \\(e=3\\) qui est bien premier avec \\(20\\) (comme \\(p=3\\) et \\(q=11\\) , \\(\\phi(33)=(p-1)(q-1)=20\\) ). La cl\u00e9 publique d'Alice est le couple \\((e,n)\\) et donc dans notre exemple le couple \\((3,33)\\) . Rappelons que dans la r\u00e9alit\u00e9 \\(n\\) est un nombre tr\u00e8s grand. Pour d\u00e9terminer la cl\u00e9 priv\u00e9, il faut trouver un nombre \\(d\\) tel que \\(ed \\equiv 1 [\\phi(n)]\\) . Dans notre exemple il s'agit donc de trouver \\(d\\) tel que \\(3d \\equiv 1 [20]\\) , le nombre 7 convient. Note On dit que \\(d\\) est un inverse de \\(e\\) modulo \\(\\phi(n)\\) (leur produit vaut 1 modulo \\(\\phi(n)\\) ). Dans la pratique un algorithme permet la d\u00e9termination de \\(d\\) . Le couple \\((d,n)\\) est la cl\u00e9 priv\u00e9e qui permet le d\u00e9chiffrage. Dans notre exemple c'est donc \\((7,33)\\) . Soit le couple de nombre premiers \\((p,q)\\) avec \\(p=5\\) et \\(q=13\\) : a. Calculer \\(n\\) et \\(\\phi(n)\\) . b. Justifier que \\((9,65)\\) ne peut pas \u00eatre une cl\u00e9 publique. c. V\u00e9rifier que \\((11,65)\\) est une cl\u00e9 publique. d. V\u00e9rifier que 35 est un inverse de 11 modulo 48. e. En d\u00e9duire la cl\u00e9 priv\u00e9e. Important En r\u00e9sum\u00e9, la cl\u00e9 publique est \\((e,n)\\) et la cl\u00e9 publique est \\((d,n)\\) . Puisque \\(d\\) et \\(e\\) sont inverses l'un de l'autre modulo \\(\\phi(n)=(p-1)(q-1)\\) on peut penser qu'il est simple de retrouver l'un \u00e0 partir de l'autre, dans la pratique cela est extr\u00eamement difficile car on ne conna\u00eet pas \\(\\phi(n)\\) . En effet, \\(n\\) \u00e9tant tr\u00e8s grand, il est difficile de calculer \\(p\\) et \\(q\\) , car il n'existe pas d'algorithme efficace permettant de factoriser des nombres poss\u00e9dant plusieurs centaines de chiffres. Algorithme RSA - \u00e9tape 2 : chiffrer un message Pour envoyer un nombre secret \\(S\\) en le chiffrant avec l'algorithme RSA de cl\u00e9 publique \\((e,n)\\) , il faut calculer \\(S^e [n]\\) . Rappelons que dans notre exemple la cl\u00e9 publique pour chiffrer est \\((3,33)\\) . Par exemple, pour envoyer le nombre secret 4, on calcule \\(4 ^ 3 [33] = 31\\) et on envoie 31. a. Chiffrer le nombre secret 10 avec la cl\u00e9 \\((3,33)\\) b. Chiffrer le nombre secret 17 avec la cl\u00e9 \\((11,65)\\) Algorithme RSA - \u00e9tape 3 : d\u00e9chiffrer un message Pour d\u00e9chiffrer un message \\(M\\) de cl\u00e9 priv\u00e9e \\((d,n)\\) il suffit de l'\u00e9lever \u00e0 la puissance \\(d\\) et de calculer le reste dans la division euclidienne par \\(n\\) . Rappelons que dans notre exemple exemple \\(d=7\\) et \\(n=33\\) . Si on re\u00e7oit le le message \\(M = 31\\) on doit calculer : \\(31^7 = 27512614111\\) puis chercher le reste modulo 33 : \\(27512614111 [33] = 4\\) , on retrouve bien le message de d\u00e9part qui \u00e9tait 4. Note Cela repose sur le r\u00e9sultat suivant : si \\(e\\) et \\(d\\) sont inverses modulo \\(\\phi(n)\\) alors \\(M^{ed} \\equiv M [n]\\) . Pour une d\u00e9monstration, on pourra consulter cette page a. D\u00e9chiffrer le nombre secret 18 avec la cl\u00e9 \\((7,33)\\) . b. M\u00eame question pour le nombre secret 90 avec la cl\u00e9 \\((11,65)\\) . Vous pouvez utiliser cet outil en ligne afin de v\u00e9rifier vos r\u00e9ponse \u00e0 cette activit\u00e9. Important Le protocole https qui permet de s\u00e9curiser les transmissions sur le Web utilise \u00e0 la fois : un chiffrement asym\u00e9trique pour la g\u00e9n\u00e9ration de cl\u00e9s de chiffrement identiques chez le serveur et le client un chiffrement sym\u00e9trique (aujourd'hui AES ) pour l'\u00e9change des donn\u00e9es. Voir cette page pour plus de d\u00e9tails.","title":"Activit\u00e9 2 : Chiffrement asym\u00e9trique&thinsp; "},{"location":"backup/cryptographie/#cours","text":"Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices.","title":"Cours"},{"location":"backup/cryptographie/#exercices","text":"","title":"Exercices"},{"location":"backup/cryptographie/#exercice-1-vocabulaire","text":"Expliquer en quelques phrases la diff\u00e9rence entre un chiffrement sym\u00e9trique et un chiffrement asym\u00e9trique . Donner un exemple de chiffrement sym\u00e9trique. Donner un exemple de chiffrement asym\u00e9trique.","title":"Exercice 1 : Vocabulaire"},{"location":"backup/cryptographie/#exercice-2-chiffre-de-cesar","text":"Rappeler le principe du chiffrement de C\u00e9sar Ecrire en Python, une fonction chiffre_cesar qui prend en argument un texte et une cl\u00e9 de chiffrement c et renvoie le texte chiffr\u00e9 par la m\u00e9thode de C\u00e9sar avec un d\u00e9calage de c emplacements. Par souci de simplicit\u00e9, on supposera que le texte n'est compos\u00e9 que des 26 lettres majuscules de l'alphabet et on ne chiffre ni les espaces ni les symboles de ponctuation. Aide On rappelle qu'en python : la fonction ord renvoie le code ascii du caract\u00e8re donn\u00e9 en param\u00e8tre. Par exemple, ord(\"N\") renvoie 78. la fonction chr renvoie le caract\u00e8re dont le code ascii est donn\u00e9 en param\u00e8tre. Par exemple, chr(100) renvoie d . n%26 donne le reste dans la division euclidienne de n par 26. Le chiffre de C\u00e9sar peut-\u00eatre cass\u00e9 par analyse fr\u00e9quentielle , comme expliqu\u00e9 ci-dessous : En utilisant cette technique, \u00e9crire un programme Python permettant de d\u00e9chiffrer le message suivant : PFOJC JCIG OJSN FSIGGW O RSQCRSF QS ASGGOUS Q SGH HFSG PWSB AOWG WZ FSGHS SBQCFS PSOIQCID O TOWFS D\u00e9coder de nouveau le message pr\u00e9c\u00e9dent en utilisant la biblioth\u00e8que sympy","title":"Exercice 2 : Chiffre de C\u00e9sar"},{"location":"backup/cryptographie/#exercice-3-factorisation","text":"On rappelle que la fiabilit\u00e9 de l'algorithme rsa est li\u00e9 \u00e0 la difficult\u00e9 de trouver en connaissant un nombre \\(n\\) les deux nombres premiers \\(p\\) et \\(q\\) tels que \\(n = pq\\) . Cet exercice a pour but de le v\u00e9rifier. Le module Crypto de python permet de g\u00e9n\u00e9rer des nombres premiers de n'importe quelle taille : from Crypto.Util import number from Crypto.Random import get_random_bytes # Taille des nombres (en bits) n_length = 20 # G\u00e9n\u00e9ration de deux nombres premiers p et q de cette taille p = number . getPrime ( n_length , randfunc = get_random_bytes ) q = number . getPrime ( n_length , randfunc = get_random_bytes ) Recopier ce programme, le tester et le compl\u00e9ter afin de calculer \\(n = pq\\) . Ecrire une fonction factorise qui prend en argument un entier n et renvoie deux entiers p et q tels que n = p*q . Aide On pourra utiliser l'algorithme tr\u00e8s simple qui consiste \u00e0 essayer toutes les divisions possibles jusqu'\u00e0 en trouver une dont le reste est 0. Tester votre fonction factorise et v\u00e9rifier qu'elle permet de retrouve p et q \u00e0 partir de n Modifier la valeur du param\u00e8tre n_length et mesurer les temps d'execution. Attention Ne pas choisir une valeur trop \u00e9lev\u00e9 pour n_length , prendre par exemple 21 puis 22, 23, ... et observer l'augmentation correspondante du temps de calcul. Pr\u00e9voir le temps d'execution pour n_length = 100 La majorit\u00e9 des sites Web actuel utilise actuellement des cl\u00e9s de longueur 1024. Quel serait le temps d'ex\u00e9cution pr\u00e9visible de votre programme pour casser une de ces cl\u00e9s ? Lien La vid\u00e9o ci-dessous revient sur l'algorithme RSA et donne les longueurs des plus longues cl\u00e9s cass\u00e9es \u00e0 ce jour.","title":"Exercice 3 : Factorisation"},{"location":"backup/cryptographie/#exercice-4-autorite-de-certification","text":"Comme vu en cours, une autorit\u00e9 de certification assure de l'identit\u00e9 d'un site afin d'\u00e9viter des attaques du type homme du milieu , sans laquelle on pourrait se connecter \u00e0 un site tiers en pensant qu'il s'agit par exemple de sa banque en ligne. Les requ\u00eates https peuvent \u00eatre observ\u00e9es \u00e0 partir de la console de firefox. Pour cela : Lancer Firefox et ouvrir la console (menu outils suppl\u00e9mentaires > console du navigateur ou avec le raccourci clavier Ctrl + Shift + J ) et s\u00e9lectionner l'onglet Requ\u00eates (\u00e0 droite) Dans la barre d'adresse du navigateur taper wikipedia.fr , les requ\u00eates d\u00e9filent dans la console, cliquer sur la requ\u00eate : GET https://www.wikipedia.fr puis l'onglet s\u00e9curit\u00e9 \u00e0 droite. Retrouver les informations suivantes : La version du protocole TLS utilis\u00e9 Le nom de l'autorit\u00e9 de certification La p\u00e9riode de validit\u00e9 du cerfificat d'identit\u00e9","title":"Exercice 4 : Autorit\u00e9 de certification"},{"location":"backup/cryptographie/#exercice-5-implementation-de-lalgorithme-rsa","text":"On rappelle que l'algorithme rsa impose de trouver l'inverse d'un nombre \\(d\\) modulo \\(\\phi(n)\\) . Cela peut \u00eatre fait en utilisant l' algorithme d'Euclide \u00e9tendu Proposer une impl\u00e9mentation en Python de cet algorithme. Proposer une impl\u00e9mentation en Python de l'algorithme de chiffrement rsa","title":"Exercice 5 : Impl\u00e9mentation de l'algorithme RSA"},{"location":"backup/diviser/","text":"C4 Diviser pour r\u00e9gner Activit\u00e9s Activit\u00e9 1 : Recherche dans une liste \u2009 :fontawesome-solid-history:{title='Retour sur des notions ant\u00e9rieures'} Aide Cette activit\u00e9 revient sur deux algorithmes de recherche d'un \u00e9l\u00e9ment dans une liste d\u00e9j\u00e0 rencontr\u00e9s en classe de premi\u00e8re et sur la comparaison de leurs efficacit\u00e9s. En cas de difficult\u00e9s, on pourra donc revenir sur les activit\u00e9s correspondantes : recherche par parcours simple recherche dichotomique comparaison des temps d'ex\u00e9cution Ecrire une fonction recherche(x,l) qui en effectuant un parcours simple de la liste, renvoie True ou False selon que l'\u00e9l\u00e9ment x se trouve ou non dans la liste l . On suppose maintenant que la liste est tri\u00e9e , l'algorithme de recherche par dichotomie vue en classe de premi\u00e8re consiste alors \u00e0 partager la liste en deux listes de longueurs \u00e9gales (\u00e0 une unit\u00e9 pr\u00e8s) comparer l'\u00e9l\u00e9ment recherch\u00e9 avec celui situ\u00e9 au milieu de la liste en d\u00e9duire dans quelle moiti\u00e9 poursuivre la recherche On s'arr\u00eate lorsque la zone de recherche ne contient plus qu'un \u00e9l\u00e9ment. Faire fonctionner \"\u00e0 la main\" cet algorithme pour rechercher 6 dans [1,3,5,7,11,13] . Programmer cet algorithme. Que dire de l'efficacit\u00e9 de ces deux algorithmes ? Activit\u00e9 2 : Tri fusion Algorithmes de tri vus en premi\u00e8re Rappeler rapidement le principe du tri par s\u00e9lection vu en classe de premi\u00e8re. Donner les \u00e9tapes de cet algorithme pour trier la liste [10,6,3,9,7,5] Rappeler rapidement le principe du tri par insertion vu en classe de premi\u00e8re. Donner les \u00e9tapes de cet algorithme pour trier la liste [10,6,3,9,7,5] Quelle est la complexit\u00e9 de ces deux algorithmes ? L'algorithme du tri fusion consiste \u00e0 : partager la liste en deux moiti\u00e9s (\u00e0 une unit\u00e9 pr\u00e8s), trier chacune des deux moiti\u00e9s, les fusionner pour obtenir la liste tri\u00e9e. On a sch\u00e9matis\u00e9 le tri de la liste [10,6,3,9,7,5] suivant ce principe ci-dessous : graph TD subgraph Partager en deux S[\"[10,6,3,9,7,5]\"] --> S1[\"[10,6,3]\"] S --> S2[\"[9,7,5]\"] end subgraph Fusionner S1 -.Trier.-> T1[\"[3,6,10]\"] S2 -.Trier.-> T2[\"[5,7,9]\"] T1 --> T[\"[3,5,6,7,9,10]\"] T2 --> T end Le tri des deux moiti\u00e9s est lui-m\u00eame effectu\u00e9 par tri fusion, par cons\u00e9quent que peut-on dire de cet algorithme ? On a sch\u00e9matis\u00e9 ci-dessous le fonctionnement complet de l'algorithme pour la liste [10,6,3,9,7,5] , recopier et compl\u00e9ter les cases manquantes. graph TD subgraph Partager en deux S[\"[10,6,3,9,7,5]\"] --> S1[\"[10,6,3]\"] S --> S2[\"[9,7,5]\"] S1 --> S11[\"[10]\"] S1 --> S12[\"[6,3]\"] S2 --> S21[\"[9]\"] S2 --> S22[\"[...,...]\"] S12 --> S121[\"[6]\"] S12 --> S122[\"[3]\"] S22 --> S221[\"[...]\"] S22 --> S222[\"[...]\"] end subgraph Fusionner S121 --> T21[\"[...,...]\"] S122 --> T21 S221 --> T22[\"[5,7]\"] S222 --> T22[\"[5,7]\"] S11 --> T1[\"[...,...,...]\"] T21 --> T1 S21 --> T2[\"[...,...,...]\"] T22 --> T2 T1 --> T[\"[3,5,6,7,9,10]\"] T2 --> T end Impl\u00e9mentation en Python Programmer une fonction partage(l) qui prend en argument une liste l et renvoie les deux moiti\u00e9s l1 et l2 (\u00e0 une unit\u00e9 pr\u00e8s) de l . Par exemple partage([3,7,5]) renvoie [3] et [7,5] . Aide Penser \u00e0 utiliser les constructions de listes par compr\u00e9hension Les slices de Python sont un moyen efficace d'effectuer le partage, mais leur connaissance n'est pas un attendu du programme de terminale. Les \u00e9l\u00e8ves int\u00e9ress\u00e9s pourront leur propre recherche sur le Web . On donne ci-dessous une fonction fusion(l1,l2) qui prend en argument deux listes d\u00e9j\u00e0 tri\u00e9es l1 et l2 et renvoie la liste tri\u00e9e l fusion de l1 et l2 : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 def fusion ( l1 , l2 ): ind1 = 0 ind2 = 0 l = [] while ind1 < len ( l1 ) and ind2 < len ( l2 ): if l1 [ ind1 ] < l2 [ ind2 ]: l . append ( l1 [ ind1 ]) ind1 += 1 else : l . append ( l2 [ ind2 ]) ind2 += 1 if ind1 == len ( l1 ): for k in range ( ind2 , len ( l2 )): l . append ( l2 [ k ]) else : for k in range ( ind1 , len ( l1 )): l . append ( l1 [ k ]) return l Recopier et tester cette fonction. Quel est le r\u00f4le des variables ind1 et ind2 ? Ajouter un commentaire d\u00e9crivant le r\u00f4le de la boucle while . Ajouter un commentaire d\u00e9crivant le r\u00f4le des lignes 12 \u00e0 17. En utilisant les deux fonctions pr\u00e9c\u00e9dentes, \u00e9crire une fonction tri_fusion(l) qui impl\u00e9mente l'algorithme du tri fusion en Python. Important On montre que l'algorithme du tri fusion a une complexit\u00e9 en \\(O(n\\log(n))\\) , c'est donc un algorithme plus efficace que le tri par insertion ou le tri par s\u00e9lection qui ont tous les deux une complexit\u00e9 en \\(O(n^2)\\) . Cours Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices. Exercices Exercice 1 : Maximum des \u00e9l\u00e9ments d'une liste On propose l'algorithme suivant pour la recherche du maximum des \u00e9l\u00e9ments d'une liste : Partager la liste en deux moiti\u00e9s l1 et l2 Chercher les maximums m1 de l1 et m2 de l2 En d\u00e9duire le maximum m de l . Expliquer pourquoi cet algorithme fait partie de la m\u00e9thode diviser pour r\u00e9gner . Cet algorithme est-il r\u00e9cursif ? Justifier. Ecrire une impl\u00e9mentation en Python de cet algorithme. Exercice 2 : Inversions dans une liste \u2009 Cet exercice est extrait d'un sujet de bac de la session 2021 Dans un tableau Python d'entiers tab , on dit que le couple d'indice (i,j) forme une inversion lorsque i<j et tab[i]>tab[j] . On donne ci-dessous quelques exemples. Dans le tableau [1,5,3,7] le couple d'indices (1,2) forme une inversion car 5>3 . Par contre, le couple (1,3) ne forme pas d'inversion car 5<7 . Il n'y a qu'une inversion dans ce tableau Il y a trois inversions sans le tableau [1,6,2,7,3] , \u00e0 savoir les couples d'indices (1,2) , (1,4) et (3,4) . On peut compter six inversions dans le tableau [7,6,5,3] : les couples d'indices (0,1), (0,2), (0,3), (1,2), (1,3) et (2,3) . On se propose dans cet exercice de d\u00e9terminer le nombre d'inversions dans un tableau quelconque Questions pr\u00e9liminaires Expliquer pourquoi le couple (1,3) est une inversion dans le tableau [4,8,3,7] . Justifier que le couple (2,3) n'en est pas une. Partie A : M\u00e9thode it\u00e9rative Le but de cette partie est d'ecrire une fonction it\u00e9rative nombre_inversion qui renvoie le nombre d'inversions dans un tableau. Pour cela, on commence par \u00e9crire une fonction fonction1 qui sera ensuite utilis\u00e9 pour \u00e9crire la fonction nombre_inversion . On donne la fonction suivante. def fonction1 ( tab , i ): nb_elem = len ( tab ) cpt = 0 for j in range ( i + 1 , nb_elem ): if tab [ j ] < tab [ i ]: cpt += 1 return cpt Indiquer ce que renvoie la fonction1(tab,i) dans les cas suivants : Cas n\u00b01 : tab=[1,5,3,7] et i=0 Cas n\u00b02 : tab=[1,5,3,7] et i=1 Cas n\u00b03 : tab=[1,5,2,6,4] et i=1 Expliquer ce que permet de d\u00e9terminer cette fonction. En utilisant la fonction pr\u00e9c\u00e9dente, \u00e9crire une fonction nombre_inversion(tab) qui prend en argument un tableau et renvoie le nombre d\u2019inversions dans ce tableau. On donne ci-dessous les r\u00e9sultats attendus pour certains appels. >>> nombre_inversions ([ 1 , 5 , 7 ]) 0 >>> nombre_inversions ([ 1 , 6 , 7 , 2 , 3 ]) 3 >>> nombre_inversions ([ 7 , 6 , 5 , 3 ]) 6 Quelle est l\u2019ordre de grandeur de la complexit\u00e9 en temps de l'algorithme obtenu ? Aucune justification n'est attendue. Partie B : M\u00e9thode r\u00e9cursive Le but de cette partie est de concevoir une version r\u00e9cursive de la fonction nombre_inverion . On d\u00e9finit pour cela des fonctions auxiliaires. Donner le nom d'un algorithme de tri ayant une complexit\u00e9 meilleure que quadratique. Dans la suite de cet exercice, on suppose qu\u2019on dispose d'une fonction tri(tab) qui prend en argument un tableau et renvoie un tableau contenant les m\u00eames \u00e9l\u00e9ments rang\u00e9s dans l'ordre croissant. \u00c9crire une fonction moitie_gauche(tab) qui prend en argument un tableau tab et renvoie un nouveau tableau contenant la moiti\u00e9 gauche de tab. Si le nombre d'\u00e9l\u00e9ments de tab est impair, l'\u00e9l\u00e9ment du centre se trouve dans cette partie gauche. On donne ci-dessous les r\u00e9sultats attendus pour certains appels. >>> moitie_gauche ([]) [] >>> moitie_gauche ([ 4 , 8 , 3 ]) [ 4 , 8 ] >>> moitie_gauche ([ 4 , 8 , 3 , 7 ]) [ 4 , 8 ] Dans la suite, on suppose qu\u2019on dispose de la fonction moitie_droite(tab) qui renvoie la moiti\u00e9 droite sans l\u2019\u00e9l\u00e9ment du milieu. On suppose qu\u2019une fonction nb_inv_tab(tab1, tab2) a \u00e9t\u00e9 \u00e9crite. Cette fonction renvoie le nombre d\u2019inversions du tableau obtenu en mettant bout \u00e0 bout les tableaux tab1 et tab2 , \u00e0 condition que tab1 et tab2 soient tri\u00e9s dans l\u2019ordre croissant. On donne ci-dessous deux exemples d\u2019appel de cette fonction : >>> nb_inv_tab ([ 3 , 7 , 9 ],[ 2 , 10 ]) 3 >>> nb_inv_tab ([ 7 , 9 , 13 ],[ 7 , 10 , 14 ]) 3 En utilisant la fonction nb_inv_tab et les questions pr\u00e9c\u00e9dentes, \u00e9crire une fonction r\u00e9cursive nb_inversions_rec(tab) qui permet de calculer le nombre d'inversions dans un tableau. Cette fonction renverra le m\u00eame nombre que nombre_inversions(tab) de la partie A. On proc\u00e9dera de la fa\u00e7on suivante : S\u00e9parer le tableau en deux tableaux de tailles \u00e9gales (\u00e0 une unit\u00e9 pr\u00e8s). Appeler r\u00e9cursivement la fonction nb_inversions_rec pour compter le nombre d\u2019inversions dans chacun des deux tableaux. Trier les deux tableaux (on rappelle qu'une fonction de tri est d\u00e9j\u00e0 d\u00e9finie). Ajouter au nombre d'inversions pr\u00e9c\u00e9demment compt\u00e9es le nombre renvoy\u00e9 par la fonction nb_inv_tab avec pour arguments les deux tableaux tri\u00e9s. Exercice 3 : Quart de tour d'une image Pour faire tourner une image carr\u00e9 de c\u00f4t\u00e9 \\(2^n\\) pixels d'un quart de tour \u00e0 gauche, on propose la m\u00e9thode suivante : Diviser l'image en quatre quarts Q1,Q2,Q3,Q4 Faire tourner chacun des quarts d'un quart de tour \u00e0 gauche Permuter chaque quart afin de le placer correctement Expliquer pourquoi cette m\u00e9thode est une illustration de la technique diviser pour r\u00e9gner. C'est algorithme est-il du type it\u00e9ratif ou r\u00e9cursif ? Justifier. D\u00e9coupage de l'image en quatres quarts \u00e0 l'aide du module pil de manipulation d'images On a repr\u00e9sent\u00e9 une image carr\u00e9 de \\(n\\) pixels de c\u00f4t\u00e9 avec le syst\u00e8me de coordonn\u00e9es d'une image dans le module pil . Quelles sont les coordonn\u00e9es manquantes ? La m\u00e9thode crop du module pil permet d'extraire une portion rectangulaire d'une image en donnant les coordonn\u00e9es des coins sup\u00e9rieur gauche et inf\u00e9rieur droit du rectangle. Compl\u00e9ter la fonction Python suivante qui prend en entr\u00e9e une image et retourne les quatre quarts de cette image. from PIL import Image def partage_quart ( image ): n = image . width if n > 1 : q1 = image . crop (( 0 , 0 , n // 2 , n // 2 )) q2 = image . crop (( ... , ... , ... , ... )) q3 = image . crop (( ... , ... , ... , ... )) q4 = image . crop (( ... , ... , ... , ... )) return q1 , q2 , q3 , q4 Tester cette fonction (on pourra utiliser cette image carr\u00e9 ) Aide La cr\u00e9ation d'une image dans pil \u00e0 partir d'un fichier s'effectue \u00e0 l'aide de : img_test = Image . open ( \"mettre ici le nom du fichier\" ) La visualisation d'une image s'effectue \u00e0 l'aide de : img_test . show () Ajouter une instruction assert permettant de v\u00e9rifier que l'image est carr\u00e9 (c'est \u00e0 dire image.width==image.height ) Ajouter une instruction assert permettant de v\u00e9rifier que n est pair. Compl\u00e9ter puis tester la fonction python qui impl\u00e9mente l'algorithme d\u00e9crit \u00e0 la question 1. def quart_tour ( image ): n = image . width # Partage de l'image en quatre quarts if n > 1 : q1 , q2 , q3 , q4 = partage_quart ( image ) # Rotation de chacun des quarts rq1 = quart_tour ( q1 ) rq2 = quart_tour ( q2 ) rq3 = quart_tour ( q3 ) rq4 = quart_tour ( q4 ) # Reconstruction de l'image resultat = Image . new ( 'RGB' , image . size ) resultat . paste ( rq2 ,( 0 , 0 )) resultat . paste ( ... ,( n // 2 , 0 )) resultat . paste ( rq1 ,( ... , ... )) resultat . paste ( ... ,( ... , ... )) return resultat else : return image Exercice 4 : Algorithme de Karatsuba \u2009 \u2009 Principe de l'algorithme : On a pos\u00e9 ci-dessous la multiplication de deux nombres \u00e0 deux chiffres : \\(42 \\times 37\\) , combien de multiplications de nombres \u00e0 un chiffre (illustr\u00e9s par les fl\u00e8ches) sont n\u00e9cessaires \u00e0 ce calcul ? Compl\u00e9ter le calcul en ligne correspond \u00e0 l'op\u00e9ration ci-dessus : \\((40+2) \\times (30+7) = (...\\times...) + (...\\times...) + (...\\times...) + (...\\times...)\\) Si on multiplie deux nombres \u00e0 \\(n\\) chiffres de la m\u00eame fa\u00e7on, combien de multiplications de nombres \u00e0 un chiffre sont n\u00e9cessaires ? En base 10, le produit \\(P\\) de deux nombres \u00e0 \\(2n\\) chiffres peut s'\u00e9crire : \\(P=(a\\times 10^n + b)(c\\times 10^n + d) = ac\\times 10^{2n} + (ad+bc)\\times10^n + bd\\) V\u00e9rifier l'\u00e9galit\u00e9 : \\(P= ac\\times 10^{2n} + \\left(ac+bd-(a-b)(c-d)\\right)\\times10^n + bd\\) Combien de multiplications sont n\u00e9cessaires au calcul de \\(P\\) sous cette forme ? Calculer le produit \\(42 \\times 37\\) sous cette forme. Ecrire en Python une impl\u00e9mentation de l'algorithme de Karabutsa. Aide On pourra utiliser la fonction nb_chiffres(n) ci-dessous qui renvoie le nombre de chiffres en base 10 de l'entier positif n from math import floor , log10 def nb_chiffres ( n ): assert type ( n ) = int , \"L'argument doit \u00eatre entier\" assert n >= 0 , \"L'argument doit \u00eatre positif\" if n > 0 : return floor ( log10 ( n )) + 1 else : return 1 Pour aller plus loin Consulter la page wikip\u00e9dia sur l'algorithme de Karatsuba Exercice 5 : Quicksort \u2009 Consulter la page wikip\u00e9dia sur l'algorithme du tri rapide Expliquer rapidement le fonctionnement de cet algorithme de tri. Justifier qu'il utilise la m\u00e9thode diviser pour r\u00e9gner. Donner un exemple du fonctionnement de cet algorithme sur une liste de petite taille. Proposer une impl\u00e9mentation en python de cet algorithme.","title":"Diviser"},{"location":"backup/diviser/#c4-diviser-pour-regner","text":"","title":"C4 Diviser pour r\u00e9gner "},{"location":"backup/diviser/#activites","text":"","title":"Activit\u00e9s"},{"location":"backup/diviser/#activite-1-recherche-dans-une-liste-fontawesome-solid-historytitleretour-sur-des-notions-anterieures","text":"Aide Cette activit\u00e9 revient sur deux algorithmes de recherche d'un \u00e9l\u00e9ment dans une liste d\u00e9j\u00e0 rencontr\u00e9s en classe de premi\u00e8re et sur la comparaison de leurs efficacit\u00e9s. En cas de difficult\u00e9s, on pourra donc revenir sur les activit\u00e9s correspondantes : recherche par parcours simple recherche dichotomique comparaison des temps d'ex\u00e9cution Ecrire une fonction recherche(x,l) qui en effectuant un parcours simple de la liste, renvoie True ou False selon que l'\u00e9l\u00e9ment x se trouve ou non dans la liste l . On suppose maintenant que la liste est tri\u00e9e , l'algorithme de recherche par dichotomie vue en classe de premi\u00e8re consiste alors \u00e0 partager la liste en deux listes de longueurs \u00e9gales (\u00e0 une unit\u00e9 pr\u00e8s) comparer l'\u00e9l\u00e9ment recherch\u00e9 avec celui situ\u00e9 au milieu de la liste en d\u00e9duire dans quelle moiti\u00e9 poursuivre la recherche On s'arr\u00eate lorsque la zone de recherche ne contient plus qu'un \u00e9l\u00e9ment. Faire fonctionner \"\u00e0 la main\" cet algorithme pour rechercher 6 dans [1,3,5,7,11,13] . Programmer cet algorithme. Que dire de l'efficacit\u00e9 de ces deux algorithmes ?","title":"Activit\u00e9 1 : Recherche dans une liste&thinsp; :fontawesome-solid-history:{title='Retour sur des notions ant\u00e9rieures'}"},{"location":"backup/diviser/#activite-2-tri-fusion","text":"Algorithmes de tri vus en premi\u00e8re Rappeler rapidement le principe du tri par s\u00e9lection vu en classe de premi\u00e8re. Donner les \u00e9tapes de cet algorithme pour trier la liste [10,6,3,9,7,5] Rappeler rapidement le principe du tri par insertion vu en classe de premi\u00e8re. Donner les \u00e9tapes de cet algorithme pour trier la liste [10,6,3,9,7,5] Quelle est la complexit\u00e9 de ces deux algorithmes ? L'algorithme du tri fusion consiste \u00e0 : partager la liste en deux moiti\u00e9s (\u00e0 une unit\u00e9 pr\u00e8s), trier chacune des deux moiti\u00e9s, les fusionner pour obtenir la liste tri\u00e9e. On a sch\u00e9matis\u00e9 le tri de la liste [10,6,3,9,7,5] suivant ce principe ci-dessous : graph TD subgraph Partager en deux S[\"[10,6,3,9,7,5]\"] --> S1[\"[10,6,3]\"] S --> S2[\"[9,7,5]\"] end subgraph Fusionner S1 -.Trier.-> T1[\"[3,6,10]\"] S2 -.Trier.-> T2[\"[5,7,9]\"] T1 --> T[\"[3,5,6,7,9,10]\"] T2 --> T end Le tri des deux moiti\u00e9s est lui-m\u00eame effectu\u00e9 par tri fusion, par cons\u00e9quent que peut-on dire de cet algorithme ? On a sch\u00e9matis\u00e9 ci-dessous le fonctionnement complet de l'algorithme pour la liste [10,6,3,9,7,5] , recopier et compl\u00e9ter les cases manquantes. graph TD subgraph Partager en deux S[\"[10,6,3,9,7,5]\"] --> S1[\"[10,6,3]\"] S --> S2[\"[9,7,5]\"] S1 --> S11[\"[10]\"] S1 --> S12[\"[6,3]\"] S2 --> S21[\"[9]\"] S2 --> S22[\"[...,...]\"] S12 --> S121[\"[6]\"] S12 --> S122[\"[3]\"] S22 --> S221[\"[...]\"] S22 --> S222[\"[...]\"] end subgraph Fusionner S121 --> T21[\"[...,...]\"] S122 --> T21 S221 --> T22[\"[5,7]\"] S222 --> T22[\"[5,7]\"] S11 --> T1[\"[...,...,...]\"] T21 --> T1 S21 --> T2[\"[...,...,...]\"] T22 --> T2 T1 --> T[\"[3,5,6,7,9,10]\"] T2 --> T end Impl\u00e9mentation en Python Programmer une fonction partage(l) qui prend en argument une liste l et renvoie les deux moiti\u00e9s l1 et l2 (\u00e0 une unit\u00e9 pr\u00e8s) de l . Par exemple partage([3,7,5]) renvoie [3] et [7,5] . Aide Penser \u00e0 utiliser les constructions de listes par compr\u00e9hension Les slices de Python sont un moyen efficace d'effectuer le partage, mais leur connaissance n'est pas un attendu du programme de terminale. Les \u00e9l\u00e8ves int\u00e9ress\u00e9s pourront leur propre recherche sur le Web . On donne ci-dessous une fonction fusion(l1,l2) qui prend en argument deux listes d\u00e9j\u00e0 tri\u00e9es l1 et l2 et renvoie la liste tri\u00e9e l fusion de l1 et l2 : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 def fusion ( l1 , l2 ): ind1 = 0 ind2 = 0 l = [] while ind1 < len ( l1 ) and ind2 < len ( l2 ): if l1 [ ind1 ] < l2 [ ind2 ]: l . append ( l1 [ ind1 ]) ind1 += 1 else : l . append ( l2 [ ind2 ]) ind2 += 1 if ind1 == len ( l1 ): for k in range ( ind2 , len ( l2 )): l . append ( l2 [ k ]) else : for k in range ( ind1 , len ( l1 )): l . append ( l1 [ k ]) return l Recopier et tester cette fonction. Quel est le r\u00f4le des variables ind1 et ind2 ? Ajouter un commentaire d\u00e9crivant le r\u00f4le de la boucle while . Ajouter un commentaire d\u00e9crivant le r\u00f4le des lignes 12 \u00e0 17. En utilisant les deux fonctions pr\u00e9c\u00e9dentes, \u00e9crire une fonction tri_fusion(l) qui impl\u00e9mente l'algorithme du tri fusion en Python. Important On montre que l'algorithme du tri fusion a une complexit\u00e9 en \\(O(n\\log(n))\\) , c'est donc un algorithme plus efficace que le tri par insertion ou le tri par s\u00e9lection qui ont tous les deux une complexit\u00e9 en \\(O(n^2)\\) .","title":"Activit\u00e9 2 : Tri fusion"},{"location":"backup/diviser/#cours","text":"Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices.","title":"Cours"},{"location":"backup/diviser/#exercices","text":"","title":"Exercices"},{"location":"backup/diviser/#exercice-1-maximum-des-elements-dune-liste","text":"On propose l'algorithme suivant pour la recherche du maximum des \u00e9l\u00e9ments d'une liste : Partager la liste en deux moiti\u00e9s l1 et l2 Chercher les maximums m1 de l1 et m2 de l2 En d\u00e9duire le maximum m de l . Expliquer pourquoi cet algorithme fait partie de la m\u00e9thode diviser pour r\u00e9gner . Cet algorithme est-il r\u00e9cursif ? Justifier. Ecrire une impl\u00e9mentation en Python de cet algorithme.","title":"Exercice 1 : Maximum des \u00e9l\u00e9ments d'une liste"},{"location":"backup/diviser/#exercice-2-inversions-dans-une-liste","text":"Cet exercice est extrait d'un sujet de bac de la session 2021 Dans un tableau Python d'entiers tab , on dit que le couple d'indice (i,j) forme une inversion lorsque i<j et tab[i]>tab[j] . On donne ci-dessous quelques exemples. Dans le tableau [1,5,3,7] le couple d'indices (1,2) forme une inversion car 5>3 . Par contre, le couple (1,3) ne forme pas d'inversion car 5<7 . Il n'y a qu'une inversion dans ce tableau Il y a trois inversions sans le tableau [1,6,2,7,3] , \u00e0 savoir les couples d'indices (1,2) , (1,4) et (3,4) . On peut compter six inversions dans le tableau [7,6,5,3] : les couples d'indices (0,1), (0,2), (0,3), (1,2), (1,3) et (2,3) . On se propose dans cet exercice de d\u00e9terminer le nombre d'inversions dans un tableau quelconque","title":"Exercice 2 : Inversions dans une liste&thinsp; "},{"location":"backup/diviser/#questions-preliminaires","text":"Expliquer pourquoi le couple (1,3) est une inversion dans le tableau [4,8,3,7] . Justifier que le couple (2,3) n'en est pas une.","title":"Questions pr\u00e9liminaires"},{"location":"backup/diviser/#partie-a-methode-iterative","text":"Le but de cette partie est d'ecrire une fonction it\u00e9rative nombre_inversion qui renvoie le nombre d'inversions dans un tableau. Pour cela, on commence par \u00e9crire une fonction fonction1 qui sera ensuite utilis\u00e9 pour \u00e9crire la fonction nombre_inversion . On donne la fonction suivante. def fonction1 ( tab , i ): nb_elem = len ( tab ) cpt = 0 for j in range ( i + 1 , nb_elem ): if tab [ j ] < tab [ i ]: cpt += 1 return cpt Indiquer ce que renvoie la fonction1(tab,i) dans les cas suivants : Cas n\u00b01 : tab=[1,5,3,7] et i=0 Cas n\u00b02 : tab=[1,5,3,7] et i=1 Cas n\u00b03 : tab=[1,5,2,6,4] et i=1 Expliquer ce que permet de d\u00e9terminer cette fonction. En utilisant la fonction pr\u00e9c\u00e9dente, \u00e9crire une fonction nombre_inversion(tab) qui prend en argument un tableau et renvoie le nombre d\u2019inversions dans ce tableau. On donne ci-dessous les r\u00e9sultats attendus pour certains appels. >>> nombre_inversions ([ 1 , 5 , 7 ]) 0 >>> nombre_inversions ([ 1 , 6 , 7 , 2 , 3 ]) 3 >>> nombre_inversions ([ 7 , 6 , 5 , 3 ]) 6 Quelle est l\u2019ordre de grandeur de la complexit\u00e9 en temps de l'algorithme obtenu ? Aucune justification n'est attendue.","title":"Partie A : M\u00e9thode it\u00e9rative"},{"location":"backup/diviser/#partie-b-methode-recursive","text":"Le but de cette partie est de concevoir une version r\u00e9cursive de la fonction nombre_inverion . On d\u00e9finit pour cela des fonctions auxiliaires. Donner le nom d'un algorithme de tri ayant une complexit\u00e9 meilleure que quadratique. Dans la suite de cet exercice, on suppose qu\u2019on dispose d'une fonction tri(tab) qui prend en argument un tableau et renvoie un tableau contenant les m\u00eames \u00e9l\u00e9ments rang\u00e9s dans l'ordre croissant. \u00c9crire une fonction moitie_gauche(tab) qui prend en argument un tableau tab et renvoie un nouveau tableau contenant la moiti\u00e9 gauche de tab. Si le nombre d'\u00e9l\u00e9ments de tab est impair, l'\u00e9l\u00e9ment du centre se trouve dans cette partie gauche. On donne ci-dessous les r\u00e9sultats attendus pour certains appels. >>> moitie_gauche ([]) [] >>> moitie_gauche ([ 4 , 8 , 3 ]) [ 4 , 8 ] >>> moitie_gauche ([ 4 , 8 , 3 , 7 ]) [ 4 , 8 ] Dans la suite, on suppose qu\u2019on dispose de la fonction moitie_droite(tab) qui renvoie la moiti\u00e9 droite sans l\u2019\u00e9l\u00e9ment du milieu. On suppose qu\u2019une fonction nb_inv_tab(tab1, tab2) a \u00e9t\u00e9 \u00e9crite. Cette fonction renvoie le nombre d\u2019inversions du tableau obtenu en mettant bout \u00e0 bout les tableaux tab1 et tab2 , \u00e0 condition que tab1 et tab2 soient tri\u00e9s dans l\u2019ordre croissant. On donne ci-dessous deux exemples d\u2019appel de cette fonction : >>> nb_inv_tab ([ 3 , 7 , 9 ],[ 2 , 10 ]) 3 >>> nb_inv_tab ([ 7 , 9 , 13 ],[ 7 , 10 , 14 ]) 3 En utilisant la fonction nb_inv_tab et les questions pr\u00e9c\u00e9dentes, \u00e9crire une fonction r\u00e9cursive nb_inversions_rec(tab) qui permet de calculer le nombre d'inversions dans un tableau. Cette fonction renverra le m\u00eame nombre que nombre_inversions(tab) de la partie A. On proc\u00e9dera de la fa\u00e7on suivante : S\u00e9parer le tableau en deux tableaux de tailles \u00e9gales (\u00e0 une unit\u00e9 pr\u00e8s). Appeler r\u00e9cursivement la fonction nb_inversions_rec pour compter le nombre d\u2019inversions dans chacun des deux tableaux. Trier les deux tableaux (on rappelle qu'une fonction de tri est d\u00e9j\u00e0 d\u00e9finie). Ajouter au nombre d'inversions pr\u00e9c\u00e9demment compt\u00e9es le nombre renvoy\u00e9 par la fonction nb_inv_tab avec pour arguments les deux tableaux tri\u00e9s.","title":"Partie B : M\u00e9thode r\u00e9cursive"},{"location":"backup/diviser/#exercice-3-quart-de-tour-dune-image","text":"Pour faire tourner une image carr\u00e9 de c\u00f4t\u00e9 \\(2^n\\) pixels d'un quart de tour \u00e0 gauche, on propose la m\u00e9thode suivante : Diviser l'image en quatre quarts Q1,Q2,Q3,Q4 Faire tourner chacun des quarts d'un quart de tour \u00e0 gauche Permuter chaque quart afin de le placer correctement Expliquer pourquoi cette m\u00e9thode est une illustration de la technique diviser pour r\u00e9gner. C'est algorithme est-il du type it\u00e9ratif ou r\u00e9cursif ? Justifier. D\u00e9coupage de l'image en quatres quarts \u00e0 l'aide du module pil de manipulation d'images On a repr\u00e9sent\u00e9 une image carr\u00e9 de \\(n\\) pixels de c\u00f4t\u00e9 avec le syst\u00e8me de coordonn\u00e9es d'une image dans le module pil . Quelles sont les coordonn\u00e9es manquantes ? La m\u00e9thode crop du module pil permet d'extraire une portion rectangulaire d'une image en donnant les coordonn\u00e9es des coins sup\u00e9rieur gauche et inf\u00e9rieur droit du rectangle. Compl\u00e9ter la fonction Python suivante qui prend en entr\u00e9e une image et retourne les quatre quarts de cette image. from PIL import Image def partage_quart ( image ): n = image . width if n > 1 : q1 = image . crop (( 0 , 0 , n // 2 , n // 2 )) q2 = image . crop (( ... , ... , ... , ... )) q3 = image . crop (( ... , ... , ... , ... )) q4 = image . crop (( ... , ... , ... , ... )) return q1 , q2 , q3 , q4 Tester cette fonction (on pourra utiliser cette image carr\u00e9 ) Aide La cr\u00e9ation d'une image dans pil \u00e0 partir d'un fichier s'effectue \u00e0 l'aide de : img_test = Image . open ( \"mettre ici le nom du fichier\" ) La visualisation d'une image s'effectue \u00e0 l'aide de : img_test . show () Ajouter une instruction assert permettant de v\u00e9rifier que l'image est carr\u00e9 (c'est \u00e0 dire image.width==image.height ) Ajouter une instruction assert permettant de v\u00e9rifier que n est pair. Compl\u00e9ter puis tester la fonction python qui impl\u00e9mente l'algorithme d\u00e9crit \u00e0 la question 1. def quart_tour ( image ): n = image . width # Partage de l'image en quatre quarts if n > 1 : q1 , q2 , q3 , q4 = partage_quart ( image ) # Rotation de chacun des quarts rq1 = quart_tour ( q1 ) rq2 = quart_tour ( q2 ) rq3 = quart_tour ( q3 ) rq4 = quart_tour ( q4 ) # Reconstruction de l'image resultat = Image . new ( 'RGB' , image . size ) resultat . paste ( rq2 ,( 0 , 0 )) resultat . paste ( ... ,( n // 2 , 0 )) resultat . paste ( rq1 ,( ... , ... )) resultat . paste ( ... ,( ... , ... )) return resultat else : return image","title":"Exercice 3 : Quart de tour d'une image"},{"location":"backup/diviser/#exercice-4-algorithme-de-karatsuba","text":"Principe de l'algorithme : On a pos\u00e9 ci-dessous la multiplication de deux nombres \u00e0 deux chiffres : \\(42 \\times 37\\) , combien de multiplications de nombres \u00e0 un chiffre (illustr\u00e9s par les fl\u00e8ches) sont n\u00e9cessaires \u00e0 ce calcul ? Compl\u00e9ter le calcul en ligne correspond \u00e0 l'op\u00e9ration ci-dessus : \\((40+2) \\times (30+7) = (...\\times...) + (...\\times...) + (...\\times...) + (...\\times...)\\) Si on multiplie deux nombres \u00e0 \\(n\\) chiffres de la m\u00eame fa\u00e7on, combien de multiplications de nombres \u00e0 un chiffre sont n\u00e9cessaires ? En base 10, le produit \\(P\\) de deux nombres \u00e0 \\(2n\\) chiffres peut s'\u00e9crire : \\(P=(a\\times 10^n + b)(c\\times 10^n + d) = ac\\times 10^{2n} + (ad+bc)\\times10^n + bd\\) V\u00e9rifier l'\u00e9galit\u00e9 : \\(P= ac\\times 10^{2n} + \\left(ac+bd-(a-b)(c-d)\\right)\\times10^n + bd\\) Combien de multiplications sont n\u00e9cessaires au calcul de \\(P\\) sous cette forme ? Calculer le produit \\(42 \\times 37\\) sous cette forme. Ecrire en Python une impl\u00e9mentation de l'algorithme de Karabutsa. Aide On pourra utiliser la fonction nb_chiffres(n) ci-dessous qui renvoie le nombre de chiffres en base 10 de l'entier positif n from math import floor , log10 def nb_chiffres ( n ): assert type ( n ) = int , \"L'argument doit \u00eatre entier\" assert n >= 0 , \"L'argument doit \u00eatre positif\" if n > 0 : return floor ( log10 ( n )) + 1 else : return 1 Pour aller plus loin Consulter la page wikip\u00e9dia sur l'algorithme de Karatsuba","title":"Exercice 4 : Algorithme de Karatsuba&thinsp; &thinsp; "},{"location":"backup/diviser/#exercice-5-quicksort","text":"Consulter la page wikip\u00e9dia sur l'algorithme du tri rapide Expliquer rapidement le fonctionnement de cet algorithme de tri. Justifier qu'il utilise la m\u00e9thode diviser pour r\u00e9gner. Donner un exemple du fonctionnement de cet algorithme sur une liste de petite taille. Proposer une impl\u00e9mentation en python de cet algorithme.","title":"Exercice 5 : Quicksort&thinsp; "},{"location":"backup/docs/","text":"Documents officiels Programme officiel Le programme de sp\u00e9cialit\u00e9 de num\u00e9rique et sciences informatiques de terminale g\u00e9n\u00e9rale","title":"Documents officiels"},{"location":"backup/docs/#documents-officiels","text":"","title":"Documents officiels"},{"location":"backup/docs/#programme-officiel","text":"Le programme de sp\u00e9cialit\u00e9 de num\u00e9rique et sciences informatiques de terminale g\u00e9n\u00e9rale","title":"Programme officiel"},{"location":"backup/graphes/","text":"C11 Graphes Activit\u00e9s Activit\u00e9 1 : Le probl\u00e8me des ponts de K\u00f6nigsberg Voici une illustration du probl\u00e8me des septs points de K\u00f6nigsberg extrait de la vid\u00e9o pr\u00e9c\u00e9dente : On rappelle que le but du probl\u00e8me est de trouver un chemin qui permet de passer une seule et unique fois par chaque pont de la ville. Faire quelques essais, que penser de ce probl\u00e8me ? Vers les graphes a. On divise la ville en quatre zones not\u00e9es N (nord de la ville), S (sud de la ville), I (\u00eele centrale) et E (est de la ville) comme illustr\u00e9 ci-dessous. Faire un sch\u00e9ma en repr\u00e9sentant chaque zone par un rond et un pont par un lien entre ces zones. Aide Vous devriez obtenir un sch\u00e9ma similaire \u00e0 : graph TD N((\"N\")) I((\"I\")) S((\"S\")) E((\"E\")) N-- 1 ---I N-- 2 ---I I-- 6 ---S I-- 7 ---S I-- 4 ---E N-- 3 ---E E-- 5 ---S b. Le sch\u00e9ma obtenu s'appelle un graphe , rechercher sur le Web comment se nomment les zones et les ponts dans le vocabulaire de la th\u00e9orie des graphes. c. Donner le degr\u00e9 de chaque sommet de ce graphe Aide On pourra remarquer que les arbres sont des graphes particuliers et se rappeler de la notion de degr\u00e9 (ou arit\u00e9) d'un noeud dans un arbre. Preuve math\u00e9matique a. Supposons qu'une solution au probl\u00e8me qui commence et finit dans la m\u00eame zone existe, en d\u00e9duire une propri\u00e9t\u00e9 du degr\u00e9 de chaque sommet. Aide Raisonner sur le fait que si on entre dans une zone, il faut pouvoir en sortir par un pont non encore utilis\u00e9. b. M\u00eame question si on suppose que la solution commence et finit dans deux zones diff\u00e9rentes. Aide Traiter s\u00e9par\u00e9ment des autres zones, celle de d\u00e9part et d'arriv\u00e9e. Pour aller plus loin ... a. En supprimant un seul pont, est-il possible d'obtenir une solution au probl\u00e8me ? Si oui lequel ? b. M\u00eame question en construisant un nouveau pont. Activit\u00e9 2 : Vocabulaire sur les graphes En vous aidant de vos connaissances sur l'\u00eele de la R\u00e9union (et si besoin du Web ), dessiner le graphe repr\u00e9sentant le r\u00e9seau routier de la R\u00e9union. On fera uniquement figur\u00e9 les villes suivantes comme sommet du graphe : Saint-Denis, Saint-Andr\u00e9, Saint-Beno\u00eet, Le Tampon, Saint-Pierre, Cilaos, Saint-Louis, Saint-Paul, Saint-Denis, Saint-Joseph, Salazie. Rechercher la signification des voisins d'un sommet d'un graphe. Donner la liste des voisins de Saint-Beno\u00eet. On suppose qu'on rajoute La Nouvelle et Aur\u00e8re (des \u00e9carts de Mafate) comme sommets et qu'une route est construite entre ces deux villages. Quelle propri\u00e9t\u00e9 du graphe n'est plus valide ? On suppose qu'on ajoute La Possession comme sommet, et qu'on fait figurer les deux routes permettant de relier Saint-Denis (La route en corniche et la route de la montagne). Que dire de ce nouveau graphe ? On suppose que la route de la montagne est maintenant \u00e0 sens unique et ne peut \u00eatre emprunt\u00e9 que dans le sens Saint-Denis vers La Possession. Que dire de ce nouveau graphe ? On suppose maintenant que sur le graphe initial, on fait figurer la distance entre les deux villes. Comment s'appelle ce type de graphe ? Activit\u00e9 3 : Impl\u00e9mentation avec matrice d'adjacence Principe de l'impl\u00e9mentation On prend l'exemple du graphe orient\u00e9 suivant \u00e0 4 noeuds : graph LR A((\"A\")) B((\"B\")) C((\"C\")) D((\"D\")) A --> B A --> C B --> C B --> D C --> D a. Recopier et compl\u00e9ter le tableau suivant dans lequel les lignes et les colonnes repr\u00e9sentent les sommets et dans lequel on indique par un 1 la pr\u00e9sence d'une ar\u00eate allant du sommet de la ligne vers celui de la colonne et par 0 son absence Note Si on num\u00e9rote les sommets du graphe (A le num\u00e9ro 1, B le num\u00e9ro 2, ...), il n'est plus n\u00e9cessaire d'indiquer les noms des sommets sur les lignes et les colonnes. b. De fa\u00e7on g\u00e9n\u00e9rale, une matrice en math\u00e9matiques est un tableau de nombres, ici, on a donc repr\u00e9sent\u00e9 notre graphe par une matrice appel\u00e9 matrice d'adjacence de ce graphe : $$\\begin{pmatrix} 0 & 1 & 1 & 0 \\\\ \\dots & \\dots & \\dots & \\dots \\\\ \\dots & \\dots & \\dots & \\dots \\\\ \\dots & \\dots & \\dots & \\dots \\\\ \\dots & \\dots & \\dots & \\dots \\\\ \\end{pmatrix} $$ En nommant les sommets \\(S_1, S_2, S_3\\) et \\(S_4\\) , dessiner le graphe dont la matrice d'adjacence est : $$\\begin{pmatrix} 0 & 0 & 1 & 1 \\\\ 1 & 0 & 0 & 0 \\\\ 1 & 0 & 0 & 0 \\\\ 1 & 1 & 1 & 0 \\\\ \\end{pmatrix} $$ c. Que peut-on dire d'un graphe dont la matrice d'adjacence est sym\u00e9trique par rapport \u00e0 sa diagonale principale ? d. Proposer une m\u00e9thode pour repr\u00e9senter un graphe pond\u00e9r\u00e9 par une matrice d'adjacence. Impl\u00e9mentation en python On s'inspire de ce qui a \u00e9t\u00e9 fait pour les arbres et on utilisera la poo pour repr\u00e9senter un graphe par sa matrice d'adjacence. Enfin, on suppose qu'on impl\u00e9mente des graphes orient\u00e9s. Quelle type de donn\u00e9es de Python est souhaitable pour repr\u00e9senter les sommets ? M\u00eame question pour la matrice d'adjacence Pour le constructeur de la classe Graphe, on propose de fournir uniquement les sommets et de cr\u00e9er l'objet graphe ayant sa matrice d'adjacence vide initialement. De plus on ajoute un attribut taille au graphe. Compl\u00e9ter le code ci-dessous : class Graphe : def __init__ ( self , sommets ): self . sommets = sommets self . taille = len ( ...... ) self . matrice = ............. Poursuivre cette impl\u00e9mentation en ajoutant une m\u00e9thode d'ajout d'une ar\u00eate. Aide Cette m\u00e9thode prend en param\u00e8tre l'origine et l'extr\u00e9mit\u00e9 de l'ar\u00eate \u00e0 ajouter. On pourra v\u00e9rifier que l'origine et l'extr\u00e9mit\u00e9 sont bien dans la liste de sommets et rechercher leur position gr\u00e2ce \u00e0 la m\u00e9thode index des listes de python. Ajouter une m\u00e9thode de suppression d'une ar\u00eate Ajouter une m\u00e9thode d'affichage de la matrice d'adjacence Ecrire la m\u00e9thode voisins qui prend en param\u00e8tre un sommet et renvoie la liste de ses voisins. Activit\u00e9 4 : Impl\u00e9mentation avec des listes d'adjacences Principe de l'impl\u00e9mentation On reprend l'exemple du graphe orient\u00e9 d\u00e9j\u00e0 utilis\u00e9 \u00e0 l'activit\u00e9 pr\u00e9c\u00e9dente graph LR A((\"A\")) B((\"B\")) C((\"C\")) D((\"D\")) A --> B A --> C B --> C B --> D C --> D a. Compl\u00e9ter le sch\u00e9ma suivant o\u00f9 on a fait figur\u00e9 \u00e0 c\u00f4t\u00e9 de chaque sommet la liste des sommets adjacents : A : B,C B : ... C : ... . : ... b. Dessiner le graphe dont la repr\u00e9sentation par liste d'adjacence est : R : S S : R,T,U,V T : V U : V : R,U Impl\u00e9mentation en Python On donne ci-dessous le constructeur d'une classe Graphe qui impl\u00e9mente les graphes sous la forme de listes d'adjacence : class Graphe : def __init__ ( self , sommets ): self . taille = len ( sommets ) self . listes = {} for s in sommets : self . listes [ s ] = [] a. Quel est le type de l'attribut listes d'un objet de la classe Graphe ? b. On suppose qu'on cr\u00e9e un objet de la classe Graphe en donnant en param\u00e8tre la liste [\"A\",\"B\",\"C\",\"D\"] . Quel est alors le contenu de l'attribut listes de cet objet ? c. Poursuivre cette impl\u00e9mentation en ajoutant une m\u00e9thode d'ajout d'une ar\u00eate. d. Ajouter une m\u00e9thode de suppression d'une ar\u00eate e. Proposer une m\u00e9thode permettant d'ajouter un sommet. f. Proposer une m\u00e9thode permettant de supprimer un sommet. g. Ecrire la m\u00e9thode voisins qui prend en param\u00e8tre un sommet et renvoie la liste de ses voisins. Activit\u00e9 5 : Parcours d'un graphe Visualisation d'un parcours depth first search Un outil en ligne , permet de visualiser le r\u00e9sultat du parcours en profondeur d'un graphe. Un graphe est donn\u00e9 en exemple, mais vous pouvez le modifier ou construire le votre : Attention Dans les menus d\u00e9roulants, bien choisir Alorithme : DFS et Example graph : directedGraph Visualisation d'un parcours breadth first search Ce m\u00eame outil en ligne , permet de visualiser le r\u00e9sultat du parcours en largeur d'un graphe. Un graphe est donn\u00e9 en exemple, mais vous pouvez le modifier ou construire le votre : Attention Dans les menus d\u00e9roulants, bien choisir Alorithme : BFS et Example graph : directedGraph On consid\u00e8re le graphe suivant : graph LR A((\"A\")) B((\"B\")) C((\"C\")) D((\"D\")) E((\"E\")) F((\"F\")) G((\"G\")) A --> B A --> C B --> D C --> F C --> G E --> G A --> E D --> F G --> F B --> C a. Pr\u00e9voir l'ordre de parcours pour un parcours en profondeur en commen\u00e7ant par le sommet A . V\u00e9rifier en testant dans l'outil en ligne. b. M\u00eame question pour un parcours en largeur. Cours Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices. Exercices Exercice 1 : Vocabulaire sur les graphes On consid\u00e8re le graphe suivant : graph LR A((\"A\")) B((\"B\")) C((\"C\")) D((\"D\")) E((\"E\")) F((\"F\")) G((\"G\")) H((\"H\")) A --- B A --- C C --- F C --- G E --- G G --- F B --- E C --- H B --- D D --- C Ce graphe est-il orient\u00e9 ? simple ? complet ? pond\u00e9r\u00e9 ? Donner la liste des voisins de C . Quel est le degr\u00e9 de G ? Quels sont les sommets adjacents \u00e0 A ? Exercice 2 : Graphe complet Rappeler la d\u00e9finition d'un graphe complet Dessiner un graphe complet \u00e0 cinq noeuds. Combien d'ar\u00eates poss\u00e8de ce graphe ? Donner la matrice d'adjacence de ce graphe. Quel est le nombre d'ar\u00eates d'un graphe complet \u00e0 \\(n\\) noeuds ? Aide On pourra utiliser sans avoir \u00e0 le prouver que : $$ 1 + 2 + \\dots + n = \\dfrac{n(n+1)}{2} $$ Exercice 3 : Repr\u00e9sentation par matrice d'adjacence Donner la matrice d'adjacence du graphe suivant : graph LR A((\"A\")) B((\"B\")) C((\"C\")) D((\"D\")) E((\"E\")) A --- B A --- C C --- E D --- E B --- C C --- D Dessiner le graphe dont la matrice d'adjacence est : $$\\begin{pmatrix} 0 & 1 & 1 & 0 & 0 \\\\ 0 & 0 & 1 & 0 & 1 \\\\ 1 & 1 & 0 & 0 & 0 \\\\ 0 & 1 & 1 & 0 & 0 \\\\ 0 & 1 & 1 & 0 & 0 \\\\ \\end{pmatrix} $$ Exercice 4 : Repr\u00e9sentation par listes d'adjacence Donner la repr\u00e9sentation sous forme de listes d'adjacences du graphe suivant : graph LR A((\"A\")) B((\"B\")) C((\"C\")) D((\"D\")) E((\"E\")) A --- B A --- C C --- E D --- E B --- C C --- D Dessiner le graphe dont la repr\u00e9sentation sous forme de listes d'adjacence est : A : [B] B : [C,D,E] C : [F] D : [F] E : [F] Exercice 5 : Parcours d'un graphe On consid\u00e8re le graphe suivant : graph LR A((\"A\")) B((\"B\")) C((\"C\")) D((\"D\")) E((\"E\")) F((\"F\")) G((\"G\")) A --> B A --> C G --> E C --> D D --> F B --> E E --> F A --> G Donner l'ordre de parcours des sommets pour un parcours en largeur en partant de A M\u00eame question pour un parcours en profondeur Exercice 6 : Impl\u00e9mentation par matrice d'adjacence R\u00e9cup\u00e9rer, et revoir l'impl\u00e9mentation des graphes r\u00e9alis\u00e9e \u00e0 l' activit\u00e9 3 : Impl\u00e9mentation graphes par matrice Utiliser cette impl\u00e9mentation pour cr\u00e9er le graphe de sommets A,B,C,D,E et dont la matrice d'adjacence est : $$\\begin{pmatrix} 0 & 1 & 1 & 0 & 0 \\\\ 0 & 0 & 1 & 0 & 0 \\\\ 0 & 0 & 0 & 1 & 1 \\\\ 0 & 0 & 0 & 0 & 0 \\\\ 0 & 0 & 0 & 0 & 0 \\\\ \\end{pmatrix} $$ Ajouter la m\u00e9thode parcours_largeur ci-dessous \u00e0 cette impl\u00e9mentation en la compl\u00e9tant. def parcours_largeur ( self , depart ): assert depart in self . sommets a_traiter = [ depart ] deja_vu = [ depart ] pl = [] while a_traiter != []: sommet = a_traiter [ 0 ] voisins = self . get_voisin ( sommet ) # Ajout des sommets voisins non encore parcourus \u00e0 ceux \u00e0 traiter for v in ....... : if v not in ..... : a_traiter ...... ( v ) deja_vu ....... ( v ) pl . append ( sommet ) a_traiter ..... ( 0 ) return pl Reconna\u00eetre la structure de donn\u00e9es utilis\u00e9e pour la variable a_traiter , expliquer pourquoi le choix d'une liste n'est pas judicieux. Ajouter la m\u00e9thode parcours_profondeur ci-dessous \u00e0 cette impl\u00e9mentation en la compl\u00e9tant. def parcours_profondeur ( self , start , parcourus = None ): if parcourus == None : parcourus = [] parcourus . append ( start ) for v in self ........... ( start ): if v not in parcourus : self ............ ( v , parcourus ) return parcourus Proposer une m\u00e9thode permettant d'ajouter un sommet. Aide Penser aux cons\u00e9quences pour la matrice d'adjacence Proposer une m\u00e9thode permettant de supprimer un sommet. Exercice 7 : Impl\u00e9mentation par listes d'adjacence Reprendre les questions de l'exercice pr\u00e9c\u00e9dent avec l'impl\u00e9mentation par liste d'adjacence r\u00e9alis\u00e9e \u00e0 l' activit\u00e9 3 : Impl\u00e9mentation graphes par listes","title":"Graphes"},{"location":"backup/graphes/#c11-graphes","text":"","title":"C11 Graphes "},{"location":"backup/graphes/#activites","text":"","title":"Activit\u00e9s"},{"location":"backup/graphes/#activite-1-le-probleme-des-ponts-de-konigsberg","text":"Voici une illustration du probl\u00e8me des septs points de K\u00f6nigsberg extrait de la vid\u00e9o pr\u00e9c\u00e9dente : On rappelle que le but du probl\u00e8me est de trouver un chemin qui permet de passer une seule et unique fois par chaque pont de la ville. Faire quelques essais, que penser de ce probl\u00e8me ? Vers les graphes a. On divise la ville en quatre zones not\u00e9es N (nord de la ville), S (sud de la ville), I (\u00eele centrale) et E (est de la ville) comme illustr\u00e9 ci-dessous. Faire un sch\u00e9ma en repr\u00e9sentant chaque zone par un rond et un pont par un lien entre ces zones. Aide Vous devriez obtenir un sch\u00e9ma similaire \u00e0 : graph TD N((\"N\")) I((\"I\")) S((\"S\")) E((\"E\")) N-- 1 ---I N-- 2 ---I I-- 6 ---S I-- 7 ---S I-- 4 ---E N-- 3 ---E E-- 5 ---S b. Le sch\u00e9ma obtenu s'appelle un graphe , rechercher sur le Web comment se nomment les zones et les ponts dans le vocabulaire de la th\u00e9orie des graphes. c. Donner le degr\u00e9 de chaque sommet de ce graphe Aide On pourra remarquer que les arbres sont des graphes particuliers et se rappeler de la notion de degr\u00e9 (ou arit\u00e9) d'un noeud dans un arbre. Preuve math\u00e9matique a. Supposons qu'une solution au probl\u00e8me qui commence et finit dans la m\u00eame zone existe, en d\u00e9duire une propri\u00e9t\u00e9 du degr\u00e9 de chaque sommet. Aide Raisonner sur le fait que si on entre dans une zone, il faut pouvoir en sortir par un pont non encore utilis\u00e9. b. M\u00eame question si on suppose que la solution commence et finit dans deux zones diff\u00e9rentes. Aide Traiter s\u00e9par\u00e9ment des autres zones, celle de d\u00e9part et d'arriv\u00e9e. Pour aller plus loin ... a. En supprimant un seul pont, est-il possible d'obtenir une solution au probl\u00e8me ? Si oui lequel ? b. M\u00eame question en construisant un nouveau pont.","title":"Activit\u00e9 1 : Le probl\u00e8me des ponts de K\u00f6nigsberg"},{"location":"backup/graphes/#activite-2-vocabulaire-sur-les-graphes","text":"En vous aidant de vos connaissances sur l'\u00eele de la R\u00e9union (et si besoin du Web ), dessiner le graphe repr\u00e9sentant le r\u00e9seau routier de la R\u00e9union. On fera uniquement figur\u00e9 les villes suivantes comme sommet du graphe : Saint-Denis, Saint-Andr\u00e9, Saint-Beno\u00eet, Le Tampon, Saint-Pierre, Cilaos, Saint-Louis, Saint-Paul, Saint-Denis, Saint-Joseph, Salazie. Rechercher la signification des voisins d'un sommet d'un graphe. Donner la liste des voisins de Saint-Beno\u00eet. On suppose qu'on rajoute La Nouvelle et Aur\u00e8re (des \u00e9carts de Mafate) comme sommets et qu'une route est construite entre ces deux villages. Quelle propri\u00e9t\u00e9 du graphe n'est plus valide ? On suppose qu'on ajoute La Possession comme sommet, et qu'on fait figurer les deux routes permettant de relier Saint-Denis (La route en corniche et la route de la montagne). Que dire de ce nouveau graphe ? On suppose que la route de la montagne est maintenant \u00e0 sens unique et ne peut \u00eatre emprunt\u00e9 que dans le sens Saint-Denis vers La Possession. Que dire de ce nouveau graphe ? On suppose maintenant que sur le graphe initial, on fait figurer la distance entre les deux villes. Comment s'appelle ce type de graphe ?","title":"Activit\u00e9 2 : Vocabulaire sur les graphes"},{"location":"backup/graphes/#activite-3-implementation-avec-matrice-dadjacence","text":"Principe de l'impl\u00e9mentation On prend l'exemple du graphe orient\u00e9 suivant \u00e0 4 noeuds : graph LR A((\"A\")) B((\"B\")) C((\"C\")) D((\"D\")) A --> B A --> C B --> C B --> D C --> D a. Recopier et compl\u00e9ter le tableau suivant dans lequel les lignes et les colonnes repr\u00e9sentent les sommets et dans lequel on indique par un 1 la pr\u00e9sence d'une ar\u00eate allant du sommet de la ligne vers celui de la colonne et par 0 son absence Note Si on num\u00e9rote les sommets du graphe (A le num\u00e9ro 1, B le num\u00e9ro 2, ...), il n'est plus n\u00e9cessaire d'indiquer les noms des sommets sur les lignes et les colonnes. b. De fa\u00e7on g\u00e9n\u00e9rale, une matrice en math\u00e9matiques est un tableau de nombres, ici, on a donc repr\u00e9sent\u00e9 notre graphe par une matrice appel\u00e9 matrice d'adjacence de ce graphe : $$\\begin{pmatrix} 0 & 1 & 1 & 0 \\\\ \\dots & \\dots & \\dots & \\dots \\\\ \\dots & \\dots & \\dots & \\dots \\\\ \\dots & \\dots & \\dots & \\dots \\\\ \\dots & \\dots & \\dots & \\dots \\\\ \\end{pmatrix} $$ En nommant les sommets \\(S_1, S_2, S_3\\) et \\(S_4\\) , dessiner le graphe dont la matrice d'adjacence est : $$\\begin{pmatrix} 0 & 0 & 1 & 1 \\\\ 1 & 0 & 0 & 0 \\\\ 1 & 0 & 0 & 0 \\\\ 1 & 1 & 1 & 0 \\\\ \\end{pmatrix} $$ c. Que peut-on dire d'un graphe dont la matrice d'adjacence est sym\u00e9trique par rapport \u00e0 sa diagonale principale ? d. Proposer une m\u00e9thode pour repr\u00e9senter un graphe pond\u00e9r\u00e9 par une matrice d'adjacence. Impl\u00e9mentation en python On s'inspire de ce qui a \u00e9t\u00e9 fait pour les arbres et on utilisera la poo pour repr\u00e9senter un graphe par sa matrice d'adjacence. Enfin, on suppose qu'on impl\u00e9mente des graphes orient\u00e9s. Quelle type de donn\u00e9es de Python est souhaitable pour repr\u00e9senter les sommets ? M\u00eame question pour la matrice d'adjacence Pour le constructeur de la classe Graphe, on propose de fournir uniquement les sommets et de cr\u00e9er l'objet graphe ayant sa matrice d'adjacence vide initialement. De plus on ajoute un attribut taille au graphe. Compl\u00e9ter le code ci-dessous : class Graphe : def __init__ ( self , sommets ): self . sommets = sommets self . taille = len ( ...... ) self . matrice = ............. Poursuivre cette impl\u00e9mentation en ajoutant une m\u00e9thode d'ajout d'une ar\u00eate. Aide Cette m\u00e9thode prend en param\u00e8tre l'origine et l'extr\u00e9mit\u00e9 de l'ar\u00eate \u00e0 ajouter. On pourra v\u00e9rifier que l'origine et l'extr\u00e9mit\u00e9 sont bien dans la liste de sommets et rechercher leur position gr\u00e2ce \u00e0 la m\u00e9thode index des listes de python. Ajouter une m\u00e9thode de suppression d'une ar\u00eate Ajouter une m\u00e9thode d'affichage de la matrice d'adjacence Ecrire la m\u00e9thode voisins qui prend en param\u00e8tre un sommet et renvoie la liste de ses voisins.","title":"Activit\u00e9 3 : Impl\u00e9mentation avec matrice d'adjacence"},{"location":"backup/graphes/#activite-4-implementation-avec-des-listes-dadjacences","text":"Principe de l'impl\u00e9mentation On reprend l'exemple du graphe orient\u00e9 d\u00e9j\u00e0 utilis\u00e9 \u00e0 l'activit\u00e9 pr\u00e9c\u00e9dente graph LR A((\"A\")) B((\"B\")) C((\"C\")) D((\"D\")) A --> B A --> C B --> C B --> D C --> D a. Compl\u00e9ter le sch\u00e9ma suivant o\u00f9 on a fait figur\u00e9 \u00e0 c\u00f4t\u00e9 de chaque sommet la liste des sommets adjacents : A : B,C B : ... C : ... . : ... b. Dessiner le graphe dont la repr\u00e9sentation par liste d'adjacence est : R : S S : R,T,U,V T : V U : V : R,U Impl\u00e9mentation en Python On donne ci-dessous le constructeur d'une classe Graphe qui impl\u00e9mente les graphes sous la forme de listes d'adjacence : class Graphe : def __init__ ( self , sommets ): self . taille = len ( sommets ) self . listes = {} for s in sommets : self . listes [ s ] = [] a. Quel est le type de l'attribut listes d'un objet de la classe Graphe ? b. On suppose qu'on cr\u00e9e un objet de la classe Graphe en donnant en param\u00e8tre la liste [\"A\",\"B\",\"C\",\"D\"] . Quel est alors le contenu de l'attribut listes de cet objet ? c. Poursuivre cette impl\u00e9mentation en ajoutant une m\u00e9thode d'ajout d'une ar\u00eate. d. Ajouter une m\u00e9thode de suppression d'une ar\u00eate e. Proposer une m\u00e9thode permettant d'ajouter un sommet. f. Proposer une m\u00e9thode permettant de supprimer un sommet. g. Ecrire la m\u00e9thode voisins qui prend en param\u00e8tre un sommet et renvoie la liste de ses voisins.","title":"Activit\u00e9 4 : Impl\u00e9mentation avec des listes d'adjacences"},{"location":"backup/graphes/#activite-5-parcours-dun-graphe","text":"Visualisation d'un parcours depth first search Un outil en ligne , permet de visualiser le r\u00e9sultat du parcours en profondeur d'un graphe. Un graphe est donn\u00e9 en exemple, mais vous pouvez le modifier ou construire le votre : Attention Dans les menus d\u00e9roulants, bien choisir Alorithme : DFS et Example graph : directedGraph Visualisation d'un parcours breadth first search Ce m\u00eame outil en ligne , permet de visualiser le r\u00e9sultat du parcours en largeur d'un graphe. Un graphe est donn\u00e9 en exemple, mais vous pouvez le modifier ou construire le votre : Attention Dans les menus d\u00e9roulants, bien choisir Alorithme : BFS et Example graph : directedGraph On consid\u00e8re le graphe suivant : graph LR A((\"A\")) B((\"B\")) C((\"C\")) D((\"D\")) E((\"E\")) F((\"F\")) G((\"G\")) A --> B A --> C B --> D C --> F C --> G E --> G A --> E D --> F G --> F B --> C a. Pr\u00e9voir l'ordre de parcours pour un parcours en profondeur en commen\u00e7ant par le sommet A . V\u00e9rifier en testant dans l'outil en ligne. b. M\u00eame question pour un parcours en largeur.","title":"Activit\u00e9 5 : Parcours d'un graphe"},{"location":"backup/graphes/#cours","text":"Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices.","title":"Cours"},{"location":"backup/graphes/#exercices","text":"","title":"Exercices"},{"location":"backup/graphes/#exercice-1-vocabulaire-sur-les-graphes","text":"On consid\u00e8re le graphe suivant : graph LR A((\"A\")) B((\"B\")) C((\"C\")) D((\"D\")) E((\"E\")) F((\"F\")) G((\"G\")) H((\"H\")) A --- B A --- C C --- F C --- G E --- G G --- F B --- E C --- H B --- D D --- C Ce graphe est-il orient\u00e9 ? simple ? complet ? pond\u00e9r\u00e9 ? Donner la liste des voisins de C . Quel est le degr\u00e9 de G ? Quels sont les sommets adjacents \u00e0 A ?","title":"Exercice 1 : Vocabulaire sur les graphes"},{"location":"backup/graphes/#exercice-2-graphe-complet","text":"Rappeler la d\u00e9finition d'un graphe complet Dessiner un graphe complet \u00e0 cinq noeuds. Combien d'ar\u00eates poss\u00e8de ce graphe ? Donner la matrice d'adjacence de ce graphe. Quel est le nombre d'ar\u00eates d'un graphe complet \u00e0 \\(n\\) noeuds ? Aide On pourra utiliser sans avoir \u00e0 le prouver que : $$ 1 + 2 + \\dots + n = \\dfrac{n(n+1)}{2} $$","title":"Exercice 2 : Graphe complet"},{"location":"backup/graphes/#exercice-3-representation-par-matrice-dadjacence","text":"Donner la matrice d'adjacence du graphe suivant : graph LR A((\"A\")) B((\"B\")) C((\"C\")) D((\"D\")) E((\"E\")) A --- B A --- C C --- E D --- E B --- C C --- D Dessiner le graphe dont la matrice d'adjacence est : $$\\begin{pmatrix} 0 & 1 & 1 & 0 & 0 \\\\ 0 & 0 & 1 & 0 & 1 \\\\ 1 & 1 & 0 & 0 & 0 \\\\ 0 & 1 & 1 & 0 & 0 \\\\ 0 & 1 & 1 & 0 & 0 \\\\ \\end{pmatrix} $$","title":"Exercice 3 : Repr\u00e9sentation par matrice d'adjacence"},{"location":"backup/graphes/#exercice-4-representation-par-listes-dadjacence","text":"Donner la repr\u00e9sentation sous forme de listes d'adjacences du graphe suivant : graph LR A((\"A\")) B((\"B\")) C((\"C\")) D((\"D\")) E((\"E\")) A --- B A --- C C --- E D --- E B --- C C --- D Dessiner le graphe dont la repr\u00e9sentation sous forme de listes d'adjacence est : A : [B] B : [C,D,E] C : [F] D : [F] E : [F]","title":"Exercice 4 : Repr\u00e9sentation par listes d'adjacence"},{"location":"backup/graphes/#exercice-5-parcours-dun-graphe","text":"On consid\u00e8re le graphe suivant : graph LR A((\"A\")) B((\"B\")) C((\"C\")) D((\"D\")) E((\"E\")) F((\"F\")) G((\"G\")) A --> B A --> C G --> E C --> D D --> F B --> E E --> F A --> G Donner l'ordre de parcours des sommets pour un parcours en largeur en partant de A M\u00eame question pour un parcours en profondeur","title":"Exercice 5 : Parcours d'un graphe"},{"location":"backup/graphes/#exercice-6-implementation-par-matrice-dadjacence","text":"R\u00e9cup\u00e9rer, et revoir l'impl\u00e9mentation des graphes r\u00e9alis\u00e9e \u00e0 l' activit\u00e9 3 : Impl\u00e9mentation graphes par matrice Utiliser cette impl\u00e9mentation pour cr\u00e9er le graphe de sommets A,B,C,D,E et dont la matrice d'adjacence est : $$\\begin{pmatrix} 0 & 1 & 1 & 0 & 0 \\\\ 0 & 0 & 1 & 0 & 0 \\\\ 0 & 0 & 0 & 1 & 1 \\\\ 0 & 0 & 0 & 0 & 0 \\\\ 0 & 0 & 0 & 0 & 0 \\\\ \\end{pmatrix} $$ Ajouter la m\u00e9thode parcours_largeur ci-dessous \u00e0 cette impl\u00e9mentation en la compl\u00e9tant. def parcours_largeur ( self , depart ): assert depart in self . sommets a_traiter = [ depart ] deja_vu = [ depart ] pl = [] while a_traiter != []: sommet = a_traiter [ 0 ] voisins = self . get_voisin ( sommet ) # Ajout des sommets voisins non encore parcourus \u00e0 ceux \u00e0 traiter for v in ....... : if v not in ..... : a_traiter ...... ( v ) deja_vu ....... ( v ) pl . append ( sommet ) a_traiter ..... ( 0 ) return pl Reconna\u00eetre la structure de donn\u00e9es utilis\u00e9e pour la variable a_traiter , expliquer pourquoi le choix d'une liste n'est pas judicieux. Ajouter la m\u00e9thode parcours_profondeur ci-dessous \u00e0 cette impl\u00e9mentation en la compl\u00e9tant. def parcours_profondeur ( self , start , parcourus = None ): if parcourus == None : parcourus = [] parcourus . append ( start ) for v in self ........... ( start ): if v not in parcourus : self ............ ( v , parcourus ) return parcourus Proposer une m\u00e9thode permettant d'ajouter un sommet. Aide Penser aux cons\u00e9quences pour la matrice d'adjacence Proposer une m\u00e9thode permettant de supprimer un sommet.","title":"Exercice 6 : Impl\u00e9mentation par matrice d'adjacence"},{"location":"backup/graphes/#exercice-7-implementation-par-listes-dadjacence","text":"Reprendre les questions de l'exercice pr\u00e9c\u00e9dent avec l'impl\u00e9mentation par liste d'adjacence r\u00e9alis\u00e9e \u00e0 l' activit\u00e9 3 : Impl\u00e9mentation graphes par listes","title":"Exercice 7 : Impl\u00e9mentation par listes d'adjacence"},{"location":"backup/index_annales/","text":"Annales du bac Ann\u00e9e 2021 Epr\u00e9uves \u00e9crites Epr\u00e9uves pratiques Ann\u00e9e 2022 Epr\u00e9uves \u00e9crites Epr\u00e9uves pratiques","title":"Annales du bac"},{"location":"backup/index_annales/#annales-du-bac","text":"","title":"Annales du bac"},{"location":"backup/index_annales/#annee-2021","text":"","title":"Ann\u00e9e 2021"},{"location":"backup/index_annales/#epreuves-ecrites","text":"","title":"Epr\u00e9uves \u00e9crites"},{"location":"backup/index_annales/#epreuves-pratiques","text":"","title":"Epr\u00e9uves pratiques"},{"location":"backup/index_annales/#annee-2022","text":"","title":"Ann\u00e9e 2022"},{"location":"backup/index_annales/#epreuves-ecrites_1","text":"","title":"Epr\u00e9uves \u00e9crites"},{"location":"backup/index_annales/#epreuves-pratiques_1","text":"","title":"Epr\u00e9uves pratiques"},{"location":"backup/liens/","text":"Liens S'entrainer en ligne pour l'\u00e9preuve pratique Un collectif d'enseignants d'informatique propose des exercices de programmation , corrig\u00e9s utilisables en ligne sans rien installer sur votre ordinateur. exercice de base pour demarrer exercice du type exercice 1 de l'\u00e9preuve pratique du Bac exercice du type exercice 2 de l'\u00e9preuve pratique du Bac exercices plus d\u00e9licats exercices avec une orientation math\u00e9matique Autres sites proposant des cours de NSI Pixees informatique lyc\u00e9e Github de Gilles Lassus Cours de Franck Chambon Cours de Vincent-Xavier Jumel Cours du lyc\u00e9e Angellier Site d'Oliver Lecluse Qkzk Les cours en Vid\u00e9o Lumni Site officiel Python Documentation officielle de Python3 Guide du d\u00e9butant Style Guide for Python Code Concours et initiation ludiques \u00e0 la programmation py-rates r\u00e9soudre les huit niveaux d'un jeu de plateau \u00e0 l'aide de programmes en python. France IOI : site d'entra\u00eenement et de d\u00e9couverte de la programmation et de l'algorithmique. Concours Algorea : le site du concours de programmation organis\u00e9 chaque ann\u00e9e par France IOI. Checkio : un site de d\u00e9couverte ludique de la programmation (en anglais). Alkindi : d\u00e9couverte de la cryptographie. Projet Euler : un site d'exercices de programmation autour des math\u00e9matiques (an anglais). Prologin : concours de programmation. Python Challenge : un site d'\u00e9nigmes \u00e0 r\u00e9soudre en utilisant Python (en anglais). Codingame : site de d\u00e9fi de programmation, attention le niveau est \u00e9lev\u00e9.","title":"Liens"},{"location":"backup/liens/#liens","text":"","title":"Liens"},{"location":"backup/liens/#sentrainer-en-ligne-pour-lepreuve-pratique","text":"Un collectif d'enseignants d'informatique propose des exercices de programmation , corrig\u00e9s utilisables en ligne sans rien installer sur votre ordinateur. exercice de base pour demarrer exercice du type exercice 1 de l'\u00e9preuve pratique du Bac exercice du type exercice 2 de l'\u00e9preuve pratique du Bac exercices plus d\u00e9licats exercices avec une orientation math\u00e9matique","title":"S'entrainer en ligne pour l'\u00e9preuve pratique"},{"location":"backup/liens/#autres-sites-proposant-des-cours-de-nsi","text":"Pixees informatique lyc\u00e9e Github de Gilles Lassus Cours de Franck Chambon Cours de Vincent-Xavier Jumel Cours du lyc\u00e9e Angellier Site d'Oliver Lecluse Qkzk Les cours en Vid\u00e9o Lumni","title":"Autres sites proposant des cours de NSI"},{"location":"backup/liens/#site-officiel-python","text":"Documentation officielle de Python3 Guide du d\u00e9butant Style Guide for Python Code","title":"Site officiel  Python"},{"location":"backup/liens/#concours-et-initiation-ludiques-a-la-programmation","text":"py-rates r\u00e9soudre les huit niveaux d'un jeu de plateau \u00e0 l'aide de programmes en python. France IOI : site d'entra\u00eenement et de d\u00e9couverte de la programmation et de l'algorithmique. Concours Algorea : le site du concours de programmation organis\u00e9 chaque ann\u00e9e par France IOI. Checkio : un site de d\u00e9couverte ludique de la programmation (en anglais). Alkindi : d\u00e9couverte de la cryptographie. Projet Euler : un site d'exercices de programmation autour des math\u00e9matiques (an anglais). Prologin : concours de programmation. Python Challenge : un site d'\u00e9nigmes \u00e0 r\u00e9soudre en utilisant Python (en anglais). Codingame : site de d\u00e9fi de programmation, attention le niveau est \u00e9lev\u00e9.","title":"Concours et initiation ludiques \u00e0 la programmation"},{"location":"backup/poo/","text":"C5 Notions de programmation orient\u00e9 objet Activit\u00e9s Activit\u00e9 1 : Introduction \u00e0 la programmation orient\u00e9e objet Jupyter Notebook Activit\u00e9 2 : Syntaxe objet en Python On donne le code python suivant : class Duree : def __init__ ( self , heures , minutes , secondes ): self . heures = heures self . minutes = minutes self . secondes = secondes def __str__ ( self ): return f \" { self . heures } h { self . minutes } m { self . secondes } s\" Quelle classe est cr\u00e9e ? Quels sont les attributs des objets de cette classe ? Quelle m\u00e9thode est cr\u00e9e pour les objets de cette classe ? Le record du monde du marathon est actuellement de deux heures, une minute et trente neuf secondes, cr\u00e9er \u00e0 l'aide de la classe ci-dessus un objet record_marathon repr\u00e9sentant cette dur\u00e9e et l'afficher. Ecrire une m\u00e9thode nombre_secondes qui renvoie le nombre de secondes d'un objet dur\u00e9e. L'utiliser pour afficher le record du monde du marathon en secondes. Ajouter une m\u00e9thode ajoute_secondes(nb_secondes) \u00e0 la classe Duree qui permet d'ajouter nb_secondes \u00e0 un objet de type dur\u00e9e. Activit\u00e9 3 : Getters et setters Cr\u00e9er une classe Eleve poss\u00e9dant les attributs suivants : nom, pr\u00e9nom, et classe. Instancier cette classe pour cr\u00e9er l'\u00e9l\u00e8ve spiderman , son nom est Parker, son pr\u00e9nom Peter et il est en premi\u00e8re 5. Quel est l'effet de l'instruction spiderman.classe = 'Terminale 2' ? Important Bien que l'instruction pr\u00e9c\u00e9dente soit correcte, elle est contraire \u00e0 l'esprit de la programmation objet dans lequel l'acc\u00e8s aux attributs d'un objet (ou la modification) devrait toujours se faire par des m\u00e9thodes de l'objet. On respecte ainsi le principe d' encapsulation qui assure que l'utilisation des objets se fait ind\u00e9pendamment de leur structure interne (qui est susceptible d'\u00eatre modifi\u00e9e) Les m\u00e9thodes permettant d'acc\u00e9der \u00e0 un attribut s'appellent des getters (accesseur) et celles permettant de modifier un attribut s'appellent des setter (mutateur) Ecrire une m\u00e9thode permettant d'acc\u00e9der la classe d'un \u00e9l\u00e8ve (le getter ). Ecrire une m\u00e9thode permettant de modifier la classe d'un \u00e9l\u00e8ve (le setter ). Modifier de nouveau (mais cette fois \"proprement\") la classe de spiderman . Cours Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices. Exercices Exercice 1 : Personnage d'un jeu vid\u00e9o Dans un jeu vid\u00e9o, un personnage doit se d\u00e9placer dans un environnement \u00e0 deux dimensions, sa position y est rep\u00e9r\u00e9 par son abscisse et son ordonn\u00e9e. D'autre part ce personnage dispose d'un certain nombre de points de vie qui peuvent \u00e9voluer durant le jeu. On consid\u00e8re la d\u00e9finition de la classe Perso suivante : class Perso : def __init__ ( self , nom ): self . nom = nom self . x = 0 self . y = 0 self . pv = 100 Au d\u00e9part combien de points de vie poss\u00e8de un personnage ? Et \u00e0 quel coordonn\u00e9es du rep\u00e8re est-il positionn\u00e9 ? Lorsqu'un personnage boit une potion de vie, il r\u00e9cup\u00e8re 10 points de vie mais sans d\u00e9passer le maximum de vie qui est 100. Ecrire la m\u00e9thode boit_potion qui impl\u00e9mente ce fonctionnement. Ecrire la m\u00e9thode avance(nbcases) qui permet au personnage d'avancer de nbcases vers l'avant. Exercice 2 : Mod\u00e9liser un compte en banque On mod\u00e9lise un compte bancaire par : un num\u00e9ro de compte un nom de titulaire un solde (n\u00e9gatif si le compte est d\u00e9biteur) Ecrire une classe CompteBancaire repr\u00e9sentant cette mod\u00e9lisation Cr\u00e9er le compte n\u00b0421 de M. Tartampion ayant un solde de \\(-125,10\\) \u20ac et le compte n\u00b0 705 de Mme Untel ayant un solde de \\(3120,07\\) \u20ac. Ecrire et tester la m\u00e9thode sp\u00e9ciale __str__ permettant d'afficher l'objet CompteBancaire. Par exemple l'affichage de l'objet repr\u00e9sentant le compte bancaire de M. Tartampion donnera : N\u00b0421 - M. Tartampion : -125,10 euros Ecrire les m\u00e9thodes depot et retrait permettant respectivement d'ajouter ou de retirer une somme d'argent d'un objet CompteBancaire. Ecrire la m\u00e9thode virement permettant de transf\u00e9rer une somme d'argent entre deux comptes. Par exemple si C1 et C2 sont deux objets de type CompteBancaire , alors C1.virement(C2,montant) aura pour effet d'enlever montant euros du compte C1 et de les transf\u00e9rer au compte C2 . Exercice 3 : Un peu de g\u00e9om\u00e9trie \u2009 On donne la classe Point d\u00e9finie ci-dessous qui repr\u00e9sente un point du plan par son nom et ses coordonn\u00e9es dans un rep\u00e8re. Cette classe est d\u00e9j\u00e0 dot\u00e9e d'une m\u00e9thode d'affichage. class Point : def __init__ ( self , nom , abcisse , ordonnee ): self . nom = nom self . x = abcisse self . y = ordonnee def __str__ ( self ): return f ' { self . nom } ( { self . x } ; { self . y } )' En utilisant cette classe, cr\u00e9er et afficher les points \\(A(3;-2)\\) et \\(B(-1;6)\\) . Ecrire une m\u00e9thode milieu(self,other,nom_milieu) qui renvoie le point milieu du segment ayant pour extr\u00e9mit\u00e9s les deux points pass\u00e9s en param\u00e8tres ( self et other ) en lui donnant le nom contenu dans nom_milieu . Aide On rappelle (mais c'est au programme de classe de seconde) que pour deux points \\(A(x_A,y_A)\\) et \\(B(x_B,y_B)\\) les coordonnes \\(x_I\\) et \\(y_I\\) du milieu \\(I\\) du segment \\([AB]\\) sont : \\(x_I = \\dfrac{x_A+y_B}{2}\\) et \\(y_I = \\dfrac{y_A+y_B}{2}\\) Utiliser cette m\u00e9thode pour calculer le milieu \\(I\\) des points \\(A\\) et \\(B\\) d\u00e9finis plus haut et l'afficher. Aide Vous devrier obtenir \\(I(1;2)\\) Ecrire et tester une m\u00e9thode permettant de calculer la distance entre deux points. Aide On rappelle que pour deux points \\(A(x_A,y_A)\\) et \\(B(x_B,y_B)\\) on a \\(AB = \\sqrt{(x_B-x_A)^2+(y_B-y_A)^2}\\) . D'autre part la fonction racine carr\u00e9e doit \u00eatre import\u00e9e depuis le module math Exercice 4 : Une classe date D\u00e9finir et \u00e9crire le constructeur d'une classe date poss\u00e9dant trois attributs : jour , mois , ann\u00e9e . Ces trois attributs sont entiers, par exemple le 27 octobre 2020 a comme attribut jour : 27 , mois : 10 et ann\u00e9e : 2020 . Affiner le constructeur d\u00e9fini plus haut pour n'accepter que des dates valides, c'est \u00e0 dire avec un mois compris entre 1 et 12 et le jour ne d\u00e9passant pas le nombre de jours du mois. Aide Une id\u00e9e consiste par exemple \u00e0 utiliser un dictionnaire contenant les jours de chaque mois : nb_jours = { 1:31, 2:28, 3:31, 4:30, 5:31 ... } Pour aller plus loin, on pourra tenir compte des ann\u00e9es bissextiles de fa\u00e7on \u00e0 accepter le 29/02/2004 mais pas le 29/02/2005 ! Ecrire et tester une m\u00e9thode sp\u00e9ciale permettant de renvoyer une cha\u00eene de caract\u00e8res de la forme JJ/MM/AAAA pour la date. Proposer et impl\u00e9menter un autre format d'affichage par exemple 5 Avril 2005 pour le 05/04/2005. Ecrire et tester une m\u00e9thode date.lendemain() qui retourne le lendemain de l'objet date . Par exemple si l'objet date correspond au 27/10/2020 alors date.lendemain() doit retourner l'objet date correspondant au 28/10/2020. Ecrire et tester la m\u00e9thode sp\u00e9ciale permettant de tester si une date | date1 est ant\u00e9rieure \u00e0 une autre date2 en \u00e9crivant simplement d1<d2 . Aide Cette m\u00e9thode sp\u00e9ciale est __lt__ Exercice 5 : Cartes \u00e0 jouer Un jeu de cartes traditionnel contient 32 cartes, chaque carte a une couleur (pique, coeur, carreau ou tr\u00e8fle) et une valeur (de 7 \u00e0 10 puis valet, dame, roi et as). Cr\u00e9er une classe Carte ayant deux attributs : couleur et valeur. Ecrire une m\u00e9thode sp\u00e9ciale permettant d'afficher une carte en utilisant le caract\u00e8re unicode qui la repr\u00e9sente. Consulter la page wikipedia de la liste des caract\u00e8re unicode des cartes . Aide En python pour afficher le caract\u00e8re unicode U+1F0A7 , on peut par exemple \u00e9crire print(chr(0x1F0A7)) Ecrire une m\u00e9thode pour comparer deux cartes Utiliser la programmation objet afin de simuler le jeu de la bataille entre deux joueurs. Exercice 6 : Module fraction \u2009 L'\u00e9nonc\u00e9 est au format pdf , t\u00e9l\u00e9chargeable ci-dessous : Ecriture d'un module fraction Exercice 7 : Cryptage selon le code de C\u00e9sar \u2009 Dans cet exercice, on \u00e9tudie une m\u00e9thode de chiffrement de cha\u00eenes de caract\u00e8res alphab\u00e9tiques. Pour des raisons historiques, cette m\u00e9thode de chiffrement est appel\u00e9e \"code de C\u00e9sar\". On consid\u00e8re que les messages ne contiennent que les lettres capitales de l\u2019alphabet \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" et la m\u00e9thode de chiffrement utilise un nombre entier fix\u00e9 appel\u00e9 la cl\u00e9 de chiffrement. Soit la classe CodeCesar d\u00e9finie ci-dessous : class CodeCesar : def __init__ ( self , cle ): self . cle = cle self . alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" def decale ( self , lettre ): num1 = self . alphabet . find ( lettre ) num2 = num1 + self . cle if num2 >= 26 : num2 = num2 - 26 if num2 < 0 : num2 = num2 + 26 nouvelle_lettre = self . alphabet [ num2 ] return nouvelle_lettre On rappelle que la m\u00e9thode str.find(lettre) renvoie l'indice (index) de la lettre dans la cha\u00eene de caract\u00e8res str Repr\u00e9senter le r\u00e9sultat d'ex\u00e9cution du code Python suivant : code1 = CodeCesar ( 3 ) print ( code1 . decale ( 'A' )) print ( code1 . decale ( 'X' )) 2. La m\u00e9thode de chiffrement du \u00ab code C\u00e9sar \u00bb consiste \u00e0 d\u00e9caler les lettres du message dans l\u2019alphabet d'un nombre de rangs fix\u00e9 par la cl\u00e9. Par exemple, avec la cl\u00e9 3, toutes les lettres sont d\u00e9cal\u00e9es de 3 rangs vers la droite : le A devient le D, le B devient le E, etc. Ajouter une m\u00e9thode cryptage(self,texte) dans la classe CodeCesar d\u00e9finie\u00e0 la question pr\u00e9c\u00e9dente, qui re\u00e7oit en param\u00e8tre une cha\u00eene de caract\u00e8res (le message \u00e0 crypter) et qui retourne une cha\u00eene de caract\u00e8res (le message crypt\u00e9). Cette m\u00e9thode cryptage(self, texte) doit crypter la cha\u00eene texte avec la cl\u00e9 de l'objet de la classe CodeCesar qui a \u00e9t\u00e9 instanci\u00e9. Exemple : >>> code1 = CodeCesar ( 3 ) >>> code1 . cryptage ( \"NSI\" ) 'QVL' 3. Ecrire un programme qui : demande de saisir la cl\u00e9 de chiffrement cr\u00e9e un objet de classe CodeCesar demande de saisir le texte \u00e0 chiffrer affiche le texte chiffr\u00e9 en appelant la m\u00e9thode cryptage 4- On ajoute la m\u00e9thode transforme(texte) \u00e0 la classe CodeCesar : def transforme ( self , texte ): self . cle = - self . cle message = self . cryptage ( texte ) self . cle = - self . cle return message On ex\u00e9cute la ligne suivante : print(CodeCesar(10).transforme(\"PSX\")) Que va-t-il s'afficher ? Expliquer votre r\u00e9ponse.","title":"Poo"},{"location":"backup/poo/#c5-notions-de-programmation-oriente-objet","text":"","title":"C5 Notions de programmation orient\u00e9 objet "},{"location":"backup/poo/#activites","text":"","title":"Activit\u00e9s"},{"location":"backup/poo/#activite-1-introduction-a-la-programmation-orientee-objet","text":"Jupyter Notebook","title":"Activit\u00e9 1 : Introduction \u00e0 la programmation orient\u00e9e objet"},{"location":"backup/poo/#activite-2-syntaxe-objet-en-python","text":"On donne le code python suivant : class Duree : def __init__ ( self , heures , minutes , secondes ): self . heures = heures self . minutes = minutes self . secondes = secondes def __str__ ( self ): return f \" { self . heures } h { self . minutes } m { self . secondes } s\" Quelle classe est cr\u00e9e ? Quels sont les attributs des objets de cette classe ? Quelle m\u00e9thode est cr\u00e9e pour les objets de cette classe ? Le record du monde du marathon est actuellement de deux heures, une minute et trente neuf secondes, cr\u00e9er \u00e0 l'aide de la classe ci-dessus un objet record_marathon repr\u00e9sentant cette dur\u00e9e et l'afficher. Ecrire une m\u00e9thode nombre_secondes qui renvoie le nombre de secondes d'un objet dur\u00e9e. L'utiliser pour afficher le record du monde du marathon en secondes. Ajouter une m\u00e9thode ajoute_secondes(nb_secondes) \u00e0 la classe Duree qui permet d'ajouter nb_secondes \u00e0 un objet de type dur\u00e9e.","title":"Activit\u00e9 2 : Syntaxe objet en Python"},{"location":"backup/poo/#activite-3-getters-et-setters","text":"Cr\u00e9er une classe Eleve poss\u00e9dant les attributs suivants : nom, pr\u00e9nom, et classe. Instancier cette classe pour cr\u00e9er l'\u00e9l\u00e8ve spiderman , son nom est Parker, son pr\u00e9nom Peter et il est en premi\u00e8re 5. Quel est l'effet de l'instruction spiderman.classe = 'Terminale 2' ? Important Bien que l'instruction pr\u00e9c\u00e9dente soit correcte, elle est contraire \u00e0 l'esprit de la programmation objet dans lequel l'acc\u00e8s aux attributs d'un objet (ou la modification) devrait toujours se faire par des m\u00e9thodes de l'objet. On respecte ainsi le principe d' encapsulation qui assure que l'utilisation des objets se fait ind\u00e9pendamment de leur structure interne (qui est susceptible d'\u00eatre modifi\u00e9e) Les m\u00e9thodes permettant d'acc\u00e9der \u00e0 un attribut s'appellent des getters (accesseur) et celles permettant de modifier un attribut s'appellent des setter (mutateur) Ecrire une m\u00e9thode permettant d'acc\u00e9der la classe d'un \u00e9l\u00e8ve (le getter ). Ecrire une m\u00e9thode permettant de modifier la classe d'un \u00e9l\u00e8ve (le setter ). Modifier de nouveau (mais cette fois \"proprement\") la classe de spiderman .","title":"Activit\u00e9 3 : Getters et setters"},{"location":"backup/poo/#cours","text":"Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices.","title":"Cours"},{"location":"backup/poo/#exercices","text":"","title":"Exercices"},{"location":"backup/poo/#exercice-1-personnage-dun-jeu-video","text":"Dans un jeu vid\u00e9o, un personnage doit se d\u00e9placer dans un environnement \u00e0 deux dimensions, sa position y est rep\u00e9r\u00e9 par son abscisse et son ordonn\u00e9e. D'autre part ce personnage dispose d'un certain nombre de points de vie qui peuvent \u00e9voluer durant le jeu. On consid\u00e8re la d\u00e9finition de la classe Perso suivante : class Perso : def __init__ ( self , nom ): self . nom = nom self . x = 0 self . y = 0 self . pv = 100 Au d\u00e9part combien de points de vie poss\u00e8de un personnage ? Et \u00e0 quel coordonn\u00e9es du rep\u00e8re est-il positionn\u00e9 ? Lorsqu'un personnage boit une potion de vie, il r\u00e9cup\u00e8re 10 points de vie mais sans d\u00e9passer le maximum de vie qui est 100. Ecrire la m\u00e9thode boit_potion qui impl\u00e9mente ce fonctionnement. Ecrire la m\u00e9thode avance(nbcases) qui permet au personnage d'avancer de nbcases vers l'avant.","title":"Exercice 1 : Personnage d'un jeu vid\u00e9o"},{"location":"backup/poo/#exercice-2-modeliser-un-compte-en-banque","text":"On mod\u00e9lise un compte bancaire par : un num\u00e9ro de compte un nom de titulaire un solde (n\u00e9gatif si le compte est d\u00e9biteur) Ecrire une classe CompteBancaire repr\u00e9sentant cette mod\u00e9lisation Cr\u00e9er le compte n\u00b0421 de M. Tartampion ayant un solde de \\(-125,10\\) \u20ac et le compte n\u00b0 705 de Mme Untel ayant un solde de \\(3120,07\\) \u20ac. Ecrire et tester la m\u00e9thode sp\u00e9ciale __str__ permettant d'afficher l'objet CompteBancaire. Par exemple l'affichage de l'objet repr\u00e9sentant le compte bancaire de M. Tartampion donnera : N\u00b0421 - M. Tartampion : -125,10 euros Ecrire les m\u00e9thodes depot et retrait permettant respectivement d'ajouter ou de retirer une somme d'argent d'un objet CompteBancaire. Ecrire la m\u00e9thode virement permettant de transf\u00e9rer une somme d'argent entre deux comptes. Par exemple si C1 et C2 sont deux objets de type CompteBancaire , alors C1.virement(C2,montant) aura pour effet d'enlever montant euros du compte C1 et de les transf\u00e9rer au compte C2 .","title":"Exercice 2 : Mod\u00e9liser un compte en banque"},{"location":"backup/poo/#exercice-3-un-peu-de-geometrie","text":"On donne la classe Point d\u00e9finie ci-dessous qui repr\u00e9sente un point du plan par son nom et ses coordonn\u00e9es dans un rep\u00e8re. Cette classe est d\u00e9j\u00e0 dot\u00e9e d'une m\u00e9thode d'affichage. class Point : def __init__ ( self , nom , abcisse , ordonnee ): self . nom = nom self . x = abcisse self . y = ordonnee def __str__ ( self ): return f ' { self . nom } ( { self . x } ; { self . y } )' En utilisant cette classe, cr\u00e9er et afficher les points \\(A(3;-2)\\) et \\(B(-1;6)\\) . Ecrire une m\u00e9thode milieu(self,other,nom_milieu) qui renvoie le point milieu du segment ayant pour extr\u00e9mit\u00e9s les deux points pass\u00e9s en param\u00e8tres ( self et other ) en lui donnant le nom contenu dans nom_milieu . Aide On rappelle (mais c'est au programme de classe de seconde) que pour deux points \\(A(x_A,y_A)\\) et \\(B(x_B,y_B)\\) les coordonnes \\(x_I\\) et \\(y_I\\) du milieu \\(I\\) du segment \\([AB]\\) sont : \\(x_I = \\dfrac{x_A+y_B}{2}\\) et \\(y_I = \\dfrac{y_A+y_B}{2}\\) Utiliser cette m\u00e9thode pour calculer le milieu \\(I\\) des points \\(A\\) et \\(B\\) d\u00e9finis plus haut et l'afficher. Aide Vous devrier obtenir \\(I(1;2)\\) Ecrire et tester une m\u00e9thode permettant de calculer la distance entre deux points. Aide On rappelle que pour deux points \\(A(x_A,y_A)\\) et \\(B(x_B,y_B)\\) on a \\(AB = \\sqrt{(x_B-x_A)^2+(y_B-y_A)^2}\\) . D'autre part la fonction racine carr\u00e9e doit \u00eatre import\u00e9e depuis le module math","title":"Exercice 3 : Un peu de g\u00e9om\u00e9trie&thinsp; "},{"location":"backup/poo/#exercice-4-une-classe-date","text":"D\u00e9finir et \u00e9crire le constructeur d'une classe date poss\u00e9dant trois attributs : jour , mois , ann\u00e9e . Ces trois attributs sont entiers, par exemple le 27 octobre 2020 a comme attribut jour : 27 , mois : 10 et ann\u00e9e : 2020 . Affiner le constructeur d\u00e9fini plus haut pour n'accepter que des dates valides, c'est \u00e0 dire avec un mois compris entre 1 et 12 et le jour ne d\u00e9passant pas le nombre de jours du mois. Aide Une id\u00e9e consiste par exemple \u00e0 utiliser un dictionnaire contenant les jours de chaque mois : nb_jours = { 1:31, 2:28, 3:31, 4:30, 5:31 ... } Pour aller plus loin, on pourra tenir compte des ann\u00e9es bissextiles de fa\u00e7on \u00e0 accepter le 29/02/2004 mais pas le 29/02/2005 ! Ecrire et tester une m\u00e9thode sp\u00e9ciale permettant de renvoyer une cha\u00eene de caract\u00e8res de la forme JJ/MM/AAAA pour la date. Proposer et impl\u00e9menter un autre format d'affichage par exemple 5 Avril 2005 pour le 05/04/2005. Ecrire et tester une m\u00e9thode date.lendemain() qui retourne le lendemain de l'objet date . Par exemple si l'objet date correspond au 27/10/2020 alors date.lendemain() doit retourner l'objet date correspondant au 28/10/2020. Ecrire et tester la m\u00e9thode sp\u00e9ciale permettant de tester si une date | date1 est ant\u00e9rieure \u00e0 une autre date2 en \u00e9crivant simplement d1<d2 . Aide Cette m\u00e9thode sp\u00e9ciale est __lt__","title":"Exercice 4 : Une classe date"},{"location":"backup/poo/#exercice-5-cartes-a-jouer","text":"Un jeu de cartes traditionnel contient 32 cartes, chaque carte a une couleur (pique, coeur, carreau ou tr\u00e8fle) et une valeur (de 7 \u00e0 10 puis valet, dame, roi et as). Cr\u00e9er une classe Carte ayant deux attributs : couleur et valeur. Ecrire une m\u00e9thode sp\u00e9ciale permettant d'afficher une carte en utilisant le caract\u00e8re unicode qui la repr\u00e9sente. Consulter la page wikipedia de la liste des caract\u00e8re unicode des cartes . Aide En python pour afficher le caract\u00e8re unicode U+1F0A7 , on peut par exemple \u00e9crire print(chr(0x1F0A7)) Ecrire une m\u00e9thode pour comparer deux cartes Utiliser la programmation objet afin de simuler le jeu de la bataille entre deux joueurs.","title":"Exercice 5 : Cartes \u00e0 jouer"},{"location":"backup/poo/#exercice-6-module-fraction","text":"L'\u00e9nonc\u00e9 est au format pdf , t\u00e9l\u00e9chargeable ci-dessous : Ecriture d'un module fraction","title":"Exercice 6 : Module fraction&thinsp; "},{"location":"backup/poo/#exercice-7-cryptage-selon-le-code-de-cesar","text":"Dans cet exercice, on \u00e9tudie une m\u00e9thode de chiffrement de cha\u00eenes de caract\u00e8res alphab\u00e9tiques. Pour des raisons historiques, cette m\u00e9thode de chiffrement est appel\u00e9e \"code de C\u00e9sar\". On consid\u00e8re que les messages ne contiennent que les lettres capitales de l\u2019alphabet \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" et la m\u00e9thode de chiffrement utilise un nombre entier fix\u00e9 appel\u00e9 la cl\u00e9 de chiffrement. Soit la classe CodeCesar d\u00e9finie ci-dessous : class CodeCesar : def __init__ ( self , cle ): self . cle = cle self . alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" def decale ( self , lettre ): num1 = self . alphabet . find ( lettre ) num2 = num1 + self . cle if num2 >= 26 : num2 = num2 - 26 if num2 < 0 : num2 = num2 + 26 nouvelle_lettre = self . alphabet [ num2 ] return nouvelle_lettre On rappelle que la m\u00e9thode str.find(lettre) renvoie l'indice (index) de la lettre dans la cha\u00eene de caract\u00e8res str Repr\u00e9senter le r\u00e9sultat d'ex\u00e9cution du code Python suivant : code1 = CodeCesar ( 3 ) print ( code1 . decale ( 'A' )) print ( code1 . decale ( 'X' )) 2. La m\u00e9thode de chiffrement du \u00ab code C\u00e9sar \u00bb consiste \u00e0 d\u00e9caler les lettres du message dans l\u2019alphabet d'un nombre de rangs fix\u00e9 par la cl\u00e9. Par exemple, avec la cl\u00e9 3, toutes les lettres sont d\u00e9cal\u00e9es de 3 rangs vers la droite : le A devient le D, le B devient le E, etc. Ajouter une m\u00e9thode cryptage(self,texte) dans la classe CodeCesar d\u00e9finie\u00e0 la question pr\u00e9c\u00e9dente, qui re\u00e7oit en param\u00e8tre une cha\u00eene de caract\u00e8res (le message \u00e0 crypter) et qui retourne une cha\u00eene de caract\u00e8res (le message crypt\u00e9). Cette m\u00e9thode cryptage(self, texte) doit crypter la cha\u00eene texte avec la cl\u00e9 de l'objet de la classe CodeCesar qui a \u00e9t\u00e9 instanci\u00e9. Exemple : >>> code1 = CodeCesar ( 3 ) >>> code1 . cryptage ( \"NSI\" ) 'QVL' 3. Ecrire un programme qui : demande de saisir la cl\u00e9 de chiffrement cr\u00e9e un objet de classe CodeCesar demande de saisir le texte \u00e0 chiffrer affiche le texte chiffr\u00e9 en appelant la m\u00e9thode cryptage 4- On ajoute la m\u00e9thode transforme(texte) \u00e0 la classe CodeCesar : def transforme ( self , texte ): self . cle = - self . cle message = self . cryptage ( texte ) self . cle = - self . cle return message On ex\u00e9cute la ligne suivante : print(CodeCesar(10).transforme(\"PSX\")) Que va-t-il s'afficher ? Expliquer votre r\u00e9ponse.","title":"Exercice 7 : Cryptage selon le code de C\u00e9sar&thinsp; "},{"location":"backup/processus/","text":"C3 Processus Activit\u00e9s Activit\u00e9 1 : Observer les processus Commande ps Consulter l'aide sur la commande ps , quel est le r\u00f4le de cette commande ? Tester la commande ps (sans option) dans un terminal. Qu'est-ce que PID du processus ? Tester les options suivantes de la commande ps et indiquer leur r\u00f4le (en consultant l'aide de la commande ou en faisant vos propres recherches sur le Web ) ps -e (ou ps -A ) ps -f quelle est la signification de la colonne PPID ? ps -x Processus et programme Lancer un terminal et y taper la commande ps sans aucune option, le r\u00e9sultat devrait \u00eatre semblable \u00e0 : PID TTY TIME CMD 19149 pts/3 00:00:00 bash 19336 pts/3 00:00:00 ps On va \u00e0 pr\u00e9sent lancer la calculatrice gnome-calculator \u00e0 partir de ce terminal, pour conserver la main dans le terminal, il faut faire suivre la commande d'un & , il faut donc entrer : gnome-calculator & . Entrer de nouveau la commande ps pour constater l'apparition d'un nouveau processus, noter son PID . Lancer une nouvelle fois et de la m\u00eame fa\u00e7on la calculatrice gnome-calculator . On a donc lanc\u00e9 deux fois le m\u00eame programme , obtient-on deux fois le m\u00eame processus ? Que peut-on en conclure sur les notions de programmes et de processus ? Remarque La commande pstree permet de visualiser les processus sous la forme d'une arboresence. Tuer un processus Recherche la page de documentation de la commande kill . A partir du terminal arr\u00eater les processus gnome-calculator cr\u00e9es \u00e0 la question pr\u00e9c\u00e9dente. Les commandes top (ou en version \"am\u00e9lior\u00e9e\" htop ), permettent de visualiser un affichage dynamique des processus, contrairement \u00e0 un ps qui les listent \u00e0 un instant donn\u00e9. Tester ces commandes Rechercher la signification de la colonne S , quelles sont les valeurs possibles ? Rechercher la signification de la colonne NI . Comment interpr\u00e9ter les valeurs de cette colonne ? Activit\u00e9 2 : Le diner des philosophes Consulter la page wikipedia du probl\u00e8me du diner des philosophes pour comprendre le probl\u00e8me. Que se passe-t-il s'il n'y a que deux philosophes et que chacun de ces deux philosophes prend la fourchette situ\u00e9e \u00e0 sa gauche ? Aide On rappelle que : S'il y a 2 philosophes, alors il y a deux fourchettes. Un philosophe a besoin de deux fourchettes pour manger. Par rapport aux vocabulaire des syst\u00e8mes d'exploitation, que repr\u00e9sentent les philosophes ? les fourchettes ? Dans le vocabulaire des processus, comment appelle-t-on la situation de la question 2. ? Cours Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices. Exercices Exercice 1 : Commandes Linux Rappeler le r\u00f4le des commandes suivantes : ps pstree top (ou htop ) kill Quelles commandes permettent d'effectuer les actions suivantes : Afficher les processus en cours de l'utilisateur toto Tuer le processus ayant pour PID 12139 Exercice 2 : Tuer un processus Cr\u00e9er et lancer un programme Python contenant une boucle infinie Aide On pourra par exemple cr\u00e9er un programme affichant les entiers 1,2,3,... Arr\u00eater ce programme \u00e0 partir d'un terminal (rep\u00e9rer d'abord le pid du processus, puis utiliser la commande kill ) Exercice 3 : Interblocage Imaginer, puis illustrer par un sch\u00e9ma, une situation d'interblocage faisant intervenir trois processus P1,P2 et P3 et trois ressources R1, R2 et R3. Exercice 4 : Etats d'un processus \u2009 Cet exercice est extrait d'un sujet de bac de la session 2021 Les \u00e9tats possibles d'un processus sont : pr\u00eat, \u00e9lu, termin\u00e9 et bloqu\u00e9 . Expliquer \u00e0 quoi correspond l'\u00e9tat \u00e9lu Proposer un sch\u00e9ma illustrant les passages entre les diff\u00e9rents \u00e9tats. Exercice 5 : Processus et interblocage \u2009 Cet exercice correspond aux parties A et B d'un sujet de bac de la session 2021 Partie A Pour chacune des questions, une seule des quatres r\u00e9ponses est exacte. Parmi les commandes ci-dessous, laquelle permet d'afficher les processus en cours d'ex\u00e9cution ? dir ps man ls Quelle abr\u00e9viation d\u00e9signe l'identifiant d'un processus dans un syst\u00e8me d'exploitation de type unix ? pix sig pid sid Comment s'appelle la gestion du partage du processeur entre diff\u00e9rents processus ? L'interblocage L'ordonnancement La planification La priorisation Quelle commande permet d'interrompre un processus dans un syst\u00e8me d'exploitation de type unix ? stop interrupt end kill Partie B Un processeur choisit \u00e0 chaque cycle d'ex\u00e9cution le processus qui doit \u00eatre ex\u00e9cut\u00e9. Le tableau ci-dessous donne pour trois processus P1, P2,P3 : - la dur\u00e9e d'ex\u00e9cution (en nombre de cycles), - l'instant d'arriv\u00e9e sur le processeur (exprim\u00e9 en nombre de cycles \u00e0 partir de 0) - le num\u00e9ro de priorit\u00e9 Le num\u00e9ro de priorit\u00e9 est d\u2019autant plus petit que la priorit\u00e9 est grande. On suppose qu\u2019\u00e0 chaque instant, c\u2019est le processus qui a le plus petit num\u00e9ro de priorit\u00e9 qui est ex\u00e9cut\u00e9, ce qui peut provoquer la suspension d\u2019un autre processus, lequel reprendra lorsqu\u2019il sera le plus prioritaire. Processus Dur\u00e9e d'ex\u00e9cution Instant d'arriv\u00e9e Num\u00e9ro de priorit\u00e9 P1 3 3 1 P2 3 2 2 P3 4 0 3 Reproduire le tableau ci-dessous sur la copie et indiquer dans chacune des cases le processus ex\u00e9cut\u00e9 \u00e0 chaque cycle : On suppose maintenant que les trois processus pr\u00e9c\u00e9dents s'ex\u00e9cutent et utilisent une ou plusieurs ressources parmi R1,R2 et R3. Parmi les sc\u00e9narios suivants, lequel provoque un interblocage ? Justifier. Exercice 6 : Gestion des processus et des ressources \u2009 Cet exercice est extrait d'un sujet de bac de la session 2021 Partie A Dans un bureau d\u2019architectes, on dispose de certaines ressources qui ne peuvent \u00eatre utilis\u00e9es simultan\u00e9ment par plus d\u2019un processus, comme l\u2019imprimante, la table tra\u00e7ante, le modem. Chaque programme, lorsqu\u2019il s\u2019ex\u00e9cute, demande l\u2019allocation des ressources qui lui sont n\u00e9cessaires. Lorsqu\u2019il a fini de s\u2019ex\u00e9cuter, il lib\u00e8re ses ressources. On appelle p1, p2 et p3 les processus associ\u00e9s respectivement aux programmes 1,2 et 3. Les processus s'ex\u00e9cutent de mani\u00e8re concurrente. Justifier qu'une situation d'interblocage peut se produire. Modifier l'ordre des instructions du programme 3 pour qu'une telle situation ne puisse pas se produire. Aucune justification n'est attendue. Supposons que le processus p1 demande la table tra\u00e7ante alors qu'elle est en cours d'utilisation par le processus p3. Parmi les \u00e9tats suivants, quel sera l'\u00e9tat du processus p1 tant que la table tra\u00e7ante n'est pas disponible : a) \u00e9lu b) bloqu\u00e9 c) pr\u00eat d) termin\u00e9 Partie B Avec une ligne de commande dans un terminal sous Linux, on obtient l'affichage suivant : La documentation Linux donne la signification des diff\u00e9rents champs : - UID : identifiant utilisateur effectif ; - PID : identifiant de processus ; - PPID : PID du processus parent ; - C : partie enti\u00e8re du pourcentage d'utilisation du processeur par rapport au temps de vie des processus ; - STIME : l'heure de lancement du processus ; - TTY : terminal de contr\u00f4le - TIME : temps d'ex\u00e9cution - CMD : nom de la commande du processus Parmi les quatres commandes suivantes, laquelle a permis cet affichage ? ls -l ps -ef cd .. chmod 741 processus.txt Quel est l'identifiant du processus parent \u00e0 l'origine de tous les processus concernant le navigateur Web (chromium-browser) ? Quel est l'identifiant du processus dont le temps d'ex\u00e9cution est le plus long ? Exercice 7 : Processus et base de donn\u00e9es On suppose qu'on dispose d'une base de donn\u00e9es des processus lanc\u00e9s sur un ordinateur \u00e0 un instant donn\u00e9. Cette base de donn\u00e9es est constitu\u00e9e d'une seule table appel\u00e9e processus et contenant les champs suivants : pid : Le PID du processus ppid : Le PPID du processus user : le nom du propri\u00e9taire du processus priority : la priorit\u00e9 du processus time : le temps d'execution du processus cpu : le pourcentage de ressources cpu utilis\u00e9 par le processus Expliquer pourquoi pid peut-\u00eatre utilis\u00e9 comme cl\u00e9 primaire de cette table et pas user . Le champ ppid peut-il \u00eatre utilis\u00e9 comme cl\u00e9 primaire, pourquoi ? Proposer un type et un domaine pour le champ cpu . Ecrire une requ\u00eate sql permettant d'afficher les processus de l'utilisateur root . Ecrire une requ\u00eate sql permettant d'afficher les trois processus utilisant le plus de ressources cpu. Ecrire une requ\u00eate sql permettant d'obtenir la somme des temps d'ex\u00e9cution des processus. Ecrire une requ\u00eate sql permettant d'obtenir tous les fils du processus de pid 12415.","title":"Processus"},{"location":"backup/processus/#c3-processus","text":"","title":"C3 Processus "},{"location":"backup/processus/#activites","text":"","title":"Activit\u00e9s"},{"location":"backup/processus/#activite-1-observer-les-processus","text":"Commande ps Consulter l'aide sur la commande ps , quel est le r\u00f4le de cette commande ? Tester la commande ps (sans option) dans un terminal. Qu'est-ce que PID du processus ? Tester les options suivantes de la commande ps et indiquer leur r\u00f4le (en consultant l'aide de la commande ou en faisant vos propres recherches sur le Web ) ps -e (ou ps -A ) ps -f quelle est la signification de la colonne PPID ? ps -x Processus et programme Lancer un terminal et y taper la commande ps sans aucune option, le r\u00e9sultat devrait \u00eatre semblable \u00e0 : PID TTY TIME CMD 19149 pts/3 00:00:00 bash 19336 pts/3 00:00:00 ps On va \u00e0 pr\u00e9sent lancer la calculatrice gnome-calculator \u00e0 partir de ce terminal, pour conserver la main dans le terminal, il faut faire suivre la commande d'un & , il faut donc entrer : gnome-calculator & . Entrer de nouveau la commande ps pour constater l'apparition d'un nouveau processus, noter son PID . Lancer une nouvelle fois et de la m\u00eame fa\u00e7on la calculatrice gnome-calculator . On a donc lanc\u00e9 deux fois le m\u00eame programme , obtient-on deux fois le m\u00eame processus ? Que peut-on en conclure sur les notions de programmes et de processus ? Remarque La commande pstree permet de visualiser les processus sous la forme d'une arboresence. Tuer un processus Recherche la page de documentation de la commande kill . A partir du terminal arr\u00eater les processus gnome-calculator cr\u00e9es \u00e0 la question pr\u00e9c\u00e9dente. Les commandes top (ou en version \"am\u00e9lior\u00e9e\" htop ), permettent de visualiser un affichage dynamique des processus, contrairement \u00e0 un ps qui les listent \u00e0 un instant donn\u00e9. Tester ces commandes Rechercher la signification de la colonne S , quelles sont les valeurs possibles ? Rechercher la signification de la colonne NI . Comment interpr\u00e9ter les valeurs de cette colonne ?","title":"Activit\u00e9 1 : Observer les processus"},{"location":"backup/processus/#activite-2-le-diner-des-philosophes","text":"Consulter la page wikipedia du probl\u00e8me du diner des philosophes pour comprendre le probl\u00e8me. Que se passe-t-il s'il n'y a que deux philosophes et que chacun de ces deux philosophes prend la fourchette situ\u00e9e \u00e0 sa gauche ? Aide On rappelle que : S'il y a 2 philosophes, alors il y a deux fourchettes. Un philosophe a besoin de deux fourchettes pour manger. Par rapport aux vocabulaire des syst\u00e8mes d'exploitation, que repr\u00e9sentent les philosophes ? les fourchettes ? Dans le vocabulaire des processus, comment appelle-t-on la situation de la question 2. ?","title":"Activit\u00e9 2 : Le diner des philosophes"},{"location":"backup/processus/#cours","text":"Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices.","title":"Cours"},{"location":"backup/processus/#exercices","text":"","title":"Exercices"},{"location":"backup/processus/#exercice-1-commandes-linux","text":"Rappeler le r\u00f4le des commandes suivantes : ps pstree top (ou htop ) kill Quelles commandes permettent d'effectuer les actions suivantes : Afficher les processus en cours de l'utilisateur toto Tuer le processus ayant pour PID 12139","title":"Exercice 1 : Commandes Linux"},{"location":"backup/processus/#exercice-2-tuer-un-processus","text":"Cr\u00e9er et lancer un programme Python contenant une boucle infinie Aide On pourra par exemple cr\u00e9er un programme affichant les entiers 1,2,3,... Arr\u00eater ce programme \u00e0 partir d'un terminal (rep\u00e9rer d'abord le pid du processus, puis utiliser la commande kill )","title":"Exercice 2 : Tuer un processus"},{"location":"backup/processus/#exercice-3-interblocage","text":"Imaginer, puis illustrer par un sch\u00e9ma, une situation d'interblocage faisant intervenir trois processus P1,P2 et P3 et trois ressources R1, R2 et R3.","title":"Exercice 3 : Interblocage"},{"location":"backup/processus/#exercice-4-etats-dun-processus","text":"Cet exercice est extrait d'un sujet de bac de la session 2021 Les \u00e9tats possibles d'un processus sont : pr\u00eat, \u00e9lu, termin\u00e9 et bloqu\u00e9 . Expliquer \u00e0 quoi correspond l'\u00e9tat \u00e9lu Proposer un sch\u00e9ma illustrant les passages entre les diff\u00e9rents \u00e9tats.","title":"Exercice 4 : Etats d'un processus&thinsp; "},{"location":"backup/processus/#exercice-5-processus-et-interblocage","text":"Cet exercice correspond aux parties A et B d'un sujet de bac de la session 2021","title":"Exercice 5 : Processus et interblocage&thinsp; "},{"location":"backup/processus/#partie-a","text":"Pour chacune des questions, une seule des quatres r\u00e9ponses est exacte. Parmi les commandes ci-dessous, laquelle permet d'afficher les processus en cours d'ex\u00e9cution ? dir ps man ls Quelle abr\u00e9viation d\u00e9signe l'identifiant d'un processus dans un syst\u00e8me d'exploitation de type unix ? pix sig pid sid Comment s'appelle la gestion du partage du processeur entre diff\u00e9rents processus ? L'interblocage L'ordonnancement La planification La priorisation Quelle commande permet d'interrompre un processus dans un syst\u00e8me d'exploitation de type unix ? stop interrupt end kill","title":"Partie A"},{"location":"backup/processus/#partie-b","text":"Un processeur choisit \u00e0 chaque cycle d'ex\u00e9cution le processus qui doit \u00eatre ex\u00e9cut\u00e9. Le tableau ci-dessous donne pour trois processus P1, P2,P3 : - la dur\u00e9e d'ex\u00e9cution (en nombre de cycles), - l'instant d'arriv\u00e9e sur le processeur (exprim\u00e9 en nombre de cycles \u00e0 partir de 0) - le num\u00e9ro de priorit\u00e9 Le num\u00e9ro de priorit\u00e9 est d\u2019autant plus petit que la priorit\u00e9 est grande. On suppose qu\u2019\u00e0 chaque instant, c\u2019est le processus qui a le plus petit num\u00e9ro de priorit\u00e9 qui est ex\u00e9cut\u00e9, ce qui peut provoquer la suspension d\u2019un autre processus, lequel reprendra lorsqu\u2019il sera le plus prioritaire. Processus Dur\u00e9e d'ex\u00e9cution Instant d'arriv\u00e9e Num\u00e9ro de priorit\u00e9 P1 3 3 1 P2 3 2 2 P3 4 0 3 Reproduire le tableau ci-dessous sur la copie et indiquer dans chacune des cases le processus ex\u00e9cut\u00e9 \u00e0 chaque cycle : On suppose maintenant que les trois processus pr\u00e9c\u00e9dents s'ex\u00e9cutent et utilisent une ou plusieurs ressources parmi R1,R2 et R3. Parmi les sc\u00e9narios suivants, lequel provoque un interblocage ? Justifier.","title":"Partie B"},{"location":"backup/processus/#exercice-6-gestion-des-processus-et-des-ressources","text":"Cet exercice est extrait d'un sujet de bac de la session 2021","title":"Exercice 6 : Gestion des processus et des ressources&thinsp; "},{"location":"backup/processus/#partie-a_1","text":"Dans un bureau d\u2019architectes, on dispose de certaines ressources qui ne peuvent \u00eatre utilis\u00e9es simultan\u00e9ment par plus d\u2019un processus, comme l\u2019imprimante, la table tra\u00e7ante, le modem. Chaque programme, lorsqu\u2019il s\u2019ex\u00e9cute, demande l\u2019allocation des ressources qui lui sont n\u00e9cessaires. Lorsqu\u2019il a fini de s\u2019ex\u00e9cuter, il lib\u00e8re ses ressources. On appelle p1, p2 et p3 les processus associ\u00e9s respectivement aux programmes 1,2 et 3. Les processus s'ex\u00e9cutent de mani\u00e8re concurrente. Justifier qu'une situation d'interblocage peut se produire. Modifier l'ordre des instructions du programme 3 pour qu'une telle situation ne puisse pas se produire. Aucune justification n'est attendue. Supposons que le processus p1 demande la table tra\u00e7ante alors qu'elle est en cours d'utilisation par le processus p3. Parmi les \u00e9tats suivants, quel sera l'\u00e9tat du processus p1 tant que la table tra\u00e7ante n'est pas disponible : a) \u00e9lu b) bloqu\u00e9 c) pr\u00eat d) termin\u00e9","title":"Partie A"},{"location":"backup/processus/#partie-b_1","text":"Avec une ligne de commande dans un terminal sous Linux, on obtient l'affichage suivant : La documentation Linux donne la signification des diff\u00e9rents champs : - UID : identifiant utilisateur effectif ; - PID : identifiant de processus ; - PPID : PID du processus parent ; - C : partie enti\u00e8re du pourcentage d'utilisation du processeur par rapport au temps de vie des processus ; - STIME : l'heure de lancement du processus ; - TTY : terminal de contr\u00f4le - TIME : temps d'ex\u00e9cution - CMD : nom de la commande du processus Parmi les quatres commandes suivantes, laquelle a permis cet affichage ? ls -l ps -ef cd .. chmod 741 processus.txt Quel est l'identifiant du processus parent \u00e0 l'origine de tous les processus concernant le navigateur Web (chromium-browser) ? Quel est l'identifiant du processus dont le temps d'ex\u00e9cution est le plus long ?","title":"Partie B"},{"location":"backup/processus/#exercice-7-processus-et-base-de-donnees","text":"On suppose qu'on dispose d'une base de donn\u00e9es des processus lanc\u00e9s sur un ordinateur \u00e0 un instant donn\u00e9. Cette base de donn\u00e9es est constitu\u00e9e d'une seule table appel\u00e9e processus et contenant les champs suivants : pid : Le PID du processus ppid : Le PPID du processus user : le nom du propri\u00e9taire du processus priority : la priorit\u00e9 du processus time : le temps d'execution du processus cpu : le pourcentage de ressources cpu utilis\u00e9 par le processus Expliquer pourquoi pid peut-\u00eatre utilis\u00e9 comme cl\u00e9 primaire de cette table et pas user . Le champ ppid peut-il \u00eatre utilis\u00e9 comme cl\u00e9 primaire, pourquoi ? Proposer un type et un domaine pour le champ cpu . Ecrire une requ\u00eate sql permettant d'afficher les processus de l'utilisateur root . Ecrire une requ\u00eate sql permettant d'afficher les trois processus utilisant le plus de ressources cpu. Ecrire une requ\u00eate sql permettant d'obtenir la somme des temps d'ex\u00e9cution des processus. Ecrire une requ\u00eate sql permettant d'obtenir tous les fils du processus de pid 12415.","title":"Exercice 7 : Processus et base de donn\u00e9es"},{"location":"backup/progression/","text":"Progression sur l'ann\u00e9e Liste des chapitres Titre Dur\u00e9e C0- R\u00e9visions 2 C1- R\u00e9cursivit\u00e9 2 C2- Bases de donn\u00e9es et SQL 2 C3- Processus 1 C4- Diviser pour r\u00e9gner 1 C5- Notions de programmation orient\u00e9 objet 2 C6- Structures de donn\u00e9es lin\u00e9aires 2 C7- Syst\u00e8me sur puce 1 C8- Arbres 2 C9- Sch\u00e9ma relationnel d'une base de donn\u00e9es 2 C10- Algorithmes sur les arbres 2 C11- Graphes 2 C12- Protocoles de routage 2 C13- Recherche textuelle 2 C14- Calculabilit\u00e9, d\u00e9cidabilit\u00e9 2 C15- S\u00e9curisation des communications 2 Th\u00e8mes trait\u00e9s sur l'ann\u00e9e : Histoire de l'informatique Projet","title":"Progression sur l'ann\u00e9e"},{"location":"backup/progression/#progression-sur-lannee","text":"","title":"Progression sur l'ann\u00e9e"},{"location":"backup/progression/#liste-des-chapitres","text":"Titre Dur\u00e9e C0- R\u00e9visions 2 C1- R\u00e9cursivit\u00e9 2 C2- Bases de donn\u00e9es et SQL 2 C3- Processus 1 C4- Diviser pour r\u00e9gner 1 C5- Notions de programmation orient\u00e9 objet 2 C6- Structures de donn\u00e9es lin\u00e9aires 2 C7- Syst\u00e8me sur puce 1 C8- Arbres 2 C9- Sch\u00e9ma relationnel d'une base de donn\u00e9es 2 C10- Algorithmes sur les arbres 2 C11- Graphes 2 C12- Protocoles de routage 2 C13- Recherche textuelle 2 C14- Calculabilit\u00e9, d\u00e9cidabilit\u00e9 2 C15- S\u00e9curisation des communications 2","title":"Liste des chapitres"},{"location":"backup/progression/#themes-traites-sur-lannee","text":"","title":"Th\u00e8mes trait\u00e9s sur l'ann\u00e9e :"},{"location":"backup/progression/#histoire-de-linformatique","text":"","title":" &nbsp; Histoire de l'informatique"},{"location":"backup/progression/#projet","text":"","title":" &nbsp; Projet"},{"location":"backup/projets/","text":"Projets Le programme officiel de l'enseignement de sp\u00e9cialit\u00e9 nsi pr\u00e9cise que : \"Un quart au moins de l\u2019horaire total de la sp\u00e9cialit\u00e9 est r\u00e9serv\u00e9 \u00e0 la conception et \u00e0 l\u2019\u00e9laboration de projets conduits par les \u00e9l\u00e8ves. Les projets r\u00e9alis\u00e9s par les \u00e9l\u00e8ves, sous la conduite du professeur, constituent un apprentissage fondamental tant pour l\u2019appropriation des concepts informatiques que pour l\u2019acquisition de comp\u00e9tences. \" Remarques Un travail r\u00e9gulier et des efforts soutenus sont donc attendus sur la r\u00e9alisation des projets. Les projets donnent lieu a une restitution sous forme de pr\u00e9sentation orale devant la classe. Premier projet Projet 1 : Algorithmes de tri Descriptif Le but du projet est de revenir sur les algorithmes de tru vus en classe de premi\u00e8re et d'en d\u00e9couvrir d'autres (notamment des algorithmes r\u00e9cursifs). Des comparaisons seront \u00e9tablis sur ces divers algorithmes (complexit\u00e9). Crit\u00e8re de r\u00e9ussites [2 pts] Savoir expliquer l'algorithme du tri par s\u00e9lection. Ecrire une impl\u00e9mentation de cet algorithme en Python. [2 pts] Savoir expliquer l'algorithme du tri par insertion. Ecrire une impl\u00e9mentation de cet algorithme en Python. [4 pts] Faire des recherches sur le tri \u00e0 bulles , en pr\u00e9senter le principe en montrant un exemple. Ecrire et tester une impl\u00e9mentation en Python. [8 pts] Faire des recherches sur le tri fusion , en pr\u00e9senter le principe en montrant un exemple. Ecrire et tester une impl\u00e9mentation en Python (avec la r\u00e9cursivit\u00e9). [4 pts] Faire une synth\u00e8se comparative des ces algorithmes de tri. [Bonus] Pr\u00e9senter d'autres algorithmes de tri (par exemple le quicksort ). Projet 2 : Programmer un jeu avec une interface graphique Descriptif Le but du projet est de programmer un jeu en Python avec une interface graphique. On privil\u00e9giera l'utilisation du module turtle de Python pour l'interface graphique. Les autres possibilit\u00e9s (notamment le module tkinter ) sont d\u00e9conseill\u00e9es pour le moment. Les interactions avec l'utilisateur se feront via la saisie de cha\u00eene de caract\u00e8res ( textinput de turtle ) ou via la gestion d'\u00e9v\u00e9nements dans la fen\u00eatre turtle . Attention Les crit\u00e8res de r\u00e9ussite pour ce projet sont donn\u00e9s pour le jeu Othello . Les crit\u00e8res de r\u00e9ussite seront adapt\u00e9s si un autre jeu est propos\u00e9. A titre d'exemples, on peut programmer les jeux suivants : Dames, Puissance4, D\u00e9mineur, Mastermind, Pong, Snake, Casse-brique, ... Crit\u00e8res de r\u00e9ussites [2 pts] Faire des recherches sur le jeu, en avoir compris les r\u00e8gles et savoir les pr\u00e9senter. [4 pts] Mettre en place une repr\u00e9sentation interne \u00e0 Python du plateau de jeu et pouvoir l'afficher. [4 pts] V\u00e9rifier qu'un coup propos\u00e9 par le joueur est valide, modifier le contenu du plateau de jeu en cons\u00e9quence. A ce stade du projet, une partie est d\u00e9j\u00e0 possible entre deux joueurs humains. [4 pts] Int\u00e9grer la possibilit\u00e9 de sauvegarder une partie en cours. Il faut donc d\u00e9cider d'une repr\u00e9sentation sous forme de fichier texte d'une partie (\u00e9tat du plateau, nom des joueurs, ...). [6 pts] Int\u00e9grer la possibilit\u00e9 de jouer contre l'ordinateur en programmant une strat\u00e9gie pour lui. La plus simple \u00e9tant que l'ordinateur joue le coup qui retourne le maximum de disque en sa faveur. [Bonus] Rajouter des options aux jeu (chronom\u00e8tre, couleurs, aspect graphique du plateau, sons, ...). Programmer plusieurs strat\u00e9gies de jeu pour l'ordinateur. Projet 3 : Programmer un traceur de fonctions Descriptif Le but de ce projet est de programmer un traceur de fonctions comme sur les calculatrices graphiques en utilisant le module turtle . Comme sur une calculatrice, on proposera : une touche \\(f(x)\\) permettant d'entrer l'expression des fonctions, une touche fen\u00eatre permettant de d\u00e9finir le rep\u00e8re, une touche graph permettant de tracer et de visualiser le graphique. Crit\u00e8res de r\u00e9ussites [4 pts] Pouvoir entrer une fonction sous la forme d'une cha\u00eene de caract\u00e8res et l'\u00e9valuer (penser \u00e0 utiliser la fonction eval de Python). Faire un pr\u00e9traitement de l'expression de la fonction afin de signaler une erreur \u00e9ventuelle \u00e0 l'utilisateur (erreur de parenth\u00e9sage par exemple). [4 pts] Pouvoir d\u00e9finir un rep\u00e8re et le tracer \u00e0 l'aide de turtle . Attention ici \u00e0 faire correspondre la taille de la fen\u00eatre graphique avec les dimensions du rep\u00e8re donn\u00e9 par l'utilisateur. [4 pts] Ecrire la partie permettant de tracer les fonctions. Attention au domaine de d\u00e9finition de la fonction. [4 pts] Ajouter des fonctionnalit\u00e9s annexes (couleurs, \u00e9paisseurs et style des traits, graduations, ...) [4 pts] Int\u00e9grer la possibilit\u00e9 d'effectuer des lectures graphiques en affichant par exemple l'abscisse et l'ordonn\u00e9e d'un point quelconque de la courbe. [Bonus] Int\u00e9grer des fonctionnalit\u00e9s comme le zoom sur une partie du graphique Projet 4 : R\u00e9soudre le probl\u00e8me des huit reines Descriptif Le but du projet est d'\u00e9crire un programme permettant de r\u00e9soudre le probl\u00e8me des huit reines (ou dames) . Ce probl\u00e8me est un grand classique de la programmation r\u00e9cursive. Dans ce projet, on s'int\u00e9resse aussi \u00e0 la r\u00e9alisation d'une sortie graphique (avec turtle ) et \u00e0 la possibilit\u00e9 de rechercher \u00e0 la main des solutions en s'aidant de cette interface. Crit\u00e8res de r\u00e9ussites [4 pts] Comprendre le probl\u00e8me, savoir indiquer si une configuration est ou non une solution. Savoir rechercher \u00e0 la main une solution au probl\u00e8me. [4 pts] R\u00e9aliser l'interface graphique permettant de repr\u00e9senter l'\u00e9chiquier et les dames. [2 pts] R\u00e9aliser une interface permettant de placer les reines en indiquant au fur et \u00e0 mesure du placement les places encores disponibles pour une reine. [2 pts] Faire des recherches sur un algorithme r\u00e9cursif appel\u00e9 backtracking qui permet de r\u00e9soudre efficacement ce probl\u00e8me. On pourra par exemple consulter ce site [6 pts] Programmer cet algorithme pour donner les 92 solutions du probl\u00e8me. [2 pts] Acc\u00e9l\u00e9rer votre algorithme en tenant compte des sym\u00e9tries du probl\u00e8me. [Bonus] R\u00e9soudre par le m\u00eame proc\u00e9d\u00e9 un probl\u00e8me similaire, par exemple le probl\u00e8me du cavalier Projet 5 : Programmer le jeu de la vie Descriptif Le but du projet est de r\u00e9aliser une interface graphique permettant de visualiser les \u00e9tapes du jeu de la vie . Afin de simplifier le probl\u00e8me, on supposera dans un premier temps que le plateau de jeu est limit\u00e9 en taille. Crit\u00e8res de r\u00e9ussites [2 pts] Avoir compris et pouvoir expliquer les r\u00e8gles du jeu de la vie. Savoir pr\u00e9dire l'\u00e9volution d'une configuration simple. [4 pts] R\u00e9aliser l'interface graphique permettant de visualiser une configuration. [6 pts] Programmer l'\u00e9volution d'une configuration et sa visualisation \u00e0 chaque \u00e9tape. [2 pts] Int\u00e9grer des options de couleurs pour les cellules (par exemple sur la page wikipedia, les cellules bleues sont en cours de vie, les vertes naissent, les rouges meurent ...) [2 pts] Am\u00e9liorer l'interface de fa\u00e7on \u00e0 pouvoir rapidement int\u00e9grer des motifs classiques (oscillateurs, vaisseaux, ...) et suivre leur \u00e9volution [4 pts] Ajouter la possibilit\u00e9 de sauvegarder un motif sous la forme d'un fichier texte et donc de charger un motif lu dans un fichier texte externe. [Bonus] Reproduire l'\u00e9volution des motifs de la page wikipedia \u00e0 l'aide de votre programme. Projet 6 : Projet libre Descriptif Projet libre au choix de l'\u00e9l\u00e8ve mais soumis \u00e0 la validation pr\u00e9alable de l'enseignant. Crit\u00e8res de r\u00e9ussite Les crit\u00e8res de r\u00e9ussites seront \u00e9tablis avec l'\u00e9l\u00e8ve en fonction du projet choisi.","title":"Projets"},{"location":"backup/projets/#projets","text":"Le programme officiel de l'enseignement de sp\u00e9cialit\u00e9 nsi pr\u00e9cise que : \"Un quart au moins de l\u2019horaire total de la sp\u00e9cialit\u00e9 est r\u00e9serv\u00e9 \u00e0 la conception et \u00e0 l\u2019\u00e9laboration de projets conduits par les \u00e9l\u00e8ves. Les projets r\u00e9alis\u00e9s par les \u00e9l\u00e8ves, sous la conduite du professeur, constituent un apprentissage fondamental tant pour l\u2019appropriation des concepts informatiques que pour l\u2019acquisition de comp\u00e9tences. \" Remarques Un travail r\u00e9gulier et des efforts soutenus sont donc attendus sur la r\u00e9alisation des projets. Les projets donnent lieu a une restitution sous forme de pr\u00e9sentation orale devant la classe.","title":"Projets"},{"location":"backup/projets/#premier-projet","text":"","title":"Premier projet"},{"location":"backup/projets/#projet-1-algorithmes-de-tri","text":"","title":"Projet 1 : Algorithmes de tri"},{"location":"backup/projets/#descriptif","text":"Le but du projet est de revenir sur les algorithmes de tru vus en classe de premi\u00e8re et d'en d\u00e9couvrir d'autres (notamment des algorithmes r\u00e9cursifs). Des comparaisons seront \u00e9tablis sur ces divers algorithmes (complexit\u00e9).","title":"Descriptif"},{"location":"backup/projets/#critere-de-reussites","text":"[2 pts] Savoir expliquer l'algorithme du tri par s\u00e9lection. Ecrire une impl\u00e9mentation de cet algorithme en Python. [2 pts] Savoir expliquer l'algorithme du tri par insertion. Ecrire une impl\u00e9mentation de cet algorithme en Python. [4 pts] Faire des recherches sur le tri \u00e0 bulles , en pr\u00e9senter le principe en montrant un exemple. Ecrire et tester une impl\u00e9mentation en Python. [8 pts] Faire des recherches sur le tri fusion , en pr\u00e9senter le principe en montrant un exemple. Ecrire et tester une impl\u00e9mentation en Python (avec la r\u00e9cursivit\u00e9). [4 pts] Faire une synth\u00e8se comparative des ces algorithmes de tri. [Bonus] Pr\u00e9senter d'autres algorithmes de tri (par exemple le quicksort ).","title":"Crit\u00e8re de r\u00e9ussites"},{"location":"backup/projets/#projet-2-programmer-un-jeu-avec-une-interface-graphique","text":"","title":"Projet 2 : Programmer un jeu avec une interface graphique"},{"location":"backup/projets/#descriptif_1","text":"Le but du projet est de programmer un jeu en Python avec une interface graphique. On privil\u00e9giera l'utilisation du module turtle de Python pour l'interface graphique. Les autres possibilit\u00e9s (notamment le module tkinter ) sont d\u00e9conseill\u00e9es pour le moment. Les interactions avec l'utilisateur se feront via la saisie de cha\u00eene de caract\u00e8res ( textinput de turtle ) ou via la gestion d'\u00e9v\u00e9nements dans la fen\u00eatre turtle . Attention Les crit\u00e8res de r\u00e9ussite pour ce projet sont donn\u00e9s pour le jeu Othello . Les crit\u00e8res de r\u00e9ussite seront adapt\u00e9s si un autre jeu est propos\u00e9. A titre d'exemples, on peut programmer les jeux suivants : Dames, Puissance4, D\u00e9mineur, Mastermind, Pong, Snake, Casse-brique, ...","title":"Descriptif"},{"location":"backup/projets/#criteres-de-reussites","text":"[2 pts] Faire des recherches sur le jeu, en avoir compris les r\u00e8gles et savoir les pr\u00e9senter. [4 pts] Mettre en place une repr\u00e9sentation interne \u00e0 Python du plateau de jeu et pouvoir l'afficher. [4 pts] V\u00e9rifier qu'un coup propos\u00e9 par le joueur est valide, modifier le contenu du plateau de jeu en cons\u00e9quence. A ce stade du projet, une partie est d\u00e9j\u00e0 possible entre deux joueurs humains. [4 pts] Int\u00e9grer la possibilit\u00e9 de sauvegarder une partie en cours. Il faut donc d\u00e9cider d'une repr\u00e9sentation sous forme de fichier texte d'une partie (\u00e9tat du plateau, nom des joueurs, ...). [6 pts] Int\u00e9grer la possibilit\u00e9 de jouer contre l'ordinateur en programmant une strat\u00e9gie pour lui. La plus simple \u00e9tant que l'ordinateur joue le coup qui retourne le maximum de disque en sa faveur. [Bonus] Rajouter des options aux jeu (chronom\u00e8tre, couleurs, aspect graphique du plateau, sons, ...). Programmer plusieurs strat\u00e9gies de jeu pour l'ordinateur.","title":"Crit\u00e8res de r\u00e9ussites"},{"location":"backup/projets/#projet-3-programmer-un-traceur-de-fonctions","text":"","title":"Projet 3 : Programmer un traceur de fonctions"},{"location":"backup/projets/#descriptif_2","text":"Le but de ce projet est de programmer un traceur de fonctions comme sur les calculatrices graphiques en utilisant le module turtle . Comme sur une calculatrice, on proposera : une touche \\(f(x)\\) permettant d'entrer l'expression des fonctions, une touche fen\u00eatre permettant de d\u00e9finir le rep\u00e8re, une touche graph permettant de tracer et de visualiser le graphique.","title":"Descriptif"},{"location":"backup/projets/#criteres-de-reussites_1","text":"[4 pts] Pouvoir entrer une fonction sous la forme d'une cha\u00eene de caract\u00e8res et l'\u00e9valuer (penser \u00e0 utiliser la fonction eval de Python). Faire un pr\u00e9traitement de l'expression de la fonction afin de signaler une erreur \u00e9ventuelle \u00e0 l'utilisateur (erreur de parenth\u00e9sage par exemple). [4 pts] Pouvoir d\u00e9finir un rep\u00e8re et le tracer \u00e0 l'aide de turtle . Attention ici \u00e0 faire correspondre la taille de la fen\u00eatre graphique avec les dimensions du rep\u00e8re donn\u00e9 par l'utilisateur. [4 pts] Ecrire la partie permettant de tracer les fonctions. Attention au domaine de d\u00e9finition de la fonction. [4 pts] Ajouter des fonctionnalit\u00e9s annexes (couleurs, \u00e9paisseurs et style des traits, graduations, ...) [4 pts] Int\u00e9grer la possibilit\u00e9 d'effectuer des lectures graphiques en affichant par exemple l'abscisse et l'ordonn\u00e9e d'un point quelconque de la courbe. [Bonus] Int\u00e9grer des fonctionnalit\u00e9s comme le zoom sur une partie du graphique","title":"Crit\u00e8res de r\u00e9ussites"},{"location":"backup/projets/#projet-4-resoudre-le-probleme-des-huit-reines","text":"","title":"Projet 4 : R\u00e9soudre le probl\u00e8me des huit reines"},{"location":"backup/projets/#descriptif_3","text":"Le but du projet est d'\u00e9crire un programme permettant de r\u00e9soudre le probl\u00e8me des huit reines (ou dames) . Ce probl\u00e8me est un grand classique de la programmation r\u00e9cursive. Dans ce projet, on s'int\u00e9resse aussi \u00e0 la r\u00e9alisation d'une sortie graphique (avec turtle ) et \u00e0 la possibilit\u00e9 de rechercher \u00e0 la main des solutions en s'aidant de cette interface.","title":"Descriptif"},{"location":"backup/projets/#criteres-de-reussites_2","text":"[4 pts] Comprendre le probl\u00e8me, savoir indiquer si une configuration est ou non une solution. Savoir rechercher \u00e0 la main une solution au probl\u00e8me. [4 pts] R\u00e9aliser l'interface graphique permettant de repr\u00e9senter l'\u00e9chiquier et les dames. [2 pts] R\u00e9aliser une interface permettant de placer les reines en indiquant au fur et \u00e0 mesure du placement les places encores disponibles pour une reine. [2 pts] Faire des recherches sur un algorithme r\u00e9cursif appel\u00e9 backtracking qui permet de r\u00e9soudre efficacement ce probl\u00e8me. On pourra par exemple consulter ce site [6 pts] Programmer cet algorithme pour donner les 92 solutions du probl\u00e8me. [2 pts] Acc\u00e9l\u00e9rer votre algorithme en tenant compte des sym\u00e9tries du probl\u00e8me. [Bonus] R\u00e9soudre par le m\u00eame proc\u00e9d\u00e9 un probl\u00e8me similaire, par exemple le probl\u00e8me du cavalier","title":"Crit\u00e8res de r\u00e9ussites"},{"location":"backup/projets/#projet-5-programmer-le-jeu-de-la-vie","text":"","title":"Projet 5 : Programmer le jeu de la vie"},{"location":"backup/projets/#descriptif_4","text":"Le but du projet est de r\u00e9aliser une interface graphique permettant de visualiser les \u00e9tapes du jeu de la vie . Afin de simplifier le probl\u00e8me, on supposera dans un premier temps que le plateau de jeu est limit\u00e9 en taille.","title":"Descriptif"},{"location":"backup/projets/#criteres-de-reussites_3","text":"[2 pts] Avoir compris et pouvoir expliquer les r\u00e8gles du jeu de la vie. Savoir pr\u00e9dire l'\u00e9volution d'une configuration simple. [4 pts] R\u00e9aliser l'interface graphique permettant de visualiser une configuration. [6 pts] Programmer l'\u00e9volution d'une configuration et sa visualisation \u00e0 chaque \u00e9tape. [2 pts] Int\u00e9grer des options de couleurs pour les cellules (par exemple sur la page wikipedia, les cellules bleues sont en cours de vie, les vertes naissent, les rouges meurent ...) [2 pts] Am\u00e9liorer l'interface de fa\u00e7on \u00e0 pouvoir rapidement int\u00e9grer des motifs classiques (oscillateurs, vaisseaux, ...) et suivre leur \u00e9volution [4 pts] Ajouter la possibilit\u00e9 de sauvegarder un motif sous la forme d'un fichier texte et donc de charger un motif lu dans un fichier texte externe. [Bonus] Reproduire l'\u00e9volution des motifs de la page wikipedia \u00e0 l'aide de votre programme.","title":"Crit\u00e8res de r\u00e9ussites"},{"location":"backup/projets/#projet-6-projet-libre","text":"","title":"Projet 6 :  Projet libre"},{"location":"backup/projets/#descriptif_5","text":"Projet libre au choix de l'\u00e9l\u00e8ve mais soumis \u00e0 la validation pr\u00e9alable de l'enseignant.","title":"Descriptif"},{"location":"backup/projets/#criteres-de-reussite","text":"Les crit\u00e8res de r\u00e9ussites seront \u00e9tablis avec l'\u00e9l\u00e8ve en fonction du projet choisi.","title":"Crit\u00e8res de r\u00e9ussite"},{"location":"backup/puces/","text":"C7 Syst\u00e8me sur puce Activit\u00e9s Activit\u00e9 1 : R\u00e9visions T\u00e9l\u00e9charger le cours de premi\u00e8re sur l'architecture des ordinateurs pour revoir le mod\u00e8le de Von Neumann. Tester vos connaissances en : r\u00e9pondant aux QCM du chapitre de premi\u00e8re (les cinq premi\u00e8res questions) Faisant l'exercice 2 du chapitre du chapitre de premi\u00e8re Activit\u00e9 2 : Syst\u00e8me sur puces En faisant vos propres recherches sur le Web , ou en utilisant les ressources suivantes : Le site Pixee Mon lyc\u00e9e num\u00e9rique qkzk R\u00e9pondre aux questions suivantes : Qu'est-ce qu'un Syst\u00e8me sur puces ( SoC pour System on Chip en anglais)? Quels sont les avantages d'un Soc ? Quels sont les inconv\u00e9nients d'un SoC ? Cours Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices. Exercices Pas d'exercices pour ce chapitre, il faut avoir assimil\u00e9 les connaissances sur les SoC et pouvoir r\u00e9pondre \u00e0 des questions de cours, voir par exemple la question 1 du sujet de Bac Am\u00e9rique du Nord 2021","title":"Puces"},{"location":"backup/puces/#c7-systeme-sur-puce","text":"","title":"C7 Syst\u00e8me sur puce "},{"location":"backup/puces/#activites","text":"","title":"Activit\u00e9s"},{"location":"backup/puces/#activite-1-revisions","text":"T\u00e9l\u00e9charger le cours de premi\u00e8re sur l'architecture des ordinateurs pour revoir le mod\u00e8le de Von Neumann. Tester vos connaissances en : r\u00e9pondant aux QCM du chapitre de premi\u00e8re (les cinq premi\u00e8res questions) Faisant l'exercice 2 du chapitre du chapitre de premi\u00e8re","title":"Activit\u00e9 1 : R\u00e9visions"},{"location":"backup/puces/#activite-2-systeme-sur-puces","text":"En faisant vos propres recherches sur le Web , ou en utilisant les ressources suivantes : Le site Pixee Mon lyc\u00e9e num\u00e9rique qkzk R\u00e9pondre aux questions suivantes : Qu'est-ce qu'un Syst\u00e8me sur puces ( SoC pour System on Chip en anglais)? Quels sont les avantages d'un Soc ? Quels sont les inconv\u00e9nients d'un SoC ?","title":"Activit\u00e9 2 : Syst\u00e8me sur puces"},{"location":"backup/puces/#cours","text":"Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices.","title":"Cours"},{"location":"backup/puces/#exercices","text":"Pas d'exercices pour ce chapitre, il faut avoir assimil\u00e9 les connaissances sur les SoC et pouvoir r\u00e9pondre \u00e0 des questions de cours, voir par exemple la question 1 du sujet de Bac Am\u00e9rique du Nord 2021","title":"Exercices"},{"location":"backup/recursivite/","text":"C1 R\u00e9cursivit\u00e9 Activit\u00e9s Activit\u00e9 1 : A la d\u00e9couverte de la r\u00e9cursivit\u00e9 Ecrire un programme Python permettant de tracer la spirale de carr\u00e9 suivante sachant que : Le c\u00f4t\u00e9 du grand carr\u00e9 initial mesure 200 pixels Le coin inf\u00e9rieur gauche des carr\u00e9s est l'origine du rep\u00e8re A chaque \u00e9tape les carr\u00e9s tournent de 20\u00b0 A chaque \u00e9tape la c\u00f4t\u00e9 du carr\u00e9 diminue de 10% de sa longueur. On interrompt la construction lorsque la taille est inf\u00e9rieure ou \u00e9gale \u00e0 10 pixels Pour r\u00e9aliser le dessin ci-dessus vous avez probablement utilis\u00e9 une boucle, votre programme est dit it\u00e9ratif . Remarquons \u00e0 pr\u00e9sent que cette spirale peut se d\u00e9composer en un premier carr\u00e9 (en trait \u00e9pais ci dessous), suivi d'une spirale de carr\u00e9s (en gris et traits fin ci-dessous) : On pourrait donc d\u00e9finir qu'une spirale est constitu\u00e9e (compl\u00e9ter): d'un ..... et d'une ........... plus petite ! La particularit\u00e9 de ce type de d\u00e9finition est de faire appel \u00e0 elle-m\u00eame, on, dit qu'elle est r\u00e9cursive . Construction r\u00e9cursive d'une spirale. En utilisant la d\u00e9finition pr\u00e9c\u00e9dente, compl\u00e9ter le code de la fonction Python suivant : def spirale_recursive ( tortue , taille ): # Un carr\u00e9 carre ( tortue , taille ) # Et une spirale plus petite tortue . left ( .... ) taille = ....... spirale_recursive ( tortue , taille ) Quelle est la particularit\u00e9 de cette fonction ? Que se passe-t-il \u00e0 l'ex\u00e9cution ? Pourquoi ? Modifier la d\u00e9finition de cette fonction en introduisant la condition d'arr\u00eat ( taille<=10 ) Proposer une d\u00e9finition r\u00e9cursive d'un escalier, en d\u00e9duire une construction r\u00e9cursive de la figure suivante : Activit\u00e9 2 : D'autres exemples de r\u00e9cursivit\u00e9 Somme des n premiers entiers Ecrire une fonction python somme(n) it\u00e9rative qui calcule la somme des n premiers entiers. Par exemple somme(5) renvoie 15 puisque 1+2+3+4+5=15 . Compl\u00e9ter l'\u00e9galit\u00e9 math\u00e9matique suivante entre somme(n) et somme(n-1) : somme(n) = somme(n-1) + ... En d\u00e9duire une version r\u00e9cursive de la fonction somme(n) \u00c9crire \u00e0 l'envers Compl\u00e9ter puis tester le code de la fonction Python ci-dessous qui prend en argument une chaine de caract\u00e8re et la renvoie \u00e9crite \u00e0 l'envers def envers ( chaine ): resultat = \"\" for caractere in ..... : resultat = ...... + resultat return ..... On d\u00e9compose une chaine en chaine = debut + dernier caract\u00e8re , compl\u00e9ter la d\u00e9finition r\u00e9cursive suivante : envers(chaine) = .......... + envers(.......) En d\u00e9duire une version r\u00e9cursive de la fonction envers Aide On pourra \u00e9crire au pr\u00e9alable une fonction debut(chaine) qui renvoie la chaine priv\u00e9e de son dernier caract\u00e8re. On rapelle que le dernier caract\u00e8re de chaine s'obtient avec chaine[-1] . Activit\u00e9 3 : Soulever le capot de la r\u00e9cursivit\u00e9 Se rendre sur le site Python tutor , un outil en ligne permettant de visualiser le fonctionnement d'un programme Python. Laisser les options par d\u00e9faut \u00e0 l'exception de inline primitives don't nest objects [default] ) \u00e0 remplacer par render all objects on the heap (Python/Java) comme ci-dessous : Entrer sur Python tutor le code de fonction somme(n) it\u00e9rative, qu'on teste avec n=5 : def somme ( n ): s = 0 for i in range ( n ): s += i return s test = somme ( 5 ) Suivre l'ex\u00e9cution pas \u00e0 pas du calcul. Faire de m\u00eame mais avec la fonction somme_recursive(n) : def somme_recursive ( n ): if n == 0 : return 0 else : return n + somme_recursive ( n - 1 ) test = somme_recursive ( 5 ) La figure suivante repr\u00e9sente une \u00e9tape de l'ex\u00e9cution. Comment expliquer que les entiers sont \"stock\u00e9s\" \u00e0 droite mais qu'aucun calcul n'a encore \u00e9t\u00e9 effectu\u00e9 ? La colonne de droite o\u00f9 sont stock\u00e9s les entiers s'appelle une pile , ( heap en anglais). La taille maximale de cette pile est la profondeur maximale de r\u00e9cursion ( recursion depth ). Quitter Python Tutor et tester la fonction somme_recursive avec une valeur \u00e9lev\u00e9e de n (par exemple n=3000 ). Que se passe-t-il ? Expliquer. La version it\u00e9rative est-elle concern\u00e9e par ce probl\u00e8me ? Cours Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices. Exercices Exercice 1 : Factorielle \u2009 En math\u00e9matiques, on appel factorielle d'un entier \\(n\\) et on \\(n!\\) le produit de cet entier par tous ceux qui le pr\u00e9c\u00e8dent \u00e0 l'exception de z\u00e9ro. On convient d'autre part que \\(0!=1\\) . Par exemple, \\(5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\\) . Programmer une version it\u00e9rative d'une fonction factorielle(n) qui renvoie factorielle de l'entier positif n pass\u00e9 en argument. Recopier et compl\u00e9ter : \\(n! = n\\times \\underbrace{(n-1) \\times \\dots \\times 1}_{...}\\) \\(n! = n \\times \\dots\\) En d\u00e9duire une version r\u00e9cursive de la fonction factorielle(n) . Exercice 2 : Analyser un programme r\u00e9cursif On consid\u00e8re la fonction mystere ci-dessous : def mystere ( liste ): if len ( liste ) == 1 : return liste [ 0 ] else : if liste [ 0 ] < liste [ 1 ]: liste . pop ( 1 ) else : liste . pop ( 0 ) return mystere ( liste ) Analyser ce programme, en d\u00e9duire le r\u00f4le de cette fonction. Aide Faire fonctionner \"\u00e0 la main\" ce programme sur une liste de petite taille, revoir le r\u00f4le de pop si n\u00e9cessaire. Donner une version it\u00e9rative de cette fonction Exercice 3 : Comprendre un programme r\u00e9cursif On donne le code incomplet d'une fonction r\u00e9cursive permettant de calculer le produit de deux entiers positifs a et b en effectuant uniquement des additions : def produit ( a , b ): if b ==... : return ... else : return ...+ produit ( ... , ... ) Compl\u00e9ter les \u00e9galit\u00e9s suivantes : \\(a \\times 0 = \\dots\\) \\(a \\times b = a + a \\times (\\dots \\dots)\\) Compl\u00e9ter le code de la fonction ci-dessus et la tester Que se passe-t-il si on choisit une valeur assez grande pour b , par exemple 5000 ? Pourquoi ? En est-il de m\u00eame pour de grandes valeurs de a ? Pourquoi ? Am\u00e9liorer le code de cette fonction de fa\u00e7on \u00e0 ce que le d\u00e9passement de pile de r\u00e9cursion n'arrive que lorsque a et b sont tous deux sup\u00e9rieurs \u00e0 la taille maximale. Exercice 4 : Additions et soustractions On suppose qu'on ne dispose que de deux op\u00e9rations : ajouter 1 ou retrancher 1. \u00c9crire \u00e0 l'aide de ces deux op\u00e9rations, une version it\u00e9rative de l'addition de deux entiers. M\u00eame question avec une version r\u00e9cursive. Exercice 5 : Dessin r\u00e9cursif Dessiner une suite de carr\u00e9 imbriqu\u00e9s comme ci-dessous (la carr\u00e9 initial mesure 200 pixels et diminue de 20 pixels \u00e0 chaque carr\u00e9 suivant) Si vous aviez donn\u00e9 une version it\u00e9rative de ce dessin, en faire une version r\u00e9cursive et inversement. Exercice 6 : Comparaison de deux chaines de caract\u00e8res Ecrire de fa\u00e7on it\u00e9rative, une fonction compare(chaine1,chaine2) qui renvoie le nombre de fois o\u00f9 chaine1 et chaine2 ont le m\u00eame caract\u00e8re au m\u00eame emplacement. A titre d'exemples : compare(\"recursif\",\"iteratif\") renvoie 2, compare(\"Python\",\"Javascript\") renvoie 0. \u00c9crire cette m\u00eame fonction de fa\u00e7on r\u00e9cursive. Aide Vous aurez peut \u00eatre besoin d'une fonction reste(chaine) qui renvoie la chaine pass\u00e9e en param\u00e8tre priv\u00e9e de son premier \u00e9l\u00e9ment. Par exemple reste(\"python\") renvoie ython . Ecrire vous m\u00eame cette fonction, ou chercher comment utiliser les slices de Python. Exercice 7 : M\u00e9lange d'une liste \u2009 Cet exercice est extrait d'un sujet de bac de la session 2021 On s'int\u00e9resse dans cet exercice \u00e0 un algorithme de m\u00e9lange des \u00e9l\u00e9ments d'une liste. Pour la suite, il sera utile de disposer d'une fonction echange qui permet d'\u00e9changer dans une liste lst les \u00e9l\u00e9ments d'indice i1 et i2. Expliquer pourquoi le code Python ci-dessous ne r\u00e9alise pas cet \u00e9change et en proposer une modification. def echange ( lst , i1 , i2 ): lst [ i2 ] = lst [ i1 ] lst [ i1 ] = lst [ i2 ] La documentation du module random de Python fournit les informations ci-dessous concernant la fonction randint(a,b) : Renvoie un entier al\u00e9atoire N tel que a <= N <= b. Alias pour randrange(a,b+1). Parmi les valeurs ci-dessous, quelles sont celles qui peuvent \u00eatre renvoy\u00e9es par l'appel randint(0, 10) ? 0 1 3.5 9 10 11 Le m\u00e9lange de Fischer Yates est un algorithme permettant de permuter al\u00e9atoirement les \u00e9l\u00e9ments d'une liste. On donne ci-dessous une mise en \u0153uvre r\u00e9cursive de cet algorithme en Python. from random import randint def melange ( lst , ind ): print ( lst ) if ind > 0 : j = randint ( 0 , ind ) echange ( lst , ind , j ) melange ( lst , ind - 1 ) Expliquer pourquoi la fonction melange se termine toujours. Lors de l\u2019appel de la fonction melange , la valeur du param\u00e8tre ind doit \u00eatre \u00e9gal au plus grand indice possible de la liste lst . Pour une liste de longueur n , quel est le nombre d'appels r\u00e9cursifs de la fonction melange effectu\u00e9s, sans compter l\u2019appel initial ? On consid\u00e8re le script ci-dessous : lst = [ v for v in range ( 5 )] melange ( lst , 4 ) On suppose que les valeurs successivement renvoy\u00e9es par la fonction randint sont 2, 1, 2 et 0 . Les deux premiers affichages produits par l'instruction print(lst) de la fonction melange sont : [0,1,2,3,4] [0,1,4,3,2] Donner les affichages suivants produits par la fonction melange Proposer une version it\u00e9rative du m\u00e9lange de Fischer Yates. Exercice 8 : Recherche dichotomique dans un tableau tri\u00e9 \u2009 Rappeler l'algorithme de recherche dichotomique dans un tableau tri\u00e9 vu en classe de premi\u00e8re et donner son fonctionnement sur un exemple simple. Aide Voir cette page du cours de premi\u00e8re. Coder cet algorithme de fa\u00e7on it\u00e9rative Coder cet algorithme de fa\u00e7on r\u00e9cursive Exercice 9 : Flocon de Von Koch \u2009 La courbe de Koch est une figure qui se construit de mani\u00e8re r\u00e9cursive. Le cas de base (ordre 0) s'obtient en tra\u00e7ant un segment de longueur \\(l\\) . Le cas r\u00e9cursif d'ordre \\(n>0\\) s'obtient en effectuant les transformations suivantes : Etape Illustration Commentaire Partager le segment en trois morceaux de longueur \u00e9gale Construire un triangle \u00e9quilat\u00e9ral \u00e0 partir du segment du milieu Supprimer le segment du milieu On a \u00e9crit une fonction courbe_koch permettant de tracer \u00e0 l'aide du module turtle de Python la courbe de Koch en donnant en param\u00e8tre la longueur initiale du segment et l'ordre. On donne ci-dessous ce code incomplet : def courbe_koch ( tortue , longueur , ordre ): if ........ ........ else : ordre =........ longueur =........ courbe_koch ( tortue , longueur , ordre ) ................. courbe_koch ( tortue , longueur , ordre ) ................ courbe_koch ( tortue , longueur , ordre ) ................ courbe_koch ( tortue , longueur , ordre ) Compl\u00e9ter et tester ce code pour tracer une courbe de Koch d'ordre 4. Vous devriez obtenir une figure similaire \u00e0 celle repr\u00e9sent\u00e9e ci-dessous : En utilisant cette fonction construire le flocon de Koch , c'est \u00e0 dire la figure obtenu en construisant les courbe de Koch sur les trois c\u00f4t\u00e9s d'un triangle \u00e9quilat\u00e9ral. Le flocon de Koch est un exemple classique de courbe fractale , construire un autre exemple de fractale : le triangle de Sierpinski . Exercice 10 : Les tours de Hano\u00ef Invent\u00e9 par le math\u00e9maticien fran\u00e7ais Edouard Lucas , les tours de Hano\u00ef sont un jeu de r\u00e9flexion dans lequel on doit d\u00e9placer des disques de tailles croissantes d'une tour de d\u00e9part \u00e0 une tour d'arriv\u00e9e en respectant les contraintes suivantes : on ne peut d\u00e9placer qu'un disque \u00e0 la fois, celui situ\u00e9 en haut de la tour on ne peut jamais d\u00e9placer un disque sur un disque plus petit. Faire quelques parties en ligne \u00e0 cette adresse pour comprendre le jeu. Module hanoi.py T\u00e9l\u00e9charger ci-dessous le module Python Hanoi.py et le sauver dans le r\u00e9pertoire de votre choix. Module Hanoi Ce module propose les fonctions suivantes : dessine_depart(n) qui dessine l'\u00e9tat de d\u00e9part du jeu avec n disques. fin() affiche dans la fen\u00eatre \"Cliquer pour terminer\" et termine le programme apr\u00e8s un clic. deplace_disque(depart,arrive) d\u00e9place le disque de la tour depart \u00e0 la tour arrivee si cela est possible (sinon affiche un message d'erreur). On donne ci-dessous un exemple d'utilisation de ce module, le compl\u00e9ter de fa\u00e7on \u00e0 afficher la r\u00e9solution compl\u00e8te du jeu avec 3 disques. import hanoi hanoi . dessine_depart ( 3 ) hanoi . deplace_disque ( 1 , 3 ) hanoi . fin () R\u00e9solution automatique par r\u00e9cursivit\u00e9 Compl\u00e9ter la description de chacune des \u00e9tapes de la r\u00e9solution du probl\u00e8me pour 6 disques illustr\u00e9es ci-dessous : Etape Illustration Descriptions 6 disques empil\u00e9s sur la tour 1 D\u00e9placement de ... disques de la tour 1 vers la tour .... D\u00e9placement du disque de la tour ... vers la tour ... D\u00e9placement de ... disques de la tour 1 vers la tour .... Exprimer les \u00e9tapes 1 et 3 sous la forme de la r\u00e9solution d'un probl\u00e8me de tours de Hanoi dont on pr\u00e9cisera la tour d'arriv\u00e9e, la tour de d\u00e9part ainsi que le nombre de disque. Compl\u00e9ter : Pour r\u00e9soudre hanoi \u00e0 6 disques : R\u00e9soudre hanoi \u00e0 ... disques D\u00e9placer le disque de taille 6 R\u00e9soudre hanoi \u00e0 ... disques En d\u00e9duire un algorithme r\u00e9cursif pour r\u00e9soudre le probl\u00e8me des tours de Hano\u00ef. Coder et faire fonctionner cet algorithme \u00e0 l'aide des fonctions pr\u00e9sentes dans le module hanoi.py . Exercice 11 : Algorithme d'Euclide de calcul du pgcd \u2009 \u2009 Faites des recherches sur l'algorithme d'Euclide . Que permet de faire cet algorithme ? Faire fonctionner cet algorithme \u00e0 la main avec les valeurs suivantes en donnant les \u00e9tapes: \\(a=48\\) et \\(b=36\\) \\(a=13\\) et \\(b=9\\) Rappeler les instructions Python permettant d'obtenir le reste et le quotient d'une division euclidienne. Donner une impl\u00e9mentation it\u00e9rative de cet algorithme Donner une impl\u00e9mentation r\u00e9cursive de cet algorithme Exercice 12 : Suite de Fibonnaci \u2009 La suite de Fibonnaci \\((f_n)\\) est d\u00e9finie par : \\[\\left\\{ \\begin{array}{lll} f_0&=&0, \\\\ f_1&=&1, \\\\ f_{n}&=&f_{n-1}+f_{n-2} \\mathrm{\\ \\ pour\\ tout\\ \\ } n\\geq2. \\end{array} \\right.\\] C'est \u00e0 dire que chaque terme de la suite est la somme des deux pr\u00e9c\u00e9dents. Calculer \u00e0 la main les premi\u00e8res valeurs de cette suite en compl\u00e9tant le tableau suivant : \\(\\textcolor{darkred}{n}\\) 0 1 \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\textcolor{darkred}{f_n}\\) 0 1 \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) Compl\u00e9ter le code suivant permettant de calculer les termes de cette suite : def fibonnaci ( n ): if n < 2 : return .... else : return ........+............ Tester cette fonction en \u00e9crivant une boucle qui \u00e9crit les termes de la suite de Fibonnaci pour les entiers de 1 \u00e0 50. Que remarquez-vous ? Recopier et compl\u00e9ter le sch\u00e9ma suivant qui montre les appels r\u00e9cursifs n\u00e9cessaires au calcul de \\(f_5\\) . graph TD f5[f5] --> f4[f4] f5 --> f3[f3] f4 --> f32[f3] f4 --> f2[...] f3 --> f33[...] f3 --> f34[...] En d\u00e9duire une explication de la lenteur observ\u00e9e \u00e0 la question 4. Proposer une version it\u00e9rative du calcul du \u00e9ni\u00e8me terme de la suite de Fibonnaci. Pour aller plus loin La vid\u00e9o suivante (en anglais) reprend ce probl\u00e8me et propose une solution pour coder un algorithme plus efficace","title":"Recursivite"},{"location":"backup/recursivite/#c1-recursivite","text":"","title":"C1 R\u00e9cursivit\u00e9 "},{"location":"backup/recursivite/#activites","text":"","title":"Activit\u00e9s"},{"location":"backup/recursivite/#activite-1-a-la-decouverte-de-la-recursivite","text":"Ecrire un programme Python permettant de tracer la spirale de carr\u00e9 suivante sachant que : Le c\u00f4t\u00e9 du grand carr\u00e9 initial mesure 200 pixels Le coin inf\u00e9rieur gauche des carr\u00e9s est l'origine du rep\u00e8re A chaque \u00e9tape les carr\u00e9s tournent de 20\u00b0 A chaque \u00e9tape la c\u00f4t\u00e9 du carr\u00e9 diminue de 10% de sa longueur. On interrompt la construction lorsque la taille est inf\u00e9rieure ou \u00e9gale \u00e0 10 pixels Pour r\u00e9aliser le dessin ci-dessus vous avez probablement utilis\u00e9 une boucle, votre programme est dit it\u00e9ratif . Remarquons \u00e0 pr\u00e9sent que cette spirale peut se d\u00e9composer en un premier carr\u00e9 (en trait \u00e9pais ci dessous), suivi d'une spirale de carr\u00e9s (en gris et traits fin ci-dessous) : On pourrait donc d\u00e9finir qu'une spirale est constitu\u00e9e (compl\u00e9ter): d'un ..... et d'une ........... plus petite ! La particularit\u00e9 de ce type de d\u00e9finition est de faire appel \u00e0 elle-m\u00eame, on, dit qu'elle est r\u00e9cursive . Construction r\u00e9cursive d'une spirale. En utilisant la d\u00e9finition pr\u00e9c\u00e9dente, compl\u00e9ter le code de la fonction Python suivant : def spirale_recursive ( tortue , taille ): # Un carr\u00e9 carre ( tortue , taille ) # Et une spirale plus petite tortue . left ( .... ) taille = ....... spirale_recursive ( tortue , taille ) Quelle est la particularit\u00e9 de cette fonction ? Que se passe-t-il \u00e0 l'ex\u00e9cution ? Pourquoi ? Modifier la d\u00e9finition de cette fonction en introduisant la condition d'arr\u00eat ( taille<=10 ) Proposer une d\u00e9finition r\u00e9cursive d'un escalier, en d\u00e9duire une construction r\u00e9cursive de la figure suivante :","title":"Activit\u00e9 1 : A la d\u00e9couverte de la r\u00e9cursivit\u00e9"},{"location":"backup/recursivite/#activite-2-dautres-exemples-de-recursivite","text":"Somme des n premiers entiers Ecrire une fonction python somme(n) it\u00e9rative qui calcule la somme des n premiers entiers. Par exemple somme(5) renvoie 15 puisque 1+2+3+4+5=15 . Compl\u00e9ter l'\u00e9galit\u00e9 math\u00e9matique suivante entre somme(n) et somme(n-1) : somme(n) = somme(n-1) + ... En d\u00e9duire une version r\u00e9cursive de la fonction somme(n) \u00c9crire \u00e0 l'envers Compl\u00e9ter puis tester le code de la fonction Python ci-dessous qui prend en argument une chaine de caract\u00e8re et la renvoie \u00e9crite \u00e0 l'envers def envers ( chaine ): resultat = \"\" for caractere in ..... : resultat = ...... + resultat return ..... On d\u00e9compose une chaine en chaine = debut + dernier caract\u00e8re , compl\u00e9ter la d\u00e9finition r\u00e9cursive suivante : envers(chaine) = .......... + envers(.......) En d\u00e9duire une version r\u00e9cursive de la fonction envers Aide On pourra \u00e9crire au pr\u00e9alable une fonction debut(chaine) qui renvoie la chaine priv\u00e9e de son dernier caract\u00e8re. On rapelle que le dernier caract\u00e8re de chaine s'obtient avec chaine[-1] .","title":"Activit\u00e9 2 : D'autres exemples de r\u00e9cursivit\u00e9"},{"location":"backup/recursivite/#activite-3-soulever-le-capot-de-la-recursivite","text":"Se rendre sur le site Python tutor , un outil en ligne permettant de visualiser le fonctionnement d'un programme Python. Laisser les options par d\u00e9faut \u00e0 l'exception de inline primitives don't nest objects [default] ) \u00e0 remplacer par render all objects on the heap (Python/Java) comme ci-dessous : Entrer sur Python tutor le code de fonction somme(n) it\u00e9rative, qu'on teste avec n=5 : def somme ( n ): s = 0 for i in range ( n ): s += i return s test = somme ( 5 ) Suivre l'ex\u00e9cution pas \u00e0 pas du calcul. Faire de m\u00eame mais avec la fonction somme_recursive(n) : def somme_recursive ( n ): if n == 0 : return 0 else : return n + somme_recursive ( n - 1 ) test = somme_recursive ( 5 ) La figure suivante repr\u00e9sente une \u00e9tape de l'ex\u00e9cution. Comment expliquer que les entiers sont \"stock\u00e9s\" \u00e0 droite mais qu'aucun calcul n'a encore \u00e9t\u00e9 effectu\u00e9 ? La colonne de droite o\u00f9 sont stock\u00e9s les entiers s'appelle une pile , ( heap en anglais). La taille maximale de cette pile est la profondeur maximale de r\u00e9cursion ( recursion depth ). Quitter Python Tutor et tester la fonction somme_recursive avec une valeur \u00e9lev\u00e9e de n (par exemple n=3000 ). Que se passe-t-il ? Expliquer. La version it\u00e9rative est-elle concern\u00e9e par ce probl\u00e8me ?","title":"Activit\u00e9 3 : Soulever le capot de la r\u00e9cursivit\u00e9"},{"location":"backup/recursivite/#cours","text":"Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices.","title":"Cours"},{"location":"backup/recursivite/#exercices","text":"","title":"Exercices"},{"location":"backup/recursivite/#exercice-1-factorielle","text":"En math\u00e9matiques, on appel factorielle d'un entier \\(n\\) et on \\(n!\\) le produit de cet entier par tous ceux qui le pr\u00e9c\u00e8dent \u00e0 l'exception de z\u00e9ro. On convient d'autre part que \\(0!=1\\) . Par exemple, \\(5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\\) . Programmer une version it\u00e9rative d'une fonction factorielle(n) qui renvoie factorielle de l'entier positif n pass\u00e9 en argument. Recopier et compl\u00e9ter : \\(n! = n\\times \\underbrace{(n-1) \\times \\dots \\times 1}_{...}\\) \\(n! = n \\times \\dots\\) En d\u00e9duire une version r\u00e9cursive de la fonction factorielle(n) .","title":"Exercice 1 : Factorielle&thinsp; "},{"location":"backup/recursivite/#exercice-2-analyser-un-programme-recursif","text":"On consid\u00e8re la fonction mystere ci-dessous : def mystere ( liste ): if len ( liste ) == 1 : return liste [ 0 ] else : if liste [ 0 ] < liste [ 1 ]: liste . pop ( 1 ) else : liste . pop ( 0 ) return mystere ( liste ) Analyser ce programme, en d\u00e9duire le r\u00f4le de cette fonction. Aide Faire fonctionner \"\u00e0 la main\" ce programme sur une liste de petite taille, revoir le r\u00f4le de pop si n\u00e9cessaire. Donner une version it\u00e9rative de cette fonction","title":"Exercice 2 : Analyser un programme r\u00e9cursif"},{"location":"backup/recursivite/#exercice-3-comprendre-un-programme-recursif","text":"On donne le code incomplet d'une fonction r\u00e9cursive permettant de calculer le produit de deux entiers positifs a et b en effectuant uniquement des additions : def produit ( a , b ): if b ==... : return ... else : return ...+ produit ( ... , ... ) Compl\u00e9ter les \u00e9galit\u00e9s suivantes : \\(a \\times 0 = \\dots\\) \\(a \\times b = a + a \\times (\\dots \\dots)\\) Compl\u00e9ter le code de la fonction ci-dessus et la tester Que se passe-t-il si on choisit une valeur assez grande pour b , par exemple 5000 ? Pourquoi ? En est-il de m\u00eame pour de grandes valeurs de a ? Pourquoi ? Am\u00e9liorer le code de cette fonction de fa\u00e7on \u00e0 ce que le d\u00e9passement de pile de r\u00e9cursion n'arrive que lorsque a et b sont tous deux sup\u00e9rieurs \u00e0 la taille maximale.","title":"Exercice 3 : Comprendre un programme r\u00e9cursif"},{"location":"backup/recursivite/#exercice-4-additions-et-soustractions","text":"On suppose qu'on ne dispose que de deux op\u00e9rations : ajouter 1 ou retrancher 1. \u00c9crire \u00e0 l'aide de ces deux op\u00e9rations, une version it\u00e9rative de l'addition de deux entiers. M\u00eame question avec une version r\u00e9cursive.","title":"Exercice 4 : Additions et soustractions"},{"location":"backup/recursivite/#exercice-5-dessin-recursif","text":"Dessiner une suite de carr\u00e9 imbriqu\u00e9s comme ci-dessous (la carr\u00e9 initial mesure 200 pixels et diminue de 20 pixels \u00e0 chaque carr\u00e9 suivant) Si vous aviez donn\u00e9 une version it\u00e9rative de ce dessin, en faire une version r\u00e9cursive et inversement.","title":"Exercice 5 : Dessin r\u00e9cursif"},{"location":"backup/recursivite/#exercice-6-comparaison-de-deux-chaines-de-caracteres","text":"Ecrire de fa\u00e7on it\u00e9rative, une fonction compare(chaine1,chaine2) qui renvoie le nombre de fois o\u00f9 chaine1 et chaine2 ont le m\u00eame caract\u00e8re au m\u00eame emplacement. A titre d'exemples : compare(\"recursif\",\"iteratif\") renvoie 2, compare(\"Python\",\"Javascript\") renvoie 0. \u00c9crire cette m\u00eame fonction de fa\u00e7on r\u00e9cursive. Aide Vous aurez peut \u00eatre besoin d'une fonction reste(chaine) qui renvoie la chaine pass\u00e9e en param\u00e8tre priv\u00e9e de son premier \u00e9l\u00e9ment. Par exemple reste(\"python\") renvoie ython . Ecrire vous m\u00eame cette fonction, ou chercher comment utiliser les slices de Python.","title":"Exercice 6 : Comparaison de deux chaines de caract\u00e8res"},{"location":"backup/recursivite/#exercice-7-melange-dune-liste","text":"Cet exercice est extrait d'un sujet de bac de la session 2021 On s'int\u00e9resse dans cet exercice \u00e0 un algorithme de m\u00e9lange des \u00e9l\u00e9ments d'une liste. Pour la suite, il sera utile de disposer d'une fonction echange qui permet d'\u00e9changer dans une liste lst les \u00e9l\u00e9ments d'indice i1 et i2. Expliquer pourquoi le code Python ci-dessous ne r\u00e9alise pas cet \u00e9change et en proposer une modification. def echange ( lst , i1 , i2 ): lst [ i2 ] = lst [ i1 ] lst [ i1 ] = lst [ i2 ] La documentation du module random de Python fournit les informations ci-dessous concernant la fonction randint(a,b) : Renvoie un entier al\u00e9atoire N tel que a <= N <= b. Alias pour randrange(a,b+1). Parmi les valeurs ci-dessous, quelles sont celles qui peuvent \u00eatre renvoy\u00e9es par l'appel randint(0, 10) ? 0 1 3.5 9 10 11 Le m\u00e9lange de Fischer Yates est un algorithme permettant de permuter al\u00e9atoirement les \u00e9l\u00e9ments d'une liste. On donne ci-dessous une mise en \u0153uvre r\u00e9cursive de cet algorithme en Python. from random import randint def melange ( lst , ind ): print ( lst ) if ind > 0 : j = randint ( 0 , ind ) echange ( lst , ind , j ) melange ( lst , ind - 1 ) Expliquer pourquoi la fonction melange se termine toujours. Lors de l\u2019appel de la fonction melange , la valeur du param\u00e8tre ind doit \u00eatre \u00e9gal au plus grand indice possible de la liste lst . Pour une liste de longueur n , quel est le nombre d'appels r\u00e9cursifs de la fonction melange effectu\u00e9s, sans compter l\u2019appel initial ? On consid\u00e8re le script ci-dessous : lst = [ v for v in range ( 5 )] melange ( lst , 4 ) On suppose que les valeurs successivement renvoy\u00e9es par la fonction randint sont 2, 1, 2 et 0 . Les deux premiers affichages produits par l'instruction print(lst) de la fonction melange sont : [0,1,2,3,4] [0,1,4,3,2] Donner les affichages suivants produits par la fonction melange Proposer une version it\u00e9rative du m\u00e9lange de Fischer Yates.","title":"Exercice 7 : M\u00e9lange d'une liste &thinsp; "},{"location":"backup/recursivite/#exercice-8-recherche-dichotomique-dans-un-tableau-trie","text":"Rappeler l'algorithme de recherche dichotomique dans un tableau tri\u00e9 vu en classe de premi\u00e8re et donner son fonctionnement sur un exemple simple. Aide Voir cette page du cours de premi\u00e8re. Coder cet algorithme de fa\u00e7on it\u00e9rative Coder cet algorithme de fa\u00e7on r\u00e9cursive","title":"Exercice 8 : Recherche dichotomique dans un tableau tri\u00e9&thinsp; "},{"location":"backup/recursivite/#exercice-9-flocon-de-von-koch","text":"La courbe de Koch est une figure qui se construit de mani\u00e8re r\u00e9cursive. Le cas de base (ordre 0) s'obtient en tra\u00e7ant un segment de longueur \\(l\\) . Le cas r\u00e9cursif d'ordre \\(n>0\\) s'obtient en effectuant les transformations suivantes : Etape Illustration Commentaire Partager le segment en trois morceaux de longueur \u00e9gale Construire un triangle \u00e9quilat\u00e9ral \u00e0 partir du segment du milieu Supprimer le segment du milieu On a \u00e9crit une fonction courbe_koch permettant de tracer \u00e0 l'aide du module turtle de Python la courbe de Koch en donnant en param\u00e8tre la longueur initiale du segment et l'ordre. On donne ci-dessous ce code incomplet : def courbe_koch ( tortue , longueur , ordre ): if ........ ........ else : ordre =........ longueur =........ courbe_koch ( tortue , longueur , ordre ) ................. courbe_koch ( tortue , longueur , ordre ) ................ courbe_koch ( tortue , longueur , ordre ) ................ courbe_koch ( tortue , longueur , ordre ) Compl\u00e9ter et tester ce code pour tracer une courbe de Koch d'ordre 4. Vous devriez obtenir une figure similaire \u00e0 celle repr\u00e9sent\u00e9e ci-dessous : En utilisant cette fonction construire le flocon de Koch , c'est \u00e0 dire la figure obtenu en construisant les courbe de Koch sur les trois c\u00f4t\u00e9s d'un triangle \u00e9quilat\u00e9ral. Le flocon de Koch est un exemple classique de courbe fractale , construire un autre exemple de fractale : le triangle de Sierpinski .","title":"Exercice 9 : Flocon de Von Koch&thinsp; "},{"location":"backup/recursivite/#exercice-10-les-tours-de-hanoi","text":"Invent\u00e9 par le math\u00e9maticien fran\u00e7ais Edouard Lucas , les tours de Hano\u00ef sont un jeu de r\u00e9flexion dans lequel on doit d\u00e9placer des disques de tailles croissantes d'une tour de d\u00e9part \u00e0 une tour d'arriv\u00e9e en respectant les contraintes suivantes : on ne peut d\u00e9placer qu'un disque \u00e0 la fois, celui situ\u00e9 en haut de la tour on ne peut jamais d\u00e9placer un disque sur un disque plus petit. Faire quelques parties en ligne \u00e0 cette adresse pour comprendre le jeu. Module hanoi.py T\u00e9l\u00e9charger ci-dessous le module Python Hanoi.py et le sauver dans le r\u00e9pertoire de votre choix. Module Hanoi Ce module propose les fonctions suivantes : dessine_depart(n) qui dessine l'\u00e9tat de d\u00e9part du jeu avec n disques. fin() affiche dans la fen\u00eatre \"Cliquer pour terminer\" et termine le programme apr\u00e8s un clic. deplace_disque(depart,arrive) d\u00e9place le disque de la tour depart \u00e0 la tour arrivee si cela est possible (sinon affiche un message d'erreur). On donne ci-dessous un exemple d'utilisation de ce module, le compl\u00e9ter de fa\u00e7on \u00e0 afficher la r\u00e9solution compl\u00e8te du jeu avec 3 disques. import hanoi hanoi . dessine_depart ( 3 ) hanoi . deplace_disque ( 1 , 3 ) hanoi . fin () R\u00e9solution automatique par r\u00e9cursivit\u00e9 Compl\u00e9ter la description de chacune des \u00e9tapes de la r\u00e9solution du probl\u00e8me pour 6 disques illustr\u00e9es ci-dessous : Etape Illustration Descriptions 6 disques empil\u00e9s sur la tour 1 D\u00e9placement de ... disques de la tour 1 vers la tour .... D\u00e9placement du disque de la tour ... vers la tour ... D\u00e9placement de ... disques de la tour 1 vers la tour .... Exprimer les \u00e9tapes 1 et 3 sous la forme de la r\u00e9solution d'un probl\u00e8me de tours de Hanoi dont on pr\u00e9cisera la tour d'arriv\u00e9e, la tour de d\u00e9part ainsi que le nombre de disque. Compl\u00e9ter : Pour r\u00e9soudre hanoi \u00e0 6 disques : R\u00e9soudre hanoi \u00e0 ... disques D\u00e9placer le disque de taille 6 R\u00e9soudre hanoi \u00e0 ... disques En d\u00e9duire un algorithme r\u00e9cursif pour r\u00e9soudre le probl\u00e8me des tours de Hano\u00ef. Coder et faire fonctionner cet algorithme \u00e0 l'aide des fonctions pr\u00e9sentes dans le module hanoi.py .","title":"Exercice 10 : Les tours de Hano\u00ef"},{"location":"backup/recursivite/#exercice-11-algorithme-deuclide-de-calcul-du-pgcd","text":"Faites des recherches sur l'algorithme d'Euclide . Que permet de faire cet algorithme ? Faire fonctionner cet algorithme \u00e0 la main avec les valeurs suivantes en donnant les \u00e9tapes: \\(a=48\\) et \\(b=36\\) \\(a=13\\) et \\(b=9\\) Rappeler les instructions Python permettant d'obtenir le reste et le quotient d'une division euclidienne. Donner une impl\u00e9mentation it\u00e9rative de cet algorithme Donner une impl\u00e9mentation r\u00e9cursive de cet algorithme","title":"Exercice 11 : Algorithme d'Euclide de calcul du pgcd&thinsp; &thinsp; "},{"location":"backup/recursivite/#exercice-12-suite-de-fibonnaci","text":"La suite de Fibonnaci \\((f_n)\\) est d\u00e9finie par : \\[\\left\\{ \\begin{array}{lll} f_0&=&0, \\\\ f_1&=&1, \\\\ f_{n}&=&f_{n-1}+f_{n-2} \\mathrm{\\ \\ pour\\ tout\\ \\ } n\\geq2. \\end{array} \\right.\\] C'est \u00e0 dire que chaque terme de la suite est la somme des deux pr\u00e9c\u00e9dents. Calculer \u00e0 la main les premi\u00e8res valeurs de cette suite en compl\u00e9tant le tableau suivant : \\(\\textcolor{darkred}{n}\\) 0 1 \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\textcolor{darkred}{f_n}\\) 0 1 \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) \\(\\dots\\) Compl\u00e9ter le code suivant permettant de calculer les termes de cette suite : def fibonnaci ( n ): if n < 2 : return .... else : return ........+............ Tester cette fonction en \u00e9crivant une boucle qui \u00e9crit les termes de la suite de Fibonnaci pour les entiers de 1 \u00e0 50. Que remarquez-vous ? Recopier et compl\u00e9ter le sch\u00e9ma suivant qui montre les appels r\u00e9cursifs n\u00e9cessaires au calcul de \\(f_5\\) . graph TD f5[f5] --> f4[f4] f5 --> f3[f3] f4 --> f32[f3] f4 --> f2[...] f3 --> f33[...] f3 --> f34[...] En d\u00e9duire une explication de la lenteur observ\u00e9e \u00e0 la question 4. Proposer une version it\u00e9rative du calcul du \u00e9ni\u00e8me terme de la suite de Fibonnaci. Pour aller plus loin La vid\u00e9o suivante (en anglais) reprend ce probl\u00e8me et propose une solution pour coder un algorithme plus efficace","title":"Exercice 12 : Suite de Fibonnaci&thinsp; "},{"location":"backup/revisions/","text":"C0 R\u00e9visions Activit\u00e9s Activit\u00e9 1 : Ligne de commande Le but de cette activit\u00e9 est de red\u00e9couvrir les bases de la ligne de commande. On utilisera gameshell , un mini-jeu d'aventure o\u00f9 les commandes servent \u00e0 accomplir des missions. Installation de Gameshell : T\u00e9l\u00e9charger le fichier gameshell . Ouvrir l'explorateur de fichier. Cr\u00e9er un r\u00e9pertoire gameshell dans votre dossier personnel (en faisant un clic-droit et en s\u00e9lectionnant nouveau dossier ) Dans ce r\u00e9pertoire, copier le fichier gameshell que vous avez t\u00e9l\u00e9charg\u00e9. Faire un clic droit sur le fichier et dans l'onglet permission cocher la case ' Autoriser l'ex\u00e9cution du fichier comme un programme ', comme illustr\u00e9 ci-dessous : Faire un clic droit dans la fen\u00eatre de l'explorateur de fichier et s\u00e9lectionner \" ouvrir dans un terminal \" comme illustr\u00e9 ci-dessous : Dans le terminal taper : ./gameshell.sh Parall\u00e8lement \u00e0 l'ex\u00e9cution des missions : Noter les commandes que vous utilisez et leur signification Tenir \u00e0 jour un plan du monde dans lequel se d\u00e9roule le jeu Aide Pour la premi\u00e8re mission, vous devez donc noter le sens des commandes cd , ls et pwd et commencer le sch\u00e9ma suivant qui sera \u00e0 poursuivre tout au long des missions : graph TD A[Monde] --> B[Chateau] A --> C[Echoppe] A --> D[For\u00eat] A --> E[Jardin] A --> F[Montagne] L'installation de Gameshell, faite ci-dessus \u00e0 l'aide de l'interface graphique aurait pu \u00eatre r\u00e9alis\u00e9 en ligne de commande. Quelle commande permet de cr\u00e9er un r\u00e9pertoire gameshell dans votre dossier personnel (question 1.c ci-dessus) ? Quelle commande correspond \u00e0 la copie du fichier (question 1.d ci-dessus) ? Quelle commande correspond \u00e0 la modification des droits d'ex\u00e9cution (question 1.e ci-dessus) ? Activit\u00e9 2 : Module turtle de Python Le but de cette activit\u00e9 est de red\u00e9couvrir les bases de la programmation en python en utilisant le module turtle qui permet de dessiner \u00e0 l'aide d'une \" tortue \" (\u00e9quivalente \u00e0 un crayon) \u00e0 laquelle on donne des instructions (se d\u00e9placer, avancer, tourner, ...) de fa\u00e7on \u00e0 former le dessin d\u00e9sir\u00e9. Cette tortue se d\u00e9place sur un \u00e9cran (\u00e9quivalent au papier), dot\u00e9 d'un rep\u00e8re comme en math\u00e9matiques. Dessiner une grille de morpion On souhaite dessiner une grille du jeu de morpion comme ci-dessous (o\u00f9 le rep\u00e8re du papier est trac\u00e9 de fa\u00e7on \u00e0 conna\u00eetre les dimensions et positions des traits) : Recopier et executer le programme suivant : import turtle # Cr\u00e9ation du \"papier\" et du \"crayon\" crayon = turtle . Turtle () papier = turtle . Screen () # Taille, dimension et couleur pour le papier et le crayon papier . bgcolor ( \"beige\" ) papier . setup ( width = 500 , height = 500 ) crayon . color ( \"navy\" ) crayon . pensize ( 5 ) # Trac\u00e9 d'un trait avec les coordonn\u00e9es des extr\u00e9mit\u00e9s crayon . penup () crayon . goto ( - 50 , - 150 ) crayon . pendown () crayon . goto ( - 50 , 150 ) # Trac\u00e9 d'un trait en orientant et en faisant avancer la tortue crayon . penup () crayon . goto ( 50 , - 150 ) crayon . pendown () crayon . setheading ( 90 ) crayon . forward ( 300 ) # Attends un clic pour fermer la fen\u00eatre de dessin papier . exitonclick () Expliquer le r\u00f4le des instructions suivantes : pensize et color penup et pendown goto et forward setheading Aide Vous pouvez modifier les param\u00e8tres ou supprimer certaines instructions pour en voir l'effet sur le dessin. Aider vous aussi des commentaires. Compl\u00e9ter ce programme en tra\u00e7ant les deux traits horizontaux manquants afin de compl\u00e9ter le dessin de la grille de morpion. Dessiner un cercle au centre de la grille de morpion (de rayon 40, de couleur darkred avec un crayon d'\u00e9paisseur 7) de fa\u00e7on \u00e0 obtenir le dessin final suivant : Aide Utiliser circle(r) o\u00f9 r est le rayon du cercle \u00e0 tracer, on fera attention que le centre du cercle se situe toujours \u00e0 gauche de l'orientation de la tortue et \u00e0 une distance r comme repr\u00e9sent\u00e9 ci-dessous : Activit\u00e9 3 : De l'utilit\u00e9 des fonctions Attention Cette activit\u00e9 est la suite de la pr\u00e9c\u00e9dente, on doit donc d\u00e9j\u00e0 disposer d'un programme Python permettant de tracer la grille de morpion ainsi que le cercle central. M\u00eame si vous pouvez t\u00e9l\u00e9charger ce programme ici , il est fortement conseill\u00e9 d'avoir assimil\u00e9 les notions de l'activit\u00e9 pr\u00e9c\u00e9dente (trac\u00e9 des lignes et des cercles) avant de continuer. On propose d'\u00e9crire une fonction ligne permettant de tracer avec la tortue crayon un trait en donnant les coordonn\u00e9es x1 et y1 de l'origine et x2 et y2 de l'extr\u00e9mit\u00e9. Par quel mot cl\u00e9 commence la d\u00e9finition d'une fonction en Python ? Quels seront ici les arguments de la fonction ? Recopier et compl\u00e9ter le code de cette fonction : ... ligne ( .. , .. , .. , .. ): crayon .... () crayon .... ( .. , .. ) crayon ..... () crayon ..... ( .. , .. ) Ajouter une cha\u00eene de documentation \u00e0 cette fonction Faire le trac\u00e9 de la grille de morpion en vous aidant de cette fonction. Que peut-on dire par rapport \u00e0 version du programme qui n'utilisait pas de fonction ? En vous inspirant de l'exemple pr\u00e9c\u00e9dent, \u00e9crire une fonction ligne2 permettant de tracer un trait en donnant les coordonn\u00e9es x et y de son origine, ainsi que sa longueur l et sa direction d (sous la forme d'un angle). Aide On utilisera forward pour avancer de la longueur indiqu\u00e9e et setheading pour positionner la tortue avec l'orientation d\u00e9sir\u00e9e. Ecrire une fonction cercle permettant de tracer un cercle dont on donne les coordonn\u00e9es du centre x et y et le rayon r Ecrire une fonction croix qui permet de tracer une croix (:fontawesome-solid-times:) en donnant son centre et la longueur des branches. Activit\u00e9 4 : Une boucle pour r\u00e9p\u00e9ter On souhaite dessiner la grille suivante \u00e0 l'aide du module turtle de Python : On dispose d\u00e9j\u00e0 d'un d\u00e9but de programme qui d\u00e9finit les propri\u00e9t\u00e9s du papier et du crayon ainsi que la fonction ligne permettant de tracer une ligne en donnant les deux extr\u00e9mit\u00e9s (voir activit\u00e9s pr\u00e9c\u00e9dentes) : import turtle # Cr\u00e9ation du \"papier\" et du \"crayon\" crayon = turtle . Turtle () papier = turtle . Screen () # Taille, dimension et couleur pour le papier et le crayon papier . bgcolor ( \"beige\" ) papier . setup ( width = 500 , height = 500 ) crayon . color ( \"navy\" ) crayon . pensize ( 5 ) def ligne ( x1 , y1 , x2 , y2 ): crayon . penup () crayon . goto ( x1 , y1 ) crayon . pendown () crayon . goto ( x2 , y2 ) \u00c9crire les instructions permettant de tracer les lignes horizontales. Une (bien) meilleure solution V\u00e9rifier que les instructions suivantes permettent de tracer les lignes verticales : for abscisse in range ( - 200 , 250 , 50 ): ligne ( abscisse , - 200 , abscisse , 200 ) Quelles sont les valeurs prises successives prises par la variable abscisse dans le programme pr\u00e9c\u00e9dant ? Rappeler le r\u00f4le des param\u00e8tres de range Activit\u00e9 5 : Instructions conditionnelles On souhaite dessiner la figure suivante \u00e0 l'aide du module turtle de Python : Ecrire une fonction carre(x,y,c) qui trace le carr\u00e9 de c\u00f4t\u00e9 c dont le coin inf\u00e9rieur gauche a pour coordonn\u00e9es (x,y) . Ecrire une boucle \u00e0 l'aide d'une instruction for ... in range(....): de fa\u00e7on \u00e0 tracer la suite de carr\u00e9 bleu. Ajouter une instruction conditionnelle dans la boucle de fa\u00e7on \u00e0 ce que le septi\u00e8me carr\u00e9 soit trac\u00e9 en rouge et avec un crayon plus \u00e9pais comme sur la figure. Rappel On rappelle que la syntaxe d'une instruction conditionnelle est : if < condition > : < instructions1 > else : < instructions2 > Activit\u00e9 6 : Le probl\u00e8me de Josephus \u2009 Le but de l'activit\u00e9 est d'\u00e9crire un programme permettant de r\u00e9soudre le probl\u00e8me de Jos\u00e9phus en r\u00e9visant les listes de Python. On repr\u00e9sente un cercle de n soldats par la liste [1,2,...,n] Ecrire une fonction soldats(n) qui renvoie la liste [1,2,....,n] Verifier que n est bien un entier strictement positif \u00e0 l'aide d'instruction assert Ajouter une cha\u00eene documentation. Afin de rep\u00e9rer l'\u00e9p\u00e9e, on d\u00e9cide que le soldat qui la tient se situe toujours en premi\u00e8re position de la liste . Compl\u00e9ter l'\u00e9volution de la liste de soldat ci-dessous Etat de la liste Explications [ 1 , 2 ,3,4,5,6] 1 \u00e9limine 2 et passe l'\u00e9p\u00e9e \u00e0 3 qui passe donc en t\u00eate de liste [ 3 ,...,5,6,1] 3 \u00e9limine ... et passe l'\u00e9p\u00e9e \u00e0 ... qui passe donc en t\u00eate de liste [ ... , 6 ,1,3] ... \u00e9limine ... et passe l'\u00e9p\u00e9e \u00e0 ... qui passe donc en t\u00eate de liste [...,...,...] ..... [...,...] ..... [...] ..... Compl\u00e9ter l'algorithme suivant d'\u00e9volution de la liste et indiquer les instructions Python correspondantes (on d\u00e9signe par cercle la liste repr\u00e9sentant le cercle de soldats): Etapes Op\u00e9ration sur la liste Instructions Python .......... tueur=cercle.pop(0) Ajouter cet \u00e9l\u00e9ment en fin de liste ...... Supprimer le premier \u00e9l\u00e9ment ...... Quel est la condition d'arr\u00eat de l'algorithme ? Exprimer cette condition par un test en python sur cercle Programmer une fonction josephus(n) qui renvoie le soldat survivant pour un cercle de n soldats. Cours Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices. Exercices Exercice 1 : Les bases de la ligne de commande En utilisant uniquement la ligne de commande, cr\u00e9er l'arborescence suivante dans votre r\u00e9pertoire personnel : graph TD A[Cours] --> B[C0-R\u00e9visions] A[Cours] --> G[C1-R\u00e9cursivit\u00e9] B --> C[Exercices] B --> D[Activit\u00e9s] B --> E[Notes] B --> F[Python] Renommer le dossier Cours en NSI Cr\u00e9er un fichier vide exercice2.txt dans le dossier Exercices Exercice 2 : Quelques commandes Sans les tester , \u00e9crire dans le fichier exercice2.txt cr\u00e9e \u00e0 l'exercice pr\u00e9c\u00e9dent l'effet des commandes suivantes : cd ~ mkdir Partage chmod a+rwx Partage cd Partage touch hello.txt echo \"Salut tout le monde\" > hello.txt cat hello.txt Taper ces commandes pour v\u00e9rifier vos pr\u00e9cisions. Exercice 3 : Arborescence Rechercher l'aide de la commande tree , quel est l'effet de cette commande ? Afficher l'arborescence de votre r\u00e9pertoire personnel Afficher l'arborescence de la racine en limitant \u00e0 un la profondeur Rechercher sur le Web le r\u00f4le des dossiers suivants : /etc /home /dev /tmp Aide Pour les exercices avec turtle , on peut consulter la page de documentation officielle du module Exercice 4 : Figures g\u00e9om\u00e9triques avec Turtle Ecrire une fonction rectangle(x,y,l1,l2) qui trace le rectangle de dimensions l1 \\(\\times\\) l2 et dont le coin inf\u00e9rieur gauche \u00e0 pour coordonn\u00e9es x et y . On peut remplir une surface construite avec un crayon du module turtle : Sp\u00e9cifier une couleur de remplissage par exemple crayon.fillcolor(red) Au d\u00e9but du trac\u00e9 de la figure \u00e9crire l'instruction crayon.begin_fill() A la fin du trac\u00e9 de la figure \u00e9crire l'instruction crayon.end_fill() Modifier votre fonction rectangle de fa\u00e7on \u00e0 pouvoir tracer un rectangle rempli avec une couleur pass\u00e9e en param\u00e8tre. Exercice 5 : Quelques figures avec turtle Construire les figures suivantes (le rep\u00e8re est l\u00e0 pour vous aider et ne doit pas \u00eatre reproduit): L'escalier Cercles concentriques (les couleurs alternent entre blue et lightblue , le crayon a une \u00e9paisseur de 10, les cercles ont pour rayon 10,20,30, ...) Exercice 6 : Pour r\u00e9viser les listes On consid\u00e8re le programme suivant : liste1 = [ 0 ] * 100 liste2 = [ 0 for k in range ( 100 )] liste3 = [] for k in range ( 100 ): liste3 . append ( 0 ) Quel est le contenu de chacune des listes ? Indiquer par quel proc\u00e9d\u00e9 chacune de ces listes a \u00e9t\u00e9 cr\u00e9e. Ecrire un programme python permettant de cr\u00e9er les listes suivantes : Une liste contenant 12 fois le chiffre 7. La liste des nombres entiers de 1 \u00e0 100. Une liste contenant 1000 nombres tir\u00e9s au sort entre 1 et 6. \\ Aide On rappelle que la fonction randint peut \u00eatre import\u00e9e depuis le module random , elle permet de tirer un nombre au hasard entre deux valeurs a et b donn\u00e9s en param\u00e8tres. La liste des cubes des entiers de 1 \u00e0 10. Exercice 7 : Parcours de liste Ecrire une fonction somme(l) qui renvoie la somme des \u00e9l\u00e9ments de la liste l . V\u00e9rifier que tous les \u00e9l\u00e9ments de l sont biens des nombres entiers ( int ) ou flottants ( float ). Ecrire une fonction indice(elt,l) qui renvoie l'indice de la premi\u00e8re apparition de elt si elt est dans l et \\(-1\\) sinon. Exemples indice(3,[1,2,3,5,7,11]) renvoie 2 puisque 3 est dans cette liste \u00e0 l'indice 2. indice(13,[1,2,3,5,7,11]) renvoie -1 puisque 13 n'est pas dans cette liste. Exercice 8 : Polygone r\u00e9gulier \u2009 Ecrire une fonction triangle_equilateral(c) qui trace un triangle \u00e9quilat\u00e9ral de c\u00f4te c \u00e0 partir de la position courante de la tortue. Ecrire une fonction carre(c) qui trace un carr\u00e9 de c\u00f4te c \u00e0 partir de la position courante de la tortue. Ecrire une fonction polygone_regulier(n,c) qui trace un polygone r\u00e9gulier de c\u00f4te c \u00e0 partir de la position courante de la tortue. Rappel Un polygone r\u00e9gulier est un polygone dont tous les c\u00f4t\u00e9s sont de la m\u00eame longueur et tous les angles sont \u00e9gaux. Les angles d'un polygone r\u00e9gulier \u00e0 \\(n\\) c\u00f4t\u00e9s mesurent \\(\\dfrac{360}{n}\\) Exercice 9 : Panneau de signalisation Ecrire un programme Python permettant de dessiner le panneau de signalisation de votre choix. Quelques exemples sont propos\u00e9s ci-dessous.","title":"Revisions"},{"location":"backup/revisions/#c0-revisions","text":"","title":"C0 R\u00e9visions "},{"location":"backup/revisions/#activites","text":"","title":"Activit\u00e9s"},{"location":"backup/revisions/#activite-1-ligne-de-commande","text":"Le but de cette activit\u00e9 est de red\u00e9couvrir les bases de la ligne de commande. On utilisera gameshell , un mini-jeu d'aventure o\u00f9 les commandes servent \u00e0 accomplir des missions. Installation de Gameshell : T\u00e9l\u00e9charger le fichier gameshell . Ouvrir l'explorateur de fichier. Cr\u00e9er un r\u00e9pertoire gameshell dans votre dossier personnel (en faisant un clic-droit et en s\u00e9lectionnant nouveau dossier ) Dans ce r\u00e9pertoire, copier le fichier gameshell que vous avez t\u00e9l\u00e9charg\u00e9. Faire un clic droit sur le fichier et dans l'onglet permission cocher la case ' Autoriser l'ex\u00e9cution du fichier comme un programme ', comme illustr\u00e9 ci-dessous : Faire un clic droit dans la fen\u00eatre de l'explorateur de fichier et s\u00e9lectionner \" ouvrir dans un terminal \" comme illustr\u00e9 ci-dessous : Dans le terminal taper : ./gameshell.sh Parall\u00e8lement \u00e0 l'ex\u00e9cution des missions : Noter les commandes que vous utilisez et leur signification Tenir \u00e0 jour un plan du monde dans lequel se d\u00e9roule le jeu Aide Pour la premi\u00e8re mission, vous devez donc noter le sens des commandes cd , ls et pwd et commencer le sch\u00e9ma suivant qui sera \u00e0 poursuivre tout au long des missions : graph TD A[Monde] --> B[Chateau] A --> C[Echoppe] A --> D[For\u00eat] A --> E[Jardin] A --> F[Montagne] L'installation de Gameshell, faite ci-dessus \u00e0 l'aide de l'interface graphique aurait pu \u00eatre r\u00e9alis\u00e9 en ligne de commande. Quelle commande permet de cr\u00e9er un r\u00e9pertoire gameshell dans votre dossier personnel (question 1.c ci-dessus) ? Quelle commande correspond \u00e0 la copie du fichier (question 1.d ci-dessus) ? Quelle commande correspond \u00e0 la modification des droits d'ex\u00e9cution (question 1.e ci-dessus) ?","title":"Activit\u00e9 1 : Ligne de commande"},{"location":"backup/revisions/#activite-2-module-turtle-de-python","text":"Le but de cette activit\u00e9 est de red\u00e9couvrir les bases de la programmation en python en utilisant le module turtle qui permet de dessiner \u00e0 l'aide d'une \" tortue \" (\u00e9quivalente \u00e0 un crayon) \u00e0 laquelle on donne des instructions (se d\u00e9placer, avancer, tourner, ...) de fa\u00e7on \u00e0 former le dessin d\u00e9sir\u00e9. Cette tortue se d\u00e9place sur un \u00e9cran (\u00e9quivalent au papier), dot\u00e9 d'un rep\u00e8re comme en math\u00e9matiques. Dessiner une grille de morpion On souhaite dessiner une grille du jeu de morpion comme ci-dessous (o\u00f9 le rep\u00e8re du papier est trac\u00e9 de fa\u00e7on \u00e0 conna\u00eetre les dimensions et positions des traits) : Recopier et executer le programme suivant : import turtle # Cr\u00e9ation du \"papier\" et du \"crayon\" crayon = turtle . Turtle () papier = turtle . Screen () # Taille, dimension et couleur pour le papier et le crayon papier . bgcolor ( \"beige\" ) papier . setup ( width = 500 , height = 500 ) crayon . color ( \"navy\" ) crayon . pensize ( 5 ) # Trac\u00e9 d'un trait avec les coordonn\u00e9es des extr\u00e9mit\u00e9s crayon . penup () crayon . goto ( - 50 , - 150 ) crayon . pendown () crayon . goto ( - 50 , 150 ) # Trac\u00e9 d'un trait en orientant et en faisant avancer la tortue crayon . penup () crayon . goto ( 50 , - 150 ) crayon . pendown () crayon . setheading ( 90 ) crayon . forward ( 300 ) # Attends un clic pour fermer la fen\u00eatre de dessin papier . exitonclick () Expliquer le r\u00f4le des instructions suivantes : pensize et color penup et pendown goto et forward setheading Aide Vous pouvez modifier les param\u00e8tres ou supprimer certaines instructions pour en voir l'effet sur le dessin. Aider vous aussi des commentaires. Compl\u00e9ter ce programme en tra\u00e7ant les deux traits horizontaux manquants afin de compl\u00e9ter le dessin de la grille de morpion. Dessiner un cercle au centre de la grille de morpion (de rayon 40, de couleur darkred avec un crayon d'\u00e9paisseur 7) de fa\u00e7on \u00e0 obtenir le dessin final suivant : Aide Utiliser circle(r) o\u00f9 r est le rayon du cercle \u00e0 tracer, on fera attention que le centre du cercle se situe toujours \u00e0 gauche de l'orientation de la tortue et \u00e0 une distance r comme repr\u00e9sent\u00e9 ci-dessous :","title":"Activit\u00e9 2 : Module turtle de Python"},{"location":"backup/revisions/#activite-3-de-lutilite-des-fonctions","text":"Attention Cette activit\u00e9 est la suite de la pr\u00e9c\u00e9dente, on doit donc d\u00e9j\u00e0 disposer d'un programme Python permettant de tracer la grille de morpion ainsi que le cercle central. M\u00eame si vous pouvez t\u00e9l\u00e9charger ce programme ici , il est fortement conseill\u00e9 d'avoir assimil\u00e9 les notions de l'activit\u00e9 pr\u00e9c\u00e9dente (trac\u00e9 des lignes et des cercles) avant de continuer. On propose d'\u00e9crire une fonction ligne permettant de tracer avec la tortue crayon un trait en donnant les coordonn\u00e9es x1 et y1 de l'origine et x2 et y2 de l'extr\u00e9mit\u00e9. Par quel mot cl\u00e9 commence la d\u00e9finition d'une fonction en Python ? Quels seront ici les arguments de la fonction ? Recopier et compl\u00e9ter le code de cette fonction : ... ligne ( .. , .. , .. , .. ): crayon .... () crayon .... ( .. , .. ) crayon ..... () crayon ..... ( .. , .. ) Ajouter une cha\u00eene de documentation \u00e0 cette fonction Faire le trac\u00e9 de la grille de morpion en vous aidant de cette fonction. Que peut-on dire par rapport \u00e0 version du programme qui n'utilisait pas de fonction ? En vous inspirant de l'exemple pr\u00e9c\u00e9dent, \u00e9crire une fonction ligne2 permettant de tracer un trait en donnant les coordonn\u00e9es x et y de son origine, ainsi que sa longueur l et sa direction d (sous la forme d'un angle). Aide On utilisera forward pour avancer de la longueur indiqu\u00e9e et setheading pour positionner la tortue avec l'orientation d\u00e9sir\u00e9e. Ecrire une fonction cercle permettant de tracer un cercle dont on donne les coordonn\u00e9es du centre x et y et le rayon r Ecrire une fonction croix qui permet de tracer une croix (:fontawesome-solid-times:) en donnant son centre et la longueur des branches.","title":"Activit\u00e9 3 : De l'utilit\u00e9 des fonctions"},{"location":"backup/revisions/#activite-4-une-boucle-pour-repeter","text":"On souhaite dessiner la grille suivante \u00e0 l'aide du module turtle de Python : On dispose d\u00e9j\u00e0 d'un d\u00e9but de programme qui d\u00e9finit les propri\u00e9t\u00e9s du papier et du crayon ainsi que la fonction ligne permettant de tracer une ligne en donnant les deux extr\u00e9mit\u00e9s (voir activit\u00e9s pr\u00e9c\u00e9dentes) : import turtle # Cr\u00e9ation du \"papier\" et du \"crayon\" crayon = turtle . Turtle () papier = turtle . Screen () # Taille, dimension et couleur pour le papier et le crayon papier . bgcolor ( \"beige\" ) papier . setup ( width = 500 , height = 500 ) crayon . color ( \"navy\" ) crayon . pensize ( 5 ) def ligne ( x1 , y1 , x2 , y2 ): crayon . penup () crayon . goto ( x1 , y1 ) crayon . pendown () crayon . goto ( x2 , y2 ) \u00c9crire les instructions permettant de tracer les lignes horizontales. Une (bien) meilleure solution V\u00e9rifier que les instructions suivantes permettent de tracer les lignes verticales : for abscisse in range ( - 200 , 250 , 50 ): ligne ( abscisse , - 200 , abscisse , 200 ) Quelles sont les valeurs prises successives prises par la variable abscisse dans le programme pr\u00e9c\u00e9dant ? Rappeler le r\u00f4le des param\u00e8tres de range","title":"Activit\u00e9 4 : Une boucle pour r\u00e9p\u00e9ter"},{"location":"backup/revisions/#activite-5-instructions-conditionnelles","text":"On souhaite dessiner la figure suivante \u00e0 l'aide du module turtle de Python : Ecrire une fonction carre(x,y,c) qui trace le carr\u00e9 de c\u00f4t\u00e9 c dont le coin inf\u00e9rieur gauche a pour coordonn\u00e9es (x,y) . Ecrire une boucle \u00e0 l'aide d'une instruction for ... in range(....): de fa\u00e7on \u00e0 tracer la suite de carr\u00e9 bleu. Ajouter une instruction conditionnelle dans la boucle de fa\u00e7on \u00e0 ce que le septi\u00e8me carr\u00e9 soit trac\u00e9 en rouge et avec un crayon plus \u00e9pais comme sur la figure. Rappel On rappelle que la syntaxe d'une instruction conditionnelle est : if < condition > : < instructions1 > else : < instructions2 >","title":"Activit\u00e9 5 : Instructions conditionnelles"},{"location":"backup/revisions/#activite-6-le-probleme-de-josephus","text":"Le but de l'activit\u00e9 est d'\u00e9crire un programme permettant de r\u00e9soudre le probl\u00e8me de Jos\u00e9phus en r\u00e9visant les listes de Python. On repr\u00e9sente un cercle de n soldats par la liste [1,2,...,n] Ecrire une fonction soldats(n) qui renvoie la liste [1,2,....,n] Verifier que n est bien un entier strictement positif \u00e0 l'aide d'instruction assert Ajouter une cha\u00eene documentation. Afin de rep\u00e9rer l'\u00e9p\u00e9e, on d\u00e9cide que le soldat qui la tient se situe toujours en premi\u00e8re position de la liste . Compl\u00e9ter l'\u00e9volution de la liste de soldat ci-dessous Etat de la liste Explications [ 1 , 2 ,3,4,5,6] 1 \u00e9limine 2 et passe l'\u00e9p\u00e9e \u00e0 3 qui passe donc en t\u00eate de liste [ 3 ,...,5,6,1] 3 \u00e9limine ... et passe l'\u00e9p\u00e9e \u00e0 ... qui passe donc en t\u00eate de liste [ ... , 6 ,1,3] ... \u00e9limine ... et passe l'\u00e9p\u00e9e \u00e0 ... qui passe donc en t\u00eate de liste [...,...,...] ..... [...,...] ..... [...] ..... Compl\u00e9ter l'algorithme suivant d'\u00e9volution de la liste et indiquer les instructions Python correspondantes (on d\u00e9signe par cercle la liste repr\u00e9sentant le cercle de soldats): Etapes Op\u00e9ration sur la liste Instructions Python .......... tueur=cercle.pop(0) Ajouter cet \u00e9l\u00e9ment en fin de liste ...... Supprimer le premier \u00e9l\u00e9ment ...... Quel est la condition d'arr\u00eat de l'algorithme ? Exprimer cette condition par un test en python sur cercle Programmer une fonction josephus(n) qui renvoie le soldat survivant pour un cercle de n soldats.","title":"Activit\u00e9 6 : Le probl\u00e8me de Josephus&thinsp; "},{"location":"backup/revisions/#cours","text":"Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices.","title":"Cours"},{"location":"backup/revisions/#exercices","text":"","title":"Exercices"},{"location":"backup/revisions/#exercice-1-les-bases-de-la-ligne-de-commande","text":"En utilisant uniquement la ligne de commande, cr\u00e9er l'arborescence suivante dans votre r\u00e9pertoire personnel : graph TD A[Cours] --> B[C0-R\u00e9visions] A[Cours] --> G[C1-R\u00e9cursivit\u00e9] B --> C[Exercices] B --> D[Activit\u00e9s] B --> E[Notes] B --> F[Python] Renommer le dossier Cours en NSI Cr\u00e9er un fichier vide exercice2.txt dans le dossier Exercices","title":"Exercice 1 : Les bases de la ligne de commande"},{"location":"backup/revisions/#exercice-2-quelques-commandes","text":"Sans les tester , \u00e9crire dans le fichier exercice2.txt cr\u00e9e \u00e0 l'exercice pr\u00e9c\u00e9dent l'effet des commandes suivantes : cd ~ mkdir Partage chmod a+rwx Partage cd Partage touch hello.txt echo \"Salut tout le monde\" > hello.txt cat hello.txt Taper ces commandes pour v\u00e9rifier vos pr\u00e9cisions.","title":"Exercice 2 : Quelques commandes"},{"location":"backup/revisions/#exercice-3-arborescence","text":"Rechercher l'aide de la commande tree , quel est l'effet de cette commande ? Afficher l'arborescence de votre r\u00e9pertoire personnel Afficher l'arborescence de la racine en limitant \u00e0 un la profondeur Rechercher sur le Web le r\u00f4le des dossiers suivants : /etc /home /dev /tmp Aide Pour les exercices avec turtle , on peut consulter la page de documentation officielle du module","title":"Exercice 3 : Arborescence"},{"location":"backup/revisions/#exercice-4-figures-geometriques-avec-turtle","text":"Ecrire une fonction rectangle(x,y,l1,l2) qui trace le rectangle de dimensions l1 \\(\\times\\) l2 et dont le coin inf\u00e9rieur gauche \u00e0 pour coordonn\u00e9es x et y . On peut remplir une surface construite avec un crayon du module turtle : Sp\u00e9cifier une couleur de remplissage par exemple crayon.fillcolor(red) Au d\u00e9but du trac\u00e9 de la figure \u00e9crire l'instruction crayon.begin_fill() A la fin du trac\u00e9 de la figure \u00e9crire l'instruction crayon.end_fill() Modifier votre fonction rectangle de fa\u00e7on \u00e0 pouvoir tracer un rectangle rempli avec une couleur pass\u00e9e en param\u00e8tre.","title":"Exercice 4 : Figures g\u00e9om\u00e9triques avec Turtle"},{"location":"backup/revisions/#exercice-5-quelques-figures-avec-turtle","text":"Construire les figures suivantes (le rep\u00e8re est l\u00e0 pour vous aider et ne doit pas \u00eatre reproduit): L'escalier Cercles concentriques (les couleurs alternent entre blue et lightblue , le crayon a une \u00e9paisseur de 10, les cercles ont pour rayon 10,20,30, ...)","title":"Exercice 5 : Quelques figures avec turtle"},{"location":"backup/revisions/#exercice-6-pour-reviser-les-listes","text":"On consid\u00e8re le programme suivant : liste1 = [ 0 ] * 100 liste2 = [ 0 for k in range ( 100 )] liste3 = [] for k in range ( 100 ): liste3 . append ( 0 ) Quel est le contenu de chacune des listes ? Indiquer par quel proc\u00e9d\u00e9 chacune de ces listes a \u00e9t\u00e9 cr\u00e9e. Ecrire un programme python permettant de cr\u00e9er les listes suivantes : Une liste contenant 12 fois le chiffre 7. La liste des nombres entiers de 1 \u00e0 100. Une liste contenant 1000 nombres tir\u00e9s au sort entre 1 et 6. \\ Aide On rappelle que la fonction randint peut \u00eatre import\u00e9e depuis le module random , elle permet de tirer un nombre au hasard entre deux valeurs a et b donn\u00e9s en param\u00e8tres. La liste des cubes des entiers de 1 \u00e0 10.","title":"Exercice 6 : Pour r\u00e9viser les listes"},{"location":"backup/revisions/#exercice-7-parcours-de-liste","text":"Ecrire une fonction somme(l) qui renvoie la somme des \u00e9l\u00e9ments de la liste l . V\u00e9rifier que tous les \u00e9l\u00e9ments de l sont biens des nombres entiers ( int ) ou flottants ( float ). Ecrire une fonction indice(elt,l) qui renvoie l'indice de la premi\u00e8re apparition de elt si elt est dans l et \\(-1\\) sinon. Exemples indice(3,[1,2,3,5,7,11]) renvoie 2 puisque 3 est dans cette liste \u00e0 l'indice 2. indice(13,[1,2,3,5,7,11]) renvoie -1 puisque 13 n'est pas dans cette liste.","title":"Exercice 7 : Parcours de liste"},{"location":"backup/revisions/#exercice-8-polygone-regulier","text":"Ecrire une fonction triangle_equilateral(c) qui trace un triangle \u00e9quilat\u00e9ral de c\u00f4te c \u00e0 partir de la position courante de la tortue. Ecrire une fonction carre(c) qui trace un carr\u00e9 de c\u00f4te c \u00e0 partir de la position courante de la tortue. Ecrire une fonction polygone_regulier(n,c) qui trace un polygone r\u00e9gulier de c\u00f4te c \u00e0 partir de la position courante de la tortue. Rappel Un polygone r\u00e9gulier est un polygone dont tous les c\u00f4t\u00e9s sont de la m\u00eame longueur et tous les angles sont \u00e9gaux. Les angles d'un polygone r\u00e9gulier \u00e0 \\(n\\) c\u00f4t\u00e9s mesurent \\(\\dfrac{360}{n}\\)","title":"Exercice 8 : Polygone r\u00e9gulier&thinsp; "},{"location":"backup/revisions/#exercice-9-panneau-de-signalisation","text":"Ecrire un programme Python permettant de dessiner le panneau de signalisation de votre choix. Quelques exemples sont propos\u00e9s ci-dessous.","title":"Exercice 9 : Panneau de signalisation"},{"location":"backup/routage/","text":"C12 Protocoles de routage Attention Avant de commencer ce chapitre, revoir les notions de r\u00e9seau vues en classe de premi\u00e8re . En, particulier : consulter l'activit\u00e9 1 pour une initiation \u00e0 l'utilisation du logiciel de simulation de r\u00e9seau filius , les notions d'adresses ip , le diaporama de cours de ce chapitre . Ne pas h\u00e9siter \u00e0 consulter d'autres ressources sur le Web : Le chapitre r\u00e9seau du cours de premi\u00e8re sur le site pixees. Video Lumni Cours du lyc\u00e9e duparc Activit\u00e9s Activit\u00e9 1 : Adresse IP, masque Rappel Deux machines ne peuvent communiquer que si elles sont sur le m\u00eame r\u00e9seau, c'est \u00e0 dire que leurs adresses ip d\u00e9marre par une partie commune. La longueur de cette partie commune est d\u00e9finie par le masque de sous r\u00e9seau . Pour la conna\u00eetre, on \u00e9crit le masque de sous r\u00e9seau en binaire. Le nombre de 1 en d\u00e9but de masque donne la longueur de la partie commune dans les adresses IP. Par exemple le masque 255.255.254.0 donne en \u00e9criture binaire 11111111.11111111.111111110.00000000 . La partie commune doit donc \u00eatre de 23 bits car cette \u00e9criture d\u00e9bute par 23 fois le chiffre 1 . Un masque de 23 bits peut se noter de fa\u00e7on plus concise /23 (notation cidr ). Pour savoir si deux machines de ce r\u00e9seau peuvent communiquer on \u00e9crit leurs adresses IP en binaire et on regarde si les 23 premiers bits sont identiques ou non. Rappel l'adresse du r\u00e9seau s'obtient en r\u00e9alisant un et logique entre l'adresse IP d'un ordinateur du r\u00e9seau et le masque de sous r\u00e9seau. Lancer Filius , un outil de simulation de r\u00e9seaux, et cr\u00e9e un simple r\u00e9seau constitu\u00e9 de deux ordinateurs. Dans chacun des cas suivants, pr\u00e9voir si les deux ordinateurs peuvent communiquer et le v\u00e9rifier \u00e0 l'aide d'une commande ping IP ordinateur 1 Masque Ordinateur 1 IP ordinateur 2 Masque ordinateur 2 203.147.154.100 255.255.255.192 203.147.154.119 255.255.255.192 203.147.154.100 255.255.255.192 203.147.154.129 255.255.255.192 172.19.247.15 255.255.240.0 172.19.230.150 255.255.240.0 172.19.247.15 255.255.240.0 172.19.248.118 255.255.240.0 Aide En cas de difficult\u00e9s pour utiliser Filius, faire la premi\u00e8re activit\u00e9 du cours de premi\u00e8re . Un switch sert \u00e0 connecter plusieurs ordinateurs d'un m\u00eame sous r\u00e9seau, ainsi chez un particulier, une box internet joue le r\u00f4le de switch et permet de connecter les divers appareils de la maison (t\u00e9l\u00e9phone, ordinateur, imprimante, ...). Connecter trois ordinateurs au m\u00eame sous r\u00e9seau comme ci-dessous et v\u00e9rifier \u00e0 l'aide de la commande ping qu'ils peuvent communiquer. Un routeur permet d'interconnecter plusieurs sous r\u00e9seau. R\u00e9aliser dans filius le r\u00e9seau ci-dessous (le routeur a deux interfaces). Attribuer les m\u00eames adresses ip que sur le sch\u00e9ma et remarquer bien que les ordinateurs de droite et de gauche ne font pas partie du m\u00eame sous r\u00e9seau. C'est le routeur qui permet leur interconnection, pour cela il faut indiquer pour chaque machine du r\u00e9seau de gauche l'adresse du routeur dans le champ passerelle et faire de m\u00eame, pour chaque machine du sous r\u00e9seau de droite. Aide En cas de difficult\u00e9s, se r\u00e9f\u00e9rer \u00e0 la vid\u00e9o suivante : Activit\u00e9 2 : Protocoles de routage On peut assimiler un r\u00e9seau \u00e0 un graphe, les noeuds sont les routeurs et les arcs les liaisons entre ces routeurs. Par exemple : graph TD A((\"A\")) B((\"B\")) C((\"C\")) D((\"D\")) E((\"E\")) A --- B A --- E B --- E B --- D C --- E C --- D Dans cet exemple, plusieurs chemins permettent de relier A \u00e0 C . Un protocole de routage est un m\u00e9canisme permettant de choisir l'un de ces chemins. Pour mettre en place un protocole de routage, chaque routeur doit \u00eatre dot\u00e9 d'une table de routage qui indique le routeur suivant selon la destination du paquet. Le protocole rip : R outing I nformation P rotocol Sachant que dans ce protocole, on tente de minimiser le nombre de routeurs travers\u00e9s, quel serait les chemins emprunt\u00e9s pour : relier A et E ? relier A et C ? relier E et D ? De plus dans ce protocole, \u00e0 l'initialisation, la table de routage de chaque routeur ne contient que ses voisins imm\u00e9diats associ\u00e9s \u00e0 une distance de 1. Par exemple la table de routage de A est : Destination Distance B 1 E 1 et celle de B est : Destination Distance A 1 D 1 E 1 Donner \u00e0 l'initialisation, les tables de routages des autres routeurs : C , D et E . Les tables de routages sont mises \u00e0 jour \u00e0 intervalles r\u00e9guliers, en effet chaque routeur consulte la table de routage de ses voisins et met la sienne \u00e0 jour en cons\u00e9quence. Par exemple, A re\u00e7oit la table de routage de B , il y trouve D qui ne figure pas encore dans sa table et le rajoute donc en augmentant sa distance de 1. La table de A devient donc : Destination Distance B 1 E 1 D (via B) 2 Le routeur E figure d\u00e9j\u00e0 dans la table avec une distance plus courte, il n'est pas mis \u00e0 jour. Construire la table de routage de B apr\u00e8s la premi\u00e8re mise \u00e0 jour. Le protocole ospf La qualit\u00e9 des liaisons entre diff\u00e9rents routeurs d\u00e9pend du type de connection, on peut donc repr\u00e9senter un r\u00e9seau par un graphe pond\u00e9r\u00e9. Dans l'exemple suivant, la qualit\u00e9 de la liason entre A et E (poids 1) est bien meilleure que celle entre A et B (poids 5) graph TD A((\"A\")) B((\"B\")) C((\"C\")) D((\"D\")) E((\"E\")) A-- 5 ---B A-- 1 --- E B-- 2 --- E B-- 2 --- D C-- 1 --- E C-- 4 --- D Sachant que dans ce protocole, on tente de minimiser le poids du chemin parcouru, quel serait les chemins emprunt\u00e9s pour : relier A et E ? relier A et C ? relier E et D ? Cours Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices. Exercices Exercice 1 : ....","title":"Routage"},{"location":"backup/routage/#c12-protocoles-de-routage","text":"Attention Avant de commencer ce chapitre, revoir les notions de r\u00e9seau vues en classe de premi\u00e8re . En, particulier : consulter l'activit\u00e9 1 pour une initiation \u00e0 l'utilisation du logiciel de simulation de r\u00e9seau filius , les notions d'adresses ip , le diaporama de cours de ce chapitre . Ne pas h\u00e9siter \u00e0 consulter d'autres ressources sur le Web : Le chapitre r\u00e9seau du cours de premi\u00e8re sur le site pixees. Video Lumni Cours du lyc\u00e9e duparc","title":"C12 Protocoles de routage "},{"location":"backup/routage/#activites","text":"","title":"Activit\u00e9s"},{"location":"backup/routage/#activite-1-adresse-ip-masque","text":"Rappel Deux machines ne peuvent communiquer que si elles sont sur le m\u00eame r\u00e9seau, c'est \u00e0 dire que leurs adresses ip d\u00e9marre par une partie commune. La longueur de cette partie commune est d\u00e9finie par le masque de sous r\u00e9seau . Pour la conna\u00eetre, on \u00e9crit le masque de sous r\u00e9seau en binaire. Le nombre de 1 en d\u00e9but de masque donne la longueur de la partie commune dans les adresses IP. Par exemple le masque 255.255.254.0 donne en \u00e9criture binaire 11111111.11111111.111111110.00000000 . La partie commune doit donc \u00eatre de 23 bits car cette \u00e9criture d\u00e9bute par 23 fois le chiffre 1 . Un masque de 23 bits peut se noter de fa\u00e7on plus concise /23 (notation cidr ). Pour savoir si deux machines de ce r\u00e9seau peuvent communiquer on \u00e9crit leurs adresses IP en binaire et on regarde si les 23 premiers bits sont identiques ou non. Rappel l'adresse du r\u00e9seau s'obtient en r\u00e9alisant un et logique entre l'adresse IP d'un ordinateur du r\u00e9seau et le masque de sous r\u00e9seau. Lancer Filius , un outil de simulation de r\u00e9seaux, et cr\u00e9e un simple r\u00e9seau constitu\u00e9 de deux ordinateurs. Dans chacun des cas suivants, pr\u00e9voir si les deux ordinateurs peuvent communiquer et le v\u00e9rifier \u00e0 l'aide d'une commande ping IP ordinateur 1 Masque Ordinateur 1 IP ordinateur 2 Masque ordinateur 2 203.147.154.100 255.255.255.192 203.147.154.119 255.255.255.192 203.147.154.100 255.255.255.192 203.147.154.129 255.255.255.192 172.19.247.15 255.255.240.0 172.19.230.150 255.255.240.0 172.19.247.15 255.255.240.0 172.19.248.118 255.255.240.0 Aide En cas de difficult\u00e9s pour utiliser Filius, faire la premi\u00e8re activit\u00e9 du cours de premi\u00e8re . Un switch sert \u00e0 connecter plusieurs ordinateurs d'un m\u00eame sous r\u00e9seau, ainsi chez un particulier, une box internet joue le r\u00f4le de switch et permet de connecter les divers appareils de la maison (t\u00e9l\u00e9phone, ordinateur, imprimante, ...). Connecter trois ordinateurs au m\u00eame sous r\u00e9seau comme ci-dessous et v\u00e9rifier \u00e0 l'aide de la commande ping qu'ils peuvent communiquer. Un routeur permet d'interconnecter plusieurs sous r\u00e9seau. R\u00e9aliser dans filius le r\u00e9seau ci-dessous (le routeur a deux interfaces). Attribuer les m\u00eames adresses ip que sur le sch\u00e9ma et remarquer bien que les ordinateurs de droite et de gauche ne font pas partie du m\u00eame sous r\u00e9seau. C'est le routeur qui permet leur interconnection, pour cela il faut indiquer pour chaque machine du r\u00e9seau de gauche l'adresse du routeur dans le champ passerelle et faire de m\u00eame, pour chaque machine du sous r\u00e9seau de droite. Aide En cas de difficult\u00e9s, se r\u00e9f\u00e9rer \u00e0 la vid\u00e9o suivante :","title":"Activit\u00e9 1 : Adresse IP, masque"},{"location":"backup/routage/#activite-2-protocoles-de-routage","text":"On peut assimiler un r\u00e9seau \u00e0 un graphe, les noeuds sont les routeurs et les arcs les liaisons entre ces routeurs. Par exemple : graph TD A((\"A\")) B((\"B\")) C((\"C\")) D((\"D\")) E((\"E\")) A --- B A --- E B --- E B --- D C --- E C --- D Dans cet exemple, plusieurs chemins permettent de relier A \u00e0 C . Un protocole de routage est un m\u00e9canisme permettant de choisir l'un de ces chemins. Pour mettre en place un protocole de routage, chaque routeur doit \u00eatre dot\u00e9 d'une table de routage qui indique le routeur suivant selon la destination du paquet. Le protocole rip : R outing I nformation P rotocol Sachant que dans ce protocole, on tente de minimiser le nombre de routeurs travers\u00e9s, quel serait les chemins emprunt\u00e9s pour : relier A et E ? relier A et C ? relier E et D ? De plus dans ce protocole, \u00e0 l'initialisation, la table de routage de chaque routeur ne contient que ses voisins imm\u00e9diats associ\u00e9s \u00e0 une distance de 1. Par exemple la table de routage de A est : Destination Distance B 1 E 1 et celle de B est : Destination Distance A 1 D 1 E 1 Donner \u00e0 l'initialisation, les tables de routages des autres routeurs : C , D et E . Les tables de routages sont mises \u00e0 jour \u00e0 intervalles r\u00e9guliers, en effet chaque routeur consulte la table de routage de ses voisins et met la sienne \u00e0 jour en cons\u00e9quence. Par exemple, A re\u00e7oit la table de routage de B , il y trouve D qui ne figure pas encore dans sa table et le rajoute donc en augmentant sa distance de 1. La table de A devient donc : Destination Distance B 1 E 1 D (via B) 2 Le routeur E figure d\u00e9j\u00e0 dans la table avec une distance plus courte, il n'est pas mis \u00e0 jour. Construire la table de routage de B apr\u00e8s la premi\u00e8re mise \u00e0 jour. Le protocole ospf La qualit\u00e9 des liaisons entre diff\u00e9rents routeurs d\u00e9pend du type de connection, on peut donc repr\u00e9senter un r\u00e9seau par un graphe pond\u00e9r\u00e9. Dans l'exemple suivant, la qualit\u00e9 de la liason entre A et E (poids 1) est bien meilleure que celle entre A et B (poids 5) graph TD A((\"A\")) B((\"B\")) C((\"C\")) D((\"D\")) E((\"E\")) A-- 5 ---B A-- 1 --- E B-- 2 --- E B-- 2 --- D C-- 1 --- E C-- 4 --- D Sachant que dans ce protocole, on tente de minimiser le poids du chemin parcouru, quel serait les chemins emprunt\u00e9s pour : relier A et E ? relier A et C ? relier E et D ?","title":"Activit\u00e9 2 : Protocoles de routage"},{"location":"backup/routage/#cours","text":"Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices.","title":"Cours"},{"location":"backup/routage/#exercices","text":"","title":"Exercices"},{"location":"backup/routage/#exercice-1","text":"","title":"Exercice 1 : ...."},{"location":"backup/sgbd/","text":"C9 Sch\u00e9ma relationnel d'une base de donn\u00e9es Activit\u00e9s Activit\u00e9 1 : Rappels de SQL Commencer par t\u00e9l\u00e9charger et sauvegarder la base de donn\u00e9es de livres suivante : Livres Cette base provient de pixees Quelques rappels sur les bases de donn\u00e9es Lancer SQLite et ouvrir la base de donn\u00e9es livres.db (qui contient une unique table livres). Rappeler la signification du vocabulaire suivant : enregistrement , attribut . Que sont les enregistrements dans le cas de cette table ? De quel type est l'attribut note ? Proposer un domaine pour cet attribut. Rappeler le principe d'unicit\u00e9, quel attribut sert de cl\u00e9 primaire ? Quelques rappels sur le sql Ecrire une requ\u00eate permettant de lister tous les livres ayant obtenu une note de 10. Ecrire une requ\u00eate permettant de lister les livres dans l'ordre alphab\u00e9tique de leur titre. Ecrire une requ\u00eate permettant de savoir combien d'auteurs diff\u00e9rents apparaissent dans cette base de donn\u00e9es. Ecrire une requete permettant de calculer la moyenne des notes attribu\u00e9es aux livres \u00e9crits par Ren\u00e9 Barjavel. Du nouveau en sql Nous n'avons pour le moment vu que l'instruction select qui permet de s\u00e9lectionner des donn\u00e9es, le langage sql permet aussi : d'ajouter des donn\u00e9es dans une table avec insert , de modifier des donn\u00e9es dans une table avec update , de supprimer des donn\u00e9es dans une table avec delete . Faire vous m\u00eame des recherches sur le web pour comprendre la syntaxe d'une requ\u00eate d'insertion, puis ajouter dans cette table l'enregistrement correspondant au livre \"la plan\u00e8te des singes\" \u00e9crit par Pierre Boulle en francais et publi\u00e9 en 1963. On laisse pour le moment vide le champ note . Aide Respecter bien le type des attributs et ne pas oublier pas l'attribut id Rechercher aussi la syntaxe d'un sql puis modifier l'enregistrement pr\u00e9c\u00e9dent en mettant une note de 10. Aide Utiliser l'attribut id pour rep\u00e9rer l'enregistrement \u00e0 modifier Rechercher enfin la syntaxe d'un delete , le tester en ajoutant puis supprimant un enregistrement de votre choix. Vers l'utilisation de plusieurs tables On appelle sch\u00e9ma relationnel l'ensemble des relations (ou tables) pr\u00e9sentes dans une base de donn\u00e9es. On repr\u00e9sente g\u00e9n\u00e9ralement une table d'un sch\u00e9ma relationnel en indiquant chaque attribut, la cl\u00e9 primaire \u00e9tant soulign\u00e9. Le sch\u00e9ma de notre base est donc : livres ( id , titre, nom_auteur, prenom_auteur, annee_auteur, langue_auteur, annee_publi, note) Des repr\u00e9sentation en tableau sont parfois plus lisibles : De nombreuses informations sont dupliqu\u00e9es dans notre base de donn\u00e9es, lesquelles ? Quels sont les inconv\u00e9nients de cette duplication d'information ? On propose de cr\u00e9er une nouvelle table auteurs qui contiendra les informations sur les auteurs, proposer un sch\u00e9ma pour cette table. La table des livres s'en trouve all\u00e9g\u00e9e, on y enl\u00e8ve les informations concernant l'auteur et on ajoute un champ id_auteur qui r\u00e9f\u00e9rence un \u00e9l\u00e9ment de la table des auteurs. On dit que id_auteur est une clef \u00e9trang\u00e8re , c'est \u00e0 dire la cl\u00e9 primaire d'une autre table, dans le sch\u00e9ma relationnel on note ce champ en le faisant pr\u00e9c\u00e9d\u00e9 d'un # . Ecrire le sch\u00e9ma relationnel de cette nouvelle base de donn\u00e9es. Activit\u00e9 2 : Plusieurs tables On reprend la base de donn\u00e9es livres contenant maintenant deux tables et construite \u00e0 l'activit\u00e9 pr\u00e9c\u00e9dente : Livres avec table auteur Le sch\u00e9ma relationnel de cette base de donn\u00e9es est donn\u00e9 ci-dessous : Int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle Rappeler rapidement la signification des attributs soulign\u00e9s et du caract\u00e8re # . On consid\u00e8re la requ\u00eate suivante : DELETE FROM auteurs WHERE id_auteur = 10 quel devrait \u00eatre l'effet de cette requ\u00eate sur la base de donn\u00e9es ? Tester cette requ\u00eate, que se passe-t-il ? M\u00eame question pour la requ\u00eate : INSERT INTO livres VALUES ( 17 , 11 , \"Harry potter\" , 1997 , 6 ) Ces requ\u00eates \u00e9chouent car le sgbd pr\u00e9serve de fa\u00e7on automatique l' int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle sch\u00e9matis\u00e9 par la fl\u00e8che dans le sch\u00e9ma relationnel ci-dessus. En faisant \u00e9ventuellement des recherches sur le web, donner une d\u00e9finition de l'int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle. Requ\u00eate dans plusieurs tables On d\u00e9sire maintenant lister tous les titres de livres pr\u00e9sents dans notre base de donn\u00e9es accompagn\u00e9s du nom de leur auteur. On doit donc effectuer une requ\u00eate sur plusieurs tables puisque les titres sont dans la table des livres et les noms d'auteurs dans la table auteurs Danger Les attributs de deux tables peuvent avoir le m\u00eame nom, par exemple ici id_auteur est un attribut de livres et aussi de auteurs . On prendra donc l'habitude pour \u00e9viter toute ambigu\u00eft\u00e9 de pr\u00e9fix\u00e9 l'attribut par le nom de sa table. Ici, on a donc les attributes livres.id_auteur et auteur.id_auteur . Tester la requ\u00eate suivante, dans laquelle on a pr\u00e9fix\u00e9 les attributs par le nom des tables : SELECT livres . titre , auteur . nom FROM livres , auteur Le r\u00e9sultat est-il celui attendu ? On doit effectuer ce qu'on appelle une jointure c'est \u00e0 dire indiquer qu'on associe le livre et l'auteur lorsque le champ id_auteur des deux tables correspond. La syntaxe est la suivante : SELECT livres . titre , auteur . nom FROM livres JOIN auteurs ON ivres . id_auteur = auteur . id_auteur Tester cette requ\u00eate. Ecrire une requ\u00eate permettant de lister tous les titres de livres avec nom et pr\u00e9nom de l'auteur lorsque les auteurs sont n\u00e9s en 1920. A vous de jouer ! T\u00e9l\u00e9charger la base de donn\u00e9es bibliotheque : Bibliotheque on y trouve les deux tables des questions pr\u00e9c\u00e9dentes et deux nouvelles tables : clients et emprunts . Donner le sch\u00e9ma relationnel de cette base de donn\u00e9es en y faisant figurer les cl\u00e9s primaires et \u00e9trang\u00e8res. Aide Faire le sch\u00e9ma sous la forme d'un sch\u00e9ma comme au d\u00e9but de cette activit\u00e9 en y ajoutant les deux tables clients et emprunts . Expliquer rapidement les relations pr\u00e9serv\u00e9es par l'int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle de cette base de donn\u00e9es en donnant un exemple de requ\u00eate qui renverrait une erreur de type foreign key constraint failed . Ajouter un enregistrement de votre choix dans la table clients . Ajouter un enregistrement pour le client de la question pr\u00e9c\u00e9dente dans la table des emprunts . Ecrire une requ\u00eate permettant de lister tous les emprunts en cours dans cette biblioth\u00e8que avec le nom de l'emprunteur et le titre du livre. Activit\u00e9 3 : Une enqu\u00eate polici\u00e8re avec SQL Le but de cette activit\u00e9, propos\u00e9 sur le site de l'universit\u00e9 am\u00e9ricaine Northwerstern University est de r\u00e9soudre un crime en utilisant des requ\u00eates SQL dans une base de donn\u00e9es dont voici le sch\u00e9ma relationnel : Toutes les requ\u00eates peuvent \u00eatre ex\u00e9cut\u00e9es directement sur le site, cependant vous pouvez t\u00e9l\u00e9charger ci-dessous la base afin d'ex\u00e9cuter vos requ\u00eates en local : SQL Murder Mystery Cliquer sur l'image ci-dessous pour acc\u00e9der \u00e0 l'enqu\u00eate et trouver le coupable. Cours Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices. Exercices Exercice 1 : Exercices corrig\u00e9s en ligne Le site du CNAM propose de vous entra\u00eener aux requ\u00eates SQL sur quatre base de donn\u00e9es (films, voyageurs, immeubles et messagerie). Pour chaque base, des requ\u00eates sont sugg\u00e9r\u00e9s et la correction est propos\u00e9e. Exercice 2 : M\u00e9tropole candidat libres 2021 Sujet 1- Exercice 1 \u2009 Enonc\u00e9 Exercice 1 : M\u00e9tropole candidat libres 2021 Sujet 2- Exercice 1 \u2009 Enonc\u00e9 Exercice 2 : Am\u00e9rique du nord 2021 - Exercice 1 \u2009 Enonc\u00e9","title":"Sgbd"},{"location":"backup/sgbd/#c9-schema-relationnel-dune-base-de-donnees","text":"","title":"C9 Sch\u00e9ma relationnel d'une base de donn\u00e9es "},{"location":"backup/sgbd/#activites","text":"","title":"Activit\u00e9s"},{"location":"backup/sgbd/#activite-1-rappels-de-sql","text":"Commencer par t\u00e9l\u00e9charger et sauvegarder la base de donn\u00e9es de livres suivante : Livres Cette base provient de pixees Quelques rappels sur les bases de donn\u00e9es Lancer SQLite et ouvrir la base de donn\u00e9es livres.db (qui contient une unique table livres). Rappeler la signification du vocabulaire suivant : enregistrement , attribut . Que sont les enregistrements dans le cas de cette table ? De quel type est l'attribut note ? Proposer un domaine pour cet attribut. Rappeler le principe d'unicit\u00e9, quel attribut sert de cl\u00e9 primaire ? Quelques rappels sur le sql Ecrire une requ\u00eate permettant de lister tous les livres ayant obtenu une note de 10. Ecrire une requ\u00eate permettant de lister les livres dans l'ordre alphab\u00e9tique de leur titre. Ecrire une requ\u00eate permettant de savoir combien d'auteurs diff\u00e9rents apparaissent dans cette base de donn\u00e9es. Ecrire une requete permettant de calculer la moyenne des notes attribu\u00e9es aux livres \u00e9crits par Ren\u00e9 Barjavel. Du nouveau en sql Nous n'avons pour le moment vu que l'instruction select qui permet de s\u00e9lectionner des donn\u00e9es, le langage sql permet aussi : d'ajouter des donn\u00e9es dans une table avec insert , de modifier des donn\u00e9es dans une table avec update , de supprimer des donn\u00e9es dans une table avec delete . Faire vous m\u00eame des recherches sur le web pour comprendre la syntaxe d'une requ\u00eate d'insertion, puis ajouter dans cette table l'enregistrement correspondant au livre \"la plan\u00e8te des singes\" \u00e9crit par Pierre Boulle en francais et publi\u00e9 en 1963. On laisse pour le moment vide le champ note . Aide Respecter bien le type des attributs et ne pas oublier pas l'attribut id Rechercher aussi la syntaxe d'un sql puis modifier l'enregistrement pr\u00e9c\u00e9dent en mettant une note de 10. Aide Utiliser l'attribut id pour rep\u00e9rer l'enregistrement \u00e0 modifier Rechercher enfin la syntaxe d'un delete , le tester en ajoutant puis supprimant un enregistrement de votre choix. Vers l'utilisation de plusieurs tables On appelle sch\u00e9ma relationnel l'ensemble des relations (ou tables) pr\u00e9sentes dans une base de donn\u00e9es. On repr\u00e9sente g\u00e9n\u00e9ralement une table d'un sch\u00e9ma relationnel en indiquant chaque attribut, la cl\u00e9 primaire \u00e9tant soulign\u00e9. Le sch\u00e9ma de notre base est donc : livres ( id , titre, nom_auteur, prenom_auteur, annee_auteur, langue_auteur, annee_publi, note) Des repr\u00e9sentation en tableau sont parfois plus lisibles : De nombreuses informations sont dupliqu\u00e9es dans notre base de donn\u00e9es, lesquelles ? Quels sont les inconv\u00e9nients de cette duplication d'information ? On propose de cr\u00e9er une nouvelle table auteurs qui contiendra les informations sur les auteurs, proposer un sch\u00e9ma pour cette table. La table des livres s'en trouve all\u00e9g\u00e9e, on y enl\u00e8ve les informations concernant l'auteur et on ajoute un champ id_auteur qui r\u00e9f\u00e9rence un \u00e9l\u00e9ment de la table des auteurs. On dit que id_auteur est une clef \u00e9trang\u00e8re , c'est \u00e0 dire la cl\u00e9 primaire d'une autre table, dans le sch\u00e9ma relationnel on note ce champ en le faisant pr\u00e9c\u00e9d\u00e9 d'un # . Ecrire le sch\u00e9ma relationnel de cette nouvelle base de donn\u00e9es.","title":"Activit\u00e9 1 : Rappels de SQL"},{"location":"backup/sgbd/#activite-2-plusieurs-tables","text":"On reprend la base de donn\u00e9es livres contenant maintenant deux tables et construite \u00e0 l'activit\u00e9 pr\u00e9c\u00e9dente : Livres avec table auteur Le sch\u00e9ma relationnel de cette base de donn\u00e9es est donn\u00e9 ci-dessous : Int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle Rappeler rapidement la signification des attributs soulign\u00e9s et du caract\u00e8re # . On consid\u00e8re la requ\u00eate suivante : DELETE FROM auteurs WHERE id_auteur = 10 quel devrait \u00eatre l'effet de cette requ\u00eate sur la base de donn\u00e9es ? Tester cette requ\u00eate, que se passe-t-il ? M\u00eame question pour la requ\u00eate : INSERT INTO livres VALUES ( 17 , 11 , \"Harry potter\" , 1997 , 6 ) Ces requ\u00eates \u00e9chouent car le sgbd pr\u00e9serve de fa\u00e7on automatique l' int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle sch\u00e9matis\u00e9 par la fl\u00e8che dans le sch\u00e9ma relationnel ci-dessus. En faisant \u00e9ventuellement des recherches sur le web, donner une d\u00e9finition de l'int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle. Requ\u00eate dans plusieurs tables On d\u00e9sire maintenant lister tous les titres de livres pr\u00e9sents dans notre base de donn\u00e9es accompagn\u00e9s du nom de leur auteur. On doit donc effectuer une requ\u00eate sur plusieurs tables puisque les titres sont dans la table des livres et les noms d'auteurs dans la table auteurs Danger Les attributs de deux tables peuvent avoir le m\u00eame nom, par exemple ici id_auteur est un attribut de livres et aussi de auteurs . On prendra donc l'habitude pour \u00e9viter toute ambigu\u00eft\u00e9 de pr\u00e9fix\u00e9 l'attribut par le nom de sa table. Ici, on a donc les attributes livres.id_auteur et auteur.id_auteur . Tester la requ\u00eate suivante, dans laquelle on a pr\u00e9fix\u00e9 les attributs par le nom des tables : SELECT livres . titre , auteur . nom FROM livres , auteur Le r\u00e9sultat est-il celui attendu ? On doit effectuer ce qu'on appelle une jointure c'est \u00e0 dire indiquer qu'on associe le livre et l'auteur lorsque le champ id_auteur des deux tables correspond. La syntaxe est la suivante : SELECT livres . titre , auteur . nom FROM livres JOIN auteurs ON ivres . id_auteur = auteur . id_auteur Tester cette requ\u00eate. Ecrire une requ\u00eate permettant de lister tous les titres de livres avec nom et pr\u00e9nom de l'auteur lorsque les auteurs sont n\u00e9s en 1920. A vous de jouer ! T\u00e9l\u00e9charger la base de donn\u00e9es bibliotheque : Bibliotheque on y trouve les deux tables des questions pr\u00e9c\u00e9dentes et deux nouvelles tables : clients et emprunts . Donner le sch\u00e9ma relationnel de cette base de donn\u00e9es en y faisant figurer les cl\u00e9s primaires et \u00e9trang\u00e8res. Aide Faire le sch\u00e9ma sous la forme d'un sch\u00e9ma comme au d\u00e9but de cette activit\u00e9 en y ajoutant les deux tables clients et emprunts . Expliquer rapidement les relations pr\u00e9serv\u00e9es par l'int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle de cette base de donn\u00e9es en donnant un exemple de requ\u00eate qui renverrait une erreur de type foreign key constraint failed . Ajouter un enregistrement de votre choix dans la table clients . Ajouter un enregistrement pour le client de la question pr\u00e9c\u00e9dente dans la table des emprunts . Ecrire une requ\u00eate permettant de lister tous les emprunts en cours dans cette biblioth\u00e8que avec le nom de l'emprunteur et le titre du livre.","title":"Activit\u00e9 2 : Plusieurs tables"},{"location":"backup/sgbd/#activite-3-une-enquete-policiere-avec-sql","text":"Le but de cette activit\u00e9, propos\u00e9 sur le site de l'universit\u00e9 am\u00e9ricaine Northwerstern University est de r\u00e9soudre un crime en utilisant des requ\u00eates SQL dans une base de donn\u00e9es dont voici le sch\u00e9ma relationnel : Toutes les requ\u00eates peuvent \u00eatre ex\u00e9cut\u00e9es directement sur le site, cependant vous pouvez t\u00e9l\u00e9charger ci-dessous la base afin d'ex\u00e9cuter vos requ\u00eates en local : SQL Murder Mystery Cliquer sur l'image ci-dessous pour acc\u00e9der \u00e0 l'enqu\u00eate et trouver le coupable.","title":"Activit\u00e9 3 : Une enqu\u00eate polici\u00e8re avec SQL"},{"location":"backup/sgbd/#cours","text":"Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices.","title":"Cours"},{"location":"backup/sgbd/#exercices","text":"","title":"Exercices"},{"location":"backup/sgbd/#exercice-1-exercices-corriges-en-ligne","text":"Le site du CNAM propose de vous entra\u00eener aux requ\u00eates SQL sur quatre base de donn\u00e9es (films, voyageurs, immeubles et messagerie). Pour chaque base, des requ\u00eates sont sugg\u00e9r\u00e9s et la correction est propos\u00e9e.","title":"Exercice 1 : Exercices corrig\u00e9s en ligne"},{"location":"backup/sgbd/#exercice-2-metropole-candidat-libres-2021-sujet-1-exercice-1","text":"Enonc\u00e9","title":"Exercice 2 : M\u00e9tropole candidat libres 2021 Sujet 1- Exercice 1&thinsp; "},{"location":"backup/sgbd/#exercice-1-metropole-candidat-libres-2021-sujet-2-exercice-1","text":"Enonc\u00e9","title":"Exercice 1 : M\u00e9tropole candidat libres 2021 Sujet 2- Exercice 1&thinsp; "},{"location":"backup/sgbd/#exercice-2-amerique-du-nord-2021-exercice-1","text":"Enonc\u00e9","title":"Exercice 2 : Am\u00e9rique du nord 2021 - Exercice 1&thinsp; "},{"location":"backup/sl/","text":"C6 Structures de donn\u00e9es lin\u00e9aires Activit\u00e9s Activit\u00e9 1 : Notebook d'introduction Jupyter Notebook Cours Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices. Exercices Exercice 1 : Choix d'une structure de donn\u00e9es Dans chacune des situations suivantes, indiquer en justifiant votre r\u00e9ponse, quelle structure de donn\u00e9es pourrait \u00eatre adopt\u00e9e : La gestion du bouton \"Revenir \u00e0 l'\u00e9tape pr\u00e9c\u00e9dente\" d'un logiciel de retouche d'images. Une application permettant de g\u00e9rer une liste de courses dans laquelle on peut ajouter/supprimer/modifier des \u00e9l\u00e9ments. L'envoi de travaux d'impression \u00e0 une imprimante. La repr\u00e9sentation dans un programme d'un plateau de jeu (comme un \u00e9quiquier ou un damier) dont on conna\u00eet \u00e0 l'avance les dimensions. La saisie d'une ligne de commande dans un terminal o\u00f9 on ne peut utiliser que la touche retour arri\u00e8re pour \u00e9diter ses commandes Exercice 2 : Le module deque de Python Bien que Python ne propose pas de fa\u00e7on native le type abstrait de donn\u00e9e file, le module collections permet d'importer deque ( d ouble e nded que ue). Cette structure de donn\u00e9es permet l'insertion ou la suppression aux deux extr\u00e9mit\u00e9s en temps constant (donc en \\(O(1)\\) ). Elle correspond \u00e0 des listes cha\u00een\u00e9es disposant d'un acc\u00e8s direct au premier et au dernier \u00e9l\u00e9ment (d'o\u00f9 le nom double ended ). L'insertion d'un \u00e9l\u00e9ment en d\u00e9but d'un objet de type deque s'effectue \u00e0 l'aide de la m\u00e9thode appendleft et la suppression d'un \u00e9l\u00e9ment en fin s'effectue (comme pour les listes de Python) \u00e0 l'aide de la m\u00e9thode pop . Importer deque depuis le module collections , et \u00e9crire puis tester une nouvelle impl\u00e9mentation de file utilisant un objet de type deque plut\u00f4t qu'une liste. Aide La fonction len existe sur les objets de type deque et pourra \u00eatre appel\u00e9e pour tester si la file est vide. V\u00e9rifier que cette nouvelle impl\u00e9mentation est plus efficace que l'impl\u00e9mentation sous forme de liste vue ci-dessus. Aide Comparer par exemple les temps d'ex\u00e9cution pour enfiler puis defiler les entiers de 1 \u00e0 un cent mille. Reprendre ce qui a \u00e9t\u00e9 vu dans le notebook d'introduction \u00e0 ce chapitre et tracer les graphiques de temps d'ex\u00e9cution en fonction de la taille de la file. Compl\u00e9ter cette nouvelle impl\u00e9mentation par les m\u00e9thodes suivantes : Un attribut taille ainsi qu'une m\u00e9thode get_taille permettant de lire le nombre d'\u00e9l\u00e9ments dans la file. Une m\u00e9thode d'affichage d'un objet file (s\u00e9parer les \u00e9l\u00e9ments par des virgules et choisir les caract\u00e8res de d\u00e9but et de fin). Aide Les objets de type deque autorisent l'acc\u00e8s par indice avec la notation crochet (comme les listes de Python). Un attribut taille_max fixant une taille maximale pour la file, si cette taille est d\u00e9pass\u00e9e, on ne peut plus enfiler. Dans la documentation du module deque on peut lire : \"L'acc\u00e8s par indice est en O(1) aux extr\u00e9mit\u00e9s mais en O(n) au milieu. Pour des acc\u00e8s al\u00e9atoires rapides, il est pr\u00e9f\u00e9rable d'utiliser des listes. \". Justifier rapidement, par exemple par un sch\u00e9ma, ces remarques sur la complexit\u00e9 des op\u00e9rations et la comparaison avec les listes de Python. Exercice 3 : Manipulation d'une pile On suppose qu'on dispose d'une pile not\u00e9e P et de son interface usuelle, c'est \u00e0 dire : est_vide , empile et depile . Ecrire une fonction qui \u00e9change les deux \u00e9l\u00e9ments, situ\u00e9s au sommet de la pile. Si la pile contient moins de deux \u00e9l\u00e9ments, la fonction ne fait rien. Par exemple si la l'\u00e9tat de la pile est |a,b,c,d> , elle devient |a,b,d,c> comme illustr\u00e9 sur le sch\u00e9ma ci-dessous : Attention On ne doit utiliser que l'interface d'une pile par cons\u00e9quent la notation usuelle de Python avec les crochets pour acc\u00e9der aux \u00e9l\u00e9ments d'une liste n'est pas autoris\u00e9e ! Exercice 4 : Retour sur l'impl\u00e9mentation d'une pile On revient sur l'impl\u00e9mentation d'une pile en Python \u00e0 l'aide de la poo (d\u00e9j\u00e0 vu dans le notebook d'introduction \u00e0 ce chapitre) : class Pile : def __init__ ( self ): self . contenu = [] def empiler ( self , element ): self . contenu . append ( element ) def est_vide ( self ): return self . contenu == [] def depiler ( self ): assert not self . est_vide (), \"Pile vide\" return self . contenu . pop () Recopier et enregistrer cette impl\u00e9mentation de fa\u00e7on \u00e0 disposer d'un module Pile que nous pourrons utiliser par la suite. Dans cette impl\u00e9mentation, la pile est repr\u00e9sent\u00e9e par une liste de Python, le sommet de la pile est-il le d\u00e9but ou la fin de cette liste ? Ce choix est-il judicieux ? Justifier votre r\u00e9ponse. Compl\u00e9ter cette impl\u00e9mentation en ajoutant : Une m\u00e9thode d'affichage en s\u00e9parant les \u00e9l\u00e9ments par des virgules et en adoptant les caract\u00e8res de votre choix pour le d\u00e9but et la fin de la pile. Aide Pour le probl\u00e8me de la virgule apr\u00e8s le dernier \u00e9l\u00e9ment, on peut utiliser un slice pour l'enlever, ou alors faire un test permettant de ne pas mettre de virgule lors qu'on atteint le dernier \u00e9l\u00e9ment. Une m\u00e9thode sommet , permettant de lire la valeur situ\u00e9 au sommet de la pile sans l'enlever . Un attribut taille \u00e0 la pile indiquant le nombre d'\u00e9l\u00e9ments contenus dans la pile. Un attribut taille_max \u00e0 la pile, lorsque cette taille est d\u00e9pass\u00e9e, on ne peut plus empiler. Aide Le module math de Python propose la constante inf pour simuler l'infini, on pourra donner cette valeur par d\u00e9faut \u00e0 taille_max de fa\u00e7on \u00e0 avoir une pile de taille \"infinie\" lorsque le param\u00e8tre taille_max n'est pas donn\u00e9. En utilisant le module Pile , \u00e9crire une fonction Python qui prend en entr\u00e9e une liste et renvoie cette liste retourn\u00e9e. Par exemple retourne([1,2,3]) renvoie [3,2,1] . Aide On rappelle (voir activit\u00e9) qu'il suffit d'empiler les \u00e9l\u00e9ments de la liste puis de les d\u00e9piler. Exercice 5 : Expression bien parenth\u00e9s\u00e9e On dit qu'une expression est bien parenth\u00e9s\u00e9e lorsque chaque parenth\u00e8se ouvrante est associ\u00e9e \u00e0 une unique parenth\u00e8se fermante et inversement. Par exemple, on a soulign\u00e9 dans l'expression suivante le probl\u00e8me de parenth\u00e9sages : \\((3+2)\\textcolor{red}{\\underline{)}}-(4+1)\\) Les expressions suivantes sont-elles bien parenth\u00e9s\u00e9es ? Sinon, indiquer l'emplacement dans la cha\u00eene de caract\u00e8res o\u00f9 l'erreur est d\u00e9tect\u00e9e. \\(3+(5-4\\div(3+2)))+10\\) \\(((3+2)\\times 5\\) \\(5)-4\\times2(\\) \\(((3+2)\\times(5-3))\\) Ecrire une fonction bien_parenthesee qui prend en argument un expression (sous la forme d'une chaine de caract\u00e8res) et qui renvoie \\(-1\\) lorsque l'expression est bien parenth\u00e9s\u00e9e et sinon un entier indiquant l'emplacement dans l'expression o\u00f9 l'erreur de parenth\u00e9sage est d\u00e9tect\u00e9e. Aide On pourra, parcourir l'expression et utiliser une pile qui stocke les indices de chaque parenth\u00e8ses ouvrante. On d\u00e9pile, lorsqu'on rencontre une parenth\u00e8se fermante. Tester votre fonction sur les expressions de la question 1. Utiliser cette fonction afin de produire un affichage de l'erreur \u00e0 la fa\u00e7on de Python c'est \u00e0 dire avec un caract\u00e8re ^ en dessous de l'erreur. Par exemple : \\((2+3)\\underset{\\textcolor{red}{\\wedge}}{)}-5\\) Poursuivre ce travail en travaillant sur des expressions pouvant contenir simultan\u00e9ment d'autres types de parenth\u00e8ses, par exemple : [] ou encore {} . Exercice 6 : Impl\u00e9mentation na\u00efve d'une file On souhaite impl\u00e9menter une file en Python \u00e0 l'aide d'une liste de Python et de la poo \u00e0 la fa\u00e7on de ce qui a \u00e9t\u00e9 fait pour les piles dans l'exercice 4 . Recopier et compl\u00e9ter le code ci-dessous de fa\u00e7on \u00e0 ce qu'on enfile un \u00e9l\u00e9ment en l'ajoutant en d\u00e9but de liste. (et que donc on d\u00e9file en enlevant en fin de liste. class File : def __init__ ( self ): self . contenu = [] def enfiler ( self , element ): self . contenu = ............. def est_vide ( self ): return self . contenu == [] def defiler ( self ): assert not self . est_vide (), \"File vide\" return self ............. Tester cette impl\u00e9mentation en cr\u00e9ant une file dans laquelle on enfilera puis d\u00e9filera les entiers de 1 \u00e0 100. Reprendre le test pr\u00e9c\u00e9dent en mesurant les performances du programme pour les entiers jusqu'\u00e0 cent mille. Aide Par souci de simplicit\u00e9, on utilisera la fonction time du module time (m\u00eame si le temps d'ex\u00e9cution mesur\u00e9 d\u00e9pend d'autres facteurs). Cette impl\u00e9mentation est-elle satisfaisante en terme de complexit\u00e9 des op\u00e9rations ? Justifier. M\u00eame question si on d\u00e9cide, plut\u00f4t d'enfiler en fin de liste (et donc de d\u00e9filer en d\u00e9but). Exercice 7 : Impl\u00e9mentation d'une file avec deux piles On consid\u00e8re la file suivante : On peut aussi la sch\u00e9matiser sous la forme de deux piles : Pour comprendre ce fonctionnement, on part d'une file vide et on montre par quelques exemples l'\u00e9tat de la file et des deux piles qui la repr\u00e9sente : Etape Op\u00e9ration Etat de la file Pile d'entr\u00e9e Pile de sortie Enfiler a >a> |a> |> Enfiler b >b,a> |a,b> |> Enfiler c >c,b,a> |a,b,c> |> Defiler >c,b> |> |c,b> Defiler >c> |> |c> Enfiler d >d,c> |d> |c> Aide Observer attentivement ce qui se passe \u00e0 l'\u00e9tape : la pile de sortie \u00e9tant vide, la totalit\u00e9 de la pile d'entr\u00e9e est d\u00e9pil\u00e9 dans la pile de sortie. Compl\u00e9ter le tableau ci-dessous avec les \u00e9tapes suivantes : Defiler Enfiler e Defiler Recopier et compl\u00e9ter : Une file peut s'impl\u00e9menter en g\u00e9rant .... pile : enfiler un \u00e9l\u00e9ment revient \u00e0 .......... dans une pile d'entr\u00e9e defiler un \u00e9l\u00e9ment revient \u00e0 ............. d'une pile de sortie (cette pile est ........... au d\u00e9part) Si la pile de sortie est ............ on .......... la totalit\u00e9 de la pile ........... dans ................... Ecrire en Python une impl\u00e9mentation d'une file sous la forme de deux piles en utilisant la poo . Tester votre impl\u00e9mentation (reprendre \u00e9ventuellement les op\u00e9rations \u00e0 en faisant afficher l'\u00e9tat de la file et des deux piles \u00e0 chaque \u00e9tape). Pour aller plus loin Rechercher la complexit\u00e9 des op\u00e9rations de cette impl\u00e9mentation (hors programme). Exercice 8 : Buffer On consid\u00e8re le programme Python suivant : fic1 = open ( \"sortie.txt\" , \"w\" ) fic1 . write ( \"Python a \u00e9crit ici\" ) fic2 = open ( \"sortie.txt\" , \"r\" ) contenu = fic2 . read () fic1 . close () fic2 . close () print ( contenu ) La m\u00e9moire tampon Que fait ce programme et quel r\u00e9sultat devrait produire l'affichage de la variable {\\tt contenu} ? Recopier et executer ce programme, le r\u00e9sultat est-il celui attendu ? L'\u00e9criture dans un fichier est g\u00e9r\u00e9 par Python \u00e0 l'aide d'une m\u00e9moire tampon ( buffer en anglais), Python attend que ce buffer atteigne une certaine taille (ou que le fichier soit ferm\u00e9) avant d'\u00e9crire de fa\u00e7on effective dans le fichier, ce qui explique le fonctionnement ci-dessous. Selon vous, pourquoi cette gestion du write via un buffer ? On peut forcer l'\u00e9criture sans attendre que le buffer soit plein gr\u00e2ce \u00e0 la m\u00e9thode flush des descripteurs de fichiers. Ins\u00e9rer fic1.flush() apr\u00e8s l'instruction write du programme ci-dessous et l'ex\u00e9cuter de nouveau pour constater la diff\u00e9rence. Simuler un buffer On consid\u00e8re le programme suivant qui \u00e9crit des nombres tir\u00e9s au hasard dans un fichier sans utiliser de buffer , c'est \u00e0 dire qu'on force l'\u00e9criture de chaque nombre \u00e0 l'aide de flush : from random import randint from time import time # Cr\u00e9ation liste de nombres \u00e0 \u00e9crire SIZE = 100000 nombres = [ randint ( 1 , SIZE ) for _ in range ( SIZE )] debut = time () fic = open ( \"sortie.txt\" , \"w\" ) for nb in nombres : fic . write ( str ( nb ) + ' \\n ' ) fic . flush () fic . close () fin = time () temps = fin - debut print ( \"Temps sans buffer \" , temps ) Recopier et ex\u00e9cuter ce programme et en noter le temps d'ex\u00e9cution A quel type de structure de donn\u00e9es correspond un buffer ? Ecrire une seconde version de ce programme en simulant l'utilisation d'un buffer, c'est \u00e0 dire qu'on enregistre dans une structure de donn\u00e9es les nombres \u00e0 \u00e9crire et qu'on attend que cette structure soit pleine pour \u00e9crire tous les \u00e9l\u00e9ments en une fois (on pourra cr\u00e9er une constante BUFFER_SIZE ). Comparer le temps d'ex\u00e9cution de cette nouvelle version avec celui du programme pr\u00e9c\u00e9dent. Exercice 9 : Comparaison de plusieurs impl\u00e9mentation du TAD liste On rappelle l'impl\u00e9mentation du TAD liste sous forme de liste cha\u00een\u00e9e vue dans le notebook d'introduction \u00e0 ce chapitre : class Maillon : '''Le maillon d'une liste chain\u00e9e repr\u00e9sent\u00e9 par sa valeur et un lien vers le maillon suivant''' def __init__ ( self , valeur ): self . valeur = valeur self . suivant = None class Liste : '''Une liste est un lien vers son premier maillon''' def __init__ ( self ): self . tete = None def est_vide ( self ): return self . tete == None def ajoute ( self , valeur ): nouveau_maillon = Maillon ( valeur ) nouveau_maillon . suivant = self . tete self . tete = nouveau_maillon def supprime ( self ): assert not self . est_vide (), \"Liste vide, suppression impossible\" self . tete = self . tete . suivant Compl\u00e9ter cette impl\u00e9mentation en ajoutant une m\u00e9thode d'affichage. Ajouter une m\u00e9thode tete qui renvoie la valeur du maillon situ\u00e9 en t\u00eate de liste. Le type list de Python est aussi une impl\u00e9mentation de ce TAD. Quelles op\u00e9rations sur le type list de Python correspondent \u00e0 ajoute et supprime d\u00e9finis ci-dessus ? Compl\u00e9ter le tableau suivant permettant de comparer en terme de complexit\u00e9 diverses impl\u00e9mentations du type abstrait de donn\u00e9es liste: Op\u00e9ration list (type Python) class Liste Module deque Insertion en t\u00eate ...... ...... ...... Ajout en queue ...... ...... ...... Acc\u00e8s \u00e0 un \u00e9l\u00e9ment ...... ...... ...... Exercice 10 : Exercices extraits de sujet de bac \u2009 Am\u00e9rique du nord 2021 - exercice 5 M\u00e9tropole CL 2021 - exercice 2 M\u00e9tropole sujet 2 2021 - exercice 5","title":"Sl"},{"location":"backup/sl/#c6-structures-de-donnees-lineaires","text":"","title":"C6 Structures de donn\u00e9es lin\u00e9aires "},{"location":"backup/sl/#activites","text":"","title":"Activit\u00e9s"},{"location":"backup/sl/#activite-1-notebook-dintroduction","text":"Jupyter Notebook","title":"Activit\u00e9 1 : Notebook d'introduction"},{"location":"backup/sl/#cours","text":"Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices.","title":"Cours"},{"location":"backup/sl/#exercices","text":"","title":"Exercices"},{"location":"backup/sl/#exercice-1-choix-dune-structure-de-donnees","text":"Dans chacune des situations suivantes, indiquer en justifiant votre r\u00e9ponse, quelle structure de donn\u00e9es pourrait \u00eatre adopt\u00e9e : La gestion du bouton \"Revenir \u00e0 l'\u00e9tape pr\u00e9c\u00e9dente\" d'un logiciel de retouche d'images. Une application permettant de g\u00e9rer une liste de courses dans laquelle on peut ajouter/supprimer/modifier des \u00e9l\u00e9ments. L'envoi de travaux d'impression \u00e0 une imprimante. La repr\u00e9sentation dans un programme d'un plateau de jeu (comme un \u00e9quiquier ou un damier) dont on conna\u00eet \u00e0 l'avance les dimensions. La saisie d'une ligne de commande dans un terminal o\u00f9 on ne peut utiliser que la touche retour arri\u00e8re pour \u00e9diter ses commandes","title":"Exercice 1 : Choix d'une structure de donn\u00e9es"},{"location":"backup/sl/#exercice-2-le-module-deque-de-python","text":"Bien que Python ne propose pas de fa\u00e7on native le type abstrait de donn\u00e9e file, le module collections permet d'importer deque ( d ouble e nded que ue). Cette structure de donn\u00e9es permet l'insertion ou la suppression aux deux extr\u00e9mit\u00e9s en temps constant (donc en \\(O(1)\\) ). Elle correspond \u00e0 des listes cha\u00een\u00e9es disposant d'un acc\u00e8s direct au premier et au dernier \u00e9l\u00e9ment (d'o\u00f9 le nom double ended ). L'insertion d'un \u00e9l\u00e9ment en d\u00e9but d'un objet de type deque s'effectue \u00e0 l'aide de la m\u00e9thode appendleft et la suppression d'un \u00e9l\u00e9ment en fin s'effectue (comme pour les listes de Python) \u00e0 l'aide de la m\u00e9thode pop . Importer deque depuis le module collections , et \u00e9crire puis tester une nouvelle impl\u00e9mentation de file utilisant un objet de type deque plut\u00f4t qu'une liste. Aide La fonction len existe sur les objets de type deque et pourra \u00eatre appel\u00e9e pour tester si la file est vide. V\u00e9rifier que cette nouvelle impl\u00e9mentation est plus efficace que l'impl\u00e9mentation sous forme de liste vue ci-dessus. Aide Comparer par exemple les temps d'ex\u00e9cution pour enfiler puis defiler les entiers de 1 \u00e0 un cent mille. Reprendre ce qui a \u00e9t\u00e9 vu dans le notebook d'introduction \u00e0 ce chapitre et tracer les graphiques de temps d'ex\u00e9cution en fonction de la taille de la file. Compl\u00e9ter cette nouvelle impl\u00e9mentation par les m\u00e9thodes suivantes : Un attribut taille ainsi qu'une m\u00e9thode get_taille permettant de lire le nombre d'\u00e9l\u00e9ments dans la file. Une m\u00e9thode d'affichage d'un objet file (s\u00e9parer les \u00e9l\u00e9ments par des virgules et choisir les caract\u00e8res de d\u00e9but et de fin). Aide Les objets de type deque autorisent l'acc\u00e8s par indice avec la notation crochet (comme les listes de Python). Un attribut taille_max fixant une taille maximale pour la file, si cette taille est d\u00e9pass\u00e9e, on ne peut plus enfiler. Dans la documentation du module deque on peut lire : \"L'acc\u00e8s par indice est en O(1) aux extr\u00e9mit\u00e9s mais en O(n) au milieu. Pour des acc\u00e8s al\u00e9atoires rapides, il est pr\u00e9f\u00e9rable d'utiliser des listes. \". Justifier rapidement, par exemple par un sch\u00e9ma, ces remarques sur la complexit\u00e9 des op\u00e9rations et la comparaison avec les listes de Python.","title":"Exercice 2 : Le module deque de Python"},{"location":"backup/sl/#exercice-3-manipulation-dune-pile","text":"On suppose qu'on dispose d'une pile not\u00e9e P et de son interface usuelle, c'est \u00e0 dire : est_vide , empile et depile . Ecrire une fonction qui \u00e9change les deux \u00e9l\u00e9ments, situ\u00e9s au sommet de la pile. Si la pile contient moins de deux \u00e9l\u00e9ments, la fonction ne fait rien. Par exemple si la l'\u00e9tat de la pile est |a,b,c,d> , elle devient |a,b,d,c> comme illustr\u00e9 sur le sch\u00e9ma ci-dessous : Attention On ne doit utiliser que l'interface d'une pile par cons\u00e9quent la notation usuelle de Python avec les crochets pour acc\u00e9der aux \u00e9l\u00e9ments d'une liste n'est pas autoris\u00e9e !","title":"Exercice 3 : Manipulation d'une pile"},{"location":"backup/sl/#exercice-4-retour-sur-limplementation-dune-pile","text":"On revient sur l'impl\u00e9mentation d'une pile en Python \u00e0 l'aide de la poo (d\u00e9j\u00e0 vu dans le notebook d'introduction \u00e0 ce chapitre) : class Pile : def __init__ ( self ): self . contenu = [] def empiler ( self , element ): self . contenu . append ( element ) def est_vide ( self ): return self . contenu == [] def depiler ( self ): assert not self . est_vide (), \"Pile vide\" return self . contenu . pop () Recopier et enregistrer cette impl\u00e9mentation de fa\u00e7on \u00e0 disposer d'un module Pile que nous pourrons utiliser par la suite. Dans cette impl\u00e9mentation, la pile est repr\u00e9sent\u00e9e par une liste de Python, le sommet de la pile est-il le d\u00e9but ou la fin de cette liste ? Ce choix est-il judicieux ? Justifier votre r\u00e9ponse. Compl\u00e9ter cette impl\u00e9mentation en ajoutant : Une m\u00e9thode d'affichage en s\u00e9parant les \u00e9l\u00e9ments par des virgules et en adoptant les caract\u00e8res de votre choix pour le d\u00e9but et la fin de la pile. Aide Pour le probl\u00e8me de la virgule apr\u00e8s le dernier \u00e9l\u00e9ment, on peut utiliser un slice pour l'enlever, ou alors faire un test permettant de ne pas mettre de virgule lors qu'on atteint le dernier \u00e9l\u00e9ment. Une m\u00e9thode sommet , permettant de lire la valeur situ\u00e9 au sommet de la pile sans l'enlever . Un attribut taille \u00e0 la pile indiquant le nombre d'\u00e9l\u00e9ments contenus dans la pile. Un attribut taille_max \u00e0 la pile, lorsque cette taille est d\u00e9pass\u00e9e, on ne peut plus empiler. Aide Le module math de Python propose la constante inf pour simuler l'infini, on pourra donner cette valeur par d\u00e9faut \u00e0 taille_max de fa\u00e7on \u00e0 avoir une pile de taille \"infinie\" lorsque le param\u00e8tre taille_max n'est pas donn\u00e9. En utilisant le module Pile , \u00e9crire une fonction Python qui prend en entr\u00e9e une liste et renvoie cette liste retourn\u00e9e. Par exemple retourne([1,2,3]) renvoie [3,2,1] . Aide On rappelle (voir activit\u00e9) qu'il suffit d'empiler les \u00e9l\u00e9ments de la liste puis de les d\u00e9piler.","title":"Exercice 4 : Retour sur l'impl\u00e9mentation d'une pile"},{"location":"backup/sl/#exercice-5-expression-bien-parenthesee","text":"On dit qu'une expression est bien parenth\u00e9s\u00e9e lorsque chaque parenth\u00e8se ouvrante est associ\u00e9e \u00e0 une unique parenth\u00e8se fermante et inversement. Par exemple, on a soulign\u00e9 dans l'expression suivante le probl\u00e8me de parenth\u00e9sages : \\((3+2)\\textcolor{red}{\\underline{)}}-(4+1)\\) Les expressions suivantes sont-elles bien parenth\u00e9s\u00e9es ? Sinon, indiquer l'emplacement dans la cha\u00eene de caract\u00e8res o\u00f9 l'erreur est d\u00e9tect\u00e9e. \\(3+(5-4\\div(3+2)))+10\\) \\(((3+2)\\times 5\\) \\(5)-4\\times2(\\) \\(((3+2)\\times(5-3))\\) Ecrire une fonction bien_parenthesee qui prend en argument un expression (sous la forme d'une chaine de caract\u00e8res) et qui renvoie \\(-1\\) lorsque l'expression est bien parenth\u00e9s\u00e9e et sinon un entier indiquant l'emplacement dans l'expression o\u00f9 l'erreur de parenth\u00e9sage est d\u00e9tect\u00e9e. Aide On pourra, parcourir l'expression et utiliser une pile qui stocke les indices de chaque parenth\u00e8ses ouvrante. On d\u00e9pile, lorsqu'on rencontre une parenth\u00e8se fermante. Tester votre fonction sur les expressions de la question 1. Utiliser cette fonction afin de produire un affichage de l'erreur \u00e0 la fa\u00e7on de Python c'est \u00e0 dire avec un caract\u00e8re ^ en dessous de l'erreur. Par exemple : \\((2+3)\\underset{\\textcolor{red}{\\wedge}}{)}-5\\) Poursuivre ce travail en travaillant sur des expressions pouvant contenir simultan\u00e9ment d'autres types de parenth\u00e8ses, par exemple : [] ou encore {} .","title":"Exercice 5 : Expression bien parenth\u00e9s\u00e9e"},{"location":"backup/sl/#exercice-6-implementation-naive-dune-file","text":"On souhaite impl\u00e9menter une file en Python \u00e0 l'aide d'une liste de Python et de la poo \u00e0 la fa\u00e7on de ce qui a \u00e9t\u00e9 fait pour les piles dans l'exercice 4 . Recopier et compl\u00e9ter le code ci-dessous de fa\u00e7on \u00e0 ce qu'on enfile un \u00e9l\u00e9ment en l'ajoutant en d\u00e9but de liste. (et que donc on d\u00e9file en enlevant en fin de liste. class File : def __init__ ( self ): self . contenu = [] def enfiler ( self , element ): self . contenu = ............. def est_vide ( self ): return self . contenu == [] def defiler ( self ): assert not self . est_vide (), \"File vide\" return self ............. Tester cette impl\u00e9mentation en cr\u00e9ant une file dans laquelle on enfilera puis d\u00e9filera les entiers de 1 \u00e0 100. Reprendre le test pr\u00e9c\u00e9dent en mesurant les performances du programme pour les entiers jusqu'\u00e0 cent mille. Aide Par souci de simplicit\u00e9, on utilisera la fonction time du module time (m\u00eame si le temps d'ex\u00e9cution mesur\u00e9 d\u00e9pend d'autres facteurs). Cette impl\u00e9mentation est-elle satisfaisante en terme de complexit\u00e9 des op\u00e9rations ? Justifier. M\u00eame question si on d\u00e9cide, plut\u00f4t d'enfiler en fin de liste (et donc de d\u00e9filer en d\u00e9but).","title":"Exercice 6 : Impl\u00e9mentation na\u00efve d'une file"},{"location":"backup/sl/#exercice-7-implementation-dune-file-avec-deux-piles","text":"On consid\u00e8re la file suivante : On peut aussi la sch\u00e9matiser sous la forme de deux piles : Pour comprendre ce fonctionnement, on part d'une file vide et on montre par quelques exemples l'\u00e9tat de la file et des deux piles qui la repr\u00e9sente : Etape Op\u00e9ration Etat de la file Pile d'entr\u00e9e Pile de sortie Enfiler a >a> |a> |> Enfiler b >b,a> |a,b> |> Enfiler c >c,b,a> |a,b,c> |> Defiler >c,b> |> |c,b> Defiler >c> |> |c> Enfiler d >d,c> |d> |c> Aide Observer attentivement ce qui se passe \u00e0 l'\u00e9tape : la pile de sortie \u00e9tant vide, la totalit\u00e9 de la pile d'entr\u00e9e est d\u00e9pil\u00e9 dans la pile de sortie. Compl\u00e9ter le tableau ci-dessous avec les \u00e9tapes suivantes : Defiler Enfiler e Defiler Recopier et compl\u00e9ter : Une file peut s'impl\u00e9menter en g\u00e9rant .... pile : enfiler un \u00e9l\u00e9ment revient \u00e0 .......... dans une pile d'entr\u00e9e defiler un \u00e9l\u00e9ment revient \u00e0 ............. d'une pile de sortie (cette pile est ........... au d\u00e9part) Si la pile de sortie est ............ on .......... la totalit\u00e9 de la pile ........... dans ................... Ecrire en Python une impl\u00e9mentation d'une file sous la forme de deux piles en utilisant la poo . Tester votre impl\u00e9mentation (reprendre \u00e9ventuellement les op\u00e9rations \u00e0 en faisant afficher l'\u00e9tat de la file et des deux piles \u00e0 chaque \u00e9tape). Pour aller plus loin Rechercher la complexit\u00e9 des op\u00e9rations de cette impl\u00e9mentation (hors programme).","title":"Exercice 7 : Impl\u00e9mentation d'une file avec deux piles"},{"location":"backup/sl/#exercice-8-buffer","text":"On consid\u00e8re le programme Python suivant : fic1 = open ( \"sortie.txt\" , \"w\" ) fic1 . write ( \"Python a \u00e9crit ici\" ) fic2 = open ( \"sortie.txt\" , \"r\" ) contenu = fic2 . read () fic1 . close () fic2 . close () print ( contenu ) La m\u00e9moire tampon Que fait ce programme et quel r\u00e9sultat devrait produire l'affichage de la variable {\\tt contenu} ? Recopier et executer ce programme, le r\u00e9sultat est-il celui attendu ? L'\u00e9criture dans un fichier est g\u00e9r\u00e9 par Python \u00e0 l'aide d'une m\u00e9moire tampon ( buffer en anglais), Python attend que ce buffer atteigne une certaine taille (ou que le fichier soit ferm\u00e9) avant d'\u00e9crire de fa\u00e7on effective dans le fichier, ce qui explique le fonctionnement ci-dessous. Selon vous, pourquoi cette gestion du write via un buffer ? On peut forcer l'\u00e9criture sans attendre que le buffer soit plein gr\u00e2ce \u00e0 la m\u00e9thode flush des descripteurs de fichiers. Ins\u00e9rer fic1.flush() apr\u00e8s l'instruction write du programme ci-dessous et l'ex\u00e9cuter de nouveau pour constater la diff\u00e9rence. Simuler un buffer On consid\u00e8re le programme suivant qui \u00e9crit des nombres tir\u00e9s au hasard dans un fichier sans utiliser de buffer , c'est \u00e0 dire qu'on force l'\u00e9criture de chaque nombre \u00e0 l'aide de flush : from random import randint from time import time # Cr\u00e9ation liste de nombres \u00e0 \u00e9crire SIZE = 100000 nombres = [ randint ( 1 , SIZE ) for _ in range ( SIZE )] debut = time () fic = open ( \"sortie.txt\" , \"w\" ) for nb in nombres : fic . write ( str ( nb ) + ' \\n ' ) fic . flush () fic . close () fin = time () temps = fin - debut print ( \"Temps sans buffer \" , temps ) Recopier et ex\u00e9cuter ce programme et en noter le temps d'ex\u00e9cution A quel type de structure de donn\u00e9es correspond un buffer ? Ecrire une seconde version de ce programme en simulant l'utilisation d'un buffer, c'est \u00e0 dire qu'on enregistre dans une structure de donn\u00e9es les nombres \u00e0 \u00e9crire et qu'on attend que cette structure soit pleine pour \u00e9crire tous les \u00e9l\u00e9ments en une fois (on pourra cr\u00e9er une constante BUFFER_SIZE ). Comparer le temps d'ex\u00e9cution de cette nouvelle version avec celui du programme pr\u00e9c\u00e9dent.","title":"Exercice 8 : Buffer"},{"location":"backup/sl/#exercice-9-comparaison-de-plusieurs-implementation-du-tad-liste","text":"On rappelle l'impl\u00e9mentation du TAD liste sous forme de liste cha\u00een\u00e9e vue dans le notebook d'introduction \u00e0 ce chapitre : class Maillon : '''Le maillon d'une liste chain\u00e9e repr\u00e9sent\u00e9 par sa valeur et un lien vers le maillon suivant''' def __init__ ( self , valeur ): self . valeur = valeur self . suivant = None class Liste : '''Une liste est un lien vers son premier maillon''' def __init__ ( self ): self . tete = None def est_vide ( self ): return self . tete == None def ajoute ( self , valeur ): nouveau_maillon = Maillon ( valeur ) nouveau_maillon . suivant = self . tete self . tete = nouveau_maillon def supprime ( self ): assert not self . est_vide (), \"Liste vide, suppression impossible\" self . tete = self . tete . suivant Compl\u00e9ter cette impl\u00e9mentation en ajoutant une m\u00e9thode d'affichage. Ajouter une m\u00e9thode tete qui renvoie la valeur du maillon situ\u00e9 en t\u00eate de liste. Le type list de Python est aussi une impl\u00e9mentation de ce TAD. Quelles op\u00e9rations sur le type list de Python correspondent \u00e0 ajoute et supprime d\u00e9finis ci-dessus ? Compl\u00e9ter le tableau suivant permettant de comparer en terme de complexit\u00e9 diverses impl\u00e9mentations du type abstrait de donn\u00e9es liste: Op\u00e9ration list (type Python) class Liste Module deque Insertion en t\u00eate ...... ...... ...... Ajout en queue ...... ...... ...... Acc\u00e8s \u00e0 un \u00e9l\u00e9ment ...... ...... ......","title":"Exercice 9 : Comparaison de plusieurs impl\u00e9mentation du TAD liste"},{"location":"backup/sl/#exercice-10-exercices-extraits-de-sujet-de-bac","text":"Am\u00e9rique du nord 2021 - exercice 5 M\u00e9tropole CL 2021 - exercice 2 M\u00e9tropole sujet 2 2021 - exercice 5","title":"Exercice 10 : Exercices extraits de sujet de bac&thinsp; "},{"location":"backup/sql/","text":"C2 Bases de donn\u00e9es et SQL Activit\u00e9s Activit\u00e9 1 : Un peu d'histoire et de th\u00e9orie \u2009 En utilisant la vid\u00e9o ci-dessus et en faisant vos propres recherches sur le Web , r\u00e9pondre aux questions suivantes : Quel math\u00e9maticien est \u00e0 l'origine de la th\u00e9orie des bases de donn\u00e9es ? En quelle ann\u00e9e ? Avant l'av\u00e8nement des bases de donn\u00e9es, les donn\u00e9es \u00e9taient stock\u00e9s sous la forme de simples fichiers, quels \u00e9taient les inconv\u00e9nients de ce fonctionnement ? Que signifie l' absence de redondance pour une base de donn\u00e9es ? Que signifie l' ind\u00e9pendance logique pour une base de donn\u00e9es ? Que signifie l' int\u00e9grit\u00e9 pour une base de donn\u00e9es ? Donner les noms de quelques sgbd connus en indiquant s'il s'agit de logiciels libres ou propri\u00e9taires. Remarques Le sgbd utilis\u00e9 dans le cadre de ce cours est sqlite , accompagn\u00e9 de son interface graphique DB Browser for sqlite . Ces logiciels sont libres, gratuits et multiplateformes. La cr\u00e9ation de base de donn\u00e9es ne figurant pas au programme de NSI en terminale, on travaille avec des bases d\u00e9j\u00e0 cr\u00e9es. Cependant, le processus de cr\u00e9ation d'un base de donn\u00e9es avec une seule table import\u00e9e \u00e0 partir d'un fichier csv est d\u00e9crit dans cet exercice . Activit\u00e9 2 : Premier pas en SQL Pr\u00e9paration T\u00e9l\u00e9charger la base de donn\u00e9es des m\u00e9dailles olympiques de 1976 \u00e0 2008 et la sauvegarder dans le r\u00e9pertoire de votre choix : M\u00e9dailles Olympiques 1976-2008 Cette base de donn\u00e9e est compos\u00e9e d'une seule table : Medals Id INTEGER City TEXT Year INTEGER Sport TEXT Discipline TEXT Event TEXT Athlete TEXT Gender TEXT Country_code TEXT Country TEXT Event_Gender TEXT Medal TEXT Lancer DB Browser for sqlite (depuis un terminale avec la commande sqlitebrowser ou via le menu des applications) et ouvrir la base de donn\u00e9es t\u00e9l\u00e9charg\u00e9e ci-dessus. Effectuer une sauvegarde dans le dossier de votre choix. Dans le menu Edition > Pr\u00e9f\u00e9rences , mettre le logiciel en fran\u00e7ais. Dans le menu Vue , d\u00e9cocher jounal SQL , Graphique , ... Cliquer sur l'onglet Ex\u00e9cuter le SQL , la fen\u00eatre qui appara\u00eet est divis\u00e9e en trois sections : En haut, la zone o\u00f9 on entre les requ\u00eates SQL. Au milieu les donn\u00e9es renvoy\u00e9es par la requ\u00eate En bas, des informations sur le temps d'ex\u00e9cution ou les erreurs \u00e9ventuelles Par exemple, sur l'illustration pr\u00e9c\u00e9dente, on a entr\u00e9 la requ\u00eate : SELECT * FROM Medals Tester chacune des requ\u00eates suivantes en observant bien les r\u00e9sultats renvoy\u00e9s . En d\u00e9duire quelles donn\u00e9es sont extraites de la base \u00e0 l'aide de ces requ\u00eates SELECT * FROM Medals WHERE Year = 2008 AND Country = \"FRANCE\" SELECT City , Year , Athlete FROM Medals WHERE Medal = \"Gold\" and Event = \"110m hurdles\" SELECT Athlete , Event FROM Medals WHERE Medal = \"Gold\" AND Country = \"France\" AND Year = 2000 ORDER BY Athlete ASC SELECT DISTINCT Country FROM Medals where Medal = \"Gold\" and YEAR = \"1984\" ORDER BY Country DESC SELECT Athlete , City , Year , Medal , country FROM medals where country LIKE \"%nia\" Aide N'h\u00e9sitez pas \u00e0 faire vos propres tests en modifiant l\u00e9g\u00e8rement ces requ\u00eates ou \u00e0 en tester d'autres pour comprendre. Ecrire les requ\u00eates SQL permettant d'extraire de cette base de donn\u00e9es les informations suivantes : Les noms de tous les athl\u00e8tes fran\u00e7ais ayant obtenu une m\u00e9daille d'or aux jeux olympiques de 1984. Les noms de tous les champions olympiques du marathon de 1976 \u00e0 2008. Les \u00e9preuves dans lesquelles le champion de natation am\u00e9ricain Michael Phelps a obtenu des m\u00e9dailles en 2004. Tous les athletes m\u00e9daill\u00e9s entre 1976 et 2008 dont le nom contient \"Richardson\". Le handballeur d'origine r\u00e9unionnaise Jackson Richardson devrait bien s\u00fbr y figurer ! Activit\u00e9 3 : Op\u00e9rations sur les colonnes T\u00e9l\u00e9charger les donn\u00e9es pr\u00e9sent\u00e9es dans la vid\u00e9o pr\u00e9c\u00e9dente sous la forme d'une base de donn\u00e9es : Dette et Croissance et l'ouvrir \u00e0 l'aide de sqlitebrowser . Cette base est compos\u00e9e d'une seule table : RR Id INTEGER Country TEXT Year INTEGER DebtToGDP REAL Growth REAL DebtCategory INTEGER On pr\u00e9cise la signification des champs suivants : DebtToGDP : la dette en pourcentage du pib . Growth : la croissance. Quelques requ\u00eates pour s'\u00e9chauffer V\u00e9rifier comme indiqu\u00e9 dans la vid\u00e9o que les donn\u00e9es contiennent bien 20 pays. Les lister. V\u00e9rifier aussi que les ann\u00e9es vont de 1946 \u00e0 2009 comme indiqu\u00e9 dans la vid\u00e9o. Lister par ordre croissant les dix ann\u00e9es o\u00f9 la croissance a \u00e9t\u00e9 la plus faible en France. Lister les pays o\u00f9 la croissance a d\u00e9pass\u00e9 15 % Des op\u00e9rations sur les colonnes Ecrire une requ\u00eate sql permettant d'obtenir le pays et l'ann\u00e9e o\u00f9 la dette a \u00e9t\u00e9 la plus importante. Vous avez normalement \u00e9crit une requ\u00eate de classement par ordre d\u00e9croissant associ\u00e9e \u00e0 une clause LIMIT . En r\u00e9alit\u00e9 on recherche ici le maximum d'une colonne, le langage sql permet d'op\u00e9rer sur des colonnes : MIN et MAX permettent d'obtenir respectivement le maximum ou le minimum d'un champ. SUM permet de calculer la somme sur un ensemble d'enregistrement. AVG permet de calculer la moyenne sur un ensemble d'enregistrement. COUNT permet de compter le nombre d'enregistrement. Ex\u00e9cuter la requ\u00eate : SELECT MAX ( DebtToGDP ) FROM RR Quelle diff\u00e9rence constatez-vous par rapport \u00e0 la solution pr\u00e9c\u00e9dente ? En vous aidant de ces nouvelles fonctionnalit\u00e9s, retrouver \u00e0 l'aide de sql n les vraies valeurs de croissance moyenne en fonction de la cat\u00e9gorie de dette dans laquelle se trouve le pays et qu'on rappelle ci-dessous : Cat\u00e9gorie Croissance moyenne 1 4,2 % 2 3,1 % 3 3,2 % 4 2,2 % Pour aller plus loin ... Les op\u00e9rations sur les colonnes sont particuli\u00e8rement utiles en lien avec la clause GROUP BY . Par exemple, si on souhaite obtenir la somme de la croissance pour chacun des 20 pays depuis 1970 : SELECT country , SUM ( Growth ) from RR WHERE Year >= 1970 GROUP BY Country On peut m\u00eame renommer la colonne SUM(Growth) des r\u00e9sultats gr\u00e2ce \u00e0 AS et donc l'utiliser comme crit\u00e8re de classement: SELECT country , SUM ( Growth ) AS moy70 from RR WHERE Year >= 1970 GROUP BY Country ORDER BY moy70 DESC Ecrire une seule requ\u00eate permettant d'obtenir les taux de croissance moyenne pour chacune des cat\u00e9gories de dette. Attention La clause GROUP BY n'est pas exigible au niveau terminale NSI et ne fera pas partie des \u00e9valuations. Cours Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices. Exercices Exercice 1 : Mod\u00e9lisation d'une base de donn\u00e9es de livres Pour mettre en place une base de donn\u00e9es dans une m\u00e9diath\u00e8que; on d\u00e9cide de stocker les livres dans une table de cette base. On donne ci-dessous la repr\u00e9sentation de cette table avec simplement deux \u00e9l\u00e9ments donn\u00e9s en exemple : Titre Auteur Pays Ann\u00e9e Les mis\u00e9rables Victor Hugo France 1862 1984 George Orwell Angleterre 1949 Quels sont les attributs de cette table ? Proposer un type et un domaine pour l'attribut Ann\u00e9e Certains livres sont achet\u00e9s en plusieurs exemplaires dans cette m\u00e9diath\u00e8que, expliquer pourquoi le mod\u00e8le de table choisi ci-dessus ne convient plus et proposer une correction. Exercice 2 : Mod\u00e9lisation d'une liste de contacts t\u00e9l\u00e9phoniques Proposer une mod\u00e9lisation d'une liste de contact t\u00e9l\u00e9phonique dans laquelle chaque personne (nom, pr\u00e9nom) est associ\u00e9e \u00e0 un num\u00e9ro de t\u00e9l\u00e9phone. Exercice 3 : Prix Nobel T\u00e9l\u00e9charger ci-dessous une base de donn\u00e9es des Prix Nobel : Prix Nobel Ouvrir cette base avec sqlitebrowser Dans Parcourir les donn\u00e9es prendre note du noms des colonnes et de leur signification. Ecrire les requ\u00eates sql permettant : d'obtenir les cat\u00e9gories dans lesquelles sont attribu\u00e9es les prix Nobel, de lister par ordre alphab\u00e9tique les laur\u00e9ats du prix Nobel n\u00e9s en France ou travaillant pour une organisation Fran\u00e7aise, de lister les ann\u00e9es o\u00f9 le \"Comit\u00e9 international de la Croix Rouge\" a obtenu le prix Nobel, de conna\u00eetre le nombre de femmes ayant obtenu un prix Nobel, de lister par \u00e2ge d\u00e9croissant les laur\u00e9ats du prix Nobel qui sont toujours en vie, de rechercher les laur\u00e9ats dont le nom contient \"Curie\". Exercice 4 : Tremblements de terre T\u00e9l\u00e9charger ci-dessous une base de donn\u00e9es des tremblements de terre : Tremblements de terre Ouvrir cette base avec sqlitebrowser Dans Parcourir les donn\u00e9es prendre note du noms des colonnes et de leur signification. Ecrire les requ\u00eates sql permettant : de lister tremblements de terre qui se sont produits au Japon, de lister les tremblements de terre qui se sont produits en l'an 2000 class\u00e9s par magnitude, Aide Remarquer que le champ occured_on qui indique la date est au format texte. Utiliser cette base pour r\u00e9pondre aux questions suivantes : les tremblements de terre sont-ils plus fr\u00e9quents dans l'h\u00e9misph\u00e8re nord ou l'h\u00e9misph\u00e8re sud ? Aide On rappelle que l'h\u00e9misph\u00e8re nord correspond \u00e0 une latitude positive et le sud \u00e0 une latitude n\u00e9gative. O\u00f9 \u00e9taient effectu\u00e9es les essais nucl\u00e9aires fran\u00e7ais ? L'un des s\u00e9isme de cette base de donn\u00e9es s'est-il produit \u00e0 proximit\u00e9 de l'\u00eele de la R\u00e9union ? Aide Rechercher la latitude et la longitude de l'\u00eele de R\u00e9union et consid\u00e9rer que \"\u00e0 proximit\u00e9\" signifie qu'on s'\u00e9carte de moins de 10 degr\u00e9s de latitude ou de longitude Exercice 5 : Titanic Consulter la page wikipedia consacr\u00e9e au Titanic pour conna\u00eetre l'histoire tragique de ce paquebot. T\u00e9l\u00e9charger ci-dessous une base de donn\u00e9es partielle des passagers du titanic : Passagers du titanic On pr\u00e9cise la signification des champs suivants : survived : un entier qui vaut 0 (passager d\u00e9c\u00e9d\u00e9) ou 1 (passager survivant). pclasse : un entier qui indique la classe dans laquelle voyageait le passenger : de 1 pour la premi\u00e8re classe \u00e0 3 pour la classe la moins ch\u00e8re. sibsp : le nombre de fr\u00e8res et soeurs pr\u00e9sents \u00e0 bord. parch : le nombre de parents et enfants pr\u00e9sents \u00e0 bord. En argumentant vos r\u00e9ponses \u00e0 l'aide d'informations extraites de cette base, donner votre avis sur les affirmations suivantes : Les passengers de la premi\u00e8re classe avaient plus de chance de survie. Les femmes et les enfants ont \u00e9t\u00e9 sauv\u00e9es en priorit\u00e9. Les passenger \u00e2g\u00e9s de plus de 50 avaient moins de chance de survie que les autres. Exercice 6 : Cr\u00e9er une base de donn\u00e9es \u00e0 partir d'un fichier csv Remarque La cr\u00e9ation de base de donn\u00e9es est hors programme et ne fera donc pas l'objet d'\u00e9valuations. Cependant, on pr\u00e9sente ici la cr\u00e9ation d'une base de donn\u00e9es compos\u00e9e d'une seule table que l'on importera \u00e0 partir d'un fichier csv . Ce format de fichier a \u00e9t\u00e9 vu en classe de premi\u00e8re (voir le chapitre correspondant ). T\u00e9l\u00e9charger le fichier csv d'indicateurs de r\u00e9ussite des lyc\u00e9es sur data.gouv.fr . Par souci de simplification, renommer le fichier en lycees.csv . Lancer DB Browser for sqlite (depuis un terminale avec la commande sqlitebrowser ou via le menu des applications). Mettre le logiciel en fran\u00e7ais. S\u00e9lectionner Nouvelle base de donn\u00e9es dans la barre de menu sup\u00e9rieur. Nommer votre base de donn\u00e9es lycees.db et l'enregistrer dans le dossier de votre choix. Refermer l'interface qui appara\u00eet ensuite (fen\u00eatre \u00e9dition de la d\u00e9finition de la table ) et qui permet de cr\u00e9er les tables, nous allons simplement importer une table au format csv . Aller dans le menu Fichier > Importer > Table depuis un fichier csv , s\u00e9lectionner alors le fichier lycees.csv t\u00e9l\u00e9charg\u00e9 pr\u00e9c\u00e9demment (par d\u00e9faut seul les fichiers texte s'affichent, changer l'option en bas et \u00e0 droite de la fen\u00eatre de s\u00e9lection de fichiers). Nommer la table indicateurs et r\u00e9gler les options d'importations comme dans la fen\u00eatre ci-dessous . Puis sauvegarder votre base de donn\u00e9es sous le nom lycees.db . Dans l'onglet structure de la base de donn\u00e9es , cliquer sur la table indicateurs puis sur Modifier une table . Certaines donn\u00e9es ont \u00e9t\u00e9 import\u00e9es au format text et d'autres au format integer . Les taux de r\u00e9ussites devraient \u00eatre des valeurs num\u00e9riques enti\u00e8res, est-ce bien le cas ? sinon corriger. Attention Attention lors du traitement des donn\u00e9es \u00e0 v\u00e9rifier sous quel format elles ont \u00e9t\u00e9 import\u00e9es ! C'est une source d'erreur fr\u00e9quente, par exemple classer par ordre d\u00e9croissant des donn\u00e9es en pensant qu'elles sont num\u00e9riques alors qu'elles sont au format texte ne donnera s\u00fbrement pas le r\u00e9sultat escompt\u00e9.","title":"Sql"},{"location":"backup/sql/#c2-bases-de-donnees-et-sql","text":"","title":"C2 Bases de donn\u00e9es et SQL "},{"location":"backup/sql/#activites","text":"","title":"Activit\u00e9s"},{"location":"backup/sql/#activite-1-un-peu-dhistoire-et-de-theorie","text":"En utilisant la vid\u00e9o ci-dessus et en faisant vos propres recherches sur le Web , r\u00e9pondre aux questions suivantes : Quel math\u00e9maticien est \u00e0 l'origine de la th\u00e9orie des bases de donn\u00e9es ? En quelle ann\u00e9e ? Avant l'av\u00e8nement des bases de donn\u00e9es, les donn\u00e9es \u00e9taient stock\u00e9s sous la forme de simples fichiers, quels \u00e9taient les inconv\u00e9nients de ce fonctionnement ? Que signifie l' absence de redondance pour une base de donn\u00e9es ? Que signifie l' ind\u00e9pendance logique pour une base de donn\u00e9es ? Que signifie l' int\u00e9grit\u00e9 pour une base de donn\u00e9es ? Donner les noms de quelques sgbd connus en indiquant s'il s'agit de logiciels libres ou propri\u00e9taires. Remarques Le sgbd utilis\u00e9 dans le cadre de ce cours est sqlite , accompagn\u00e9 de son interface graphique DB Browser for sqlite . Ces logiciels sont libres, gratuits et multiplateformes. La cr\u00e9ation de base de donn\u00e9es ne figurant pas au programme de NSI en terminale, on travaille avec des bases d\u00e9j\u00e0 cr\u00e9es. Cependant, le processus de cr\u00e9ation d'un base de donn\u00e9es avec une seule table import\u00e9e \u00e0 partir d'un fichier csv est d\u00e9crit dans cet exercice .","title":"Activit\u00e9 1 : Un peu d'histoire et de th\u00e9orie&thinsp; "},{"location":"backup/sql/#activite-2-premier-pas-en-sql","text":"Pr\u00e9paration T\u00e9l\u00e9charger la base de donn\u00e9es des m\u00e9dailles olympiques de 1976 \u00e0 2008 et la sauvegarder dans le r\u00e9pertoire de votre choix : M\u00e9dailles Olympiques 1976-2008 Cette base de donn\u00e9e est compos\u00e9e d'une seule table : Medals Id INTEGER City TEXT Year INTEGER Sport TEXT Discipline TEXT Event TEXT Athlete TEXT Gender TEXT Country_code TEXT Country TEXT Event_Gender TEXT Medal TEXT Lancer DB Browser for sqlite (depuis un terminale avec la commande sqlitebrowser ou via le menu des applications) et ouvrir la base de donn\u00e9es t\u00e9l\u00e9charg\u00e9e ci-dessus. Effectuer une sauvegarde dans le dossier de votre choix. Dans le menu Edition > Pr\u00e9f\u00e9rences , mettre le logiciel en fran\u00e7ais. Dans le menu Vue , d\u00e9cocher jounal SQL , Graphique , ... Cliquer sur l'onglet Ex\u00e9cuter le SQL , la fen\u00eatre qui appara\u00eet est divis\u00e9e en trois sections : En haut, la zone o\u00f9 on entre les requ\u00eates SQL. Au milieu les donn\u00e9es renvoy\u00e9es par la requ\u00eate En bas, des informations sur le temps d'ex\u00e9cution ou les erreurs \u00e9ventuelles Par exemple, sur l'illustration pr\u00e9c\u00e9dente, on a entr\u00e9 la requ\u00eate : SELECT * FROM Medals Tester chacune des requ\u00eates suivantes en observant bien les r\u00e9sultats renvoy\u00e9s . En d\u00e9duire quelles donn\u00e9es sont extraites de la base \u00e0 l'aide de ces requ\u00eates SELECT * FROM Medals WHERE Year = 2008 AND Country = \"FRANCE\" SELECT City , Year , Athlete FROM Medals WHERE Medal = \"Gold\" and Event = \"110m hurdles\" SELECT Athlete , Event FROM Medals WHERE Medal = \"Gold\" AND Country = \"France\" AND Year = 2000 ORDER BY Athlete ASC SELECT DISTINCT Country FROM Medals where Medal = \"Gold\" and YEAR = \"1984\" ORDER BY Country DESC SELECT Athlete , City , Year , Medal , country FROM medals where country LIKE \"%nia\" Aide N'h\u00e9sitez pas \u00e0 faire vos propres tests en modifiant l\u00e9g\u00e8rement ces requ\u00eates ou \u00e0 en tester d'autres pour comprendre. Ecrire les requ\u00eates SQL permettant d'extraire de cette base de donn\u00e9es les informations suivantes : Les noms de tous les athl\u00e8tes fran\u00e7ais ayant obtenu une m\u00e9daille d'or aux jeux olympiques de 1984. Les noms de tous les champions olympiques du marathon de 1976 \u00e0 2008. Les \u00e9preuves dans lesquelles le champion de natation am\u00e9ricain Michael Phelps a obtenu des m\u00e9dailles en 2004. Tous les athletes m\u00e9daill\u00e9s entre 1976 et 2008 dont le nom contient \"Richardson\". Le handballeur d'origine r\u00e9unionnaise Jackson Richardson devrait bien s\u00fbr y figurer !","title":"Activit\u00e9 2 : Premier pas en SQL"},{"location":"backup/sql/#activite-3-operations-sur-les-colonnes","text":"T\u00e9l\u00e9charger les donn\u00e9es pr\u00e9sent\u00e9es dans la vid\u00e9o pr\u00e9c\u00e9dente sous la forme d'une base de donn\u00e9es : Dette et Croissance et l'ouvrir \u00e0 l'aide de sqlitebrowser . Cette base est compos\u00e9e d'une seule table : RR Id INTEGER Country TEXT Year INTEGER DebtToGDP REAL Growth REAL DebtCategory INTEGER On pr\u00e9cise la signification des champs suivants : DebtToGDP : la dette en pourcentage du pib . Growth : la croissance. Quelques requ\u00eates pour s'\u00e9chauffer V\u00e9rifier comme indiqu\u00e9 dans la vid\u00e9o que les donn\u00e9es contiennent bien 20 pays. Les lister. V\u00e9rifier aussi que les ann\u00e9es vont de 1946 \u00e0 2009 comme indiqu\u00e9 dans la vid\u00e9o. Lister par ordre croissant les dix ann\u00e9es o\u00f9 la croissance a \u00e9t\u00e9 la plus faible en France. Lister les pays o\u00f9 la croissance a d\u00e9pass\u00e9 15 % Des op\u00e9rations sur les colonnes Ecrire une requ\u00eate sql permettant d'obtenir le pays et l'ann\u00e9e o\u00f9 la dette a \u00e9t\u00e9 la plus importante. Vous avez normalement \u00e9crit une requ\u00eate de classement par ordre d\u00e9croissant associ\u00e9e \u00e0 une clause LIMIT . En r\u00e9alit\u00e9 on recherche ici le maximum d'une colonne, le langage sql permet d'op\u00e9rer sur des colonnes : MIN et MAX permettent d'obtenir respectivement le maximum ou le minimum d'un champ. SUM permet de calculer la somme sur un ensemble d'enregistrement. AVG permet de calculer la moyenne sur un ensemble d'enregistrement. COUNT permet de compter le nombre d'enregistrement. Ex\u00e9cuter la requ\u00eate : SELECT MAX ( DebtToGDP ) FROM RR Quelle diff\u00e9rence constatez-vous par rapport \u00e0 la solution pr\u00e9c\u00e9dente ? En vous aidant de ces nouvelles fonctionnalit\u00e9s, retrouver \u00e0 l'aide de sql n les vraies valeurs de croissance moyenne en fonction de la cat\u00e9gorie de dette dans laquelle se trouve le pays et qu'on rappelle ci-dessous : Cat\u00e9gorie Croissance moyenne 1 4,2 % 2 3,1 % 3 3,2 % 4 2,2 % Pour aller plus loin ... Les op\u00e9rations sur les colonnes sont particuli\u00e8rement utiles en lien avec la clause GROUP BY . Par exemple, si on souhaite obtenir la somme de la croissance pour chacun des 20 pays depuis 1970 : SELECT country , SUM ( Growth ) from RR WHERE Year >= 1970 GROUP BY Country On peut m\u00eame renommer la colonne SUM(Growth) des r\u00e9sultats gr\u00e2ce \u00e0 AS et donc l'utiliser comme crit\u00e8re de classement: SELECT country , SUM ( Growth ) AS moy70 from RR WHERE Year >= 1970 GROUP BY Country ORDER BY moy70 DESC Ecrire une seule requ\u00eate permettant d'obtenir les taux de croissance moyenne pour chacune des cat\u00e9gories de dette. Attention La clause GROUP BY n'est pas exigible au niveau terminale NSI et ne fera pas partie des \u00e9valuations.","title":"Activit\u00e9 3 : Op\u00e9rations sur les colonnes"},{"location":"backup/sql/#cours","text":"Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices.","title":"Cours"},{"location":"backup/sql/#exercices","text":"","title":"Exercices"},{"location":"backup/sql/#exercice-1-modelisation-dune-base-de-donnees-de-livres","text":"Pour mettre en place une base de donn\u00e9es dans une m\u00e9diath\u00e8que; on d\u00e9cide de stocker les livres dans une table de cette base. On donne ci-dessous la repr\u00e9sentation de cette table avec simplement deux \u00e9l\u00e9ments donn\u00e9s en exemple : Titre Auteur Pays Ann\u00e9e Les mis\u00e9rables Victor Hugo France 1862 1984 George Orwell Angleterre 1949 Quels sont les attributs de cette table ? Proposer un type et un domaine pour l'attribut Ann\u00e9e Certains livres sont achet\u00e9s en plusieurs exemplaires dans cette m\u00e9diath\u00e8que, expliquer pourquoi le mod\u00e8le de table choisi ci-dessus ne convient plus et proposer une correction.","title":"Exercice 1 : Mod\u00e9lisation d'une base de donn\u00e9es de livres"},{"location":"backup/sql/#exercice-2-modelisation-dune-liste-de-contacts-telephoniques","text":"Proposer une mod\u00e9lisation d'une liste de contact t\u00e9l\u00e9phonique dans laquelle chaque personne (nom, pr\u00e9nom) est associ\u00e9e \u00e0 un num\u00e9ro de t\u00e9l\u00e9phone.","title":"Exercice 2 : Mod\u00e9lisation d'une liste de contacts t\u00e9l\u00e9phoniques"},{"location":"backup/sql/#exercice-3-prix-nobel","text":"T\u00e9l\u00e9charger ci-dessous une base de donn\u00e9es des Prix Nobel : Prix Nobel Ouvrir cette base avec sqlitebrowser Dans Parcourir les donn\u00e9es prendre note du noms des colonnes et de leur signification. Ecrire les requ\u00eates sql permettant : d'obtenir les cat\u00e9gories dans lesquelles sont attribu\u00e9es les prix Nobel, de lister par ordre alphab\u00e9tique les laur\u00e9ats du prix Nobel n\u00e9s en France ou travaillant pour une organisation Fran\u00e7aise, de lister les ann\u00e9es o\u00f9 le \"Comit\u00e9 international de la Croix Rouge\" a obtenu le prix Nobel, de conna\u00eetre le nombre de femmes ayant obtenu un prix Nobel, de lister par \u00e2ge d\u00e9croissant les laur\u00e9ats du prix Nobel qui sont toujours en vie, de rechercher les laur\u00e9ats dont le nom contient \"Curie\".","title":"Exercice 3 : Prix Nobel"},{"location":"backup/sql/#exercice-4-tremblements-de-terre","text":"T\u00e9l\u00e9charger ci-dessous une base de donn\u00e9es des tremblements de terre : Tremblements de terre Ouvrir cette base avec sqlitebrowser Dans Parcourir les donn\u00e9es prendre note du noms des colonnes et de leur signification. Ecrire les requ\u00eates sql permettant : de lister tremblements de terre qui se sont produits au Japon, de lister les tremblements de terre qui se sont produits en l'an 2000 class\u00e9s par magnitude, Aide Remarquer que le champ occured_on qui indique la date est au format texte. Utiliser cette base pour r\u00e9pondre aux questions suivantes : les tremblements de terre sont-ils plus fr\u00e9quents dans l'h\u00e9misph\u00e8re nord ou l'h\u00e9misph\u00e8re sud ? Aide On rappelle que l'h\u00e9misph\u00e8re nord correspond \u00e0 une latitude positive et le sud \u00e0 une latitude n\u00e9gative. O\u00f9 \u00e9taient effectu\u00e9es les essais nucl\u00e9aires fran\u00e7ais ? L'un des s\u00e9isme de cette base de donn\u00e9es s'est-il produit \u00e0 proximit\u00e9 de l'\u00eele de la R\u00e9union ? Aide Rechercher la latitude et la longitude de l'\u00eele de R\u00e9union et consid\u00e9rer que \"\u00e0 proximit\u00e9\" signifie qu'on s'\u00e9carte de moins de 10 degr\u00e9s de latitude ou de longitude","title":"Exercice 4 : Tremblements de terre"},{"location":"backup/sql/#exercice-5-titanic","text":"Consulter la page wikipedia consacr\u00e9e au Titanic pour conna\u00eetre l'histoire tragique de ce paquebot. T\u00e9l\u00e9charger ci-dessous une base de donn\u00e9es partielle des passagers du titanic : Passagers du titanic On pr\u00e9cise la signification des champs suivants : survived : un entier qui vaut 0 (passager d\u00e9c\u00e9d\u00e9) ou 1 (passager survivant). pclasse : un entier qui indique la classe dans laquelle voyageait le passenger : de 1 pour la premi\u00e8re classe \u00e0 3 pour la classe la moins ch\u00e8re. sibsp : le nombre de fr\u00e8res et soeurs pr\u00e9sents \u00e0 bord. parch : le nombre de parents et enfants pr\u00e9sents \u00e0 bord. En argumentant vos r\u00e9ponses \u00e0 l'aide d'informations extraites de cette base, donner votre avis sur les affirmations suivantes : Les passengers de la premi\u00e8re classe avaient plus de chance de survie. Les femmes et les enfants ont \u00e9t\u00e9 sauv\u00e9es en priorit\u00e9. Les passenger \u00e2g\u00e9s de plus de 50 avaient moins de chance de survie que les autres.","title":"Exercice 5 : Titanic"},{"location":"backup/sql/#exercice-6-creer-une-base-de-donnees-a-partir-dun-fichier-csv","text":"Remarque La cr\u00e9ation de base de donn\u00e9es est hors programme et ne fera donc pas l'objet d'\u00e9valuations. Cependant, on pr\u00e9sente ici la cr\u00e9ation d'une base de donn\u00e9es compos\u00e9e d'une seule table que l'on importera \u00e0 partir d'un fichier csv . Ce format de fichier a \u00e9t\u00e9 vu en classe de premi\u00e8re (voir le chapitre correspondant ). T\u00e9l\u00e9charger le fichier csv d'indicateurs de r\u00e9ussite des lyc\u00e9es sur data.gouv.fr . Par souci de simplification, renommer le fichier en lycees.csv . Lancer DB Browser for sqlite (depuis un terminale avec la commande sqlitebrowser ou via le menu des applications). Mettre le logiciel en fran\u00e7ais. S\u00e9lectionner Nouvelle base de donn\u00e9es dans la barre de menu sup\u00e9rieur. Nommer votre base de donn\u00e9es lycees.db et l'enregistrer dans le dossier de votre choix. Refermer l'interface qui appara\u00eet ensuite (fen\u00eatre \u00e9dition de la d\u00e9finition de la table ) et qui permet de cr\u00e9er les tables, nous allons simplement importer une table au format csv . Aller dans le menu Fichier > Importer > Table depuis un fichier csv , s\u00e9lectionner alors le fichier lycees.csv t\u00e9l\u00e9charg\u00e9 pr\u00e9c\u00e9demment (par d\u00e9faut seul les fichiers texte s'affichent, changer l'option en bas et \u00e0 droite de la fen\u00eatre de s\u00e9lection de fichiers). Nommer la table indicateurs et r\u00e9gler les options d'importations comme dans la fen\u00eatre ci-dessous . Puis sauvegarder votre base de donn\u00e9es sous le nom lycees.db . Dans l'onglet structure de la base de donn\u00e9es , cliquer sur la table indicateurs puis sur Modifier une table . Certaines donn\u00e9es ont \u00e9t\u00e9 import\u00e9es au format text et d'autres au format integer . Les taux de r\u00e9ussites devraient \u00eatre des valeurs num\u00e9riques enti\u00e8res, est-ce bien le cas ? sinon corriger. Attention Attention lors du traitement des donn\u00e9es \u00e0 v\u00e9rifier sous quel format elles ont \u00e9t\u00e9 import\u00e9es ! C'est une source d'erreur fr\u00e9quente, par exemple classer par ordre d\u00e9croissant des donn\u00e9es en pensant qu'elles sont num\u00e9riques alors qu'elles sont au format texte ne donnera s\u00fbrement pas le r\u00e9sultat escompt\u00e9.","title":"Exercice 6 : Cr\u00e9er une base de donn\u00e9es \u00e0 partir d'un fichier csv"},{"location":"backup/texte/","text":"C13 Recherche textuelle Activit\u00e9s Activit\u00e9 1 : Recherche simple Fonctions natives de Python Consulter la documentation de Python sur la m\u00e9thode find des cha\u00eenes de caract\u00e8res . Quel est le r\u00f4le de cette m\u00e9thode ? Tester cette m\u00e9thode sur les exemples suivants, (dans un notebook ou dans une console Python) : 'num\u00e9rique et sciences informatiques'.find('que') 'num\u00e9rique et sciences informatiques'.find('nsi') Note Une autre m\u00e9thode presque identique ( str.index ) l\u00e8ve une erreur lorsque le motif cherch\u00e9 ne se trouve pas dans la cha\u00eene. Visualisation d'un algorithme \"na\u00eff\" Un outil en ligne (mise en ligne par L. Abdal, d'apr\u00e8s un travail de N. Reveret), permet de visualiser un algorithme dit de \"recherche na\u00efve\". Utiliser cette outil (en variant \u00e9ventuellement le motif et la cha\u00eene). Puis expliquer en quelques mots le principe de cet algorithme de recherche. Visualisation algorithme na\u00eff Ecrire ses propres fonctions Sans utiliser find ou index , \u00e9crire une fonction recherche(motif,chaine) qui renvoie True ou False suivant que la cha\u00eene de caract\u00e8res motif se trouve ou non dans chaine . M\u00eame question mais en renvoyant l'indice de la premi\u00e8re position de motif dans chaine (si elle s'y trouve) et -1 sinon. Activit\u00e9 2 : Am\u00e9lioration de la recherche simple Le m\u00eame outil en ligne que dans l'activit\u00e9 pr\u00e9c\u00e9dente permet de visualiser un second algorithme plus performant . Utiliser cette outil (en variant \u00e9ventuellement le motif et la cha\u00eene). Visualisation algorithme Boyer-Moore Aide On pourra remarquer que : La comparaison commence par la fin du motif On a construit un tableau indiquant pour chaque caract\u00e8re du motif sa derni\u00e8re occurrence dans le motif Par rapport \u00e0 une recherche na\u00efve, on peut parfois d\u00e9caler le motif de plusieurs emplacements D\u00e9crire en quelques phrases le principe de ce nouvel algorithme de recherche. Note L'algorithme pr\u00e9sent\u00e9 dans cette activit\u00e9 est une version simplifi\u00e9e de l'algorithme de Boyer-Moore par Horspool. L'algorithme complet, plus complexe n'est pas \u00e9tudi\u00e9 en nsi . L'\u00e9l\u00e8ve int\u00e9ress\u00e9 pourra consulter les ressources en ligne (par exemple la page wikipedia ) Cours Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices. Exercices Exercice 1 : Nombre de comparaisons dans la recherche simple Lors d'une recherche na\u00efve, combien de comparaisons sont effectu\u00e9es pour la recherche du motif info dans la chaine de caract\u00e8res num\u00e9rique et sciences informatiques ? On donne ci-dessous l'impl\u00e9mentation vue en cours d'une recherche na\u00efve : def recherche ( motif , chaine ): lm , lc = len ( motif ), len ( chaine ) for i in range ( lc - lm + 1 ): i_motif , i_chaine = 0 , i while i_motif < lm and chaine [ i_chaine ] == motif [ i_motif ]: i_motif += 1 i_chaine += 1 if i_motif == lm : return True return False a. Modifier cette fonction afin qu'elle renvoie en plus du bool\u00e9en, le nombre de comparaisons effectu\u00e9es. b. Tester cette nouvelle fonction afin de retrouver le r\u00e9sultat de la question 1. c. Rappeler le nombre de comparaisons maximales effectu\u00e9es pour cherche un motif de longueur \\(l_m\\) dans une chaine de longueur \\(l_c\\) . d. Combien de comparaisons sont n\u00e9cessaires pour recherche le motif aaaaaaaaab dans une chaine contenant dix mille a ? Aide On rappelle qu'en python \"a\"*10000 est la chaine de caract\u00e8res constitu\u00e9e de dix mille fois le caract\u00e8re a . Exercice 2 : Indice du motif Modifier la fonction de recherche na\u00efve vue en cours (et donn\u00e9e dans l'exercice pr\u00e9c\u00e9dent) de fa\u00e7on \u00e0 ce qu'elle renvoie l'indice de la premi\u00e8re occurrence du motif dans la chaine s'il est pr\u00e9sent et \\(-1\\) sinon. M\u00eame question avec l'indice de la derni\u00e8re occurrence. Modifier de nouveau cette fonction pour qu'elle renvoie la liste des indices des occurrences du motif dans la chaine. Par exemple recherche(\"ici\",\"ici, ou encore ici ou m\u00eame l\u00e0\") renvoie la liste [0,15] . Exercice 3 : Impl\u00e9mentation de l'acc\u00e9l\u00e9ration Ecrire une fonction traite tel que traite(motif) renvoie un dictionnaire contenant pour chaque caract\u00e8re du motif, l'indice de sa derni\u00e8re position dans le motif. Par exemple : traite(\"extra\") renvoie {'e': 0, 'x': 1, 't': 2, 'r': 3, 'a': 4} et traite(\"exemple\") renvoie {'e': 6, 'x': 1, 'm': 3, 'p': 4, 'l': 5} En utilisant cette fonction, proposer une impl\u00e9mentation de l'algorithme d'acc\u00e9l\u00e9ration vue en cours.","title":"Texte"},{"location":"backup/texte/#c13-recherche-textuelle","text":"","title":"C13 Recherche textuelle "},{"location":"backup/texte/#activites","text":"","title":"Activit\u00e9s"},{"location":"backup/texte/#activite-1-recherche-simple","text":"Fonctions natives de Python Consulter la documentation de Python sur la m\u00e9thode find des cha\u00eenes de caract\u00e8res . Quel est le r\u00f4le de cette m\u00e9thode ? Tester cette m\u00e9thode sur les exemples suivants, (dans un notebook ou dans une console Python) : 'num\u00e9rique et sciences informatiques'.find('que') 'num\u00e9rique et sciences informatiques'.find('nsi') Note Une autre m\u00e9thode presque identique ( str.index ) l\u00e8ve une erreur lorsque le motif cherch\u00e9 ne se trouve pas dans la cha\u00eene. Visualisation d'un algorithme \"na\u00eff\" Un outil en ligne (mise en ligne par L. Abdal, d'apr\u00e8s un travail de N. Reveret), permet de visualiser un algorithme dit de \"recherche na\u00efve\". Utiliser cette outil (en variant \u00e9ventuellement le motif et la cha\u00eene). Puis expliquer en quelques mots le principe de cet algorithme de recherche. Visualisation algorithme na\u00eff Ecrire ses propres fonctions Sans utiliser find ou index , \u00e9crire une fonction recherche(motif,chaine) qui renvoie True ou False suivant que la cha\u00eene de caract\u00e8res motif se trouve ou non dans chaine . M\u00eame question mais en renvoyant l'indice de la premi\u00e8re position de motif dans chaine (si elle s'y trouve) et -1 sinon.","title":"Activit\u00e9 1 : Recherche simple"},{"location":"backup/texte/#activite-2-amelioration-de-la-recherche-simple","text":"Le m\u00eame outil en ligne que dans l'activit\u00e9 pr\u00e9c\u00e9dente permet de visualiser un second algorithme plus performant . Utiliser cette outil (en variant \u00e9ventuellement le motif et la cha\u00eene). Visualisation algorithme Boyer-Moore Aide On pourra remarquer que : La comparaison commence par la fin du motif On a construit un tableau indiquant pour chaque caract\u00e8re du motif sa derni\u00e8re occurrence dans le motif Par rapport \u00e0 une recherche na\u00efve, on peut parfois d\u00e9caler le motif de plusieurs emplacements D\u00e9crire en quelques phrases le principe de ce nouvel algorithme de recherche. Note L'algorithme pr\u00e9sent\u00e9 dans cette activit\u00e9 est une version simplifi\u00e9e de l'algorithme de Boyer-Moore par Horspool. L'algorithme complet, plus complexe n'est pas \u00e9tudi\u00e9 en nsi . L'\u00e9l\u00e8ve int\u00e9ress\u00e9 pourra consulter les ressources en ligne (par exemple la page wikipedia )","title":"Activit\u00e9 2 : Am\u00e9lioration de la recherche simple"},{"location":"backup/texte/#cours","text":"Vous pouvez t\u00e9l\u00e9charger une copie au format pdf du diaporama de synth\u00e8se de cours pr\u00e9sent\u00e9 en classe : Diaporama de cours Attention Ce diaporama ne vous donne que quelques points de rep\u00e8res lors de vos r\u00e9visions. Il devrait \u00eatre compl\u00e9t\u00e9 par la relecture attentive de vos propres notes de cours et par une r\u00e9vision approfondie des exercices.","title":"Cours"},{"location":"backup/texte/#exercices","text":"","title":"Exercices"},{"location":"backup/texte/#exercice-1-nombre-de-comparaisons-dans-la-recherche-simple","text":"Lors d'une recherche na\u00efve, combien de comparaisons sont effectu\u00e9es pour la recherche du motif info dans la chaine de caract\u00e8res num\u00e9rique et sciences informatiques ? On donne ci-dessous l'impl\u00e9mentation vue en cours d'une recherche na\u00efve : def recherche ( motif , chaine ): lm , lc = len ( motif ), len ( chaine ) for i in range ( lc - lm + 1 ): i_motif , i_chaine = 0 , i while i_motif < lm and chaine [ i_chaine ] == motif [ i_motif ]: i_motif += 1 i_chaine += 1 if i_motif == lm : return True return False a. Modifier cette fonction afin qu'elle renvoie en plus du bool\u00e9en, le nombre de comparaisons effectu\u00e9es. b. Tester cette nouvelle fonction afin de retrouver le r\u00e9sultat de la question 1. c. Rappeler le nombre de comparaisons maximales effectu\u00e9es pour cherche un motif de longueur \\(l_m\\) dans une chaine de longueur \\(l_c\\) . d. Combien de comparaisons sont n\u00e9cessaires pour recherche le motif aaaaaaaaab dans une chaine contenant dix mille a ? Aide On rappelle qu'en python \"a\"*10000 est la chaine de caract\u00e8res constitu\u00e9e de dix mille fois le caract\u00e8re a .","title":"Exercice 1 : Nombre de comparaisons dans la recherche simple"},{"location":"backup/texte/#exercice-2-indice-du-motif","text":"Modifier la fonction de recherche na\u00efve vue en cours (et donn\u00e9e dans l'exercice pr\u00e9c\u00e9dent) de fa\u00e7on \u00e0 ce qu'elle renvoie l'indice de la premi\u00e8re occurrence du motif dans la chaine s'il est pr\u00e9sent et \\(-1\\) sinon. M\u00eame question avec l'indice de la derni\u00e8re occurrence. Modifier de nouveau cette fonction pour qu'elle renvoie la liste des indices des occurrences du motif dans la chaine. Par exemple recherche(\"ici\",\"ici, ou encore ici ou m\u00eame l\u00e0\") renvoie la liste [0,15] .","title":"Exercice 2 : Indice du motif"},{"location":"backup/texte/#exercice-3-implementation-de-lacceleration","text":"Ecrire une fonction traite tel que traite(motif) renvoie un dictionnaire contenant pour chaque caract\u00e8re du motif, l'indice de sa derni\u00e8re position dans le motif. Par exemple : traite(\"extra\") renvoie {'e': 0, 'x': 1, 't': 2, 'r': 3, 'a': 4} et traite(\"exemple\") renvoie {'e': 6, 'x': 1, 'm': 3, 'p': 4, 'l': 5} En utilisant cette fonction, proposer une impl\u00e9mentation de l'algorithme d'acc\u00e9l\u00e9ration vue en cours.","title":"Exercice 3 : Impl\u00e9mentation de l'acc\u00e9l\u00e9ration"}]}